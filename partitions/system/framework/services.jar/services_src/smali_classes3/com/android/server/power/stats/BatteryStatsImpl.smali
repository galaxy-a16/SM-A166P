.class public Lcom/android/server/power/stats/BatteryStatsImpl;
.super Landroid/os/BatteryStats;
.source "BatteryStatsImpl.java"


# static fields
.field public static final MAX_WAKELOCKS_PER_UID:I

.field protected static final MOBILE_RADIO_POWER_STATE_UPDATE_FREQ_MS:J = 0x927c0L

.field public static final SUPPORTED_PER_PROCESS_STATE_STANDARD_ENERGY_BUCKETS:[I

.field public static final WAKE_LOCK_WEIGHT:I = 0x32

.field public static final ZERO_LONG_COUNTER:Landroid/os/BatteryStats$LongCounter;

.field public static final ZERO_LONG_COUNTER_ARRAY:[Landroid/os/BatteryStats$LongCounter;


# instance fields
.field public final BATTERY_CAPACITY_PATH:Ljava/lang/String;

.field public final BATTERY_CC_INFO_PATH:Ljava/lang/String;

.field public final BATTERY_RAW_SOC_PATH:Ljava/lang/String;

.field public final CHARGE_TIME_PATH:Ljava/lang/String;

.field public final TX_POWERSHARING_CONSUME_PATH:Ljava/lang/String;

.field public final mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

.field public mActiveRat:I

.field public mAlarmManager:Landroid/app/AlarmManager;

.field public mAp_temp:I

.field public mAudioOnNesting:I

.field public mAudioOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

.field public final mAudioTurnedOnTimers:Ljava/util/ArrayList;

.field public mAutoBrightnessMode:Z

.field public mBatteryChargeUah:I

.field public mBatteryHealth:I

.field public mBatteryLevel:I

.field public mBatteryPlugType:I

.field public mBatteryPluggedIn:Z

.field public mBatteryPluggedInRealTimeMs:J

.field public mBatteryResetListener:Lcom/android/server/power/stats/BatteryStatsImpl$BatteryResetListener;

.field public mBatterySecCurrentEvent:I

.field public mBatterySecEvent:I

.field public mBatterySecOnline:I

.field public mBatterySecTxShareEvent:I

.field public final mBatteryStatsCallbacks:Landroid/os/RemoteCallbackList;

.field protected mBatteryStatsConfig:Lcom/android/server/power/stats/BatteryStatsImpl$BatteryStatsConfig;

.field public mBatteryStatus:I

.field public mBatteryTemperature:I

.field public mBatteryTimeToFullSeconds:J

.field public mBatteryVoltageMv:I

.field public mBinderThreadCpuTimesUs:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;

.field public mBluetoothActivity:Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;

.field public mBluetoothPowerCalculator:Lcom/android/server/power/stats/BluetoothPowerCalculator;

.field public mBluetoothScanNesting:I

.field public final mBluetoothScanOnTimers:Ljava/util/ArrayList;

.field public mBluetoothScanTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

.field public final mBootCheckerPrefix:Ljava/lang/String;

.field public mCallback:Lcom/android/server/power/stats/BatteryStatsImpl$BatteryCallback;

.field public mCameraOnNesting:I

.field public mCameraOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

.field public final mCameraTurnedOnTimers:Ljava/util/ArrayList;

.field public final mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

.field public mCharging:Z

.field public final mCheckinFile:Landroid/util/AtomicFile;

.field public mClock:Lcom/android/internal/os/Clock;

.field protected final mConstants:Lcom/android/server/power/stats/BatteryStatsImpl$Constants;

.field public mCpuFreqs:[J

.field public mCpuFreqsInitialized:Z

.field public mCpuPowerBracketMap:[I

.field public mCpuPowerCalculator:Lcom/android/server/power/stats/CpuPowerCalculator;

.field public mCpuTimeReadsTrackingStartTimeMs:J

.field protected mCpuUidActiveTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;

.field protected mCpuUidClusterTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;

.field protected mCpuUidFreqTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

.field protected mCpuUidUserSysTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;

.field public final mCpuUsageDetails:Landroid/os/BatteryStats$CpuUsageDetails;

.field public mCurStepMode:I

.field public mCurrent:I

.field public mCustomTelephonyCallback:Lcom/android/server/power/stats/BatteryStatsImpl$CustomTelephonyCallback;

.field public final mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

.field public final mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

.field public final mDailyFile:Landroid/util/AtomicFile;

.field public final mDailyItems:Ljava/util/ArrayList;

.field public mDailyPackageChanges:Ljava/util/ArrayList;

.field public mDailyStartTimeMs:J

.field public final mDeferSetCharging:Ljava/lang/Runnable;

.field public mDeviceIdleMode:I

.field public mDeviceIdleModeFullTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

.field public mDeviceIdleModeLightTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

.field public mDeviceIdling:Z

.field public mDeviceIdlingTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

.field public mDeviceLightIdling:Z

.field public mDeviceLightIdlingTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

.field public mDischargeAmountScreenDoze:I

.field public mDischargeAmountScreenDozeSinceCharge:I

.field public mDischargeAmountScreenOff:I

.field public mDischargeAmountScreenOffSinceCharge:I

.field public mDischargeAmountScreenOffSinceChargeCoulombCounter:I

.field public mDischargeAmountScreenOffSinceChargePermil:I

.field public mDischargeAmountScreenOn:I

.field public mDischargeAmountScreenOnSinceCharge:I

.field public mDischargeAmountScreenOnSinceChargeCoulombCounter:I

.field public mDischargeAmountScreenOnSinceChargePermil:I

.field public mDischargeAmountSubScreenOffSinceChargePermil:I

.field public mDischargeAmountSubScreenOnSinceChargePermil:I

.field public mDischargeCounter:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

.field public mDischargeCurrentLevel:I

.field public mDischargeDeepDozeCounter:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

.field public mDischargeLightDozeCounter:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

.field public mDischargePlugLevel:I

.field public mDischargeScreenDozeCounter:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

.field public mDischargeScreenDozeUnplugLevel:I

.field public mDischargeScreenOffCounter:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

.field public mDischargeScreenOffUnplugLevel:I

.field public mDischargeScreenOffUnplugLevelCoulombCounter:I

.field public mDischargeScreenOffUnplugLevelPermil:I

.field public mDischargeScreenOnUnplugLevel:I

.field public mDischargeScreenOnUnplugLevelCoulombCounter:I

.field public mDischargeScreenOnUnplugLevelPermil:I

.field public final mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

.field public mDischargeSubScreenOffUnplugLevelPermil:I

.field public mDischargeSubScreenOnUnplugLevelPermil:I

.field public mDischargeUnplugLevel:I

.field public mDisplayId:I

.field public mDisplayMismatchWtfCount:I

.field public mDisplayPowerDrainCounter:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

.field public final mDrawTimers:Ljava/util/ArrayList;

.field public mEndPlatformVersion:Ljava/lang/String;

.field public final mEnergyConsumerRetriever:Lcom/android/server/power/stats/BatteryStatsImpl$EnergyStatsRetriever;

.field protected mEnergyConsumerStatsConfig:Lcom/android/internal/power/EnergyConsumerStats$Config;

.field public mEstimatedBatteryCapacityMah:I

.field public mExternalSync:Lcom/android/server/power/stats/BatteryStatsImpl$ExternalStatsSync;

.field public mFeatureComputeChargeTimeModel:Z

.field public mFlashlightOnNesting:I

.field public mFlashlightOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

.field public final mFlashlightTurnedOnTimers:Ljava/util/ArrayList;

.field public final mFullTimers:Ljava/util/ArrayList;

.field public final mFullWifiLockTimers:Ljava/util/ArrayList;

.field protected mGlobalEnergyConsumerStats:Lcom/android/internal/power/EnergyConsumerStats;

.field public mGlobalWifiRunning:Z

.field public mGlobalWifiRunningTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

.field public mGpsNesting:I

.field public mGpsSignalQualityBin:I

.field public final mGpsSignalQualityTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

.field public mHandler:Landroid/os/Handler;

.field public mHasBluetoothReporting:Z

.field public mHasDisplayPowerReporting:Z

.field public mHasModemReporting:Z

.field public mHasSpeakerOutReporting:Z

.field public mHasWifiReporting:Z

.field public mHaveBatteryLevel:Z

.field public mHighDischargeAmountSinceCharge:I

.field public mHighRefreshRateBin:I

.field public final mHighRefreshRateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

.field public final mHistory:Lcom/android/internal/os/BatteryStatsHistory;

.field public mHotspotState:I

.field public mIgnoreNextExternalStats:Z

.field public mInitStepMode:I

.field public mInteractive:Z

.field public mInteractiveTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

.field public mIsCoulombCounterReported:Z

.field public mIsFlip:Z

.field public mIsFold:Z

.field public mIsFoldableDevice:Z

.field public mIsJdmModel:Z

.field public mIsRawSocReported:Z

.field public mIsServiceStateNr:Z

.field public mIsSubScreen:Z

.field public mIsSubScreenDoze:Z

.field public mIsSubScreenOn:Z

.field public mIsSupportProtectBattery:Z

.field public final mIsolatedUidRefCounts:Landroid/util/SparseIntArray;

.field public final mIsolatedUids:Landroid/util/SparseIntArray;

.field protected mKernelCpuSpeedReaders:[Lcom/android/internal/os/KernelCpuSpeedReader;

.field public final mKernelMemoryBandwidthStats:Lcom/android/internal/os/KernelMemoryBandwidthStats;

.field public final mKernelMemoryStats:Landroid/util/LongSparseArray;

.field protected mKernelSingleUidTimeReader:Lcom/android/internal/os/KernelSingleUidTimeReader;

.field public final mKernelWakelockReader:Lcom/android/server/power/stats/KernelWakelockReader;

.field public final mKernelWakelockStats:Ljava/util/HashMap;

.field public mLastAudioOutEnergyInfo:Landroid/os/SpeakerOutEnergyInfo;

.field public final mLastBluetoothActivityInfo:Lcom/android/server/power/stats/BatteryStatsImpl$BluetoothActivityInfoCache;

.field public mLastCallbackTime:J

.field public mLastChargeStepLevel:I

.field public mLastDischargeStepLevel:I

.field public mLastIdleTimeStartMs:J

.field public mLastLearnedBatteryCapacityUah:I

.field public mLastModemActivityInfo:Landroid/telephony/ModemActivityInfo;

.field public mLastModemNetworkStats:Landroid/net/NetworkStats;

.field protected mLastPartialTimers:Ljava/util/ArrayList;

.field public mLastRpmStatsUpdateTimeMs:J

.field public mLastWakeupElapsedTimeMs:J

.field public mLastWakeupReason:Ljava/lang/String;

.field public mLastWakeupUptimeMs:J

.field public mLastWifiNetworkStats:Landroid/net/NetworkStats;

.field public mLastWriteTimeMs:J

.field public final mLongPlugInAlarmHandler:Landroid/app/AlarmManager$OnAlarmListener;

.field public mLongestFullIdleTimeMs:J

.field public mLongestLightIdleTimeMs:J

.field public mLowDischargeAmountSinceCharge:I

.field public mMaxChargeStepLevel:I

.field public mMaxLearnedBatteryCapacityUah:I

.field public mMinDischargeStepLevel:I

.field public mMinLearnedBatteryCapacityUah:I

.field public mMobileActive5GTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

.field public mMobileActiveTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

.field public mMobileRadioActiveAdjustedTime:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

.field public mMobileRadioActivePerAppTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

.field public mMobileRadioActiveStartTimeMs:J

.field public mMobileRadioActiveTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

.field public mMobileRadioActiveUnknownCount:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

.field public mMobileRadioActiveUnknownTime:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

.field public mMobileRadioPowerCalculator:Lcom/android/server/power/stats/MobileRadioPowerCalculator;

.field public mMobileRadioPowerState:I

.field public mModStepMode:I

.field public mModemActivity:Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;

.field public mModemIfaces:[Ljava/lang/String;

.field public final mModemNetworkLock:Ljava/lang/Object;

.field public final mNetworkByteActivityCounters:[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

.field public mNetworkModemActivity:Lcom/android/server/power/stats/BatteryStatsImpl$ModemActivityCounterImpl;

.field public final mNetworkPacketActivityCounters:[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

.field public mNetworkStatsStack:Landroid/net/NetworkStats;

.field public mNextMaxDailyDeadlineMs:J

.field public mNextMinDailyDeadlineMs:J

.field public mNoAutoReset:Z

.field public mNumAllUidCpuTimeReads:I

.field public mNumConnectivityChange:I

.field public mNumSingleUidCpuTimeReads:J

.field public mNumUidsRemoved:I

.field public mOnBattery:Z

.field protected mOnBatteryInternal:Z

.field public final mOnBatteryScreenOffTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

.field public final mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

.field public mOtgOnline:I

.field public mPa_temp:I

.field protected mPartialTimers:Ljava/util/ArrayList;

.field protected mPendingRemovedUids:Ljava/util/Queue;

.field public mPendingReportCharging:Z

.field public mPerDisplayBatteryStats:[Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;

.field public mPerProcStateCpuTimesAvailable:Z

.field public mPerRatBatteryStats:[Lcom/android/server/power/stats/BatteryStatsImpl$RadioAccessTechnologyBatteryStats;

.field public mPhoneDataConnectionType:I

.field public final mPhoneDataConnectionsTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

.field public mPhoneOn:Z

.field public mPhoneOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

.field public mPhoneServiceState:I

.field public mPhoneServiceStateRaw:I

.field public mPhoneSignalScanningTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

.field public mPhoneSignalStrengthBin:I

.field public mPhoneSignalStrengthBinRaw:I

.field public final mPhoneSignalStrengthsTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

.field public mPhoneSimStateRaw:I

.field public final mPlatformIdleStateCallback:Lcom/android/server/power/stats/BatteryStatsImpl$PlatformIdleStateCallback;

.field protected mPowerProfile:Lcom/android/internal/os/PowerProfile;

.field public mPowerSaveModeEnabled:Z

.field public mPowerSaveModeEnabledTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

.field public mPretendScreenOff:Z

.field public mProtectBatteryMode:I

.field public mRealtimeStartUs:J

.field public mRealtimeUs:J

.field public mRecordAllHistory:Z

.field public final mRpmStats:Ljava/util/HashMap;

.field public final mScreenAutoBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

.field public mScreenBrightnessBin:I

.field public final mScreenBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

.field public mScreenDozeTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

.field public mScreenHighBrightness:Z

.field public mScreenHighBrightnessTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

.field public final mScreenOffRpmStats:Ljava/util/HashMap;

.field public mScreenOnGpsTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

.field public mScreenOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

.field protected mScreenState:I

.field public final mScreenWakeStats:Ljava/util/HashMap;

.field public mSensorNesting:I

.field public final mSensorTimers:Landroid/util/SparseArray;

.field public mShuttingDown:Z

.field public mSkin_temp:I

.field public final mSpeakerCallTimeCounters:[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

.field public final mSpeakerMediaTimeCounters:[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

.field public mStartClockTimeMs:J

.field public mStartCount:I

.field public mStartPlatformVersion:Ljava/lang/String;

.field public final mStatsFile:Landroid/util/AtomicFile;

.field public final mStepDetailsCalculator:Lcom/android/server/power/stats/BatteryStatsImpl$HistoryStepDetailsCalculatorImpl;

.field public final mSubHighRefreshRateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

.field public final mSubScreenAutoBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

.field public final mSubScreenBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

.field public mSubScreenDozeTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

.field public mSubScreenHighBrightnessTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

.field public mSubScreenOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

.field public mSubScreenPolicy:I

.field public mSubScreenState:I

.field public mSub_batt_temp:I

.field public mSystemDir:Ljava/io/File;

.field public mSystemReady:Z

.field protected mSystemServerCpuThreadReader:Lcom/android/server/power/stats/SystemServerCpuThreadReader;

.field public mSystemServicesReady:Z

.field public mTelephonyManager:Landroid/telephony/TelephonyManager;

.field public mTempTotalCpuSystemTimeUs:J

.field public mTempTotalCpuUserTimeUs:J

.field public mTmpCpuTimeInFreq:Lcom/android/internal/os/LongArrayMultiStateCounter$LongArrayContainer;

.field public final mTmpRailStats:Lcom/android/internal/os/RailStats;

.field public mTmpRpmStats:Lcom/android/internal/os/RpmStats;

.field public final mTmpWakelockStats:Lcom/android/server/power/stats/KernelWakelockStats;

.field public final mTopAppStats:Ljava/util/concurrent/ConcurrentHashMap;

.field public mTxPowerSharingDischargeMah:J

.field public mTxPowerSharingOn:Z

.field public mTxPowerSharingTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

.field public final mUidStats:Landroid/util/SparseArray;

.field public mUptimeStartUs:J

.field public mUptimeUs:J

.field public mUsbDataState:I

.field protected mUserInfoProvider:Lcom/android/server/power/stats/BatteryStatsImpl$UserInfoProvider;

.field public mVideoOnNesting:I

.field public mVideoOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

.field public final mVideoTurnedOnTimers:Ljava/util/ArrayList;

.field public mWakeLockAllocationsUs:[[J

.field public mWakeLockImportant:Z

.field public mWakeLockNesting:I

.field public final mWakeupReasonStats:Ljava/util/HashMap;

.field public mWifiActiveTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

.field public mWifiActivity:Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;

.field public final mWifiBatchedScanTimers:Landroid/util/SparseArray;

.field public mWifiFullLockNesting:I

.field public mWifiIfaces:[Ljava/lang/String;

.field public mWifiMulticastNesting:I

.field public final mWifiMulticastTimers:Ljava/util/ArrayList;

.field public mWifiMulticastWakelockTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

.field public final mWifiNetworkLock:Ljava/lang/Object;

.field public mWifiOn:Z

.field public mWifiOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

.field public mWifiPowerCalculator:Lcom/android/server/power/stats/WifiPowerCalculator;

.field public mWifiRadioPowerState:I

.field public final mWifiRunningTimers:Ljava/util/ArrayList;

.field public mWifiScanNesting:I

.field public final mWifiScanTimers:Ljava/util/ArrayList;

.field public mWifiSignalStrengthBin:I

.field public final mWifiSignalStrengthsTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

.field public mWifiState:I

.field public final mWifiStateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

.field public mWifiSupplState:I

.field public final mWifiSupplStateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

.field public final mWindowTimers:Ljava/util/ArrayList;

.field public final mWriteAsyncRunnable:Ljava/lang/Runnable;

.field public final mWriteLock:Ljava/util/concurrent/locks/ReentrantLock;


# direct methods
.method public static synthetic $r8$lambda$3JZyv2Z_CCeoQ7rI48LMUolxM2k(Lcom/android/server/power/stats/BatteryStatsImpl;)V
    .locals 0

    invoke-direct {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->lambda$new$9()V

    return-void
.end method

.method public static synthetic $r8$lambda$558nAQUhU4wPrTA8tMW8JWTHdVg(Lcom/android/server/power/stats/BatteryStatsImpl;Landroid/app/AlarmManager;J)V
    .locals 0

    invoke-direct {p0, p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl;->lambda$scheduleNextResetWhilePluggedInCheck$7(Landroid/app/AlarmManager;J)V

    return-void
.end method

.method public static synthetic $r8$lambda$7ew5B3DY1MC78XTB559CLyAnXN4(Lcom/android/server/power/stats/BatteryStatsImpl;JJILjava/lang/Long;)V
    .locals 0

    invoke-direct/range {p0 .. p6}, Lcom/android/server/power/stats/BatteryStatsImpl;->lambda$readKernelUidCpuActiveTimesLocked$5(JJILjava/lang/Long;)V

    return-void
.end method

.method public static synthetic $r8$lambda$H9sbQO0K1Ikq8TwmQ6H-06KpBMA(Lcom/android/server/power/stats/BatteryStatsImpl;)V
    .locals 0

    invoke-direct {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->lambda$new$1()V

    return-void
.end method

.method public static synthetic $r8$lambda$N2DG-4pJdC0Yds9Y7i33czdLfHs(Landroid/net/NetworkStats;Lcom/android/internal/app/IBatteryStatsCallback;)V
    .locals 0

    invoke-static {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->lambda$postNetworkStatsUpdateCallbackLocked$2(Landroid/net/NetworkStats;Lcom/android/internal/app/IBatteryStatsCallback;)V

    return-void
.end method

.method public static synthetic $r8$lambda$OZ-SoAgee2oZjlzYhx8gVPL_p9U(Lcom/android/server/power/stats/BatteryStatsImpl;)V
    .locals 0

    invoke-direct {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->lambda$new$0()V

    return-void
.end method

.method public static synthetic $r8$lambda$TFDjL39sOnjbmDvqBv3A6JrfHog(Lcom/android/server/power/stats/BatteryStatsImpl;JJZLcom/android/server/power/stats/BatteryStatsImpl$CpuDeltaPowerAccumulator;I[J)V
    .locals 0

    invoke-direct/range {p0 .. p8}, Lcom/android/server/power/stats/BatteryStatsImpl;->lambda$readKernelUidCpuClusterTimesLocked$6(JJZLcom/android/server/power/stats/BatteryStatsImpl$CpuDeltaPowerAccumulator;I[J)V

    return-void
.end method

.method public static synthetic $r8$lambda$XpBlFrtGXazq3JB3YK03Ct3Xaos(Lcom/android/server/power/stats/BatteryStatsImpl;JJZZZIILcom/android/server/power/stats/BatteryStatsImpl$CpuDeltaPowerAccumulator;I[J)V
    .locals 0

    invoke-direct/range {p0 .. p12}, Lcom/android/server/power/stats/BatteryStatsImpl;->lambda$readKernelUidCpuFreqTimesLocked$4(JJZZZIILcom/android/server/power/stats/BatteryStatsImpl$CpuDeltaPowerAccumulator;I[J)V

    return-void
.end method

.method public static synthetic $r8$lambda$tflI2DefX_C2NLEg7AZKvsKC3f0(Lcom/android/server/power/stats/BatteryStatsImpl;JJIZLandroid/util/SparseLongArray;I[J)V
    .locals 0

    invoke-direct/range {p0 .. p9}, Lcom/android/server/power/stats/BatteryStatsImpl;->lambda$readKernelUidCpuTimesLocked$3(JJIZLandroid/util/SparseLongArray;I[J)V

    return-void
.end method

.method public static synthetic $r8$lambda$yCHOMOhfjy0QTOe4v5IL7Pmk2Ys(Lcom/android/server/power/stats/BatteryStatsImpl;Landroid/app/AlarmManager;)V
    .locals 0

    invoke-direct {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->lambda$setOnBatteryLocked$8(Landroid/app/AlarmManager;)V

    return-void
.end method

.method public static bridge synthetic -$$Nest$fgetmAudioTurnedOnTimers(Lcom/android/server/power/stats/BatteryStatsImpl;)Ljava/util/ArrayList;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mAudioTurnedOnTimers:Ljava/util/ArrayList;

    return-object p0
.end method

.method public static bridge synthetic -$$Nest$fgetmBluetoothScanOnTimers(Lcom/android/server/power/stats/BatteryStatsImpl;)Ljava/util/ArrayList;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBluetoothScanOnTimers:Ljava/util/ArrayList;

    return-object p0
.end method

.method public static bridge synthetic -$$Nest$fgetmCallback(Lcom/android/server/power/stats/BatteryStatsImpl;)Lcom/android/server/power/stats/BatteryStatsImpl$BatteryCallback;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCallback:Lcom/android/server/power/stats/BatteryStatsImpl$BatteryCallback;

    return-object p0
.end method

.method public static bridge synthetic -$$Nest$fgetmCameraTurnedOnTimers(Lcom/android/server/power/stats/BatteryStatsImpl;)Ljava/util/ArrayList;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCameraTurnedOnTimers:Ljava/util/ArrayList;

    return-object p0
.end method

.method public static bridge synthetic -$$Nest$fgetmDeferSetCharging(Lcom/android/server/power/stats/BatteryStatsImpl;)Ljava/lang/Runnable;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeferSetCharging:Ljava/lang/Runnable;

    return-object p0
.end method

.method public static bridge synthetic -$$Nest$fgetmDrawTimers(Lcom/android/server/power/stats/BatteryStatsImpl;)Ljava/util/ArrayList;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDrawTimers:Ljava/util/ArrayList;

    return-object p0
.end method

.method public static bridge synthetic -$$Nest$fgetmExternalSync(Lcom/android/server/power/stats/BatteryStatsImpl;)Lcom/android/server/power/stats/BatteryStatsImpl$ExternalStatsSync;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mExternalSync:Lcom/android/server/power/stats/BatteryStatsImpl$ExternalStatsSync;

    return-object p0
.end method

.method public static bridge synthetic -$$Nest$fgetmFlashlightTurnedOnTimers(Lcom/android/server/power/stats/BatteryStatsImpl;)Ljava/util/ArrayList;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mFlashlightTurnedOnTimers:Ljava/util/ArrayList;

    return-object p0
.end method

.method public static bridge synthetic -$$Nest$fgetmFullTimers(Lcom/android/server/power/stats/BatteryStatsImpl;)Ljava/util/ArrayList;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mFullTimers:Ljava/util/ArrayList;

    return-object p0
.end method

.method public static bridge synthetic -$$Nest$fgetmFullWifiLockTimers(Lcom/android/server/power/stats/BatteryStatsImpl;)Ljava/util/ArrayList;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mFullWifiLockTimers:Ljava/util/ArrayList;

    return-object p0
.end method

.method public static bridge synthetic -$$Nest$fgetmHistory(Lcom/android/server/power/stats/BatteryStatsImpl;)Lcom/android/internal/os/BatteryStatsHistory;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    return-object p0
.end method

.method public static bridge synthetic -$$Nest$fgetmPlatformIdleStateCallback(Lcom/android/server/power/stats/BatteryStatsImpl;)Lcom/android/server/power/stats/BatteryStatsImpl$PlatformIdleStateCallback;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPlatformIdleStateCallback:Lcom/android/server/power/stats/BatteryStatsImpl$PlatformIdleStateCallback;

    return-object p0
.end method

.method public static bridge synthetic -$$Nest$fgetmProtectBatteryMode(Lcom/android/server/power/stats/BatteryStatsImpl;)I
    .locals 0

    iget p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mProtectBatteryMode:I

    return p0
.end method

.method public static bridge synthetic -$$Nest$fgetmSensorTimers(Lcom/android/server/power/stats/BatteryStatsImpl;)Landroid/util/SparseArray;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSensorTimers:Landroid/util/SparseArray;

    return-object p0
.end method

.method public static bridge synthetic -$$Nest$fgetmSystemServicesReady(Lcom/android/server/power/stats/BatteryStatsImpl;)Z
    .locals 0

    iget-boolean p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSystemServicesReady:Z

    return p0
.end method

.method public static bridge synthetic -$$Nest$fgetmUidStats(Lcom/android/server/power/stats/BatteryStatsImpl;)Landroid/util/SparseArray;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    return-object p0
.end method

.method public static bridge synthetic -$$Nest$fgetmVideoTurnedOnTimers(Lcom/android/server/power/stats/BatteryStatsImpl;)Ljava/util/ArrayList;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mVideoTurnedOnTimers:Ljava/util/ArrayList;

    return-object p0
.end method

.method public static bridge synthetic -$$Nest$fgetmWifiBatchedScanTimers(Lcom/android/server/power/stats/BatteryStatsImpl;)Landroid/util/SparseArray;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiBatchedScanTimers:Landroid/util/SparseArray;

    return-object p0
.end method

.method public static bridge synthetic -$$Nest$fgetmWifiMulticastTimers(Lcom/android/server/power/stats/BatteryStatsImpl;)Ljava/util/ArrayList;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiMulticastTimers:Ljava/util/ArrayList;

    return-object p0
.end method

.method public static bridge synthetic -$$Nest$fgetmWifiRunningTimers(Lcom/android/server/power/stats/BatteryStatsImpl;)Ljava/util/ArrayList;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiRunningTimers:Ljava/util/ArrayList;

    return-object p0
.end method

.method public static bridge synthetic -$$Nest$fgetmWifiScanTimers(Lcom/android/server/power/stats/BatteryStatsImpl;)Ljava/util/ArrayList;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiScanTimers:Ljava/util/ArrayList;

    return-object p0
.end method

.method public static bridge synthetic -$$Nest$fgetmWindowTimers(Lcom/android/server/power/stats/BatteryStatsImpl;)Ljava/util/ArrayList;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWindowTimers:Ljava/util/ArrayList;

    return-object p0
.end method

.method public static bridge synthetic -$$Nest$fputmIsServiceStateNr(Lcom/android/server/power/stats/BatteryStatsImpl;Z)V
    .locals 0

    iput-boolean p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsServiceStateNr:Z

    return-void
.end method

.method public static bridge synthetic -$$Nest$fputmPendingReportCharging(Lcom/android/server/power/stats/BatteryStatsImpl;Z)V
    .locals 0

    iput-boolean p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPendingReportCharging:Z

    return-void
.end method

.method public static bridge synthetic -$$Nest$fputmProtectBatteryMode(Lcom/android/server/power/stats/BatteryStatsImpl;I)V
    .locals 0

    iput p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mProtectBatteryMode:I

    return-void
.end method

.method public static bridge synthetic -$$Nest$mgetCurrentDisplayId(Lcom/android/server/power/stats/BatteryStatsImpl;)I
    .locals 0

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getCurrentDisplayId()I

    move-result p0

    return p0
.end method

.method public static bridge synthetic -$$Nest$mgetTopAppStatsMap(Lcom/android/server/power/stats/BatteryStatsImpl;)Ljava/util/concurrent/ConcurrentHashMap;
    .locals 0

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getTopAppStatsMap()Ljava/util/concurrent/ConcurrentHashMap;

    move-result-object p0

    return-object p0
.end method

.method public static bridge synthetic -$$Nest$mnoteHotspotStateLocked(Lcom/android/server/power/stats/BatteryStatsImpl;IJJ)V
    .locals 0

    invoke-virtual/range {p0 .. p5}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteHotspotStateLocked(IJJ)V

    return-void
.end method

.method public static bridge synthetic -$$Nest$mnoteUsbConnectionStateLocked(Lcom/android/server/power/stats/BatteryStatsImpl;ZJJ)V
    .locals 0

    invoke-virtual/range {p0 .. p5}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteUsbConnectionStateLocked(ZJJ)V

    return-void
.end method

.method public static bridge synthetic -$$Nest$mremoveCpuStatsForUidRangeLocked(Lcom/android/server/power/stats/BatteryStatsImpl;II)V
    .locals 0

    invoke-virtual {p0, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl;->removeCpuStatsForUidRangeLocked(II)V

    return-void
.end method

.method public static bridge synthetic -$$Nest$mrequestImmediateCpuUpdate(Lcom/android/server/power/stats/BatteryStatsImpl;)V
    .locals 0

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->requestImmediateCpuUpdate()V

    return-void
.end method

.method public static bridge synthetic -$$Nest$mtrackPerProcStateCpuTimes(Lcom/android/server/power/stats/BatteryStatsImpl;)Z
    .locals 0

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->trackPerProcStateCpuTimes()Z

    move-result p0

    return p0
.end method

.method public static bridge synthetic -$$Nest$mupdateNewDischargeScreenLevelCoulombCounterLocked(Lcom/android/server/power/stats/BatteryStatsImpl;II)V
    .locals 0

    invoke-virtual {p0, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl;->updateNewDischargeScreenLevelCoulombCounterLocked(II)V

    return-void
.end method

.method public static bridge synthetic -$$Nest$mupdateNewDischargeScreenLevelPermilLocked(Lcom/android/server/power/stats/BatteryStatsImpl;II)V
    .locals 0

    invoke-virtual {p0, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl;->updateNewDischargeScreenLevelPermilLocked(II)V

    return-void
.end method

.method public static bridge synthetic -$$Nest$mupdateNewDischargeSubScreenLevelPermilLocked(Lcom/android/server/power/stats/BatteryStatsImpl;II)V
    .locals 0

    invoke-virtual {p0, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl;->updateNewDischargeSubScreenLevelPermilLocked(II)V

    return-void
.end method

.method public static bridge synthetic -$$Nest$mupdateOldDischargeScreenLevelCoulombCounterLocked(Lcom/android/server/power/stats/BatteryStatsImpl;II)V
    .locals 0

    invoke-virtual {p0, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl;->updateOldDischargeScreenLevelCoulombCounterLocked(II)V

    return-void
.end method

.method public static bridge synthetic -$$Nest$mupdateOldDischargeScreenLevelPermilLocked(Lcom/android/server/power/stats/BatteryStatsImpl;II)V
    .locals 0

    invoke-virtual {p0, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl;->updateOldDischargeScreenLevelPermilLocked(II)V

    return-void
.end method

.method public static bridge synthetic -$$Nest$mupdateOldDischargeSubScreenLevelPermilLocked(Lcom/android/server/power/stats/BatteryStatsImpl;II)V
    .locals 0

    invoke-virtual {p0, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl;->updateOldDischargeSubScreenLevelPermilLocked(II)V

    return-void
.end method

.method public static bridge synthetic -$$Nest$sfgetMAX_WAKELOCKS_PER_UID()I
    .locals 1

    sget v0, Lcom/android/server/power/stats/BatteryStatsImpl;->MAX_WAKELOCKS_PER_UID:I

    return v0
.end method

.method public static bridge synthetic -$$Nest$sfgetZERO_LONG_COUNTER()Landroid/os/BatteryStats$LongCounter;
    .locals 1

    sget-object v0, Lcom/android/server/power/stats/BatteryStatsImpl;->ZERO_LONG_COUNTER:Landroid/os/BatteryStats$LongCounter;

    return-object v0
.end method

.method public static bridge synthetic -$$Nest$sfgetZERO_LONG_COUNTER_ARRAY()[Landroid/os/BatteryStats$LongCounter;
    .locals 1

    sget-object v0, Lcom/android/server/power/stats/BatteryStatsImpl;->ZERO_LONG_COUNTER_ARRAY:[Landroid/os/BatteryStats$LongCounter;

    return-object v0
.end method

.method public static bridge synthetic -$$Nest$smdetachIfNotNull(Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;)V
    .locals 0

    invoke-static {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->detachIfNotNull(Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;)V

    return-void
.end method

.method public static bridge synthetic -$$Nest$smdetachIfNotNull(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;)V
    .locals 0

    invoke-static {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->detachIfNotNull(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;)V

    return-void
.end method

.method public static bridge synthetic -$$Nest$smdetachIfNotNull([Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;)V
    .locals 0

    invoke-static {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->detachIfNotNull([Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;)V

    return-void
.end method

.method public static bridge synthetic -$$Nest$smdetachIfNotNull([[Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;)V
    .locals 0

    invoke-static {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->detachIfNotNull([[Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;)V

    return-void
.end method

.method public static bridge synthetic -$$Nest$smencodingPersonalInformation(Ljava/lang/String;)Ljava/lang/String;
    .locals 0

    invoke-static {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->encodingPersonalInformation(Ljava/lang/String;)Ljava/lang/String;

    move-result-object p0

    return-object p0
.end method

.method public static bridge synthetic -$$Nest$smisActiveRadioPowerState(I)Z
    .locals 0

    invoke-static {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->isActiveRadioPowerState(I)Z

    move-result p0

    return p0
.end method

.method public static bridge synthetic -$$Nest$smresetIfNotNull(Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;ZJ)Z
    .locals 0

    invoke-static {p0, p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl;->resetIfNotNull(Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;ZJ)Z

    move-result p0

    return p0
.end method

.method public static bridge synthetic -$$Nest$smresetIfNotNull(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;ZJ)Z
    .locals 0

    invoke-static {p0, p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl;->resetIfNotNull(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;ZJ)Z

    move-result p0

    return p0
.end method

.method public static bridge synthetic -$$Nest$smresetIfNotNull([Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;ZJ)Z
    .locals 0

    invoke-static {p0, p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl;->resetIfNotNull([Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;ZJ)Z

    move-result p0

    return p0
.end method

.method public static bridge synthetic -$$Nest$smresetIfNotNull([[Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;ZJ)Z
    .locals 0

    invoke-static {p0, p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl;->resetIfNotNull([[Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;ZJ)Z

    move-result p0

    return p0
.end method

.method public static constructor <clinit>()V
    .locals 4

    invoke-static {}, Landroid/app/ActivityManager;->isLowRamDeviceStatic()Z

    move-result v0

    if-eqz v0, :cond_0

    const/16 v0, 0x28

    sput v0, Lcom/android/server/power/stats/BatteryStatsImpl;->MAX_WAKELOCKS_PER_UID:I

    goto :goto_0

    :cond_0
    const/16 v0, 0xc8

    sput v0, Lcom/android/server/power/stats/BatteryStatsImpl;->MAX_WAKELOCKS_PER_UID:I

    :goto_0
    new-instance v0, Lcom/android/server/power/stats/BatteryStatsImpl$1;

    invoke-direct {v0}, Lcom/android/server/power/stats/BatteryStatsImpl$1;-><init>()V

    sput-object v0, Lcom/android/server/power/stats/BatteryStatsImpl;->ZERO_LONG_COUNTER:Landroid/os/BatteryStats$LongCounter;

    filled-new-array {v0}, [Landroid/os/BatteryStats$LongCounter;

    move-result-object v0

    sput-object v0, Lcom/android/server/power/stats/BatteryStatsImpl;->ZERO_LONG_COUNTER_ARRAY:[Landroid/os/BatteryStats$LongCounter;

    const/4 v0, 0x4

    const/4 v1, 0x5

    const/4 v2, 0x3

    const/4 v3, 0x7

    filled-new-array {v2, v3, v0, v1}, [I

    move-result-object v0

    sput-object v0, Lcom/android/server/power/stats/BatteryStatsImpl;->SUPPORTED_PER_PROCESS_STATE_STANDARD_ENERGY_BUCKETS:[I

    return-void
.end method

.method public constructor <init>(Lcom/android/internal/os/Clock;Ljava/io/File;Landroid/os/Handler;Lcom/android/server/power/stats/BatteryStatsImpl$PlatformIdleStateCallback;Lcom/android/server/power/stats/BatteryStatsImpl$EnergyStatsRetriever;Lcom/android/server/power/stats/BatteryStatsImpl$UserInfoProvider;)V
    .locals 16

    move-object/from16 v0, p0

    move-object/from16 v7, p2

    invoke-direct/range {p0 .. p0}, Landroid/os/BatteryStats;-><init>()V

    const/4 v8, 0x0

    iput-boolean v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsRawSocReported:Z

    iput-boolean v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsCoulombCounterReported:Z

    const-string v1, "/sys/class/power_supply/battery/batt_read_raw_soc"

    iput-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->BATTERY_RAW_SOC_PATH:Ljava/lang/String;

    const-string v1, "/sys/class/power_supply/battery/capacity"

    iput-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->BATTERY_CAPACITY_PATH:Ljava/lang/String;

    const-string v1, "/sys/class/power_supply/battery/cc_info"

    iput-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->BATTERY_CC_INFO_PATH:Ljava/lang/String;

    const-string v1, "/sys/class/power_supply/battery/wc_tx_total_pwr"

    iput-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->TX_POWERSHARING_CONSUME_PATH:Ljava/lang/String;

    const-string v1, "BCheck"

    iput-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBootCheckerPrefix:Ljava/lang/String;

    new-instance v1, Lcom/android/server/power/stats/KernelWakelockReader;

    invoke-direct {v1}, Lcom/android/server/power/stats/KernelWakelockReader;-><init>()V

    iput-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelWakelockReader:Lcom/android/server/power/stats/KernelWakelockReader;

    new-instance v1, Lcom/android/server/power/stats/KernelWakelockStats;

    invoke-direct {v1}, Lcom/android/server/power/stats/KernelWakelockStats;-><init>()V

    iput-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mTmpWakelockStats:Lcom/android/server/power/stats/KernelWakelockStats;

    invoke-static {}, Lcom/android/server/power/stats/SystemServerCpuThreadReader;->create()Lcom/android/server/power/stats/SystemServerCpuThreadReader;

    move-result-object v1

    iput-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSystemServerCpuThreadReader:Lcom/android/server/power/stats/SystemServerCpuThreadReader;

    new-instance v1, Lcom/android/internal/os/KernelMemoryBandwidthStats;

    invoke-direct {v1}, Lcom/android/internal/os/KernelMemoryBandwidthStats;-><init>()V

    iput-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelMemoryBandwidthStats:Lcom/android/internal/os/KernelMemoryBandwidthStats;

    new-instance v1, Landroid/util/LongSparseArray;

    invoke-direct {v1}, Landroid/util/LongSparseArray;-><init>()V

    iput-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    new-instance v1, Landroid/os/BatteryStats$CpuUsageDetails;

    invoke-direct {v1}, Landroid/os/BatteryStats$CpuUsageDetails;-><init>()V

    iput-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuUsageDetails:Landroid/os/BatteryStats$CpuUsageDetails;

    const/4 v9, 0x1

    iput-boolean v9, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPerProcStateCpuTimesAvailable:Z

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v1

    iput-wide v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuTimeReadsTrackingStartTimeMs:J

    const/4 v1, 0x0

    iput-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mTmpRpmStats:Lcom/android/internal/os/RpmStats;

    const-wide/16 v2, -0x3e8

    iput-wide v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastRpmStatsUpdateTimeMs:J

    new-instance v2, Lcom/android/internal/os/RailStats;

    invoke-direct {v2}, Lcom/android/internal/os/RailStats;-><init>()V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mTmpRailStats:Lcom/android/internal/os/RailStats;

    new-instance v2, Ljava/util/LinkedList;

    invoke-direct {v2}, Ljava/util/LinkedList;-><init>()V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPendingRemovedUids:Ljava/util/Queue;

    new-instance v2, Lcom/android/server/power/stats/BatteryStatsImpl$2;

    invoke-direct {v2, v0}, Lcom/android/server/power/stats/BatteryStatsImpl$2;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl;)V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeferSetCharging:Ljava/lang/Runnable;

    iput-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mExternalSync:Lcom/android/server/power/stats/BatteryStatsImpl$ExternalStatsSync;

    iput-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUserInfoProvider:Lcom/android/server/power/stats/BatteryStatsImpl$UserInfoProvider;

    new-instance v2, Landroid/util/SparseIntArray;

    invoke-direct {v2}, Landroid/util/SparseIntArray;-><init>()V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsolatedUids:Landroid/util/SparseIntArray;

    new-instance v2, Landroid/util/SparseIntArray;

    invoke-direct {v2}, Landroid/util/SparseIntArray;-><init>()V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsolatedUidRefCounts:Landroid/util/SparseIntArray;

    new-instance v2, Landroid/util/SparseArray;

    invoke-direct {v2}, Landroid/util/SparseArray;-><init>()V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mFullTimers:Ljava/util/ArrayList;

    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWindowTimers:Ljava/util/ArrayList;

    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDrawTimers:Ljava/util/ArrayList;

    new-instance v2, Landroid/util/SparseArray;

    invoke-direct {v2}, Landroid/util/SparseArray;-><init>()V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSensorTimers:Landroid/util/SparseArray;

    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiRunningTimers:Ljava/util/ArrayList;

    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mFullWifiLockTimers:Ljava/util/ArrayList;

    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiMulticastTimers:Ljava/util/ArrayList;

    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiScanTimers:Ljava/util/ArrayList;

    new-instance v2, Landroid/util/SparseArray;

    invoke-direct {v2}, Landroid/util/SparseArray;-><init>()V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiBatchedScanTimers:Landroid/util/SparseArray;

    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mAudioTurnedOnTimers:Ljava/util/ArrayList;

    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mVideoTurnedOnTimers:Ljava/util/ArrayList;

    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mFlashlightTurnedOnTimers:Ljava/util/ArrayList;

    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCameraTurnedOnTimers:Ljava/util/ArrayList;

    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBluetoothScanOnTimers:Ljava/util/ArrayList;

    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastPartialTimers:Ljava/util/ArrayList;

    new-instance v2, Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-direct {v2, v9}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;-><init>(Z)V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    new-instance v2, Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-direct {v2, v9}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;-><init>(Z)V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    iput-boolean v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSystemServicesReady:Z

    iput-boolean v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsFoldableDevice:Z

    iput-boolean v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsFold:Z

    iput-boolean v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsFlip:Z

    iput-boolean v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsJdmModel:Z

    iput-boolean v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPendingReportCharging:Z

    iput-boolean v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsSupportProtectBattery:Z

    iput-boolean v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsServiceStateNr:Z

    new-instance v2, Landroid/os/BatteryStats$HistoryEventTracker;

    invoke-direct {v2}, Landroid/os/BatteryStats$HistoryEventTracker;-><init>()V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    new-instance v5, Lcom/android/server/power/stats/BatteryStatsImpl$HistoryStepDetailsCalculatorImpl;

    invoke-direct {v5, v0, v1}, Lcom/android/server/power/stats/BatteryStatsImpl$HistoryStepDetailsCalculatorImpl;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl;Lcom/android/server/power/stats/BatteryStatsImpl$HistoryStepDetailsCalculatorImpl-IA;)V

    iput-object v5, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mStepDetailsCalculator:Lcom/android/server/power/stats/BatteryStatsImpl$HistoryStepDetailsCalculatorImpl;

    iput-boolean v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHaveBatteryLevel:Z

    const-wide/16 v2, 0x0

    iput-wide v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryPluggedInRealTimeMs:J

    const/4 v4, -0x1

    iput v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryVoltageMv:I

    const/16 v6, 0x80

    iput v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mAp_temp:I

    iput v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPa_temp:I

    iput v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSkin_temp:I

    iput v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSub_batt_temp:I

    iput v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCurrent:I

    iput v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOtgOnline:I

    iput-boolean v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsSubScreenOn:Z

    iput-boolean v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsSubScreenDoze:Z

    iput v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatterySecTxShareEvent:I

    iput v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatterySecOnline:I

    iput v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatterySecCurrentEvent:I

    iput v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatterySecEvent:I

    iput v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mProtectBatteryMode:I

    iput-boolean v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIgnoreNextExternalStats:Z

    iput v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenState:I

    iput v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenBrightnessBin:I

    const/4 v6, 0x5

    new-array v10, v6, [Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iput-object v10, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iput v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDisplayId:I

    iput v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenState:I

    iput v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenPolicy:I

    iput-boolean v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsSubScreen:Z

    new-array v10, v6, [Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iput-object v10, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    new-instance v10, Ljava/util/concurrent/ConcurrentHashMap;

    invoke-direct {v10}, Ljava/util/concurrent/ConcurrentHashMap;-><init>()V

    iput-object v10, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mTopAppStats:Ljava/util/concurrent/ConcurrentHashMap;

    iput-boolean v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mAutoBrightnessMode:Z

    new-array v10, v6, [Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iput-object v10, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenAutoBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    new-array v10, v6, [Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iput-object v10, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenAutoBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iput-boolean v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenHighBrightness:Z

    iput v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHighRefreshRateBin:I

    const/4 v10, 0x4

    new-array v11, v10, [Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iput-object v11, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHighRefreshRateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    new-array v10, v10, [Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iput-object v10, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubHighRefreshRateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iput v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDisplayMismatchWtfCount:I

    iput v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUsbDataState:I

    const/16 v10, 0xe

    iput v10, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHotspotState:I

    iput v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mGpsSignalQualityBin:I

    const/4 v10, 0x2

    new-array v10, v10, [Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iput-object v10, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iput v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneSignalStrengthBin:I

    iput v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneSignalStrengthBinRaw:I

    invoke-static {}, Landroid/telephony/CellSignalStrength;->getNumSignalStrengthLevels()I

    move-result v10

    new-array v10, v10, [Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iput-object v10, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iput v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneDataConnectionType:I

    sget v10, Landroid/os/BatteryStats;->NUM_DATA_CONNECTION_TYPES:I

    new-array v10, v10, [Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iput-object v10, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iput v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mActiveRat:I

    const/4 v10, 0x3

    new-array v10, v10, [Lcom/android/server/power/stats/BatteryStatsImpl$RadioAccessTechnologyBatteryStats;

    iput-object v10, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPerRatBatteryStats:[Lcom/android/server/power/stats/BatteryStatsImpl$RadioAccessTechnologyBatteryStats;

    const/16 v10, 0xa

    new-array v11, v10, [Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    iput-object v11, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    new-array v10, v10, [Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    iput-object v10, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    iput-boolean v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHasWifiReporting:Z

    iput-boolean v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHasBluetoothReporting:Z

    iput-boolean v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHasModemReporting:Z

    iput-boolean v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHasDisplayPowerReporting:Z

    const/16 v10, 0x10

    new-array v11, v10, [Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    iput-object v11, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSpeakerMediaTimeCounters:[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    new-array v10, v10, [Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    iput-object v10, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSpeakerCallTimeCounters:[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    iput-boolean v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHasSpeakerOutReporting:Z

    iput-wide v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastCallbackTime:J

    iput v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiState:I

    const/16 v10, 0x8

    new-array v10, v10, [Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iput-object v10, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iput v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiSupplState:I

    const/16 v10, 0xd

    new-array v10, v10, [Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iput-object v10, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iput v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiSignalStrengthBin:I

    new-array v6, v6, [Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iput-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iput v9, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioPowerState:I

    iput v9, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiRadioPowerState:I

    iput-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBluetoothPowerCalculator:Lcom/android/server/power/stats/BluetoothPowerCalculator;

    iput-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuPowerCalculator:Lcom/android/server/power/stats/CpuPowerCalculator;

    iput-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioPowerCalculator:Lcom/android/server/power/stats/MobileRadioPowerCalculator;

    iput-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiPowerCalculator:Lcom/android/server/power/stats/WifiPowerCalculator;

    iput-boolean v9, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCharging:Z

    iput v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mInitStepMode:I

    iput v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCurStepMode:I

    iput v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mModStepMode:I

    new-instance v6, Landroid/os/BatteryStats$LevelStepTracker;

    const/16 v10, 0xc8

    invoke-direct {v6, v10}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    iput-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    new-instance v6, Landroid/os/BatteryStats$LevelStepTracker;

    const/16 v11, 0x190

    invoke-direct {v6, v11}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    iput-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    new-instance v6, Landroid/os/BatteryStats$LevelStepTracker;

    invoke-direct {v6, v10}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    iput-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    new-instance v6, Landroid/os/BatteryStats$LevelStepTracker;

    invoke-direct {v6, v11}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    iput-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    iput-wide v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDailyStartTimeMs:J

    iput-wide v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNextMinDailyDeadlineMs:J

    iput-wide v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNextMaxDailyDeadlineMs:J

    new-instance v6, Ljava/util/ArrayList;

    invoke-direct {v6}, Ljava/util/ArrayList;-><init>()V

    iput-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    iput-wide v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastWriteTimeMs:J

    iput v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneServiceState:I

    iput v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneServiceStateRaw:I

    iput v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneSimStateRaw:I

    iput v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mEstimatedBatteryCapacityMah:I

    iput v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastLearnedBatteryCapacityUah:I

    iput v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mMinLearnedBatteryCapacityUah:I

    iput v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mMaxLearnedBatteryCapacityUah:I

    const-wide/16 v10, -0x1

    iput-wide v10, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryTimeToFullSeconds:J

    new-instance v6, Lcom/android/server/power/stats/BatteryStatsImpl$BatteryStatsConfig$Builder;

    invoke-direct {v6}, Lcom/android/server/power/stats/BatteryStatsImpl$BatteryStatsConfig$Builder;-><init>()V

    invoke-virtual {v6}, Lcom/android/server/power/stats/BatteryStatsImpl$BatteryStatsConfig$Builder;->build()Lcom/android/server/power/stats/BatteryStatsImpl$BatteryStatsConfig;

    move-result-object v6

    iput-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryStatsConfig:Lcom/android/server/power/stats/BatteryStatsImpl$BatteryStatsConfig;

    iput-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mAlarmManager:Landroid/app/AlarmManager;

    new-instance v6, Lcom/android/server/power/stats/BatteryStatsImpl$$ExternalSyntheticLambda3;

    invoke-direct {v6, v0}, Lcom/android/server/power/stats/BatteryStatsImpl$$ExternalSyntheticLambda3;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl;)V

    iput-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLongPlugInAlarmHandler:Landroid/app/AlarmManager$OnAlarmListener;

    new-instance v6, Ljava/util/HashMap;

    invoke-direct {v6}, Ljava/util/HashMap;-><init>()V

    iput-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    new-instance v6, Ljava/util/HashMap;

    invoke-direct {v6}, Ljava/util/HashMap;-><init>()V

    iput-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    new-instance v6, Ljava/util/HashMap;

    invoke-direct {v6}, Ljava/util/HashMap;-><init>()V

    iput-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    new-instance v6, Ljava/util/HashMap;

    invoke-direct {v6}, Ljava/util/HashMap;-><init>()V

    iput-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenWakeStats:Ljava/util/HashMap;

    iput-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastWakeupReason:Ljava/lang/String;

    iput-wide v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastWakeupUptimeMs:J

    iput-wide v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastWakeupElapsedTimeMs:J

    new-instance v6, Ljava/util/HashMap;

    invoke-direct {v6}, Ljava/util/HashMap;-><init>()V

    iput-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    iput v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiFullLockNesting:I

    iput v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiScanNesting:I

    iput v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiMulticastNesting:I

    new-instance v6, Ljava/lang/Object;

    invoke-direct {v6}, Ljava/lang/Object;-><init>()V

    iput-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiNetworkLock:Ljava/lang/Object;

    sget-object v6, Llibcore/util/EmptyArray;->STRING:[Ljava/lang/String;

    iput-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiIfaces:[Ljava/lang/String;

    new-instance v6, Landroid/net/NetworkStats;

    invoke-direct {v6, v2, v3, v4}, Landroid/net/NetworkStats;-><init>(JI)V

    iput-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastWifiNetworkStats:Landroid/net/NetworkStats;

    new-instance v6, Ljava/lang/Object;

    invoke-direct {v6}, Ljava/lang/Object;-><init>()V

    iput-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mModemNetworkLock:Ljava/lang/Object;

    sget-object v6, Llibcore/util/EmptyArray;->STRING:[Ljava/lang/String;

    iput-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mModemIfaces:[Ljava/lang/String;

    new-instance v6, Landroid/net/NetworkStats;

    invoke-direct {v6, v2, v3, v4}, Landroid/net/NetworkStats;-><init>(JI)V

    iput-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastModemNetworkStats:Landroid/net/NetworkStats;

    iput-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastModemActivityInfo:Landroid/telephony/ModemActivityInfo;

    new-instance v4, Landroid/os/SpeakerOutEnergyInfo;

    const-wide/16 v11, 0x0

    new-array v13, v9, [J

    aput-wide v2, v13, v8

    new-array v14, v9, [J

    aput-wide v2, v14, v8

    const/4 v15, 0x0

    move-object v10, v4

    invoke-direct/range {v10 .. v15}, Landroid/os/SpeakerOutEnergyInfo;-><init>(J[J[JI)V

    iput-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastAudioOutEnergyInfo:Landroid/os/SpeakerOutEnergyInfo;

    new-instance v2, Landroid/os/RemoteCallbackList;

    invoke-direct {v2}, Landroid/os/RemoteCallbackList;-><init>()V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryStatsCallbacks:Landroid/os/RemoteCallbackList;

    iput-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNetworkStatsStack:Landroid/net/NetworkStats;

    new-instance v2, Lcom/android/server/power/stats/BatteryStatsImpl$BluetoothActivityInfoCache;

    invoke-direct {v2, v0, v1}, Lcom/android/server/power/stats/BatteryStatsImpl$BluetoothActivityInfoCache;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl;Lcom/android/server/power/stats/BatteryStatsImpl$BluetoothActivityInfoCache-IA;)V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/server/power/stats/BatteryStatsImpl$BluetoothActivityInfoCache;

    iput-boolean v9, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mFeatureComputeChargeTimeModel:Z

    const-string v2, "/sys/class/power_supply/battery/time_to_full_now"

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->CHARGE_TIME_PATH:Ljava/lang/String;

    new-instance v2, Lcom/android/server/power/stats/BatteryStatsImpl$$ExternalSyntheticLambda4;

    invoke-direct {v2, v0}, Lcom/android/server/power/stats/BatteryStatsImpl$$ExternalSyntheticLambda4;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl;)V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWriteAsyncRunnable:Ljava/lang/Runnable;

    new-instance v2, Ljava/util/concurrent/locks/ReentrantLock;

    invoke-direct {v2}, Ljava/util/concurrent/locks/ReentrantLock;-><init>()V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWriteLock:Ljava/util/concurrent/locks/ReentrantLock;

    invoke-virtual/range {p0 .. p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->init(Lcom/android/internal/os/Clock;)V

    new-instance v2, Lcom/android/server/power/stats/BatteryStatsImpl$MyHandler;

    invoke-virtual/range {p3 .. p3}, Landroid/os/Handler;->getLooper()Landroid/os/Looper;

    move-result-object v3

    invoke-direct {v2, v0, v3}, Lcom/android/server/power/stats/BatteryStatsImpl$MyHandler;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl;Landroid/os/Looper;)V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHandler:Landroid/os/Handler;

    new-instance v2, Lcom/android/server/power/stats/BatteryStatsImpl$Constants;

    iget-object v3, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHandler:Landroid/os/Handler;

    invoke-direct {v2, v0, v3}, Lcom/android/server/power/stats/BatteryStatsImpl$Constants;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl;Landroid/os/Handler;)V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mConstants:Lcom/android/server/power/stats/BatteryStatsImpl$Constants;

    if-nez v7, :cond_0

    iput-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mStatsFile:Landroid/util/AtomicFile;

    iput-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCheckinFile:Landroid/util/AtomicFile;

    iput-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDailyFile:Landroid/util/AtomicFile;

    new-instance v3, Lcom/android/internal/os/BatteryStatsHistory;

    iget v4, v2, Lcom/android/server/power/stats/BatteryStatsImpl$Constants;->MAX_HISTORY_FILES:I

    iget v2, v2, Lcom/android/server/power/stats/BatteryStatsImpl$Constants;->MAX_HISTORY_BUFFER:I

    iget-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-direct {v3, v4, v2, v5, v6}, Lcom/android/internal/os/BatteryStatsHistory;-><init>(IILcom/android/internal/os/BatteryStatsHistory$HistoryStepDetailsCalculator;Lcom/android/internal/os/Clock;)V

    iput-object v3, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    iput-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSystemDir:Ljava/io/File;

    goto :goto_0

    :cond_0
    new-instance v1, Landroid/util/AtomicFile;

    new-instance v3, Ljava/io/File;

    const-string v4, "batterystats.bin"

    invoke-direct {v3, v7, v4}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    invoke-direct {v1, v3}, Landroid/util/AtomicFile;-><init>(Ljava/io/File;)V

    iput-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mStatsFile:Landroid/util/AtomicFile;

    new-instance v1, Landroid/util/AtomicFile;

    new-instance v3, Ljava/io/File;

    const-string v4, "batterystats-checkin.bin"

    invoke-direct {v3, v7, v4}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    invoke-direct {v1, v3}, Landroid/util/AtomicFile;-><init>(Ljava/io/File;)V

    iput-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCheckinFile:Landroid/util/AtomicFile;

    new-instance v1, Landroid/util/AtomicFile;

    new-instance v3, Ljava/io/File;

    const-string v4, "batterystats-daily.xml"

    invoke-direct {v3, v7, v4}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    invoke-direct {v1, v3}, Landroid/util/AtomicFile;-><init>(Ljava/io/File;)V

    iput-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDailyFile:Landroid/util/AtomicFile;

    new-instance v10, Lcom/android/internal/os/BatteryStatsHistory;

    iget v3, v2, Lcom/android/server/power/stats/BatteryStatsImpl$Constants;->MAX_HISTORY_FILES:I

    iget v4, v2, Lcom/android/server/power/stats/BatteryStatsImpl$Constants;->MAX_HISTORY_BUFFER:I

    iget-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    move-object v1, v10

    move-object/from16 v2, p2

    invoke-direct/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsHistory;-><init>(Ljava/io/File;IILcom/android/internal/os/BatteryStatsHistory$HistoryStepDetailsCalculator;Lcom/android/internal/os/Clock;)V

    iput-object v10, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    iput-object v7, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSystemDir:Ljava/io/File;

    :goto_0
    iget v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mStartCount:I

    add-int/2addr v1, v9

    iput v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mStartCount:I

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->initTimersAndCounters()V

    iput-boolean v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryInternal:Z

    iput-boolean v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBattery:Z

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v1}, Lcom/android/internal/os/Clock;->uptimeMillis()J

    move-result-wide v1

    const-wide/16 v3, 0x3e8

    mul-long/2addr v1, v3

    iget-object v5, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v5}, Lcom/android/internal/os/Clock;->elapsedRealtime()J

    move-result-wide v5

    mul-long/2addr v5, v3

    invoke-virtual {v0, v1, v2, v5, v6}, Lcom/android/server/power/stats/BatteryStatsImpl;->initTimes(JJ)V

    sget-object v1, Landroid/os/Build;->ID:Ljava/lang/String;

    iput-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mEndPlatformVersion:Ljava/lang/String;

    iput-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mStartPlatformVersion:Ljava/lang/String;

    invoke-virtual {v0, v5, v6}, Lcom/android/server/power/stats/BatteryStatsImpl;->initDischarge(J)V

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->updateDailyDeadlineLocked()V

    move-object/from16 v1, p4

    iput-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPlatformIdleStateCallback:Lcom/android/server/power/stats/BatteryStatsImpl$PlatformIdleStateCallback;

    move-object/from16 v1, p5

    iput-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mEnergyConsumerRetriever:Lcom/android/server/power/stats/BatteryStatsImpl$EnergyStatsRetriever;

    move-object/from16 v1, p6

    iput-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUserInfoProvider:Lcom/android/server/power/stats/BatteryStatsImpl$UserInfoProvider;

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->checkIfRawSocReported()Z

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->checkIfCCInfoReported()Z

    iput v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeviceIdleMode:I

    const/16 v0, 0x15

    invoke-static {v0, v8}, Lcom/android/internal/util/FrameworkStatsLog;->write(II)V

    return-void
.end method

.method public constructor <init>(Ljava/io/File;Landroid/os/Handler;Lcom/android/server/power/stats/BatteryStatsImpl$PlatformIdleStateCallback;Lcom/android/server/power/stats/BatteryStatsImpl$EnergyStatsRetriever;Lcom/android/server/power/stats/BatteryStatsImpl$UserInfoProvider;)V
    .locals 7

    sget-object v1, Lcom/android/internal/os/Clock;->SYSTEM_CLOCK:Lcom/android/internal/os/Clock;

    move-object v0, p0

    move-object v2, p1

    move-object v3, p2

    move-object v4, p3

    move-object v5, p4

    move-object v6, p5

    invoke-direct/range {v0 .. v6}, Lcom/android/server/power/stats/BatteryStatsImpl;-><init>(Lcom/android/internal/os/Clock;Ljava/io/File;Landroid/os/Handler;Lcom/android/server/power/stats/BatteryStatsImpl$PlatformIdleStateCallback;Lcom/android/server/power/stats/BatteryStatsImpl$EnergyStatsRetriever;Lcom/android/server/power/stats/BatteryStatsImpl$UserInfoProvider;)V

    return-void
.end method

.method public static detachIfNotNull(Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;)V
    .locals 0

    if-eqz p0, :cond_0

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;->detach()V

    :cond_0
    return-void
.end method

.method public static detachIfNotNull(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;)V
    .locals 0

    if-eqz p0, :cond_0

    invoke-interface {p0}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;->detach()V

    :cond_0
    return-void
.end method

.method public static detachIfNotNull([Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;)V
    .locals 2

    if-eqz p0, :cond_0

    const/4 v0, 0x0

    :goto_0
    array-length v1, p0

    if-ge v0, v1, :cond_0

    aget-object v1, p0, v0

    invoke-static {v1}, Lcom/android/server/power/stats/BatteryStatsImpl;->detachIfNotNull(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;)V

    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    :cond_0
    return-void
.end method

.method public static detachIfNotNull([[Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;)V
    .locals 2

    if-eqz p0, :cond_0

    const/4 v0, 0x0

    :goto_0
    array-length v1, p0

    if-ge v0, v1, :cond_0

    aget-object v1, p0, v0

    invoke-static {v1}, Lcom/android/server/power/stats/BatteryStatsImpl;->detachIfNotNull([Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;)V

    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    :cond_0
    return-void
.end method

.method public static encodingPersonalInformation(Ljava/lang/String;)Ljava/lang/String;
    .locals 6

    const-string v0, "\\/|\\#"

    invoke-virtual {p0, v0}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v0

    array-length v1, v0

    const/4 v2, 0x1

    if-ne v1, v2, :cond_0

    return-object p0

    :cond_0
    array-length p0, v0

    sub-int/2addr p0, v2

    aget-object p0, v0, p0

    invoke-static {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->isNumber(Ljava/lang/String;)Z

    move-result p0

    const/4 v1, 0x0

    move v3, v1

    :goto_0
    array-length v4, v0

    sub-int/2addr v4, p0

    if-ge v3, v4, :cond_2

    aget-object v4, v0, v3

    const-string v5, "@SyncManager@"

    invoke-virtual {v4, v5}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v4

    if-eqz v4, :cond_1

    goto :goto_1

    :cond_1
    sget-object v4, Landroid/util/Patterns;->PHONE:Ljava/util/regex/Pattern;

    aget-object v5, v0, v3

    invoke-virtual {v4, v5}, Ljava/util/regex/Pattern;->matcher(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;

    move-result-object v4

    const-string v5, "Numbers"

    invoke-virtual {v4, v5}, Ljava/util/regex/Matcher;->replaceAll(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v4

    aput-object v4, v0, v3

    sget-object v5, Landroid/util/Patterns;->EMAIL_ADDRESS:Ljava/util/regex/Pattern;

    invoke-virtual {v5, v4}, Ljava/util/regex/Pattern;->matcher(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;

    move-result-object v4

    const-string v5, "eM_ADDR"

    invoke-virtual {v4, v5}, Ljava/util/regex/Matcher;->replaceAll(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v4

    aput-object v4, v0, v3

    :goto_1
    add-int/lit8 v3, v3, 0x1

    goto :goto_0

    :cond_2
    array-length v3, v0

    sub-int/2addr v3, p0

    invoke-static {v0, v1, v3}, Ljava/util/Arrays;->copyOfRange([Ljava/lang/Object;II)[Ljava/lang/Object;

    move-result-object v1

    check-cast v1, [Ljava/lang/CharSequence;

    const-string v3, "/"

    invoke-static {v3, v1}, Ljava/lang/String;->join(Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)Ljava/lang/String;

    move-result-object v1

    if-eqz p0, :cond_3

    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "#"

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    array-length v1, v0

    sub-int/2addr v1, v2

    aget-object v0, v0, v1

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    :cond_3
    return-object v1
.end method

.method public static excludeFromStringArray([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
    .locals 3

    invoke-static {p0, p1}, Lcom/android/internal/util/ArrayUtils;->indexOf([Ljava/lang/Object;Ljava/lang/Object;)I

    move-result p1

    if-ltz p1, :cond_2

    array-length v0, p0

    add-int/lit8 v0, v0, -0x1

    new-array v0, v0, [Ljava/lang/String;

    if-lez p1, :cond_0

    const/4 v1, 0x0

    invoke-static {p0, v1, v0, v1, p1}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    :cond_0
    array-length v1, p0

    add-int/lit8 v1, v1, -0x1

    if-ge p1, v1, :cond_1

    add-int/lit8 v1, p1, 0x1

    array-length v2, p0

    sub-int/2addr v2, p1

    add-int/lit8 v2, v2, -0x1

    invoke-static {p0, v1, v0, p1, v2}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    :cond_1
    return-object v0

    :cond_2
    return-object p0
.end method

.method public static getBatteryConsumerProcessStateNames()[Ljava/lang/String;
    .locals 4

    const/4 v0, 0x5

    new-array v1, v0, [Ljava/lang/String;

    const/4 v2, 0x0

    :goto_0
    if-ge v2, v0, :cond_0

    invoke-static {v2}, Landroid/os/BatteryConsumer;->processStateToString(I)Ljava/lang/String;

    move-result-object v3

    aput-object v3, v1, v2

    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    :cond_0
    return-object v1
.end method

.method public static includeInStringArray([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
    .locals 3

    invoke-static {p0, p1}, Lcom/android/internal/util/ArrayUtils;->indexOf([Ljava/lang/Object;Ljava/lang/Object;)I

    move-result v0

    if-ltz v0, :cond_0

    return-object p0

    :cond_0
    array-length v0, p0

    add-int/lit8 v0, v0, 0x1

    new-array v0, v0, [Ljava/lang/String;

    array-length v1, p0

    const/4 v2, 0x0

    invoke-static {p0, v2, v0, v2, v1}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    array-length p0, p0

    aput-object p1, v0, p0

    return-object v0
.end method

.method public static isActiveRadioPowerState(I)Z
    .locals 1

    const/4 v0, 0x2

    if-eq p0, v0, :cond_1

    const/4 v0, 0x3

    if-ne p0, v0, :cond_0

    goto :goto_0

    :cond_0
    const/4 p0, 0x0

    goto :goto_1

    :cond_1
    :goto_0
    const/4 p0, 0x1

    :goto_1
    return p0
.end method

.method public static isNumber(Ljava/lang/String;)Z
    .locals 2

    :try_start_0
    const-string v0, "[^a-zA-Z0-9]"

    const-string v1, ""

    invoke-virtual {p0, v0, v1}, Ljava/lang/String;->replaceAll(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object p0

    invoke-static {p0}, Ljava/lang/Long;->parseLong(Ljava/lang/String;)J
    :try_end_0
    .catch Ljava/lang/NumberFormatException; {:try_start_0 .. :try_end_0} :catch_0

    const/4 p0, 0x1

    return p0

    :catch_0
    const/4 p0, 0x0

    return p0
.end method

.method public static isOnBattery(II)Z
    .locals 0

    if-nez p0, :cond_0

    const/4 p0, 0x1

    if-eq p1, p0, :cond_0

    goto :goto_0

    :cond_0
    const/4 p0, 0x0

    :goto_0
    return p0
.end method

.method private synthetic lambda$new$0()V
    .locals 1

    monitor-enter p0

    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->maybeResetWhilePluggedInLocked()V

    monitor-exit p0

    return-void

    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method private synthetic lambda$new$1()V
    .locals 2

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHandler:Landroid/os/Handler;

    new-instance v1, Lcom/android/server/power/stats/BatteryStatsImpl$$ExternalSyntheticLambda7;

    invoke-direct {v1, p0}, Lcom/android/server/power/stats/BatteryStatsImpl$$ExternalSyntheticLambda7;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl;)V

    invoke-virtual {v0, v1}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    return-void
.end method

.method private synthetic lambda$new$9()V
    .locals 1

    monitor-enter p0

    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->writeSyncLocked()V

    monitor-exit p0

    return-void

    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public static synthetic lambda$postNetworkStatsUpdateCallbackLocked$2(Landroid/net/NetworkStats;Lcom/android/internal/app/IBatteryStatsCallback;)V
    .locals 9

    :try_start_0
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    invoke-virtual {p0}, Landroid/net/NetworkStats;->iterator()Ljava/util/Iterator;

    move-result-object p0

    :cond_0
    :goto_0
    invoke-interface {p0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_2

    invoke-interface {p0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/net/NetworkStats$Entry;

    invoke-virtual {v1}, Landroid/net/NetworkStats$Entry;->getRxPackets()J

    move-result-wide v2

    const-wide/16 v4, 0x0

    cmp-long v2, v2, v4

    if-nez v2, :cond_1

    invoke-virtual {v1}, Landroid/net/NetworkStats$Entry;->getTxPackets()J

    move-result-wide v2

    cmp-long v2, v2, v4

    if-nez v2, :cond_1

    goto :goto_0

    :cond_1
    invoke-virtual {v1}, Landroid/net/NetworkStats$Entry;->getTag()I

    move-result v2

    if-nez v2, :cond_0

    new-instance v2, Landroid/os/SemSimpleNetworkStats;

    invoke-virtual {v1}, Landroid/net/NetworkStats$Entry;->getUid()I

    move-result v4

    invoke-virtual {v1}, Landroid/net/NetworkStats$Entry;->getTxBytes()J

    move-result-wide v5

    invoke-virtual {v1}, Landroid/net/NetworkStats$Entry;->getRxBytes()J

    move-result-wide v7

    move-object v3, v2

    invoke-direct/range {v3 .. v8}, Landroid/os/SemSimpleNetworkStats;-><init>(IJJ)V

    invoke-virtual {v0, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_0

    :cond_2
    new-instance p0, Lcom/android/server/power/stats/BatteryStatsImpl$UsageComparator;

    const/4 v1, 0x0

    invoke-direct {p0, v1}, Lcom/android/server/power/stats/BatteryStatsImpl$UsageComparator;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl$UsageComparator-IA;)V

    invoke-virtual {v0, p0}, Ljava/util/ArrayList;->sort(Ljava/util/Comparator;)V

    new-instance p0, Ljava/util/ArrayList;

    invoke-direct {p0}, Ljava/util/ArrayList;-><init>()V

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v1

    const/16 v2, 0xa

    invoke-static {v2, v1}, Ljava/lang/Math;->min(II)I

    move-result v1

    const/4 v2, 0x0

    :goto_1
    if-ge v2, v1, :cond_3

    invoke-virtual {v0, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/os/SemSimpleNetworkStats;

    invoke-virtual {p0, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    :cond_3
    invoke-interface {p1, p0}, Lcom/android/internal/app/IBatteryStatsCallback;->notifyNetworkStatsUpdated(Ljava/util/List;)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0
    .catch Ljava/lang/RuntimeException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_2

    :catch_0
    const-string p0, "BatteryStatsImpl"

    const-string p1, "Callback failed to call"

    invoke-static {p0, p1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    :goto_2
    return-void
.end method

.method private synthetic lambda$readKernelUidCpuActiveTimesLocked$5(JJILjava/lang/Long;)V
    .locals 7

    invoke-virtual {p0, p5}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v6

    invoke-static {v6}, Landroid/os/Process;->isIsolated(I)Z

    move-result v0

    if-eqz v0, :cond_0

    return-void

    :cond_0
    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUserInfoProvider:Lcom/android/server/power/stats/BatteryStatsImpl$UserInfoProvider;

    invoke-static {p5}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v1

    invoke-virtual {v0, v1}, Lcom/android/server/power/stats/BatteryStatsImpl$UserInfoProvider;->exists(I)Z

    move-result v0

    if-nez v0, :cond_1

    return-void

    :cond_1
    move-object v0, p0

    move v1, v6

    move-wide v2, p1

    move-wide v4, p3

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object p0

    if-ne v6, p5, :cond_2

    invoke-static {p0}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$mgetCpuActiveTimeCounter(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;)Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;

    move-result-object p0

    invoke-virtual {p6}, Ljava/lang/Long;->longValue()J

    move-result-wide p3

    invoke-static {p0, p3, p4, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;->-$$Nest$mupdate(Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;JJ)J

    goto :goto_0

    :cond_2
    iget-object p3, p0, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mChildUids:Landroid/util/SparseArray;

    if-nez p3, :cond_3

    return-void

    :cond_3
    invoke-virtual {p3, p5}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object p3

    check-cast p3, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$ChildUid;

    if-eqz p3, :cond_4

    iget-object p3, p3, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$ChildUid;->cpuActiveCounter:Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;

    invoke-virtual {p6}, Ljava/lang/Long;->longValue()J

    move-result-wide p4

    invoke-static {p3, p4, p5, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;->-$$Nest$mupdate(Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;JJ)J

    move-result-wide p3

    invoke-static {p0}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$mgetCpuActiveTimeCounter(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;)Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;

    move-result-object p0

    invoke-static {p0, p3, p4, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;->-$$Nest$mincrement(Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;JJ)V

    :cond_4
    :goto_0
    return-void
.end method

.method private synthetic lambda$readKernelUidCpuClusterTimesLocked$6(JJZLcom/android/server/power/stats/BatteryStatsImpl$CpuDeltaPowerAccumulator;I[J)V
    .locals 6

    invoke-virtual {p0, p7}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v1

    invoke-static {v1}, Landroid/os/Process;->isIsolated(I)Z

    move-result p7

    if-eqz p7, :cond_0

    return-void

    :cond_0
    iget-object p7, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUserInfoProvider:Lcom/android/server/power/stats/BatteryStatsImpl$UserInfoProvider;

    invoke-static {v1}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v0

    invoke-virtual {p7, v0}, Lcom/android/server/power/stats/BatteryStatsImpl$UserInfoProvider;->exists(I)Z

    move-result p7

    if-nez p7, :cond_1

    return-void

    :cond_1
    move-object v0, p0

    move-wide v2, p1

    move-wide v4, p3

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object p0

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mCpuClusterTimesMs:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;

    invoke-virtual {p1, p8, p5}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;->addCountLocked([JZ)V

    if-eqz p6, :cond_2

    invoke-virtual {p6, p0, p8}, Lcom/android/server/power/stats/BatteryStatsImpl$CpuDeltaPowerAccumulator;->addCpuClusterDurationsMs(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;[J)V

    :cond_2
    return-void
.end method

.method private synthetic lambda$readKernelUidCpuFreqTimesLocked$4(JJZZZIILcom/android/server/power/stats/BatteryStatsImpl$CpuDeltaPowerAccumulator;I[J)V
    .locals 21

    move-object/from16 v6, p0

    move/from16 v7, p5

    move/from16 v8, p8

    move/from16 v0, p11

    move-object/from16 v9, p12

    invoke-virtual {v6, v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v1

    invoke-static {v1}, Landroid/os/Process;->isIsolated(I)Z

    move-result v0

    if-eqz v0, :cond_0

    return-void

    :cond_0
    iget-object v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mUserInfoProvider:Lcom/android/server/power/stats/BatteryStatsImpl$UserInfoProvider;

    invoke-static {v1}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v2

    invoke-virtual {v0, v2}, Lcom/android/server/power/stats/BatteryStatsImpl$UserInfoProvider;->exists(I)Z

    move-result v0

    if-nez v0, :cond_1

    return-void

    :cond_1
    move-object/from16 v0, p0

    move-wide/from16 v2, p1

    move-wide/from16 v4, p3

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object v0

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mCpuFreqTimeMs:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;

    if-eqz v1, :cond_2

    invoke-virtual {v1}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;->getSize()I

    move-result v1

    array-length v2, v9

    if-eq v1, v2, :cond_3

    :cond_2
    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mCpuFreqTimeMs:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;

    invoke-static {v1}, Lcom/android/server/power/stats/BatteryStatsImpl;->detachIfNotNull(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;)V

    new-instance v1, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;

    iget-object v2, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    iput-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mCpuFreqTimeMs:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;

    :cond_3
    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mCpuFreqTimeMs:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;

    invoke-virtual {v1, v9, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;->addCountLocked([JZ)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mScreenOffCpuFreqTimeMs:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;

    if-eqz v1, :cond_4

    invoke-virtual {v1}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;->getSize()I

    move-result v1

    array-length v2, v9

    if-eq v1, v2, :cond_5

    :cond_4
    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mScreenOffCpuFreqTimeMs:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;

    invoke-static {v1}, Lcom/android/server/power/stats/BatteryStatsImpl;->detachIfNotNull(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;)V

    new-instance v1, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;

    iget-object v2, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    iput-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mScreenOffCpuFreqTimeMs:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;

    :cond_5
    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mScreenOffCpuFreqTimeMs:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;

    move/from16 v2, p6

    invoke-virtual {v1, v9, v2}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;->addCountLocked([JZ)V

    if-eqz p7, :cond_10

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    if-eqz v1, :cond_6

    array-length v2, v1

    if-eq v2, v8, :cond_7

    :cond_6
    invoke-static {v1}, Lcom/android/server/power/stats/BatteryStatsImpl;->detachIfNotNull([[Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;)V

    new-array v1, v8, [[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    iput-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    :cond_7
    if-lez p9, :cond_8

    iget-object v1, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mWakeLockAllocationsUs:[[J

    if-nez v1, :cond_8

    new-array v1, v8, [[J

    iput-object v1, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mWakeLockAllocationsUs:[[J

    :cond_8
    const/4 v2, 0x0

    const/4 v3, 0x0

    :goto_0
    if-ge v2, v8, :cond_10

    iget-object v4, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-virtual {v4, v2}, Lcom/android/internal/os/PowerProfile;->getNumSpeedStepsInCpuCluster(I)I

    move-result v4

    iget-object v5, v0, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    aget-object v5, v5, v2

    if-eqz v5, :cond_9

    array-length v10, v5

    if-eq v10, v4, :cond_a

    :cond_9
    invoke-static {v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->detachIfNotNull([Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;)V

    iget-object v5, v0, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    new-array v10, v4, [Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    aput-object v10, v5, v2

    :cond_a
    if-lez p9, :cond_b

    iget-object v5, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mWakeLockAllocationsUs:[[J

    aget-object v10, v5, v2

    if-nez v10, :cond_b

    new-array v10, v4, [J

    aput-object v10, v5, v2

    :cond_b
    iget-object v5, v0, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    aget-object v5, v5, v2

    const/4 v14, 0x0

    :goto_1
    if-ge v14, v4, :cond_f

    aget-object v10, v5, v14

    if-nez v10, :cond_c

    new-instance v10, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    iget-object v11, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-direct {v10, v11}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    aput-object v10, v5, v14

    :cond_c
    iget-object v10, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mWakeLockAllocationsUs:[[J

    const-wide/16 v11, 0x3e8

    if-eqz v10, :cond_d

    aget-wide v15, v9, v3

    mul-long v17, v15, v11

    const-wide/16 v19, 0x32

    mul-long v17, v17, v19

    const-wide/16 v19, 0x64

    div-long v17, v17, v19

    aget-object v10, v10, v2

    aget-wide v19, v10, v14

    mul-long/2addr v15, v11

    sub-long v15, v15, v17

    add-long v19, v19, v15

    aput-wide v19, v10, v14

    goto :goto_2

    :cond_d
    aget-wide v15, v9, v3

    mul-long v17, v15, v11

    :goto_2
    move/from16 v16, v2

    move-wide/from16 v1, v17

    aget-object v10, v5, v14

    invoke-virtual {v10, v1, v2, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(JZ)V

    if-eqz p10, :cond_e

    div-long/2addr v1, v11

    move-object/from16 v10, p10

    move-object v11, v0

    move/from16 v12, v16

    move v13, v14

    move/from16 v17, v14

    move-wide v14, v1

    invoke-virtual/range {v10 .. v15}, Lcom/android/server/power/stats/BatteryStatsImpl$CpuDeltaPowerAccumulator;->addCpuClusterSpeedDurationsMs(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;IIJ)V

    goto :goto_3

    :cond_e
    move/from16 v17, v14

    :goto_3
    add-int/lit8 v3, v3, 0x1

    add-int/lit8 v14, v17, 0x1

    move/from16 v2, v16

    goto :goto_1

    :cond_f
    move/from16 v16, v2

    add-int/lit8 v2, v16, 0x1

    goto/16 :goto_0

    :cond_10
    return-void
.end method

.method private synthetic lambda$readKernelUidCpuTimesLocked$3(JJIZLandroid/util/SparseLongArray;I[J)V
    .locals 13

    move-object v6, p0

    move/from16 v7, p6

    move-object/from16 v8, p7

    const/4 v0, 0x0

    aget-wide v9, p9, v0

    const/4 v0, 0x1

    aget-wide v11, p9, v0

    move/from16 v0, p8

    invoke-virtual {p0, v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v1

    invoke-static {v1}, Landroid/os/Process;->isIsolated(I)Z

    move-result v0

    if-eqz v0, :cond_0

    return-void

    :cond_0
    iget-object v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mUserInfoProvider:Lcom/android/server/power/stats/BatteryStatsImpl$UserInfoProvider;

    invoke-static {v1}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v2

    invoke-virtual {v0, v2}, Lcom/android/server/power/stats/BatteryStatsImpl$UserInfoProvider;->exists(I)Z

    move-result v0

    if-nez v0, :cond_1

    return-void

    :cond_1
    move-object v0, p0

    move-wide v2, p1

    move-wide/from16 v4, p3

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object v0

    iget-wide v1, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mTempTotalCpuUserTimeUs:J

    add-long/2addr v1, v9

    iput-wide v1, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mTempTotalCpuUserTimeUs:J

    iget-wide v1, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mTempTotalCpuSystemTimeUs:J

    add-long/2addr v1, v11

    iput-wide v1, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mTempTotalCpuSystemTimeUs:J

    if-lez p5, :cond_2

    const-wide/16 v1, 0x32

    mul-long/2addr v9, v1

    const-wide/16 v3, 0x64

    div-long/2addr v9, v3

    mul-long/2addr v11, v1

    div-long/2addr v11, v3

    :cond_2
    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mUserCpuTime:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v9, v10, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(JZ)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mSystemCpuTime:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v11, v12, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(JZ)V

    if-eqz v8, :cond_3

    invoke-virtual {v0}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->getUid()I

    move-result v0

    add-long/2addr v9, v11

    invoke-virtual {v8, v0, v9, v10}, Landroid/util/SparseLongArray;->put(IJ)V

    :cond_3
    return-void
.end method

.method private synthetic lambda$scheduleNextResetWhilePluggedInCheck$7(Landroid/app/AlarmManager;J)V
    .locals 9

    const/4 v1, 0x1

    const-wide/32 v4, 0x36ee80

    const-string v6, "BatteryStatsImpl"

    iget-object v7, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLongPlugInAlarmHandler:Landroid/app/AlarmManager$OnAlarmListener;

    iget-object v8, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHandler:Landroid/os/Handler;

    move-object v0, p1

    move-wide v2, p2

    invoke-virtual/range {v0 .. v8}, Landroid/app/AlarmManager;->setWindow(IJJLjava/lang/String;Landroid/app/AlarmManager$OnAlarmListener;Landroid/os/Handler;)V

    return-void
.end method

.method private synthetic lambda$setOnBatteryLocked$8(Landroid/app/AlarmManager;)V
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLongPlugInAlarmHandler:Landroid/app/AlarmManager$OnAlarmListener;

    invoke-virtual {p1, p0}, Landroid/app/AlarmManager;->cancel(Landroid/app/AlarmManager$OnAlarmListener;)V

    return-void
.end method

.method public static mapNetworkTypeToRadioAccessTechnology(I)I
    .locals 3

    const/4 v0, 0x0

    packed-switch p0, :pswitch_data_0

    :pswitch_0
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Unhandled NetworkType ("

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p0, "), mapping to OTHER"

    invoke-virtual {v1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    const-string v1, "BatteryStatsImpl"

    invoke-static {v1, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    return v0

    :pswitch_1
    const/4 p0, 0x2

    return p0

    :pswitch_2
    const/4 p0, 0x1

    return p0

    :pswitch_3
    return v0

    nop

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_3
        :pswitch_3
        :pswitch_3
        :pswitch_3
        :pswitch_3
        :pswitch_3
        :pswitch_3
        :pswitch_3
        :pswitch_3
        :pswitch_3
        :pswitch_3
        :pswitch_3
        :pswitch_3
        :pswitch_2
        :pswitch_3
        :pswitch_3
        :pswitch_3
        :pswitch_3
        :pswitch_3
        :pswitch_0
        :pswitch_1
    .end packed-switch
.end method

.method public static mapRadioAccessNetworkTypeToRadioAccessTechnology(I)I
    .locals 3

    const/4 v0, 0x0

    packed-switch p0, :pswitch_data_0

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Unhandled RadioAccessNetworkType ("

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p0, "), mapping to OTHER"

    invoke-virtual {v1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    const-string v1, "BatteryStatsImpl"

    invoke-static {v1, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    return v0

    :pswitch_0
    const/4 p0, 0x2

    return p0

    :pswitch_1
    const/4 p0, 0x1

    return p0

    :pswitch_2
    return v0

    nop

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_2
        :pswitch_2
        :pswitch_2
        :pswitch_1
        :pswitch_2
        :pswitch_2
        :pswitch_0
    .end packed-switch
.end method

.method public static resetIfNotNull(Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;ZJ)Z
    .locals 0

    if-eqz p0, :cond_0

    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;->reset(ZJ)V

    :cond_0
    const/4 p0, 0x1

    return p0
.end method

.method public static resetIfNotNull(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;ZJ)Z
    .locals 0

    if-eqz p0, :cond_0

    invoke-interface {p0, p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;->reset(ZJ)Z

    move-result p0

    return p0

    :cond_0
    const/4 p0, 0x1

    return p0
.end method

.method public static resetIfNotNull([Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;ZJ)Z
    .locals 3

    const/4 v0, 0x1

    if-eqz p0, :cond_0

    const/4 v1, 0x0

    :goto_0
    array-length v2, p0

    if-ge v1, v2, :cond_0

    aget-object v2, p0, v1

    invoke-static {v2, p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl;->resetIfNotNull(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;ZJ)Z

    move-result v2

    and-int/2addr v0, v2

    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    :cond_0
    return v0
.end method

.method public static resetIfNotNull([[Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;ZJ)Z
    .locals 3

    const/4 v0, 0x1

    if-eqz p0, :cond_0

    const/4 v1, 0x0

    :goto_0
    array-length v2, p0

    if-ge v1, v2, :cond_0

    aget-object v2, p0, v1

    invoke-static {v2, p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl;->resetIfNotNull([Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;ZJ)Z

    move-result v2

    and-int/2addr v0, v2

    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    :cond_0
    return v0
.end method


# virtual methods
.method public addCpuStatsLocked(IIIIIIII)V
    .locals 9

    move-object v0, p0

    iget-object v0, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mStepDetailsCalculator:Lcom/android/server/power/stats/BatteryStatsImpl$HistoryStepDetailsCalculatorImpl;

    move v1, p1

    move v2, p2

    move v3, p3

    move v4, p4

    move v5, p5

    move v6, p6

    move/from16 v7, p7

    move/from16 v8, p8

    invoke-virtual/range {v0 .. v8}, Lcom/android/server/power/stats/BatteryStatsImpl$HistoryStepDetailsCalculatorImpl;->addCpuStats(IIIIIIII)V

    return-void
.end method

.method public addIsolatedUidLocked(IIJJ)V
    .locals 6

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsolatedUids:Landroid/util/SparseIntArray;

    invoke-virtual {v0, p1, p2}, Landroid/util/SparseIntArray;->put(II)V

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsolatedUidRefCounts:Landroid/util/SparseIntArray;

    const/4 v1, 0x1

    invoke-virtual {v0, p1, v1}, Landroid/util/SparseIntArray;->put(II)V

    move-object v0, p0

    move v1, p2

    move-wide v2, p3

    move-wide v4, p5

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object p0

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->addIsolatedUid(I)V

    return-void
.end method

.method public final declared-synchronized addModemTxPowerToHistory(Landroid/telephony/ModemActivityInfo;JJ)V
    .locals 8

    monitor-enter p0

    if-nez p1, :cond_0

    monitor-exit p0

    return-void

    :cond_0
    const/4 v0, 0x1

    const/4 v1, 0x0

    move v2, v0

    :goto_0
    :try_start_0
    invoke-static {}, Landroid/telephony/ModemActivityInfo;->getNumTxPowerLevels()I

    move-result v3

    if-ge v2, v3, :cond_2

    invoke-virtual {p1, v2}, Landroid/telephony/ModemActivityInfo;->getTransmitDurationMillisAtPowerLevel(I)J

    move-result-wide v3

    invoke-virtual {p1, v1}, Landroid/telephony/ModemActivityInfo;->getTransmitDurationMillisAtPowerLevel(I)J

    move-result-wide v5

    cmp-long v3, v3, v5

    if-lez v3, :cond_1

    move v1, v2

    :cond_1
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    :cond_2
    invoke-static {}, Landroid/telephony/ModemActivityInfo;->getNumTxPowerLevels()I

    move-result p1

    sub-int/2addr p1, v0

    if-ne v1, p1, :cond_3

    iget-object v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/high16 v7, 0x80000

    move-wide v3, p2

    move-wide v5, p4

    invoke-virtual/range {v2 .. v7}, Lcom/android/internal/os/BatteryStatsHistory;->recordState2StartEvent(JJI)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :cond_3
    monitor-exit p0

    return-void

    :catchall_0
    move-exception p1

    monitor-exit p0

    throw p1
.end method

.method public final addPackageChange(Landroid/os/BatteryStats$PackageChange;)V
    .locals 1

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    if-nez v0, :cond_0

    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    :cond_0
    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    invoke-virtual {p0, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    return-void
.end method

.method public aggregateLastWakeupUptimeLocked(JJ)V
    .locals 10

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastWakeupReason:Ljava/lang/String;

    if-eqz v0, :cond_0

    iget-wide v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastWakeupUptimeMs:J

    sub-long/2addr p3, v1

    invoke-virtual {p0, v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getWakeupReasonTimerLocked(Ljava/lang/String;)Lcom/android/server/power/stats/BatteryStatsImpl$SamplingTimer;

    move-result-object v1

    const-wide/16 v2, 0x3e8

    mul-long/2addr p3, v2

    const/4 v4, 0x1

    move-wide v2, p3

    move-wide v5, p1

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/power/stats/BatteryStatsImpl$SamplingTimer;->add(JIJ)V

    const/16 v4, 0x24

    iget-object v5, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastWakeupReason:Ljava/lang/String;

    iget-wide v8, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastWakeupElapsedTimeMs:J

    move-wide v6, p3

    invoke-static/range {v4 .. v9}, Lcom/android/internal/util/FrameworkStatsLog;->write(ILjava/lang/String;JJ)V

    const/4 p1, 0x0

    iput-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastWakeupReason:Ljava/lang/String;

    :cond_0
    return-void
.end method

.method public canReadTimeToFullNow()Z
    .locals 0

    iget-boolean p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mFeatureComputeChargeTimeModel:Z

    return p0
.end method

.method public final checkIfCCInfoReported()Z
    .locals 2

    new-instance v0, Ljava/io/File;

    const-string v1, "/sys/class/power_supply/battery/cc_info"

    invoke-direct {v0, v1}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    invoke-virtual {v0}, Ljava/io/File;->exists()Z

    move-result v1

    if-eqz v1, :cond_0

    invoke-virtual {v0}, Ljava/io/File;->canRead()Z

    move-result v0

    if-eqz v0, :cond_0

    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsCoulombCounterReported:Z

    return v0

    :cond_0
    const/4 p0, 0x0

    return p0
.end method

.method public final checkIfRawSocReported()Z
    .locals 2

    new-instance v0, Ljava/io/File;

    const-string v1, "/sys/class/power_supply/battery/batt_read_raw_soc"

    invoke-direct {v0, v1}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    invoke-virtual {v0}, Ljava/io/File;->exists()Z

    move-result v1

    if-eqz v1, :cond_0

    invoke-virtual {v0}, Ljava/io/File;->canRead()Z

    move-result v0

    if-eqz v0, :cond_0

    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsRawSocReported:Z

    return v0

    :cond_0
    const/4 p0, 0x0

    return p0
.end method

.method public final checkProtectBatteryType()V
    .locals 2

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Something was wrong with protect_battery ("

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mProtectBatteryMode:I

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ")"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "BatteryStatsImpl"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mProtectBatteryMode:I

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    invoke-virtual {p0, v0}, Lcom/android/internal/os/BatteryStatsHistory;->setProtectBatteryState(I)V

    return-void
.end method

.method public clearPendingRemovedUidsLocked()V
    .locals 4

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v0}, Lcom/android/internal/os/Clock;->elapsedRealtime()J

    move-result-wide v0

    iget-object v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mConstants:Lcom/android/server/power/stats/BatteryStatsImpl$Constants;

    iget-wide v2, v2, Lcom/android/server/power/stats/BatteryStatsImpl$Constants;->UID_REMOVE_DELAY_MS:J

    sub-long/2addr v0, v2

    :goto_0
    iget-object v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPendingRemovedUids:Ljava/util/Queue;

    invoke-interface {v2}, Ljava/util/Queue;->isEmpty()Z

    move-result v2

    if-nez v2, :cond_0

    iget-object v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPendingRemovedUids:Ljava/util/Queue;

    invoke-interface {v2}, Ljava/util/Queue;->peek()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/power/stats/BatteryStatsImpl$UidToRemove;

    invoke-virtual {v2}, Lcom/android/server/power/stats/BatteryStatsImpl$UidToRemove;->getUidRemovalTimestamp()J

    move-result-wide v2

    cmp-long v2, v2, v0

    if-gez v2, :cond_0

    iget-object v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPendingRemovedUids:Ljava/util/Queue;

    invoke-interface {v2}, Ljava/util/Queue;->poll()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/power/stats/BatteryStatsImpl$UidToRemove;

    invoke-virtual {v2}, Lcom/android/server/power/stats/BatteryStatsImpl$UidToRemove;->removeLocked()V

    goto :goto_0

    :cond_0
    return-void
.end method

.method public clearRemovedUserUidsLocked(I)V
    .locals 5

    const/4 v0, 0x0

    invoke-static {p1, v0}, Landroid/os/UserHandle;->getUid(II)I

    move-result v0

    const v1, 0x1869f

    invoke-static {p1, v1}, Landroid/os/UserHandle;->getUid(II)I

    move-result p1

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    const/4 v2, 0x0

    invoke-virtual {v1, v0, v2}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1, p1, v2}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1, v0}, Landroid/util/SparseArray;->indexOfKey(I)I

    move-result v1

    iget-object v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v2, p1}, Landroid/util/SparseArray;->indexOfKey(I)I

    move-result v2

    move v3, v1

    :goto_0
    if-gt v3, v2, :cond_1

    iget-object v4, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v4, v3}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    if-eqz v4, :cond_0

    invoke-virtual {v4}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->detachFromTimeBase()V

    :cond_0
    add-int/lit8 v3, v3, 0x1

    goto :goto_0

    :cond_1
    iget-object v3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    sub-int/2addr v2, v1

    add-int/lit8 v2, v2, 0x1

    invoke-virtual {v3, v1, v2}, Landroid/util/SparseArray;->removeAtRange(II)V

    invoke-virtual {p0, v0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->removeCpuStatsForUidRangeLocked(II)V

    return-void
.end method

.method public commitCurrentHistoryBatchLocked()V
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsHistory;->commitCurrentHistoryBatchLocked()V

    return-void
.end method

.method public computeBatteryRealtime(JI)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;->computeRealtime(JI)J

    move-result-wide p0

    return-wide p0
.end method

.method public computeBatteryScreenOffRealtime(JI)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;->computeRealtime(JI)J

    move-result-wide p0

    return-wide p0
.end method

.method public computeBatteryScreenOffUptime(JI)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;->computeUptime(JI)J

    move-result-wide p0

    return-wide p0
.end method

.method public computeBatteryTimeRemaining(J)J
    .locals 4

    iget-boolean p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBattery:Z

    const-wide/16 v0, -0x1

    if-nez p1, :cond_0

    return-wide v0

    :cond_0
    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    iget p2, p1, Landroid/os/BatteryStats$LevelStepTracker;->mNumStepDurations:I

    const/4 v2, 0x1

    if-ge p2, v2, :cond_1

    return-wide v0

    :cond_1
    invoke-virtual {p1}, Landroid/os/BatteryStats$LevelStepTracker;->computeTimePerLevel()J

    move-result-wide p1

    const-wide/16 v2, 0x0

    cmp-long v2, p1, v2

    if-gtz v2, :cond_2

    return-wide v0

    :cond_2
    iget p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryLevel:I

    int-to-long v0, p0

    mul-long/2addr p1, v0

    const-wide/16 v0, 0x3e8

    mul-long/2addr p1, v0

    return-wide p1
.end method

.method public computeBatteryUptime(JI)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;->computeUptime(JI)J

    move-result-wide p0

    return-wide p0
.end method

.method public computeChargeTimeRemaining(J)J
    .locals 5

    iget-boolean p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBattery:Z

    const-wide/16 v0, -0x1

    if-eqz p1, :cond_0

    return-wide v0

    :cond_0
    iget-wide p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryTimeToFullSeconds:J

    const-wide/16 v2, 0x0

    cmp-long v4, p1, v2

    if-ltz v4, :cond_1

    const-wide/32 v0, 0xf4240

    :goto_0
    mul-long/2addr p1, v0

    return-wide p1

    :cond_1
    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    iget p2, p1, Landroid/os/BatteryStats$LevelStepTracker;->mNumStepDurations:I

    const/4 v4, 0x1

    if-ge p2, v4, :cond_2

    return-wide v0

    :cond_2
    invoke-virtual {p1}, Landroid/os/BatteryStats$LevelStepTracker;->computeTimePerLevel()J

    move-result-wide p1

    cmp-long v2, p1, v2

    if-gtz v2, :cond_3

    return-wide v0

    :cond_3
    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->gatBatteryChargingMaxLevel()I

    move-result v0

    iget v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryLevel:I

    invoke-static {v0, v1}, Ljava/lang/Math;->max(II)I

    move-result v0

    iget p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryLevel:I

    sub-int/2addr v0, p0

    int-to-long v0, v0

    mul-long/2addr p1, v0

    const-wide/16 v0, 0x3e8

    goto :goto_0
.end method

.method public computeChargeTimeRemainingFromSysfs(J)J
    .locals 2

    const-string p1, "/sys/class/power_supply/battery/time_to_full_now"

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->readOneLine(Ljava/lang/String;)J

    move-result-wide p0

    const-wide/16 v0, 0x0

    cmp-long p2, p0, v0

    if-gez p2, :cond_0

    const-wide/16 p0, -0x1

    :cond_0
    return-wide p0
.end method

.method public computeRealtime(JI)J
    .locals 4

    iget-wide v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mRealtimeUs:J

    iget-wide v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mRealtimeStartUs:J

    sub-long/2addr p1, v2

    add-long/2addr v0, p1

    return-wide v0
.end method

.method public computeUptime(JI)J
    .locals 4

    iget-wide v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUptimeUs:J

    iget-wide v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUptimeStartUs:J

    sub-long/2addr p1, v2

    add-long/2addr v0, p1

    return-wide v0
.end method

.method public copyHistory()Lcom/android/internal/os/BatteryStatsHistory;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsHistory;->copy()Lcom/android/internal/os/BatteryStatsHistory;

    move-result-object p0

    return-object p0
.end method

.method public createFakeHistoryEvents(J)V
    .locals 15

    move-object v8, p0

    iget-object v0, v8, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v0}, Lcom/android/internal/os/Clock;->elapsedRealtime()J

    move-result-wide v9

    iget-object v0, v8, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v0}, Lcom/android/internal/os/Clock;->uptimeMillis()J

    move-result-wide v11

    const-wide/16 v0, 0x0

    move-wide v13, v0

    :goto_0
    cmp-long v0, v13, p1

    if-gez v0, :cond_0

    const-string/jumbo v1, "name1"

    const-string v2, "historyName1"

    const/16 v3, 0x3e8

    move-object v0, p0

    move-wide v4, v9

    move-wide v6, v11

    invoke-virtual/range {v0 .. v7}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteLongPartialWakelockStart(Ljava/lang/String;Ljava/lang/String;IJJ)V

    const-string/jumbo v1, "name1"

    const-string v2, "historyName1"

    invoke-virtual/range {v0 .. v7}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteLongPartialWakelockFinish(Ljava/lang/String;Ljava/lang/String;IJJ)V

    const-wide/16 v0, 0x1

    add-long/2addr v13, v0

    goto :goto_0

    :cond_0
    return-void
.end method

.method public final distributeEnergyToUidsLocked(IJLandroid/util/SparseDoubleArray;DJ)V
    .locals 14

    move-object/from16 v0, p4

    invoke-virtual/range {p4 .. p4}, Landroid/util/SparseDoubleArray;->size()I

    move-result v1

    add-int/lit8 v1, v1, -0x1

    const-wide/16 v2, 0x0

    move-wide v4, v2

    :goto_0
    if-ltz v1, :cond_0

    invoke-virtual {v0, v1}, Landroid/util/SparseDoubleArray;->valueAt(I)D

    move-result-wide v6

    add-double/2addr v4, v6

    add-int/lit8 v1, v1, -0x1

    goto :goto_0

    :cond_0
    move-wide/from16 v6, p5

    invoke-static {v4, v5, v6, v7}, Ljava/lang/Math;->max(DD)D

    move-result-wide v4

    cmpg-double v1, v4, v2

    if-gtz v1, :cond_1

    return-void

    :cond_1
    invoke-virtual/range {p4 .. p4}, Landroid/util/SparseDoubleArray;->size()I

    move-result v1

    add-int/lit8 v1, v1, -0x1

    :goto_1
    if-ltz v1, :cond_2

    invoke-virtual {v0, v1}, Landroid/util/SparseDoubleArray;->keyAt(I)I

    move-result v2

    move-object v3, p0

    invoke-virtual {p0, v2}, Lcom/android/server/power/stats/BatteryStatsImpl;->getAvailableUidStatsLocked(I)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object v6

    invoke-virtual {v0, v1}, Landroid/util/SparseDoubleArray;->valueAt(I)D

    move-result-wide v7

    move-wide/from16 v12, p2

    long-to-double v9, v12

    mul-double/2addr v9, v7

    div-double/2addr v9, v4

    const-wide/high16 v7, 0x3fe0000000000000L    # 0.5

    add-double/2addr v9, v7

    double-to-long v7, v9

    move v9, p1

    move-wide/from16 v10, p7

    invoke-static/range {v6 .. v11}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$maddChargeToStandardBucketLocked(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;JIJ)V

    add-int/lit8 v1, v1, -0x1

    goto :goto_1

    :cond_2
    return-void
.end method

.method public dump(Landroid/content/Context;Ljava/io/PrintWriter;IIJ)V
    .locals 2

    invoke-super/range {p0 .. p6}, Landroid/os/BatteryStats;->dump(Landroid/content/Context;Ljava/io/PrintWriter;IIJ)V

    monitor-enter p0

    :try_start_0
    const-string p1, "Per process state tracking available: "

    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->trackPerProcStateCpuTimes()Z

    move-result p1

    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->println(Z)V

    const-string p1, "Total cpu time reads: "

    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-wide p3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNumSingleUidCpuTimeReads:J

    invoke-virtual {p2, p3, p4}, Ljava/io/PrintWriter;->println(J)V

    const-string p1, "Batching Duration (min): "

    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {p1}, Lcom/android/internal/os/Clock;->uptimeMillis()J

    move-result-wide p3

    iget-wide p5, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuTimeReadsTrackingStartTimeMs:J

    sub-long/2addr p3, p5

    const-wide/32 p5, 0xea60

    div-long/2addr p3, p5

    invoke-virtual {p2, p3, p4}, Ljava/io/PrintWriter;->println(J)V

    const-string p1, "All UID cpu time reads since the later of device start or stats reset: "

    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNumAllUidCpuTimeReads:I

    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->println(I)V

    const-string p1, "UIDs removed since the later of device start or stats reset: "

    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNumUidsRemoved:I

    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->println(I)V

    const-string p1, "Currently mapped isolated uids:"

    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsolatedUids:Landroid/util/SparseIntArray;

    invoke-virtual {p1}, Landroid/util/SparseIntArray;->size()I

    move-result p1

    const/4 p3, 0x0

    :goto_0
    if-ge p3, p1, :cond_0

    iget-object p4, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsolatedUids:Landroid/util/SparseIntArray;

    invoke-virtual {p4, p3}, Landroid/util/SparseIntArray;->keyAt(I)I

    move-result p4

    iget-object p5, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsolatedUids:Landroid/util/SparseIntArray;

    invoke-virtual {p5, p3}, Landroid/util/SparseIntArray;->valueAt(I)I

    move-result p5

    iget-object p6, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsolatedUidRefCounts:Landroid/util/SparseIntArray;

    invoke-virtual {p6, p4}, Landroid/util/SparseIntArray;->get(I)I

    move-result p6

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "  "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p4, "->"

    invoke-virtual {v0, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p4, " (ref count = "

    invoke-virtual {v0, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p4, ")"

    invoke-virtual {v0, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p4

    invoke-virtual {p2, p4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    add-int/lit8 p3, p3, 0x1

    goto :goto_0

    :cond_0
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    invoke-virtual {p0, p2}, Lcom/android/server/power/stats/BatteryStatsImpl;->dumpConstantsLocked(Ljava/io/PrintWriter;)V

    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    invoke-virtual {p0, p2}, Lcom/android/server/power/stats/BatteryStatsImpl;->dumpCpuPowerBracketsLocked(Ljava/io/PrintWriter;)V

    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    invoke-virtual {p0, p2}, Lcom/android/server/power/stats/BatteryStatsImpl;->dumpEnergyConsumerStatsLocked(Ljava/io/PrintWriter;)V

    monitor-exit p0

    return-void

    :catchall_0
    move-exception p1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw p1
.end method

.method public dumpConstantsLocked(Ljava/io/PrintWriter;)V
    .locals 2

    new-instance v0, Landroid/util/IndentingPrintWriter;

    const-string v1, "    "

    invoke-direct {v0, p1, v1}, Landroid/util/IndentingPrintWriter;-><init>(Ljava/io/Writer;Ljava/lang/String;)V

    const-string p1, "BatteryStats constants:"

    invoke-virtual {v0, p1}, Landroid/util/IndentingPrintWriter;->println(Ljava/lang/String;)V

    invoke-virtual {v0}, Landroid/util/IndentingPrintWriter;->increaseIndent()Landroid/util/IndentingPrintWriter;

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mConstants:Lcom/android/server/power/stats/BatteryStatsImpl$Constants;

    invoke-virtual {p0, v0}, Lcom/android/server/power/stats/BatteryStatsImpl$Constants;->dumpLocked(Ljava/io/PrintWriter;)V

    invoke-virtual {v0}, Landroid/util/IndentingPrintWriter;->decreaseIndent()Landroid/util/IndentingPrintWriter;

    return-void
.end method

.method public final dumpCpuPowerBracketsLocked(Ljava/io/PrintWriter;)V
    .locals 3

    const-string v0, "CPU power brackets; cluster/freq in MHz(avg current in mA):"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-virtual {v0}, Lcom/android/internal/os/PowerProfile;->getCpuPowerBracketCount()I

    move-result v0

    const/4 v1, 0x0

    :goto_0
    if-ge v1, v0, :cond_0

    const-string v2, "    "

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->print(I)V

    const-string v2, ": "

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-virtual {v2, v1}, Lcom/android/internal/os/PowerProfile;->getCpuPowerBracketDescription(I)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    :cond_0
    return-void
.end method

.method public dumpCpuStatsLocked(Ljava/io/PrintWriter;)V
    .locals 15

    move-object v0, p0

    move-object/from16 v1, p1

    iget-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v2}, Landroid/util/SparseArray;->size()I

    move-result v2

    const-string v3, "Per UID CPU user & system time in ms:"

    invoke-virtual {v1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    const/4 v3, 0x0

    move v4, v3

    :goto_0
    const-wide/16 v5, 0x3e8

    const-string v7, ": "

    const-string v8, "  "

    if-ge v4, v2, :cond_0

    iget-object v9, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v9, v4}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v9

    iget-object v10, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v10, v9}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    invoke-virtual {v1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {v1, v9}, Ljava/io/PrintWriter;->print(I)V

    invoke-virtual {v1, v7}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {v10, v3}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->getUserCpuTimeUs(I)J

    move-result-wide v7

    div-long/2addr v7, v5

    invoke-virtual {v1, v7, v8}, Ljava/io/PrintWriter;->print(J)V

    const-string v7, " "

    invoke-virtual {v1, v7}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {v10, v3}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->getSystemCpuTimeUs(I)J

    move-result-wide v7

    div-long/2addr v7, v5

    invoke-virtual {v1, v7, v8}, Ljava/io/PrintWriter;->println(J)V

    add-int/lit8 v4, v4, 0x1

    goto :goto_0

    :cond_0
    const-string v4, "Per UID CPU active time in ms:"

    invoke-virtual {v1, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    move v4, v3

    :goto_1
    const-wide/16 v9, 0x0

    if-ge v4, v2, :cond_2

    iget-object v11, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v11, v4}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v11

    iget-object v12, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v12, v11}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    invoke-virtual {v12}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->getCpuActiveTime()J

    move-result-wide v13

    cmp-long v9, v13, v9

    if-lez v9, :cond_1

    invoke-virtual {v1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {v1, v11}, Ljava/io/PrintWriter;->print(I)V

    invoke-virtual {v1, v7}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {v12}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->getCpuActiveTime()J

    move-result-wide v9

    invoke-virtual {v1, v9, v10}, Ljava/io/PrintWriter;->println(J)V

    :cond_1
    add-int/lit8 v4, v4, 0x1

    goto :goto_1

    :cond_2
    const-string v4, "Per UID CPU cluster time in ms:"

    invoke-virtual {v1, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    move v4, v3

    :goto_2
    if-ge v4, v2, :cond_4

    iget-object v11, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v11, v4}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v11

    iget-object v12, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v12, v11}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    invoke-virtual {v12}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->getCpuClusterTimes()[J

    move-result-object v12

    if-eqz v12, :cond_3

    invoke-virtual {v1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {v1, v11}, Ljava/io/PrintWriter;->print(I)V

    invoke-virtual {v1, v7}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-static {v12}, Ljava/util/Arrays;->toString([J)Ljava/lang/String;

    move-result-object v11

    invoke-virtual {v1, v11}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    :cond_3
    add-int/lit8 v4, v4, 0x1

    goto :goto_2

    :cond_4
    const-string v4, "Per UID CPU frequency time in ms:"

    invoke-virtual {v1, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    move v4, v3

    :goto_3
    if-ge v4, v2, :cond_6

    iget-object v11, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v11, v4}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v11

    iget-object v12, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v12, v11}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    invoke-virtual {v12, v3}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->getCpuFreqTimes(I)[J

    move-result-object v12

    if-eqz v12, :cond_5

    invoke-virtual {v1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {v1, v11}, Ljava/io/PrintWriter;->print(I)V

    invoke-virtual {v1, v7}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-static {v12}, Ljava/util/Arrays;->toString([J)Ljava/lang/String;

    move-result-object v11

    invoke-virtual {v1, v11}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    :cond_5
    add-int/lit8 v4, v4, 0x1

    goto :goto_3

    :cond_6
    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->updateSystemServiceCallStats()V

    iget-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBinderThreadCpuTimesUs:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;

    if-eqz v4, :cond_8

    const-string v4, "Per UID System server binder time in ms:"

    invoke-virtual {v1, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getSystemServiceTimeAtCpuSpeeds()[J

    move-result-object v4

    :goto_4
    if-ge v3, v2, :cond_8

    iget-object v11, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v11, v3}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v11

    iget-object v12, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v12, v11}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    invoke-virtual {v12}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->getProportionalSystemServiceUsage()D

    move-result-wide v12

    array-length v14, v4

    add-int/lit8 v14, v14, -0x1

    :goto_5
    if-ltz v14, :cond_7

    long-to-double v9, v9

    aget-wide v5, v4, v14

    long-to-double v5, v5

    mul-double/2addr v5, v12

    add-double/2addr v9, v5

    double-to-long v9, v9

    add-int/lit8 v14, v14, -0x1

    const-wide/16 v5, 0x3e8

    goto :goto_5

    :cond_7
    invoke-virtual {v1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {v1, v11}, Ljava/io/PrintWriter;->print(I)V

    invoke-virtual {v1, v7}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-wide/16 v5, 0x3e8

    div-long/2addr v9, v5

    invoke-virtual {v1, v9, v10}, Ljava/io/PrintWriter;->println(J)V

    add-int/lit8 v3, v3, 0x1

    const-wide/16 v9, 0x0

    goto :goto_4

    :cond_8
    return-void
.end method

.method public dumpEnergyConsumerStatsLocked(Ljava/io/PrintWriter;)V
    .locals 5

    const/4 v0, 0x0

    new-array v1, v0, [Ljava/lang/Object;

    const-string v2, "On-battery energy consumer stats (microcoulombs) \n"

    invoke-virtual {p1, v2, v1}, Ljava/io/PrintWriter;->printf(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintWriter;

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mGlobalEnergyConsumerStats:Lcom/android/internal/power/EnergyConsumerStats;

    if-nez v1, :cond_0

    const-string p0, "    Not supported on this device.\n"

    new-array v0, v0, [Ljava/lang/Object;

    invoke-virtual {p1, p0, v0}, Ljava/io/PrintWriter;->printf(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintWriter;

    return-void

    :cond_0
    const-string v2, "global usage"

    invoke-virtual {p0, p1, v2, v1}, Lcom/android/server/power/stats/BatteryStatsImpl;->dumpEnergyConsumerStatsLocked(Ljava/io/PrintWriter;Ljava/lang/String;Lcom/android/internal/power/EnergyConsumerStats;)V

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    :goto_0
    if-ge v0, v1, :cond_1

    iget-object v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v2, v0}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v2

    iget-object v3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v3, v2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "uid "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v4, v2, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mUid:I

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$fgetmUidEnergyConsumerStats(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;)Lcom/android/internal/power/EnergyConsumerStats;

    move-result-object v2

    invoke-virtual {p0, p1, v3, v2}, Lcom/android/server/power/stats/BatteryStatsImpl;->dumpEnergyConsumerStatsLocked(Ljava/io/PrintWriter;Ljava/lang/String;Lcom/android/internal/power/EnergyConsumerStats;)V

    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    :cond_1
    return-void
.end method

.method public final dumpEnergyConsumerStatsLocked(Ljava/io/PrintWriter;Ljava/lang/String;Lcom/android/internal/power/EnergyConsumerStats;)V
    .locals 1

    if-nez p3, :cond_0

    return-void

    :cond_0
    new-instance p0, Landroid/util/IndentingPrintWriter;

    const-string v0, "    "

    invoke-direct {p0, p1, v0}, Landroid/util/IndentingPrintWriter;-><init>(Ljava/io/Writer;Ljava/lang/String;)V

    invoke-virtual {p0}, Landroid/util/IndentingPrintWriter;->increaseIndent()Landroid/util/IndentingPrintWriter;

    const-string p1, "%s:\n"

    filled-new-array {p2}, [Ljava/lang/Object;

    move-result-object p2

    invoke-virtual {p0, p1, p2}, Landroid/util/IndentingPrintWriter;->printf(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintWriter;

    invoke-virtual {p0}, Landroid/util/IndentingPrintWriter;->increaseIndent()Landroid/util/IndentingPrintWriter;

    invoke-virtual {p3, p0}, Lcom/android/internal/power/EnergyConsumerStats;->dump(Ljava/io/PrintWriter;)V

    invoke-virtual {p0}, Landroid/util/IndentingPrintWriter;->decreaseIndent()Landroid/util/IndentingPrintWriter;

    return-void
.end method

.method public dumpPowerProfileLocked(Ljava/io/PrintWriter;)V
    .locals 2

    new-instance v0, Landroid/util/IndentingPrintWriter;

    const-string v1, "    "

    invoke-direct {v0, p1, v1}, Landroid/util/IndentingPrintWriter;-><init>(Ljava/io/Writer;Ljava/lang/String;)V

    const/4 p1, 0x0

    new-array p1, p1, [Ljava/lang/Object;

    const-string v1, "Power Profile: \n"

    invoke-virtual {v0, v1, p1}, Landroid/util/IndentingPrintWriter;->printf(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintWriter;

    invoke-virtual {v0}, Landroid/util/IndentingPrintWriter;->increaseIndent()Landroid/util/IndentingPrintWriter;

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-virtual {p0, v0}, Lcom/android/internal/os/PowerProfile;->dump(Ljava/io/PrintWriter;)V

    invoke-virtual {v0}, Landroid/util/IndentingPrintWriter;->decreaseIndent()Landroid/util/IndentingPrintWriter;

    return-void
.end method

.method public final evaluateOverallScreenBrightnessBinLocked()I
    .locals 7

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getDisplayCount()I

    move-result v0

    const/4 v1, -0x1

    const/4 v2, 0x0

    move v3, v1

    :goto_0
    if-ge v2, v0, :cond_2

    iget-object v4, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPerDisplayBatteryStats:[Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;

    aget-object v4, v4, v2

    iget v5, v4, Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;->screenState:I

    const/4 v6, 0x2

    if-ne v5, v6, :cond_0

    iget v4, v4, Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;->screenBrightnessBin:I

    goto :goto_1

    :cond_0
    move v4, v1

    :goto_1
    if-le v4, v3, :cond_1

    move v3, v4

    :cond_1
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    :cond_2
    return v3
.end method

.method public fillLowPowerStats()V
    .locals 7

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPlatformIdleStateCallback:Lcom/android/server/power/stats/BatteryStatsImpl$PlatformIdleStateCallback;

    if-nez v0, :cond_0

    return-void

    :cond_0
    new-instance v0, Lcom/android/internal/os/RpmStats;

    invoke-direct {v0}, Lcom/android/internal/os/RpmStats;-><init>()V

    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v1

    iget-wide v3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastRpmStatsUpdateTimeMs:J

    sub-long v3, v1, v3

    const-wide/16 v5, 0x3e8

    cmp-long v3, v3, v5

    if-ltz v3, :cond_1

    iget-object v3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPlatformIdleStateCallback:Lcom/android/server/power/stats/BatteryStatsImpl$PlatformIdleStateCallback;

    invoke-interface {v3, v0}, Lcom/android/server/power/stats/BatteryStatsImpl$PlatformIdleStateCallback;->fillLowPowerStats(Lcom/android/internal/os/RpmStats;)V

    monitor-enter p0

    :try_start_0
    iput-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mTmpRpmStats:Lcom/android/internal/os/RpmStats;

    iput-wide v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastRpmStatsUpdateTimeMs:J

    monitor-exit p0

    goto :goto_0

    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0

    :cond_1
    :goto_0
    return-void
.end method

.method public finishAddingCpuStatsLocked()V
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mStepDetailsCalculator:Lcom/android/server/power/stats/BatteryStatsImpl$HistoryStepDetailsCalculatorImpl;

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl$HistoryStepDetailsCalculatorImpl;->finishAddingCpuLocked()V

    return-void
.end method

.method public forceRecordAllHistory()V
    .locals 1

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsHistory;->forceRecordAllHistory()V

    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mRecordAllHistory:Z

    return-void
.end method

.method public final gatBatteryChargingMaxLevel()I
    .locals 3

    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mProtectBatteryMode:I

    const/16 v1, 0x64

    if-eqz v0, :cond_1

    const/4 v2, 0x1

    if-eq v0, v2, :cond_0

    const/4 v2, 0x2

    if-eq v0, v2, :cond_0

    const/4 v2, 0x3

    if-eq v0, v2, :cond_1

    const/4 v2, 0x4

    if-eq v0, v2, :cond_1

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->checkProtectBatteryType()V

    return v1

    :cond_0
    const/16 p0, 0x50

    return p0

    :cond_1
    return v1
.end method

.method public final gatBatteryHistoryResetLevel()I
    .locals 3

    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mProtectBatteryMode:I

    const/16 v1, 0x5a

    if-eqz v0, :cond_1

    const/4 v2, 0x1

    if-eq v0, v2, :cond_0

    const/4 v2, 0x2

    if-eq v0, v2, :cond_0

    const/4 v2, 0x3

    if-eq v0, v2, :cond_1

    const/4 v2, 0x4

    if-eq v0, v2, :cond_1

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->checkProtectBatteryType()V

    return v1

    :cond_0
    const/16 p0, 0x46

    return p0

    :cond_1
    return v1
.end method

.method public getActiveRadioDurationMs(IIIJ)J
    .locals 2

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPerRatBatteryStats:[Lcom/android/server/power/stats/BatteryStatsImpl$RadioAccessTechnologyBatteryStats;

    aget-object p0, p0, p1

    const-wide/16 v0, 0x0

    if-nez p0, :cond_0

    return-wide v0

    :cond_0
    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl$RadioAccessTechnologyBatteryStats;->perStateTimers:[[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    array-length p1, p0

    if-ltz p2, :cond_3

    if-lt p2, p1, :cond_1

    goto :goto_0

    :cond_1
    aget-object p0, p0, p2

    array-length p1, p0

    if-ltz p3, :cond_3

    if-lt p3, p1, :cond_2

    goto :goto_0

    :cond_2
    aget-object p0, p0, p3

    const-wide/16 p1, 0x3e8

    mul-long/2addr p4, p1

    const/4 p3, 0x0

    invoke-virtual {p0, p4, p5, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTotalTimeLocked(JI)J

    move-result-wide p3

    div-long/2addr p3, p1

    return-wide p3

    :cond_3
    :goto_0
    return-wide v0
.end method

.method public getActiveRxRadioDurationMs(IIJ)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPerRatBatteryStats:[Lcom/android/server/power/stats/BatteryStatsImpl$RadioAccessTechnologyBatteryStats;

    aget-object p0, p0, p1

    const-wide/16 p3, -0x1

    if-nez p0, :cond_0

    return-wide p3

    :cond_0
    const/4 p1, 0x0

    invoke-static {p0, p2, p1}, Lcom/android/server/power/stats/BatteryStatsImpl$RadioAccessTechnologyBatteryStats;->-$$Nest$mgetRxDurationCounter(Lcom/android/server/power/stats/BatteryStatsImpl$RadioAccessTechnologyBatteryStats;IZ)Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    move-result-object p0

    if-nez p0, :cond_1

    return-wide p3

    :cond_1
    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    move-result-wide p0

    return-wide p0
.end method

.method public getActiveTxRadioDurationMs(IIIJ)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPerRatBatteryStats:[Lcom/android/server/power/stats/BatteryStatsImpl$RadioAccessTechnologyBatteryStats;

    aget-object p0, p0, p1

    const-wide/16 p4, -0x1

    if-nez p0, :cond_0

    return-wide p4

    :cond_0
    const/4 p1, 0x0

    invoke-static {p0, p2, p3, p1}, Lcom/android/server/power/stats/BatteryStatsImpl$RadioAccessTechnologyBatteryStats;->-$$Nest$mgetTxDurationCounter(Lcom/android/server/power/stats/BatteryStatsImpl$RadioAccessTechnologyBatteryStats;IIZ)Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    move-result-object p0

    if-nez p0, :cond_1

    return-wide p4

    :cond_1
    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    move-result-wide p0

    return-wide p0
.end method

.method public final getAudioOnTimeMsSinceMarkLocked(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;J)J
    .locals 0

    iget-object p0, p1, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mAudioTurnedOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    if-nez p0, :cond_0

    const-wide/16 p0, 0x0

    return-wide p0

    :cond_0
    invoke-virtual {p0, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTimeSinceMarkLocked(J)J

    move-result-wide p0

    const-wide/16 p2, 0x3e8

    div-long/2addr p0, p2

    return-wide p0
.end method

.method public getAvailableUidStatsLocked(I)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {p0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object p0

    check-cast p0, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    return-object p0
.end method

.method public getAwakeTimeBattery()J
    .locals 2

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v0}, Lcom/android/internal/os/Clock;->uptimeMillis()J

    move-result-wide v0

    invoke-virtual {p0, v0, v1}, Lcom/android/server/power/stats/BatteryStatsImpl;->getBatteryUptimeLocked(J)J

    move-result-wide v0

    return-wide v0
.end method

.method public getAwakeTimePlugged()J
    .locals 4

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v0}, Lcom/android/internal/os/Clock;->uptimeMillis()J

    move-result-wide v0

    const-wide/16 v2, 0x3e8

    mul-long/2addr v0, v2

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getAwakeTimeBattery()J

    move-result-wide v2

    sub-long/2addr v0, v2

    return-wide v0
.end method

.method public getBatteryCCInfo()I
    .locals 2

    iget-boolean v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsCoulombCounterReported:Z

    const/4 v1, 0x0

    if-eqz v0, :cond_1

    const-string v0, "/sys/class/power_supply/battery/cc_info"

    invoke-virtual {p0, v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getIntFromFile(Ljava/lang/String;)I

    move-result p0

    const/4 v0, -0x1

    if-ne p0, v0, :cond_0

    return v1

    :cond_0
    return p0

    :cond_1
    return v1
.end method

.method public getBatteryLevel()I
    .locals 1

    const-string v0, "/sys/class/power_supply/battery/capacity"

    invoke-virtual {p0, v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getByteFromFile(Ljava/lang/String;)B

    move-result p0

    if-gez p0, :cond_0

    const/16 p0, 0x64

    :cond_0
    return p0
.end method

.method public getBatteryPermil()I
    .locals 1

    iget-boolean v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsRawSocReported:Z

    if-eqz v0, :cond_2

    const-string v0, "/sys/class/power_supply/battery/batt_read_raw_soc"

    invoke-virtual {p0, v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getIntFromFile(Ljava/lang/String;)I

    move-result v0

    if-gez v0, :cond_0

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getBatteryLevel()I

    move-result p0

    :goto_0
    mul-int/lit8 p0, p0, 0xa

    return p0

    :cond_0
    if-eqz v0, :cond_1

    div-int/lit8 v0, v0, 0xa

    :cond_1
    return v0

    :cond_2
    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getBatteryLevel()I

    move-result p0

    goto :goto_0
.end method

.method public getBatteryRealtime(J)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-virtual {p0, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;->getRealtime(J)J

    move-result-wide p0

    return-wide p0
.end method

.method public getBatteryUptime(J)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-virtual {p0, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;->getUptime(J)J

    move-result-wide p0

    return-wide p0
.end method

.method public getBatteryUptimeLocked(J)J
    .locals 2

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    const-wide/16 v0, 0x3e8

    mul-long/2addr p1, v0

    invoke-virtual {p0, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;->getUptime(J)J

    move-result-wide p0

    return-wide p0
.end method

.method public getBatteryUsageStats(Landroid/content/Context;Z)Landroid/os/BatteryUsageStats;
    .locals 3

    new-instance v0, Lcom/android/server/power/stats/BatteryUsageStatsProvider;

    invoke-direct {v0, p1, p0}, Lcom/android/server/power/stats/BatteryUsageStatsProvider;-><init>(Landroid/content/Context;Landroid/os/BatteryStats;)V

    new-instance p0, Landroid/os/BatteryUsageStatsQuery$Builder;

    invoke-direct {p0}, Landroid/os/BatteryUsageStatsQuery$Builder;-><init>()V

    const-wide/16 v1, 0x0

    invoke-virtual {p0, v1, v2}, Landroid/os/BatteryUsageStatsQuery$Builder;->setMaxStatsAgeMs(J)Landroid/os/BatteryUsageStatsQuery$Builder;

    move-result-object p0

    if-eqz p2, :cond_0

    invoke-virtual {p0}, Landroid/os/BatteryUsageStatsQuery$Builder;->includePowerModels()Landroid/os/BatteryUsageStatsQuery$Builder;

    move-result-object p1

    invoke-virtual {p1}, Landroid/os/BatteryUsageStatsQuery$Builder;->includeProcessStateData()Landroid/os/BatteryUsageStatsQuery$Builder;

    move-result-object p1

    invoke-virtual {p1}, Landroid/os/BatteryUsageStatsQuery$Builder;->includeVirtualUids()Landroid/os/BatteryUsageStatsQuery$Builder;

    :cond_0
    invoke-virtual {p0}, Landroid/os/BatteryUsageStatsQuery$Builder;->build()Landroid/os/BatteryUsageStatsQuery;

    move-result-object p0

    invoke-virtual {v0, p0}, Lcom/android/server/power/stats/BatteryUsageStatsProvider;->getBatteryUsageStats(Landroid/os/BatteryUsageStatsQuery;)Landroid/os/BatteryUsageStats;

    move-result-object p0

    return-object p0
.end method

.method public getBatteryVoltageMvLocked()I
    .locals 0

    iget p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryVoltageMv:I

    return p0
.end method

.method public getBluetoothBatteryStats()Landroid/os/BluetoothBatteryStats;
    .locals 25

    move-object/from16 v0, p0

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v1}, Lcom/android/internal/os/Clock;->elapsedRealtime()J

    move-result-wide v1

    const-wide/16 v3, 0x3e8

    mul-long/2addr v1, v3

    new-instance v5, Ljava/util/ArrayList;

    invoke-direct {v5}, Ljava/util/ArrayList;-><init>()V

    iget-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v6}, Landroid/util/SparseArray;->size()I

    move-result v6

    add-int/lit8 v6, v6, -0x1

    :goto_0
    if-ltz v6, :cond_7

    iget-object v7, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v7, v6}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    invoke-virtual {v7}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->getBluetoothScanTimer()Lcom/android/server/power/stats/BatteryStatsImpl$Timer;

    move-result-object v8

    const/4 v9, 0x0

    const-wide/16 v10, 0x0

    if-eqz v8, :cond_0

    invoke-virtual {v8, v1, v2, v9}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTotalTimeLocked(JI)J

    move-result-wide v12

    div-long/2addr v12, v3

    move-wide/from16 v16, v12

    goto :goto_1

    :cond_0
    move-wide/from16 v16, v10

    :goto_1
    invoke-virtual {v7}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->getBluetoothUnoptimizedScanTimer()Lcom/android/server/power/stats/BatteryStatsImpl$Timer;

    move-result-object v8

    if-eqz v8, :cond_1

    invoke-virtual {v8, v1, v2, v9}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTotalTimeLocked(JI)J

    move-result-wide v12

    div-long/2addr v12, v3

    move-wide/from16 v18, v12

    goto :goto_2

    :cond_1
    move-wide/from16 v18, v10

    :goto_2
    invoke-virtual {v7}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->getBluetoothScanResultCounter()Lcom/android/server/power/stats/BatteryStatsImpl$Counter;

    move-result-object v8

    if-eqz v8, :cond_2

    invoke-virtual {v8, v9}, Lcom/android/server/power/stats/BatteryStatsImpl$Counter;->getCountLocked(I)I

    move-result v8

    move/from16 v20, v8

    goto :goto_3

    :cond_2
    move/from16 v20, v9

    :goto_3
    invoke-virtual {v7}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->getBluetoothControllerActivity()Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;

    move-result-object v8

    if-eqz v8, :cond_3

    invoke-virtual {v8}, Landroid/os/BatteryStats$ControllerActivityCounter;->getRxTimeCounter()Landroid/os/BatteryStats$LongCounter;

    move-result-object v12

    invoke-virtual {v12, v9}, Landroid/os/BatteryStats$LongCounter;->getCountLocked(I)J

    move-result-wide v12

    move-wide/from16 v21, v12

    goto :goto_4

    :cond_3
    move-wide/from16 v21, v10

    :goto_4
    if-eqz v8, :cond_4

    invoke-virtual {v8}, Landroid/os/BatteryStats$ControllerActivityCounter;->getTxTimeCounters()[Landroid/os/BatteryStats$LongCounter;

    move-result-object v8

    aget-object v8, v8, v9

    invoke-virtual {v8, v9}, Landroid/os/BatteryStats$LongCounter;->getCountLocked(I)J

    move-result-wide v8

    move-wide/from16 v23, v8

    goto :goto_5

    :cond_4
    move-wide/from16 v23, v10

    :goto_5
    cmp-long v8, v16, v10

    if-nez v8, :cond_5

    cmp-long v8, v18, v10

    if-nez v8, :cond_5

    if-nez v20, :cond_5

    cmp-long v8, v21, v10

    if-nez v8, :cond_5

    cmp-long v8, v23, v10

    if-eqz v8, :cond_6

    :cond_5
    new-instance v8, Landroid/os/BluetoothBatteryStats$UidStats;

    invoke-virtual {v7}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->getUid()I

    move-result v15

    move-object v14, v8

    invoke-direct/range {v14 .. v24}, Landroid/os/BluetoothBatteryStats$UidStats;-><init>(IJJIJJ)V

    invoke-virtual {v5, v8}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    :cond_6
    add-int/lit8 v6, v6, -0x1

    goto/16 :goto_0

    :cond_7
    new-instance v0, Landroid/os/BluetoothBatteryStats;

    invoke-direct {v0, v5}, Landroid/os/BluetoothBatteryStats;-><init>(Ljava/util/List;)V

    return-object v0
.end method

.method public getBluetoothControllerActivity()Landroid/os/BatteryStats$ControllerActivityCounter;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBluetoothActivity:Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;

    return-object p0
.end method

.method public getBluetoothEnergyConsumptionUC()J
    .locals 2

    const/4 v0, 0x5

    invoke-virtual {p0, v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getPowerBucketConsumptionUC(I)J

    move-result-wide v0

    return-wide v0
.end method

.method public getBluetoothScanTime(JI)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBluetoothScanTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTotalTimeLocked(JI)J

    move-result-wide p0

    return-wide p0
.end method

.method public final getByteFromFile(Ljava/lang/String;)B
    .locals 2

    const/4 p0, 0x0

    :try_start_0
    new-instance v0, Ljava/io/BufferedReader;

    new-instance v1, Ljava/io/FileReader;

    invoke-direct {v1, p1}, Ljava/io/FileReader;-><init>(Ljava/lang/String;)V

    const/16 p1, 0x8

    invoke-direct {v0, v1, p1}, Ljava/io/BufferedReader;-><init>(Ljava/io/Reader;I)V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_3
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-virtual {v0}, Ljava/io/BufferedReader;->readLine()Ljava/lang/String;

    move-result-object p0

    if-eqz p0, :cond_0

    invoke-virtual {p0}, Ljava/lang/String;->trim()Ljava/lang/String;

    move-result-object p0

    :cond_0
    invoke-virtual {v0}, Ljava/io/BufferedReader;->close()V

    invoke-static {p0}, Ljava/lang/Byte;->valueOf(Ljava/lang/String;)Ljava/lang/Byte;

    move-result-object p0

    invoke-virtual {p0}, Ljava/lang/Byte;->byteValue()B

    move-result p0
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    invoke-virtual {v0}, Ljava/io/BufferedReader;->close()V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_0

    goto :goto_4

    :catch_0
    move-exception p1

    invoke-virtual {p1}, Ljava/io/IOException;->printStackTrace()V

    goto :goto_4

    :catchall_0
    move-exception p0

    goto :goto_0

    :catch_1
    move-object p0, v0

    goto :goto_2

    :catchall_1
    move-exception p1

    move-object v0, p0

    move-object p0, p1

    :goto_0
    if-eqz v0, :cond_1

    :try_start_3
    invoke-virtual {v0}, Ljava/io/BufferedReader;->close()V
    :try_end_3
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_2

    goto :goto_1

    :catch_2
    move-exception p1

    invoke-virtual {p1}, Ljava/io/IOException;->printStackTrace()V

    :cond_1
    :goto_1
    throw p0

    :catch_3
    :goto_2
    if-eqz p0, :cond_2

    :try_start_4
    invoke-virtual {p0}, Ljava/io/BufferedReader;->close()V
    :try_end_4
    .catch Ljava/io/IOException; {:try_start_4 .. :try_end_4} :catch_4

    goto :goto_3

    :catch_4
    move-exception p0

    invoke-virtual {p0}, Ljava/io/IOException;->printStackTrace()V

    :cond_2
    :goto_3
    const/4 p0, -0x1

    :goto_4
    return p0
.end method

.method public getCameraEnergyConsumptionUC()J
    .locals 2

    const/16 v0, 0x8

    invoke-virtual {p0, v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getPowerBucketConsumptionUC(I)J

    move-result-wide v0

    return-wide v0
.end method

.method public getCameraOnTime(JI)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCameraOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTotalTimeLocked(JI)J

    move-result-wide p0

    return-wide p0
.end method

.method public getCellularBatteryStats()Landroid/os/connectivity/CellularBatteryStats;
    .locals 33

    move-object/from16 v0, p0

    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v1

    const-wide/16 v3, 0x3e8

    mul-long/2addr v1, v3

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getModemControllerActivity()Landroid/os/BatteryStats$ControllerActivityCounter;

    move-result-object v5

    invoke-virtual {v5}, Landroid/os/BatteryStats$ControllerActivityCounter;->getSleepTimeCounter()Landroid/os/BatteryStats$LongCounter;

    move-result-object v6

    const/4 v7, 0x0

    invoke-virtual {v6, v7}, Landroid/os/BatteryStats$LongCounter;->getCountLocked(I)J

    move-result-wide v21

    invoke-virtual {v5}, Landroid/os/BatteryStats$ControllerActivityCounter;->getIdleTimeCounter()Landroid/os/BatteryStats$LongCounter;

    move-result-object v6

    invoke-virtual {v6, v7}, Landroid/os/BatteryStats$LongCounter;->getCountLocked(I)J

    move-result-wide v23

    invoke-virtual {v5}, Landroid/os/BatteryStats$ControllerActivityCounter;->getRxTimeCounter()Landroid/os/BatteryStats$LongCounter;

    move-result-object v6

    invoke-virtual {v6, v7}, Landroid/os/BatteryStats$LongCounter;->getCountLocked(I)J

    move-result-wide v25

    invoke-virtual {v5}, Landroid/os/BatteryStats$ControllerActivityCounter;->getPowerCounter()Landroid/os/BatteryStats$LongCounter;

    move-result-object v6

    invoke-virtual {v6, v7}, Landroid/os/BatteryStats$LongCounter;->getCountLocked(I)J

    move-result-wide v27

    invoke-virtual {v5}, Landroid/os/BatteryStats$ControllerActivityCounter;->getMonitoredRailChargeConsumedMaMs()Landroid/os/BatteryStats$LongCounter;

    move-result-object v6

    invoke-virtual {v6, v7}, Landroid/os/BatteryStats$LongCounter;->getCountLocked(I)J

    move-result-wide v31

    sget v6, Landroid/os/BatteryStats;->NUM_DATA_CONNECTION_TYPES:I

    new-array v15, v6, [J

    move v8, v7

    :goto_0
    if-ge v8, v6, :cond_0

    invoke-virtual {v0, v8, v1, v2, v7}, Lcom/android/server/power/stats/BatteryStatsImpl;->getPhoneDataConnectionTime(IJI)J

    move-result-wide v9

    div-long/2addr v9, v3

    aput-wide v9, v15, v8

    add-int/lit8 v8, v8, 0x1

    goto :goto_0

    :cond_0
    invoke-static {}, Landroid/telephony/CellSignalStrength;->getNumSignalStrengthLevels()I

    move-result v6

    new-array v13, v6, [J

    move v8, v7

    :goto_1
    if-ge v8, v6, :cond_1

    invoke-virtual {v0, v8, v1, v2, v7}, Lcom/android/server/power/stats/BatteryStatsImpl;->getPhoneSignalStrengthTime(IJI)J

    move-result-wide v9

    div-long/2addr v9, v3

    aput-wide v9, v13, v8

    add-int/lit8 v8, v8, 0x1

    goto :goto_1

    :cond_1
    invoke-static {}, Landroid/telephony/ModemActivityInfo;->getNumTxPowerLevels()I

    move-result v6

    invoke-virtual {v5}, Landroid/os/BatteryStats$ControllerActivityCounter;->getTxTimeCounters()[Landroid/os/BatteryStats$LongCounter;

    move-result-object v8

    array-length v8, v8

    invoke-static {v6, v8}, Ljava/lang/Math;->min(II)I

    move-result v6

    new-array v14, v6, [J

    move v8, v7

    :goto_2
    if-ge v8, v6, :cond_2

    invoke-virtual {v5}, Landroid/os/BatteryStats$ControllerActivityCounter;->getTxTimeCounters()[Landroid/os/BatteryStats$LongCounter;

    move-result-object v9

    aget-object v9, v9, v8

    invoke-virtual {v9, v7}, Landroid/os/BatteryStats$LongCounter;->getCountLocked(I)J

    move-result-wide v9

    aput-wide v9, v14, v8

    add-int/lit8 v8, v8, 0x1

    goto :goto_2

    :cond_2
    new-instance v5, Landroid/os/connectivity/CellularBatteryStats;

    move-object v8, v5

    invoke-virtual {v0, v1, v2, v7}, Lcom/android/server/power/stats/BatteryStatsImpl;->computeBatteryRealtime(JI)J

    move-result-wide v9

    div-long/2addr v9, v3

    invoke-virtual {v0, v1, v2, v7}, Lcom/android/server/power/stats/BatteryStatsImpl;->getMobileRadioActiveTime(JI)J

    move-result-wide v1

    div-long v11, v1, v3

    const/4 v1, 0x1

    invoke-virtual {v0, v1, v7}, Lcom/android/server/power/stats/BatteryStatsImpl;->getNetworkActivityPackets(II)J

    move-result-wide v2

    move-object v4, v13

    move-object v6, v14

    move-wide v13, v2

    invoke-virtual {v0, v1, v7}, Lcom/android/server/power/stats/BatteryStatsImpl;->getNetworkActivityBytes(II)J

    move-result-wide v1

    move-object v3, v15

    move-wide v15, v1

    invoke-virtual {v0, v7, v7}, Lcom/android/server/power/stats/BatteryStatsImpl;->getNetworkActivityPackets(II)J

    move-result-wide v17

    invoke-virtual {v0, v7, v7}, Lcom/android/server/power/stats/BatteryStatsImpl;->getNetworkActivityBytes(II)J

    move-result-wide v19

    invoke-static/range {v27 .. v28}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v27

    move-object/from16 v28, v3

    move-object/from16 v29, v4

    move-object/from16 v30, v6

    invoke-direct/range {v8 .. v32}, Landroid/os/connectivity/CellularBatteryStats;-><init>(JJJJJJJJJLjava/lang/Long;[J[J[JJ)V

    return-object v5
.end method

.method public getChargeLevelStepTracker()Landroid/os/BatteryStats$LevelStepTracker;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    return-object p0
.end method

.method public getCpuEnergyConsumptionUC()J
    .locals 2

    const/4 v0, 0x3

    invoke-virtual {p0, v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getPowerBucketConsumptionUC(I)J

    move-result-wide v0

    return-wide v0
.end method

.method public getCpuFreqCount()I
    .locals 0

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getCpuFreqs()[J

    move-result-object p0

    if-eqz p0, :cond_0

    array-length p0, p0

    goto :goto_0

    :cond_0
    const/4 p0, 0x0

    :goto_0
    return p0
.end method

.method public getCpuFreqs()[J
    .locals 2

    iget-boolean v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuFreqsInitialized:Z

    if-nez v0, :cond_0

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuUidFreqTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-virtual {v0, v1}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;->readFreqs(Lcom/android/internal/os/PowerProfile;)[J

    move-result-object v0

    iput-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuFreqs:[J

    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuFreqsInitialized:Z

    :cond_0
    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuFreqs:[J

    return-object p0
.end method

.method public final getCpuTimeInFreqContainer()Lcom/android/internal/os/LongArrayMultiStateCounter$LongArrayContainer;
    .locals 2

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mTmpCpuTimeInFreq:Lcom/android/internal/os/LongArrayMultiStateCounter$LongArrayContainer;

    if-nez v0, :cond_0

    new-instance v0, Lcom/android/internal/os/LongArrayMultiStateCounter$LongArrayContainer;

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getCpuFreqCount()I

    move-result v1

    invoke-direct {v0, v1}, Lcom/android/internal/os/LongArrayMultiStateCounter$LongArrayContainer;-><init>(I)V

    iput-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mTmpCpuTimeInFreq:Lcom/android/internal/os/LongArrayMultiStateCounter$LongArrayContainer;

    :cond_0
    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mTmpCpuTimeInFreq:Lcom/android/internal/os/LongArrayMultiStateCounter$LongArrayContainer;

    return-object p0
.end method

.method public getCurrentDailyStartTime()J
    .locals 2

    iget-wide v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDailyStartTimeMs:J

    return-wide v0
.end method

.method public final getCurrentDisplayId()I
    .locals 2

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getDisplayCount()I

    move-result v0

    const/4 v1, 0x1

    if-gt v0, v1, :cond_0

    const/4 p0, 0x0

    return p0

    :cond_0
    iget-boolean p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsSubScreen:Z

    return p0
.end method

.method public getCustomEnergyConsumerBatteryConsumptionUC()[J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mGlobalEnergyConsumerStats:Lcom/android/internal/power/EnergyConsumerStats;

    if-nez p0, :cond_0

    const/4 p0, 0x0

    return-object p0

    :cond_0
    invoke-virtual {p0}, Lcom/android/internal/power/EnergyConsumerStats;->getAccumulatedCustomBucketCharges()[J

    move-result-object p0

    return-object p0
.end method

.method public getCustomEnergyConsumerNames()[Ljava/lang/String;
    .locals 3

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mEnergyConsumerStatsConfig:Lcom/android/internal/power/EnergyConsumerStats$Config;

    const/4 v0, 0x0

    if-nez p0, :cond_0

    new-array p0, v0, [Ljava/lang/String;

    return-object p0

    :cond_0
    invoke-virtual {p0}, Lcom/android/internal/power/EnergyConsumerStats$Config;->getCustomBucketNames()[Ljava/lang/String;

    move-result-object p0

    :goto_0
    array-length v1, p0

    if-ge v0, v1, :cond_2

    aget-object v1, p0, v0

    invoke-static {v1}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v1

    if-eqz v1, :cond_1

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "CUSTOM_1000"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    aput-object v1, p0, v0

    :cond_1
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    :cond_2
    return-object p0
.end method

.method public getDailyChargeLevelStepTracker()Landroid/os/BatteryStats$LevelStepTracker;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    return-object p0
.end method

.method public getDailyDischargeLevelStepTracker()Landroid/os/BatteryStats$LevelStepTracker;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    return-object p0
.end method

.method public getDailyItemLocked(I)Landroid/os/BatteryStats$DailyItem;
    .locals 1

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    add-int/lit8 v0, v0, -0x1

    sub-int/2addr v0, p1

    if-ltz v0, :cond_0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    invoke-virtual {p0, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object p0

    check-cast p0, Landroid/os/BatteryStats$DailyItem;

    goto :goto_0

    :cond_0
    const/4 p0, 0x0

    :goto_0
    return-object p0
.end method

.method public getDailyPackageChanges()Ljava/util/ArrayList;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    return-object p0
.end method

.method public final getDeltaAudioEnergyInfo(Landroid/os/SpeakerOutEnergyInfo;)Landroid/os/SpeakerOutEnergyInfo;
    .locals 12

    if-nez p1, :cond_0

    const/4 p0, 0x0

    return-object p0

    :cond_0
    const/16 v0, 0x10

    new-array v4, v0, [J

    new-array v5, v0, [J

    const/4 v1, 0x0

    move v2, v1

    :goto_0
    if-ge v2, v0, :cond_1

    invoke-virtual {p1}, Landroid/os/SpeakerOutEnergyInfo;->getSpeakerMediaTimeMillis()[J

    move-result-object v3

    aget-wide v6, v3, v2

    iget-object v3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastAudioOutEnergyInfo:Landroid/os/SpeakerOutEnergyInfo;

    invoke-virtual {v3}, Landroid/os/SpeakerOutEnergyInfo;->getSpeakerMediaTimeMillis()[J

    move-result-object v3

    aget-wide v8, v3, v2

    sub-long/2addr v6, v8

    aput-wide v6, v4, v2

    invoke-virtual {p1}, Landroid/os/SpeakerOutEnergyInfo;->getSpeakerCallTimeMillis()[J

    move-result-object v3

    aget-wide v6, v3, v2

    iget-object v3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastAudioOutEnergyInfo:Landroid/os/SpeakerOutEnergyInfo;

    invoke-virtual {v3}, Landroid/os/SpeakerOutEnergyInfo;->getSpeakerCallTimeMillis()[J

    move-result-object v3

    aget-wide v8, v3, v2

    sub-long/2addr v6, v8

    aput-wide v6, v5, v2

    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    :cond_1
    move v2, v1

    :goto_1
    if-ge v2, v0, :cond_4

    aget-wide v6, v4, v2

    const-wide/16 v8, 0x0

    cmp-long v3, v6, v8

    if-ltz v3, :cond_3

    aget-wide v6, v5, v2

    cmp-long v3, v6, v8

    if-gez v3, :cond_2

    goto :goto_2

    :cond_2
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    :cond_3
    :goto_2
    const/4 v1, 0x1

    :cond_4
    if-eqz v1, :cond_5

    new-instance v0, Landroid/os/SpeakerOutEnergyInfo;

    invoke-virtual {p1}, Landroid/os/SpeakerOutEnergyInfo;->getTimestamp()J

    move-result-wide v7

    invoke-virtual {p1}, Landroid/os/SpeakerOutEnergyInfo;->getSpeakerMediaTimeMillis()[J

    move-result-object v9

    invoke-virtual {p1}, Landroid/os/SpeakerOutEnergyInfo;->getSpeakerCallTimeMillis()[J

    move-result-object v10

    invoke-virtual {p1}, Landroid/os/SpeakerOutEnergyInfo;->getEnergyUsed()I

    move-result v11

    move-object v6, v0

    invoke-direct/range {v6 .. v11}, Landroid/os/SpeakerOutEnergyInfo;-><init>(J[J[JI)V

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Audio energy data was reset, new energy data is "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    const-string v2, "BatteryStatsImpl"

    invoke-static {v2, v1}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_3

    :cond_5
    new-instance v0, Landroid/os/SpeakerOutEnergyInfo;

    invoke-virtual {p1}, Landroid/os/SpeakerOutEnergyInfo;->getTimestamp()J

    move-result-wide v2

    invoke-virtual {p1}, Landroid/os/SpeakerOutEnergyInfo;->getEnergyUsed()I

    move-result v1

    iget-object v6, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastAudioOutEnergyInfo:Landroid/os/SpeakerOutEnergyInfo;

    invoke-virtual {v6}, Landroid/os/SpeakerOutEnergyInfo;->getEnergyUsed()I

    move-result v6

    sub-int v6, v1, v6

    move-object v1, v0

    invoke-direct/range {v1 .. v6}, Landroid/os/SpeakerOutEnergyInfo;-><init>(J[J[JI)V

    :goto_3
    iput-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastAudioOutEnergyInfo:Landroid/os/SpeakerOutEnergyInfo;

    return-object v0
.end method

.method public getDeviceIdleModeCount(II)I
    .locals 1

    const/4 v0, 0x1

    if-eq p1, v0, :cond_1

    const/4 v0, 0x2

    if-eq p1, v0, :cond_0

    const/4 p0, 0x0

    return p0

    :cond_0
    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeviceIdleModeFullTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p0, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getCountLocked(I)I

    move-result p0

    return p0

    :cond_1
    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeviceIdleModeLightTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p0, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getCountLocked(I)I

    move-result p0

    return p0
.end method

.method public getDeviceIdleModeTime(IJI)J
    .locals 1

    const/4 v0, 0x1

    if-eq p1, v0, :cond_1

    const/4 v0, 0x2

    if-eq p1, v0, :cond_0

    const-wide/16 p0, 0x0

    return-wide p0

    :cond_0
    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeviceIdleModeFullTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p0, p2, p3, p4}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTotalTimeLocked(JI)J

    move-result-wide p0

    return-wide p0

    :cond_1
    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeviceIdleModeLightTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p0, p2, p3, p4}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTotalTimeLocked(JI)J

    move-result-wide p0

    return-wide p0
.end method

.method public getDeviceIdlingCount(II)I
    .locals 1

    const/4 v0, 0x1

    if-eq p1, v0, :cond_1

    const/4 v0, 0x2

    if-eq p1, v0, :cond_0

    const/4 p0, 0x0

    return p0

    :cond_0
    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeviceIdlingTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p0, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getCountLocked(I)I

    move-result p0

    return p0

    :cond_1
    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeviceLightIdlingTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p0, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getCountLocked(I)I

    move-result p0

    return p0
.end method

.method public getDeviceIdlingTime(IJI)J
    .locals 1

    const/4 v0, 0x1

    if-eq p1, v0, :cond_1

    const/4 v0, 0x2

    if-eq p1, v0, :cond_0

    const-wide/16 p0, 0x0

    return-wide p0

    :cond_0
    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeviceIdlingTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p0, p2, p3, p4}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTotalTimeLocked(JI)J

    move-result-wide p0

    return-wide p0

    :cond_1
    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeviceLightIdlingTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p0, p2, p3, p4}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTotalTimeLocked(JI)J

    move-result-wide p0

    return-wide p0
.end method

.method public getDischargeAmount(I)I
    .locals 0

    if-nez p1, :cond_0

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getHighDischargeAmountSinceCharge()I

    move-result p0

    goto :goto_0

    :cond_0
    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getDischargeStartLevel()I

    move-result p1

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getDischargeCurrentLevel()I

    move-result p0

    sub-int p0, p1, p0

    :goto_0
    if-gez p0, :cond_1

    const/4 p0, 0x0

    :cond_1
    return p0
.end method

.method public getDischargeAmountScreenDoze()I
    .locals 3

    monitor-enter p0

    :try_start_0
    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenDoze:I

    iget-boolean v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBattery:Z

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenState:I

    invoke-static {v1}, Landroid/view/Display;->isDozeState(I)Z

    move-result v1

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeCurrentLevel:I

    iget v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    if-ge v1, v2, :cond_0

    sub-int/2addr v2, v1

    add-int/2addr v0, v2

    :cond_0
    monitor-exit p0

    return v0

    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public getDischargeAmountScreenDozeSinceCharge()I
    .locals 3

    monitor-enter p0

    :try_start_0
    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenDozeSinceCharge:I

    iget-boolean v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBattery:Z

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenState:I

    invoke-static {v1}, Landroid/view/Display;->isDozeState(I)Z

    move-result v1

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeCurrentLevel:I

    iget v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    if-ge v1, v2, :cond_0

    sub-int/2addr v2, v1

    add-int/2addr v0, v2

    :cond_0
    monitor-exit p0

    return v0

    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public getDischargeAmountScreenOff()I
    .locals 3

    monitor-enter p0

    :try_start_0
    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenOff:I

    iget-boolean v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBattery:Z

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenState:I

    invoke-static {v1}, Landroid/view/Display;->isOffState(I)Z

    move-result v1

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeCurrentLevel:I

    iget v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    if-ge v1, v2, :cond_0

    sub-int/2addr v2, v1

    add-int/2addr v0, v2

    :cond_0
    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getDischargeAmountScreenDoze()I

    move-result v1

    add-int/2addr v0, v1

    monitor-exit p0

    return v0

    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public getDischargeAmountScreenOffSinceCharge()I
    .locals 3

    monitor-enter p0

    :try_start_0
    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenOffSinceCharge:I

    iget-boolean v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBattery:Z

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenState:I

    invoke-static {v1}, Landroid/view/Display;->isOffState(I)Z

    move-result v1

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeCurrentLevel:I

    iget v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    if-ge v1, v2, :cond_0

    sub-int/2addr v2, v1

    add-int/2addr v0, v2

    :cond_0
    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getDischargeAmountScreenDozeSinceCharge()I

    move-result v1

    add-int/2addr v0, v1

    monitor-exit p0

    return v0

    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public getDischargeAmountScreenOffSinceChargeCoulombCounter()I
    .locals 3

    monitor-enter p0

    :try_start_0
    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenOffSinceChargeCoulombCounter:I

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getBatteryCCInfo()I

    move-result v1

    iget-boolean v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBattery:Z

    if-eqz v2, :cond_0

    iget v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenState:I

    invoke-static {v2}, Landroid/view/Display;->isOffState(I)Z

    move-result v2

    if-eqz v2, :cond_0

    iget v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOffUnplugLevelCoulombCounter:I

    if-ge v1, v2, :cond_0

    sub-int/2addr v2, v1

    add-int/2addr v0, v2

    :cond_0
    monitor-exit p0

    return v0

    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public getDischargeAmountScreenOffSinceChargePermil()I
    .locals 3

    monitor-enter p0

    :try_start_0
    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenOffSinceChargePermil:I

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getBatteryPermil()I

    move-result v1

    iget-boolean v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBattery:Z

    if-eqz v2, :cond_0

    iget v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenState:I

    invoke-static {v2}, Landroid/view/Display;->isOffState(I)Z

    move-result v2

    if-eqz v2, :cond_0

    iget v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOffUnplugLevelPermil:I

    if-ge v1, v2, :cond_0

    sub-int/2addr v2, v1

    add-int/2addr v0, v2

    :cond_0
    monitor-exit p0

    return v0

    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public getDischargeAmountScreenOn()I
    .locals 3

    monitor-enter p0

    :try_start_0
    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenOn:I

    iget-boolean v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBattery:Z

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenState:I

    invoke-static {v1}, Landroid/view/Display;->isOnState(I)Z

    move-result v1

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeCurrentLevel:I

    iget v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    if-ge v1, v2, :cond_0

    sub-int/2addr v2, v1

    add-int/2addr v0, v2

    :cond_0
    monitor-exit p0

    return v0

    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public getDischargeAmountScreenOnSinceCharge()I
    .locals 3

    monitor-enter p0

    :try_start_0
    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenOnSinceCharge:I

    iget-boolean v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBattery:Z

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenState:I

    invoke-static {v1}, Landroid/view/Display;->isOnState(I)Z

    move-result v1

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeCurrentLevel:I

    iget v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    if-ge v1, v2, :cond_0

    sub-int/2addr v2, v1

    add-int/2addr v0, v2

    :cond_0
    monitor-exit p0

    return v0

    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public getDischargeAmountScreenOnSinceChargeCoulombCounter()I
    .locals 3

    monitor-enter p0

    :try_start_0
    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenOnSinceChargeCoulombCounter:I

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getBatteryCCInfo()I

    move-result v1

    iget-boolean v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBattery:Z

    if-eqz v2, :cond_0

    iget v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenState:I

    invoke-static {v2}, Landroid/view/Display;->isOnState(I)Z

    move-result v2

    if-eqz v2, :cond_0

    iget v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOnUnplugLevelCoulombCounter:I

    if-ge v1, v2, :cond_0

    sub-int/2addr v2, v1

    add-int/2addr v0, v2

    :cond_0
    monitor-exit p0

    return v0

    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public getDischargeAmountScreenOnSinceChargePermil()I
    .locals 3

    monitor-enter p0

    :try_start_0
    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenOnSinceChargePermil:I

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getBatteryPermil()I

    move-result v1

    iget-boolean v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBattery:Z

    if-eqz v2, :cond_0

    iget v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenState:I

    invoke-static {v2}, Landroid/view/Display;->isOnState(I)Z

    move-result v2

    if-eqz v2, :cond_0

    iget v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOnUnplugLevelPermil:I

    if-ge v1, v2, :cond_0

    sub-int/2addr v2, v1

    add-int/2addr v0, v2

    :cond_0
    monitor-exit p0

    return v0

    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public getDischargeAmountSubScreenOffSinceChargePermil()I
    .locals 3

    monitor-enter p0

    :try_start_0
    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountSubScreenOffSinceChargePermil:I

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getBatteryPermil()I

    move-result v1

    iget-boolean v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBattery:Z

    if-eqz v2, :cond_0

    iget-boolean v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsSubScreen:Z

    if-eqz v2, :cond_0

    iget v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenState:I

    invoke-static {v2}, Landroid/view/Display;->isOffState(I)Z

    move-result v2

    if-eqz v2, :cond_0

    iget v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeSubScreenOffUnplugLevelPermil:I

    if-ge v1, v2, :cond_0

    sub-int/2addr v2, v1

    add-int/2addr v0, v2

    :cond_0
    monitor-exit p0

    return v0

    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public getDischargeAmountSubScreenOnSinceChargePermil()I
    .locals 3

    monitor-enter p0

    :try_start_0
    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountSubScreenOnSinceChargePermil:I

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getBatteryPermil()I

    move-result v1

    iget-boolean v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBattery:Z

    if-eqz v2, :cond_0

    iget-boolean v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsSubScreen:Z

    if-eqz v2, :cond_0

    iget v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenState:I

    invoke-static {v2}, Landroid/view/Display;->isOnState(I)Z

    move-result v2

    if-eqz v2, :cond_0

    iget v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeSubScreenOnUnplugLevelPermil:I

    if-ge v1, v2, :cond_0

    sub-int/2addr v2, v1

    add-int/2addr v0, v2

    :cond_0
    monitor-exit p0

    return v0

    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public getDischargeCurrentLevel()I
    .locals 1

    monitor-enter p0

    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getDischargeCurrentLevelLocked()I

    move-result v0

    monitor-exit p0

    return v0

    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public getDischargeCurrentLevelLocked()I
    .locals 0

    iget p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeCurrentLevel:I

    return p0
.end method

.method public getDischargeLevelStepTracker()Landroid/os/BatteryStats$LevelStepTracker;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    return-object p0
.end method

.method public getDischargeStartLevel()I
    .locals 1

    monitor-enter p0

    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getDischargeStartLevelLocked()I

    move-result v0

    monitor-exit p0

    return v0

    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public getDischargeStartLevelLocked()I
    .locals 0

    iget p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeUnplugLevel:I

    return p0
.end method

.method public getDisplayCount()I
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPerDisplayBatteryStats:[Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;

    array-length p0, p0

    return p0
.end method

.method public getDisplayHighRefreshRateCount(II)I
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHighRefreshRateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object p0, p0, p1

    invoke-virtual {p0, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getCountLocked(I)I

    move-result p0

    return p0
.end method

.method public getDisplayHighRefreshRateTime(IJI)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHighRefreshRateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object p0, p0, p1

    invoke-virtual {p0, p2, p3, p4}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTotalTimeLocked(JI)J

    move-result-wide p0

    return-wide p0
.end method

.method public bridge synthetic getDisplayHighRefreshRateTimer(I)Landroid/os/BatteryStats$Timer;
    .locals 0

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->getDisplayHighRefreshRateTimer(I)Lcom/android/server/power/stats/BatteryStatsImpl$Timer;

    move-result-object p0

    return-object p0
.end method

.method public getDisplayHighRefreshRateTimer(I)Lcom/android/server/power/stats/BatteryStatsImpl$Timer;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHighRefreshRateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object p0, p0, p1

    return-object p0
.end method

.method public getDisplayPowerDrainCount(I)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDisplayPowerDrainCounter:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    move-result-wide p0

    return-wide p0
.end method

.method public getDisplayScreenBrightnessTime(IIJ)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPerDisplayBatteryStats:[Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;

    aget-object p0, p0, p1

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;->screenBrightnessTimers:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object p0, p0, p2

    const/4 p1, 0x0

    invoke-virtual {p0, p3, p4, p1}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTotalTimeLocked(JI)J

    move-result-wide p0

    return-wide p0
.end method

.method public getDisplayScreenDozeTime(IJ)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPerDisplayBatteryStats:[Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;

    aget-object p0, p0, p1

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;->screenDozeTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    const/4 p1, 0x0

    invoke-virtual {p0, p2, p3, p1}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTotalTimeLocked(JI)J

    move-result-wide p0

    return-wide p0
.end method

.method public getDisplayScreenOnTime(IJ)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPerDisplayBatteryStats:[Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;

    aget-object p0, p0, p1

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;->screenOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    const/4 p1, 0x0

    invoke-virtual {p0, p2, p3, p1}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTotalTimeLocked(JI)J

    move-result-wide p0

    return-wide p0
.end method

.method public getEndPlatformVersion()Ljava/lang/String;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mEndPlatformVersion:Ljava/lang/String;

    return-object p0
.end method

.method public getEstimatedBatteryCapacity()I
    .locals 0

    iget p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mEstimatedBatteryCapacityMah:I

    return p0
.end method

.method public getExternalStatsCollectionRateLimitMs()J
    .locals 2

    monitor-enter p0

    :try_start_0
    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mConstants:Lcom/android/server/power/stats/BatteryStatsImpl$Constants;

    iget-wide v0, v0, Lcom/android/server/power/stats/BatteryStatsImpl$Constants;->EXTERNAL_STATS_COLLECTION_RATE_LIMIT_MS:J

    monitor-exit p0

    return-wide v0

    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public getFlashlightOnCount(I)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getCountLocked(I)I

    move-result p0

    int-to-long p0, p0

    return-wide p0
.end method

.method public getFlashlightOnTime(JI)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTotalTimeLocked(JI)J

    move-result-wide p0

    return-wide p0
.end method

.method public final getForegroundActivityTimeMsSinceMarkLocked(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;J)J
    .locals 0

    iget-object p0, p1, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mForegroundActivityTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    if-nez p0, :cond_0

    const-wide/16 p0, 0x0

    return-wide p0

    :cond_0
    invoke-virtual {p0, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTimeSinceMarkLocked(J)J

    move-result-wide p0

    const-wide/16 p2, 0x3e8

    div-long/2addr p0, p2

    return-wide p0
.end method

.method public getGlobalWifiRunningTime(JI)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mGlobalWifiRunningTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTotalTimeLocked(JI)J

    move-result-wide p0

    return-wide p0
.end method

.method public getGnssEnergyConsumptionUC()J
    .locals 2

    const/4 v0, 0x6

    invoke-virtual {p0, v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getPowerBucketConsumptionUC(I)J

    move-result-wide v0

    return-wide v0
.end method

.method public getGpsBatteryDrainMaMs()J
    .locals 12

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    const-string v1, "gps.voltage"

    invoke-virtual {v0, v1}, Lcom/android/internal/os/PowerProfile;->getAveragePower(Ljava/lang/String;)D

    move-result-wide v0

    const-wide v2, 0x408f400000000000L    # 1000.0

    div-double/2addr v0, v2

    const-wide/16 v2, 0x0

    cmpl-double v0, v0, v2

    if-nez v0, :cond_0

    const-wide/16 v0, 0x0

    return-wide v0

    :cond_0
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v0

    const-wide/16 v4, 0x3e8

    mul-long/2addr v0, v4

    const/4 v6, 0x0

    move v7, v6

    :goto_0
    iget-object v8, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    array-length v8, v8

    if-ge v7, v8, :cond_1

    iget-object v8, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    const-string v9, "gps.signalqualitybased"

    invoke-virtual {v8, v9, v7}, Lcom/android/internal/os/PowerProfile;->getAveragePower(Ljava/lang/String;I)D

    move-result-wide v8

    invoke-virtual {p0, v7, v0, v1, v6}, Lcom/android/server/power/stats/BatteryStatsImpl;->getGpsSignalQualityTime(IJI)J

    move-result-wide v10

    div-long/2addr v10, v4

    long-to-double v10, v10

    mul-double/2addr v8, v10

    add-double/2addr v2, v8

    add-int/lit8 v7, v7, 0x1

    goto :goto_0

    :cond_1
    double-to-long v0, v2

    return-wide v0
.end method

.method public getGpsBatteryStats()Landroid/os/connectivity/GpsBatteryStats;
    .locals 11

    new-instance v0, Landroid/os/connectivity/GpsBatteryStats;

    invoke-direct {v0}, Landroid/os/connectivity/GpsBatteryStats;-><init>()V

    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v1

    const-wide/16 v3, 0x3e8

    mul-long/2addr v1, v3

    const/4 v5, 0x0

    invoke-virtual {p0, v1, v2, v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->computeBatteryRealtime(JI)J

    move-result-wide v6

    div-long/2addr v6, v3

    invoke-virtual {v0, v6, v7}, Landroid/os/connectivity/GpsBatteryStats;->setLoggingDurationMs(J)V

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getGpsBatteryDrainMaMs()J

    move-result-wide v6

    invoke-virtual {v0, v6, v7}, Landroid/os/connectivity/GpsBatteryStats;->setEnergyConsumedMaMs(J)V

    iget-object v6, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    array-length v6, v6

    new-array v7, v6, [J

    move v8, v5

    :goto_0
    if-ge v8, v6, :cond_0

    invoke-virtual {p0, v8, v1, v2, v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getGpsSignalQualityTime(IJI)J

    move-result-wide v9

    div-long/2addr v9, v3

    aput-wide v9, v7, v8

    add-int/lit8 v8, v8, 0x1

    goto :goto_0

    :cond_0
    invoke-virtual {v0, v7}, Landroid/os/connectivity/GpsBatteryStats;->setTimeInGpsSignalQualityLevel([J)V

    return-object v0
.end method

.method public getGpsSignalQualityTime(IJI)J
    .locals 1

    if-ltz p1, :cond_1

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    array-length v0, p0

    if-lt p1, v0, :cond_0

    goto :goto_0

    :cond_0
    aget-object p0, p0, p1

    invoke-virtual {p0, p2, p3, p4}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTotalTimeLocked(JI)J

    move-result-wide p0

    return-wide p0

    :cond_1
    :goto_0
    const-wide/16 p0, 0x0

    return-wide p0
.end method

.method public getHighDischargeAmountSinceCharge()I
    .locals 3

    monitor-enter p0

    :try_start_0
    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHighDischargeAmountSinceCharge:I

    iget-boolean v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBattery:Z

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeCurrentLevel:I

    iget v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeUnplugLevel:I

    if-ge v1, v2, :cond_0

    sub-int/2addr v2, v1

    add-int/2addr v0, v2

    :cond_0
    monitor-exit p0

    return v0

    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public getHistoryStringPoolBytes()I
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsHistory;->getHistoryStringPoolBytes()I

    move-result p0

    return p0
.end method

.method public getHistoryStringPoolSize()I
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsHistory;->getHistoryStringPoolSize()I

    move-result p0

    return p0
.end method

.method public getHistoryTagPoolString(I)Ljava/lang/String;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsHistory;->getHistoryTagPoolString(I)Ljava/lang/String;

    move-result-object p0

    return-object p0
.end method

.method public getHistoryTagPoolUid(I)I
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsHistory;->getHistoryTagPoolUid(I)I

    move-result p0

    return p0
.end method

.method public getHistoryTotalSize()I
    .locals 1

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mConstants:Lcom/android/server/power/stats/BatteryStatsImpl$Constants;

    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl$Constants;->MAX_HISTORY_BUFFER:I

    iget p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl$Constants;->MAX_HISTORY_FILES:I

    mul-int/2addr v0, p0

    return v0
.end method

.method public getHistoryUsedSize()I
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsHistory;->getHistoryUsedSize()I

    move-result p0

    return p0
.end method

.method public final getIntFromFile(Ljava/lang/String;)I
    .locals 2

    const/4 p0, 0x0

    :try_start_0
    new-instance v0, Ljava/io/BufferedReader;

    new-instance v1, Ljava/io/FileReader;

    invoke-direct {v1, p1}, Ljava/io/FileReader;-><init>(Ljava/lang/String;)V

    const/16 p1, 0x8

    invoke-direct {v0, v1, p1}, Ljava/io/BufferedReader;-><init>(Ljava/io/Reader;I)V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_3
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-virtual {v0}, Ljava/io/BufferedReader;->readLine()Ljava/lang/String;

    move-result-object p0

    if-eqz p0, :cond_0

    invoke-virtual {p0}, Ljava/lang/String;->trim()Ljava/lang/String;

    move-result-object p0

    :cond_0
    invoke-virtual {v0}, Ljava/io/BufferedReader;->close()V

    invoke-static {p0}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result p0
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    invoke-virtual {v0}, Ljava/io/BufferedReader;->close()V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_0

    goto :goto_4

    :catch_0
    move-exception p1

    invoke-virtual {p1}, Ljava/io/IOException;->printStackTrace()V

    goto :goto_4

    :catchall_0
    move-exception p0

    goto :goto_0

    :catch_1
    move-object p0, v0

    goto :goto_2

    :catchall_1
    move-exception p1

    move-object v0, p0

    move-object p0, p1

    :goto_0
    if-eqz v0, :cond_1

    :try_start_3
    invoke-virtual {v0}, Ljava/io/BufferedReader;->close()V
    :try_end_3
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_2

    goto :goto_1

    :catch_2
    move-exception p1

    invoke-virtual {p1}, Ljava/io/IOException;->printStackTrace()V

    :cond_1
    :goto_1
    throw p0

    :catch_3
    :goto_2
    if-eqz p0, :cond_2

    :try_start_4
    invoke-virtual {p0}, Ljava/io/BufferedReader;->close()V
    :try_end_4
    .catch Ljava/io/IOException; {:try_start_4 .. :try_end_4} :catch_4

    goto :goto_3

    :catch_4
    move-exception p0

    invoke-virtual {p0}, Ljava/io/IOException;->printStackTrace()V

    :cond_2
    :goto_3
    const/4 p0, -0x1

    :goto_4
    return p0
.end method

.method public getInteractiveTime(JI)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mInteractiveTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTotalTimeLocked(JI)J

    move-result-wide p0

    return-wide p0
.end method

.method public getIsOnBattery()Z
    .locals 0

    iget-boolean p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBattery:Z

    return p0
.end method

.method public getKernelMemoryStats()Landroid/util/LongSparseArray;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    return-object p0
.end method

.method public getKernelMemoryTimerLocked(J)Lcom/android/server/power/stats/BatteryStatsImpl$SamplingTimer;
    .locals 3

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v0, p1, p2}, Landroid/util/LongSparseArray;->get(J)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/power/stats/BatteryStatsImpl$SamplingTimer;

    if-nez v0, :cond_0

    new-instance v0, Lcom/android/server/power/stats/BatteryStatsImpl$SamplingTimer;

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    iget-object v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-direct {v0, v1, v2}, Lcom/android/server/power/stats/BatteryStatsImpl$SamplingTimer;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {p0, p1, p2, v0}, Landroid/util/LongSparseArray;->put(JLjava/lang/Object;)V

    :cond_0
    return-object v0
.end method

.method public getKernelWakelockStats()Ljava/util/Map;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    return-object p0
.end method

.method public getKernelWakelockTimerLocked(Ljava/lang/String;)Lcom/android/server/power/stats/BatteryStatsImpl$SamplingTimer;
    .locals 3

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v0, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/power/stats/BatteryStatsImpl$SamplingTimer;

    if-nez v0, :cond_0

    new-instance v0, Lcom/android/server/power/stats/BatteryStatsImpl$SamplingTimer;

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    iget-object v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-direct {v0, v1, v2}, Lcom/android/server/power/stats/BatteryStatsImpl$SamplingTimer;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {p0, p1, v0}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    :cond_0
    return-object v0
.end method

.method public getLearnedBatteryCapacity()I
    .locals 0

    iget p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastLearnedBatteryCapacityUah:I

    return p0
.end method

.method public getLongestDeviceIdleModeTime(I)J
    .locals 1

    const/4 v0, 0x1

    if-eq p1, v0, :cond_1

    const/4 v0, 0x2

    if-eq p1, v0, :cond_0

    const-wide/16 p0, 0x0

    return-wide p0

    :cond_0
    iget-wide p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLongestFullIdleTimeMs:J

    return-wide p0

    :cond_1
    iget-wide p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLongestLightIdleTimeMs:J

    return-wide p0
.end method

.method public getLowDischargeAmountSinceCharge()I
    .locals 3

    monitor-enter p0

    :try_start_0
    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLowDischargeAmountSinceCharge:I

    iget-boolean v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBattery:Z

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeCurrentLevel:I

    iget v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeUnplugLevel:I

    if-ge v1, v2, :cond_0

    sub-int/2addr v2, v1

    add-int/lit8 v2, v2, -0x1

    add-int/2addr v0, v2

    :cond_0
    monitor-exit p0

    return v0

    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public getMaxLearnedBatteryCapacity()I
    .locals 0

    iget p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mMaxLearnedBatteryCapacityUah:I

    return p0
.end method

.method public getMinLearnedBatteryCapacity()I
    .locals 0

    iget p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mMinLearnedBatteryCapacityUah:I

    return p0
.end method

.method public getMobileActive5GTime(JI)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileActive5GTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTotalTimeLocked(JI)J

    move-result-wide p0

    return-wide p0
.end method

.method public getMobileActiveTime(JI)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileActiveTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTotalTimeLocked(JI)J

    move-result-wide p0

    return-wide p0
.end method

.method public getMobileIfaces()[Ljava/lang/String;
    .locals 1

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mModemNetworkLock:Ljava/lang/Object;

    monitor-enter v0

    :try_start_0
    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mModemIfaces:[Ljava/lang/String;

    monitor-exit v0

    return-object p0

    :catchall_0
    move-exception p0

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw p0
.end method

.method public getMobileRadioActiveAdjustedTime(I)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioActiveAdjustedTime:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    move-result-wide p0

    return-wide p0
.end method

.method public getMobileRadioActiveCount(I)I
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getCountLocked(I)I

    move-result p0

    return p0
.end method

.method public getMobileRadioActiveTime(JI)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTotalTimeLocked(JI)J

    move-result-wide p0

    return-wide p0
.end method

.method public getMobileRadioActiveUnknownCount(I)I
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioActiveUnknownCount:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    move-result-wide p0

    long-to-int p0, p0

    return p0
.end method

.method public getMobileRadioActiveUnknownTime(I)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioActiveUnknownTime:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    move-result-wide p0

    return-wide p0
.end method

.method public getMobileRadioEnergyConsumptionUC()J
    .locals 2

    const/4 v0, 0x7

    invoke-virtual {p0, v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getPowerBucketConsumptionUC(I)J

    move-result-wide v0

    return-wide v0
.end method

.method public getModemControllerActivity()Landroid/os/BatteryStats$ControllerActivityCounter;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mModemActivity:Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;

    return-object p0
.end method

.method public getNetworkActivityBytes(II)J
    .locals 1

    if-ltz p1, :cond_0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    array-length v0, p0

    if-ge p1, v0, :cond_0

    aget-object p0, p0, p1

    invoke-virtual {p0, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    move-result-wide p0

    return-wide p0

    :cond_0
    const-wide/16 p0, 0x0

    return-wide p0
.end method

.method public getNetworkActivityPackets(II)J
    .locals 1

    if-ltz p1, :cond_0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    array-length v0, p0

    if-ge p1, v0, :cond_0

    aget-object p0, p0, p1

    invoke-virtual {p0, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    move-result-wide p0

    return-wide p0

    :cond_0
    const-wide/16 p0, 0x0

    return-wide p0
.end method

.method public getNetworkModemControllerActivity()Landroid/os/BatteryStats$ModemActivityCounter;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNetworkModemActivity:Lcom/android/server/power/stats/BatteryStatsImpl$ModemActivityCounterImpl;

    return-object p0
.end method

.method public getNextMaxDailyDeadline()J
    .locals 2

    iget-wide v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNextMaxDailyDeadlineMs:J

    return-wide v0
.end method

.method public getNextMinDailyDeadline()J
    .locals 2

    iget-wide v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNextMinDailyDeadlineMs:J

    return-wide v0
.end method

.method public getNumConnectivityChange(I)I
    .locals 0

    iget p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNumConnectivityChange:I

    return p0
.end method

.method public getPackageStatsLocked(ILjava/lang/String;JJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Pkg;
    .locals 6

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v1

    move-object v0, p0

    move-wide v2, p3

    move-wide v4, p5

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object p0

    invoke-virtual {p0, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->getPackageStatsLocked(Ljava/lang/String;)Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Pkg;

    move-result-object p0

    return-object p0
.end method

.method public getParcelVersion()I
    .locals 0

    const p0, 0x1200d4

    return p0
.end method

.method public getPhoneDataConnectionCount(II)I
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object p0, p0, p1

    invoke-virtual {p0, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getCountLocked(I)I

    move-result p0

    return p0
.end method

.method public getPhoneDataConnectionTime(IJI)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object p0, p0, p1

    invoke-virtual {p0, p2, p3, p4}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTotalTimeLocked(JI)J

    move-result-wide p0

    return-wide p0
.end method

.method public bridge synthetic getPhoneDataConnectionTimer(I)Landroid/os/BatteryStats$Timer;
    .locals 0

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->getPhoneDataConnectionTimer(I)Lcom/android/server/power/stats/BatteryStatsImpl$Timer;

    move-result-object p0

    return-object p0
.end method

.method public getPhoneDataConnectionTimer(I)Lcom/android/server/power/stats/BatteryStatsImpl$Timer;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object p0, p0, p1

    return-object p0
.end method

.method public getPhoneEnergyConsumptionUC()J
    .locals 2

    const/16 v0, 0x9

    invoke-virtual {p0, v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getPowerBucketConsumptionUC(I)J

    move-result-wide v0

    return-wide v0
.end method

.method public getPhoneOnCount(I)I
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getCountLocked(I)I

    move-result p0

    return p0
.end method

.method public getPhoneOnTime(JI)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTotalTimeLocked(JI)J

    move-result-wide p0

    return-wide p0
.end method

.method public getPhoneSignalScanningTime(JI)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTotalTimeLocked(JI)J

    move-result-wide p0

    return-wide p0
.end method

.method public bridge synthetic getPhoneSignalScanningTimer()Landroid/os/BatteryStats$Timer;
    .locals 0

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getPhoneSignalScanningTimer()Lcom/android/server/power/stats/BatteryStatsImpl$Timer;

    move-result-object p0

    return-object p0
.end method

.method public getPhoneSignalScanningTimer()Lcom/android/server/power/stats/BatteryStatsImpl$Timer;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    return-object p0
.end method

.method public getPhoneSignalStrengthCount(II)I
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object p0, p0, p1

    invoke-virtual {p0, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getCountLocked(I)I

    move-result p0

    return p0
.end method

.method public getPhoneSignalStrengthTime(IJI)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object p0, p0, p1

    invoke-virtual {p0, p2, p3, p4}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTotalTimeLocked(JI)J

    move-result-wide p0

    return-wide p0
.end method

.method public bridge synthetic getPhoneSignalStrengthTimer(I)Landroid/os/BatteryStats$Timer;
    .locals 0

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->getPhoneSignalStrengthTimer(I)Lcom/android/server/power/stats/BatteryStatsImpl$Timer;

    move-result-object p0

    return-object p0
.end method

.method public getPhoneSignalStrengthTimer(I)Lcom/android/server/power/stats/BatteryStatsImpl$Timer;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object p0, p0, p1

    return-object p0
.end method

.method public final getPowerBucketConsumptionUC(I)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mGlobalEnergyConsumerStats:Lcom/android/internal/power/EnergyConsumerStats;

    if-nez p0, :cond_0

    const-wide/16 p0, -0x1

    return-wide p0

    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/power/EnergyConsumerStats;->getAccumulatedStandardBucketCharge(I)J

    move-result-wide p0

    return-wide p0
.end method

.method public final getPowerManagerWakeLockLevel(I)I
    .locals 3

    const/4 p0, 0x1

    if-eqz p1, :cond_3

    if-eq p1, p0, :cond_2

    const/4 p0, 0x2

    const/4 v0, -0x1

    const-string v1, "BatteryStatsImpl"

    if-eq p1, p0, :cond_1

    const/16 p0, 0x12

    if-eq p1, p0, :cond_0

    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Illegal wakelock type in batterystats: "

    invoke-virtual {p0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-static {v1, p0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    return v0

    :cond_0
    const/16 p0, 0x80

    return p0

    :cond_1
    const-string p0, "Illegal window wakelock type observed in batterystats."

    invoke-static {v1, p0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    return v0

    :cond_2
    const/16 p0, 0x1a

    :cond_3
    return p0
.end method

.method public getPowerProfile()Lcom/android/internal/os/PowerProfile;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    return-object p0
.end method

.method public getPowerSaveModeEnabledCount(I)I
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerSaveModeEnabledTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getCountLocked(I)I

    move-result p0

    return p0
.end method

.method public getPowerSaveModeEnabledTime(JI)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerSaveModeEnabledTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTotalTimeLocked(JI)J

    move-result-wide p0

    return-wide p0
.end method

.method public final getProcessForegroundTimeMsLocked(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;J)J
    .locals 3

    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl;->getForegroundActivityTimeMsSinceMarkLocked(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;J)J

    move-result-wide v0

    const/4 v2, 0x0

    invoke-virtual {p0, p1, v2, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl;->getProcessStateTimeSinceMarkLocked(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;IJ)J

    move-result-wide p0

    invoke-static {v0, v1, p0, p1}, Ljava/lang/Math;->min(JJ)J

    move-result-wide p0

    return-wide p0
.end method

.method public final getProcessStateTimeSinceMarkLocked(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;IJ)J
    .locals 2

    const-wide/16 v0, 0x0

    if-ltz p2, :cond_2

    const/4 p0, 0x7

    if-lt p2, p0, :cond_0

    goto :goto_0

    :cond_0
    iget-object p0, p1, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mProcessStateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object p0, p0, p2

    if-nez p0, :cond_1

    return-wide v0

    :cond_1
    invoke-virtual {p0, p3, p4}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTimeSinceMarkLocked(J)J

    move-result-wide p0

    const-wide/16 p2, 0x3e8

    div-long/2addr p0, p2

    return-wide p0

    :cond_2
    :goto_0
    return-wide v0
.end method

.method public getProcessStatsLocked(ILjava/lang/String;JJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Proc;
    .locals 6

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v1

    move-object v0, p0

    move-wide v2, p3

    move-wide v4, p5

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object p0

    invoke-virtual {p0, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->getProcessStatsLocked(Ljava/lang/String;)Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Proc;

    move-result-object p0

    return-object p0
.end method

.method public final getRatBatteryStatsLocked(I)Lcom/android/server/power/stats/BatteryStatsImpl$RadioAccessTechnologyBatteryStats;
    .locals 4

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPerRatBatteryStats:[Lcom/android/server/power/stats/BatteryStatsImpl$RadioAccessTechnologyBatteryStats;

    aget-object v0, v0, p1

    if-nez v0, :cond_1

    const/4 v0, 0x2

    if-ne p1, v0, :cond_0

    const/4 v0, 0x5

    goto :goto_0

    :cond_0
    const/4 v0, 0x1

    :goto_0
    new-instance v1, Lcom/android/server/power/stats/BatteryStatsImpl$RadioAccessTechnologyBatteryStats;

    iget-object v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    iget-object v3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-direct {v1, v0, v2, v3}, Lcom/android/server/power/stats/BatteryStatsImpl$RadioAccessTechnologyBatteryStats;-><init>(ILcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPerRatBatteryStats:[Lcom/android/server/power/stats/BatteryStatsImpl$RadioAccessTechnologyBatteryStats;

    aput-object v1, p0, p1

    move-object v0, v1

    :cond_1
    return-object v0
.end method

.method public getRpmStats()Ljava/util/Map;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    return-object p0
.end method

.method public getRpmTimerLocked(Ljava/lang/String;)Lcom/android/server/power/stats/BatteryStatsImpl$SamplingTimer;
    .locals 3

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    invoke-virtual {v0, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/power/stats/BatteryStatsImpl$SamplingTimer;

    if-nez v0, :cond_0

    new-instance v0, Lcom/android/server/power/stats/BatteryStatsImpl$SamplingTimer;

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    iget-object v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-direct {v0, v1, v2}, Lcom/android/server/power/stats/BatteryStatsImpl$SamplingTimer;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    invoke-virtual {p0, p1, v0}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    :cond_0
    return-object v0
.end method

.method public final getSafeAttributeValue(Lcom/android/modules/utils/TypedXmlPullParser;)Ljava/lang/String;
    .locals 1

    const/4 p0, 0x0

    const-string/jumbo v0, "pkg"

    invoke-interface {p1, p0, v0}, Lcom/android/modules/utils/TypedXmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object p0

    if-nez p0, :cond_0

    const-string p0, "BatteryStatsImpl"

    const-string p1, "There was an issue while reading the package name from internal storage."

    invoke-static {p0, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    const-string p0, "NULL"

    :cond_0
    return-object p0
.end method

.method public getScreenAutoBrightnessTime(IJI)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenAutoBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object p0, p0, p1

    invoke-virtual {p0, p2, p3, p4}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTotalTimeLocked(JI)J

    move-result-wide p0

    return-wide p0
.end method

.method public getScreenBrightnessTime(IJI)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object p0, p0, p1

    invoke-virtual {p0, p2, p3, p4}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTotalTimeLocked(JI)J

    move-result-wide p0

    return-wide p0
.end method

.method public bridge synthetic getScreenBrightnessTimer(I)Landroid/os/BatteryStats$Timer;
    .locals 0

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->getScreenBrightnessTimer(I)Lcom/android/server/power/stats/BatteryStatsImpl$Timer;

    move-result-object p0

    return-object p0
.end method

.method public getScreenBrightnessTimer(I)Lcom/android/server/power/stats/BatteryStatsImpl$Timer;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object p0, p0, p1

    return-object p0
.end method

.method public getScreenDozeCount(I)I
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenDozeTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getCountLocked(I)I

    move-result p0

    return p0
.end method

.method public getScreenDozeEnergyConsumptionUC()J
    .locals 2

    const/4 v0, 0x1

    invoke-virtual {p0, v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getPowerBucketConsumptionUC(I)J

    move-result-wide v0

    return-wide v0
.end method

.method public getScreenDozeTime(JI)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenDozeTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTotalTimeLocked(JI)J

    move-result-wide p0

    return-wide p0
.end method

.method public getScreenHighBrightnessTime(JI)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenHighBrightnessTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTotalTimeLocked(JI)J

    move-result-wide p0

    return-wide p0
.end method

.method public getScreenOffRpmStats()Ljava/util/Map;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    return-object p0
.end method

.method public getScreenOffRpmTimerLocked(Ljava/lang/String;)Lcom/android/server/power/stats/BatteryStatsImpl$SamplingTimer;
    .locals 3

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    invoke-virtual {v0, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/power/stats/BatteryStatsImpl$SamplingTimer;

    if-nez v0, :cond_0

    new-instance v0, Lcom/android/server/power/stats/BatteryStatsImpl$SamplingTimer;

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    iget-object v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-direct {v0, v1, v2}, Lcom/android/server/power/stats/BatteryStatsImpl$SamplingTimer;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    invoke-virtual {p0, p1, v0}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    :cond_0
    return-object v0
.end method

.method public getScreenOnCount(I)I
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getCountLocked(I)I

    move-result p0

    return p0
.end method

.method public getScreenOnEnergyConsumptionUC()J
    .locals 2

    const/4 v0, 0x0

    invoke-virtual {p0, v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getPowerBucketConsumptionUC(I)J

    move-result-wide v0

    return-wide v0
.end method

.method public getScreenOnGpsRunningTime(JI)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenOnGpsTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTotalTimeLocked(JI)J

    move-result-wide p0

    return-wide p0
.end method

.method public getScreenOnTime(JI)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTotalTimeLocked(JI)J

    move-result-wide p0

    return-wide p0
.end method

.method public getScreenWakeCounterLocked(Ljava/lang/String;)Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;
    .locals 2

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenWakeStats:Ljava/util/HashMap;

    invoke-virtual {v0, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    if-nez v0, :cond_0

    new-instance v0, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-direct {v0, v1}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenWakeStats:Ljava/util/HashMap;

    invoke-virtual {p0, p1, v0}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    :cond_0
    return-object v0
.end method

.method public getScreenWakeStats()Ljava/util/Map;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenWakeStats:Ljava/util/HashMap;

    return-object p0
.end method

.method public getServiceStatsLocked(ILjava/lang/String;Ljava/lang/String;JJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Pkg$Serv;
    .locals 6

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v1

    move-object v0, p0

    move-wide v2, p4

    move-wide v4, p6

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object p0

    invoke-virtual {p0, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->getServiceStatsLocked(Ljava/lang/String;Ljava/lang/String;)Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Pkg$Serv;

    move-result-object p0

    return-object p0
.end method

.method public getSpeakerCallTime(II)J
    .locals 1

    if-ltz p1, :cond_0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSpeakerCallTimeCounters:[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    array-length v0, p0

    if-ge p1, v0, :cond_0

    aget-object p0, p0, p1

    invoke-virtual {p0, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    move-result-wide p0

    return-wide p0

    :cond_0
    const-wide/16 p0, 0x0

    return-wide p0
.end method

.method public getSpeakerMediaTime(II)J
    .locals 1

    if-ltz p1, :cond_0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSpeakerMediaTimeCounters:[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    array-length v0, p0

    if-ge p1, v0, :cond_0

    aget-object p0, p0, p1

    invoke-virtual {p0, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    move-result-wide p0

    return-wide p0

    :cond_0
    const-wide/16 p0, 0x0

    return-wide p0
.end method

.method public getStartClockTime()J
    .locals 10

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v0}, Lcom/android/internal/os/Clock;->currentTimeMillis()J

    move-result-wide v8

    const-wide v0, 0x757b12c00L

    cmp-long v2, v8, v0

    if-lez v2, :cond_0

    iget-wide v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mStartClockTimeMs:J

    sub-long v0, v8, v0

    cmp-long v0, v2, v0

    if-ltz v0, :cond_1

    :cond_0
    iget-wide v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mStartClockTimeMs:J

    cmp-long v2, v0, v8

    if-lez v2, :cond_2

    :cond_1
    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v0}, Lcom/android/internal/os/Clock;->elapsedRealtime()J

    move-result-wide v2

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v0}, Lcom/android/internal/os/Clock;->uptimeMillis()J

    move-result-wide v4

    move-wide v6, v8

    invoke-virtual/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsHistory;->recordCurrentTimeChange(JJJ)V

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v0}, Lcom/android/internal/os/Clock;->elapsedRealtime()J

    move-result-wide v0

    iget-wide v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mRealtimeStartUs:J

    const-wide/16 v4, 0x3e8

    div-long/2addr v2, v4

    sub-long/2addr v0, v2

    sub-long/2addr v8, v0

    return-wide v8

    :cond_2
    return-wide v0
.end method

.method public getStartCount()I
    .locals 0

    iget p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mStartCount:I

    return p0
.end method

.method public getStartPlatformVersion()Ljava/lang/String;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mStartPlatformVersion:Ljava/lang/String;

    return-object p0
.end method

.method public getStatsStartRealtime()J
    .locals 2

    iget-wide v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mRealtimeStartUs:J

    return-wide v0
.end method

.method public getSubDisplayHighRefreshRateTime(IJI)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubHighRefreshRateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object p0, p0, p1

    invoke-virtual {p0, p2, p3, p4}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTotalTimeLocked(JI)J

    move-result-wide p0

    return-wide p0
.end method

.method public getSubScreenAutoBrightnessTime(IJI)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenAutoBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object p0, p0, p1

    invoke-virtual {p0, p2, p3, p4}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTotalTimeLocked(JI)J

    move-result-wide p0

    return-wide p0
.end method

.method public getSubScreenBrightnessTime(IJI)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object p0, p0, p1

    invoke-virtual {p0, p2, p3, p4}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTotalTimeLocked(JI)J

    move-result-wide p0

    return-wide p0
.end method

.method public bridge synthetic getSubScreenBrightnessTimer(I)Landroid/os/BatteryStats$Timer;
    .locals 0

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->getSubScreenBrightnessTimer(I)Lcom/android/server/power/stats/BatteryStatsImpl$Timer;

    move-result-object p0

    return-object p0
.end method

.method public getSubScreenBrightnessTimer(I)Lcom/android/server/power/stats/BatteryStatsImpl$Timer;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object p0, p0, p1

    return-object p0
.end method

.method public getSubScreenDozeCount(I)I
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenDozeTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getCountLocked(I)I

    move-result p0

    return p0
.end method

.method public getSubScreenDozeTime(JI)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenDozeTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTotalTimeLocked(JI)J

    move-result-wide p0

    return-wide p0
.end method

.method public getSubScreenHighBrightnessTime(JI)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenHighBrightnessTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTotalTimeLocked(JI)J

    move-result-wide p0

    return-wide p0
.end method

.method public getSubScreenOnCount(I)I
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getCountLocked(I)I

    move-result p0

    return p0
.end method

.method public getSubScreenOnTime(JI)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTotalTimeLocked(JI)J

    move-result-wide p0

    return-wide p0
.end method

.method public getSystemServiceCpuThreadTimes()Lcom/android/server/power/stats/SystemServerCpuThreadReader$SystemServiceCpuThreadTimes;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSystemServerCpuThreadReader:Lcom/android/server/power/stats/SystemServerCpuThreadReader;

    invoke-virtual {p0}, Lcom/android/server/power/stats/SystemServerCpuThreadReader;->readAbsolute()Lcom/android/server/power/stats/SystemServerCpuThreadReader$SystemServiceCpuThreadTimes;

    move-result-object p0

    return-object p0
.end method

.method public getSystemServiceTimeAtCpuSpeeds()[J
    .locals 1

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBinderThreadCpuTimesUs:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;

    if-nez p0, :cond_0

    const/4 p0, 0x0

    return-object p0

    :cond_0
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;->getCountsLocked(I)[J

    move-result-object p0

    return-object p0
.end method

.method public final getTopAppStatsMap()Ljava/util/concurrent/ConcurrentHashMap;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mTopAppStats:Ljava/util/concurrent/ConcurrentHashMap;

    return-object p0
.end method

.method public getTxConsume()I
    .locals 1

    const-string v0, "/sys/class/power_supply/battery/wc_tx_total_pwr"

    invoke-virtual {p0, v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getIntFromFile(Ljava/lang/String;)I

    move-result p0

    if-gez p0, :cond_0

    const/4 p0, 0x0

    :cond_0
    return p0
.end method

.method public getTxPowerSharingTime(JI)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mTxPowerSharingTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTotalTimeLocked(JI)J

    move-result-wide p0

    return-wide p0
.end method

.method public getTxSharingDischargeAmount(I)J
    .locals 0

    iget-wide p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mTxPowerSharingDischargeMah:J

    return-wide p0
.end method

.method public getUahDischarge(I)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeCounter:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    move-result-wide p0

    return-wide p0
.end method

.method public getUahDischargeDeepDoze(I)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeDeepDozeCounter:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    move-result-wide p0

    return-wide p0
.end method

.method public getUahDischargeLightDoze(I)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeLightDozeCounter:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    move-result-wide p0

    return-wide p0
.end method

.method public getUahDischargeScreenDoze(I)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenDozeCounter:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    move-result-wide p0

    return-wide p0
.end method

.method public getUahDischargeScreenOff(I)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOffCounter:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    move-result-wide p0

    return-wide p0
.end method

.method public getUidStats()Landroid/util/SparseArray;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    return-object p0
.end method

.method public getUidStatsLocked(I)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;
    .locals 7

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v0}, Lcom/android/internal/os/Clock;->elapsedRealtime()J

    move-result-wide v3

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v0}, Lcom/android/internal/os/Clock;->uptimeMillis()J

    move-result-wide v5

    move-object v1, p0

    move v2, p1

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object p0

    return-object p0
.end method

.method public getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;
    .locals 9

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    if-nez v0, :cond_1

    invoke-static {p1}, Landroid/os/Process;->isSdkSandboxUid(I)Z

    move-result v0

    if-eqz v0, :cond_0

    const-string v0, "BatteryStatsImpl"

    const-string v1, "Tracking an SDK Sandbox UID"

    invoke-static {v0, v1}, Landroid/util/Log;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    :cond_0
    new-instance v0, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-object v2, v0

    move-object v3, p0

    move v4, p1

    move-wide v5, p2

    move-wide v7, p4

    invoke-direct/range {v2 .. v8}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl;IJJ)V

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {p0, p1, v0}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    :cond_1
    return-object v0
.end method

.method public getWakeLockStats()Landroid/os/WakeLockStats;
    .locals 22

    move-object/from16 v0, p0

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v1}, Lcom/android/internal/os/Clock;->elapsedRealtime()J

    move-result-wide v1

    const-wide/16 v3, 0x3e8

    mul-long v5, v1, v3

    new-instance v7, Ljava/util/ArrayList;

    invoke-direct {v7}, Ljava/util/ArrayList;-><init>()V

    iget-object v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v8}, Landroid/util/SparseArray;->size()I

    move-result v8

    add-int/lit8 v8, v8, -0x1

    :goto_0
    if-ltz v8, :cond_3

    iget-object v9, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v9, v8}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    iget-object v10, v9, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mWakelockStats:Lcom/android/server/power/stats/BatteryStatsImpl$OverflowArrayMap;

    invoke-virtual {v10}, Lcom/android/server/power/stats/BatteryStatsImpl$OverflowArrayMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v10

    invoke-virtual {v10}, Landroid/util/ArrayMap;->size()I

    move-result v11

    add-int/lit8 v11, v11, -0x1

    :goto_1
    if-ltz v11, :cond_2

    invoke-virtual {v10, v11}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v12

    move-object v15, v12

    check-cast v15, Ljava/lang/String;

    invoke-virtual {v10, v11}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Wakelock;

    iget-object v12, v12, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Wakelock;->mTimerPartial:Lcom/android/server/power/stats/BatteryStatsImpl$DualTimer;

    if-eqz v12, :cond_1

    const/4 v13, 0x0

    invoke-virtual {v12, v5, v6, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTotalTimeLocked(JI)J

    move-result-wide v16

    div-long v17, v16, v3

    const-wide/16 v19, 0x0

    cmp-long v14, v17, v19

    if-eqz v14, :cond_1

    new-instance v14, Landroid/os/WakeLockStats$WakeLock;

    invoke-virtual {v9}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->getUid()I

    move-result v16

    invoke-virtual {v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getCountLocked(I)I

    move-result v21

    invoke-virtual {v12}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v13

    if-eqz v13, :cond_0

    invoke-virtual {v12, v1, v2}, Lcom/android/server/power/stats/BatteryStatsImpl$DurationTimer;->getCurrentDurationMsLocked(J)J

    move-result-wide v12

    move-wide/from16 v19, v12

    :cond_0
    move-object v13, v14

    move-object v12, v14

    move/from16 v14, v16

    move/from16 v16, v21

    invoke-direct/range {v13 .. v20}, Landroid/os/WakeLockStats$WakeLock;-><init>(ILjava/lang/String;IJJ)V

    invoke-interface {v7, v12}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    :cond_1
    add-int/lit8 v11, v11, -0x1

    goto :goto_1

    :cond_2
    add-int/lit8 v8, v8, -0x1

    goto :goto_0

    :cond_3
    new-instance v0, Landroid/os/WakeLockStats;

    invoke-direct {v0, v7}, Landroid/os/WakeLockStats;-><init>(Ljava/util/List;)V

    return-object v0
.end method

.method public getWakeupReasonStats()Ljava/util/Map;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    return-object p0
.end method

.method public getWakeupReasonTimerLocked(Ljava/lang/String;)Lcom/android/server/power/stats/BatteryStatsImpl$SamplingTimer;
    .locals 3

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    invoke-virtual {v0, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/power/stats/BatteryStatsImpl$SamplingTimer;

    if-nez v0, :cond_0

    new-instance v0, Lcom/android/server/power/stats/BatteryStatsImpl$SamplingTimer;

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    iget-object v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-direct {v0, v1, v2}, Lcom/android/server/power/stats/BatteryStatsImpl$SamplingTimer;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    invoke-virtual {p0, p1, v0}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    :cond_0
    return-object v0
.end method

.method public getWifiActiveTime(JI)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiActiveTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTotalTimeLocked(JI)J

    move-result-wide p0

    return-wide p0
.end method

.method public getWifiBatteryStats()Landroid/os/connectivity/WifiBatteryStats;
    .locals 40

    move-object/from16 v0, p0

    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v1

    const-wide/16 v3, 0x3e8

    mul-long/2addr v1, v3

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getWifiControllerActivity()Landroid/os/BatteryStats$ControllerActivityCounter;

    move-result-object v5

    invoke-virtual {v5}, Landroid/os/BatteryStats$ControllerActivityCounter;->getIdleTimeCounter()Landroid/os/BatteryStats$LongCounter;

    move-result-object v6

    const/4 v7, 0x0

    invoke-virtual {v6, v7}, Landroid/os/BatteryStats$LongCounter;->getCountLocked(I)J

    move-result-wide v25

    invoke-virtual {v5}, Landroid/os/BatteryStats$ControllerActivityCounter;->getScanTimeCounter()Landroid/os/BatteryStats$LongCounter;

    move-result-object v6

    invoke-virtual {v6, v7}, Landroid/os/BatteryStats$LongCounter;->getCountLocked(I)J

    move-result-wide v23

    invoke-virtual {v5}, Landroid/os/BatteryStats$ControllerActivityCounter;->getRxTimeCounter()Landroid/os/BatteryStats$LongCounter;

    move-result-object v6

    invoke-virtual {v6, v7}, Landroid/os/BatteryStats$LongCounter;->getCountLocked(I)J

    move-result-wide v27

    invoke-virtual {v5}, Landroid/os/BatteryStats$ControllerActivityCounter;->getTxTimeCounters()[Landroid/os/BatteryStats$LongCounter;

    move-result-object v6

    aget-object v6, v6, v7

    invoke-virtual {v6, v7}, Landroid/os/BatteryStats$LongCounter;->getCountLocked(I)J

    move-result-wide v29

    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v8

    mul-long/2addr v8, v3

    invoke-virtual {v0, v8, v9, v7}, Lcom/android/server/power/stats/BatteryStatsImpl;->computeBatteryRealtime(JI)J

    move-result-wide v8

    div-long/2addr v8, v3

    add-long v10, v25, v27

    add-long v10, v10, v29

    sub-long v21, v8, v10

    invoke-virtual {v5}, Landroid/os/BatteryStats$ControllerActivityCounter;->getPowerCounter()Landroid/os/BatteryStats$LongCounter;

    move-result-object v6

    invoke-virtual {v6, v7}, Landroid/os/BatteryStats$LongCounter;->getCountLocked(I)J

    move-result-wide v31

    invoke-virtual {v5}, Landroid/os/BatteryStats$ControllerActivityCounter;->getMonitoredRailChargeConsumedMaMs()Landroid/os/BatteryStats$LongCounter;

    move-result-object v5

    invoke-virtual {v5, v7}, Landroid/os/BatteryStats$LongCounter;->getCountLocked(I)J

    move-result-wide v38

    const-wide/16 v5, 0x0

    move-wide/from16 v33, v5

    move v5, v7

    :goto_0
    iget-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v6}, Landroid/util/SparseArray;->size()I

    move-result v6

    if-ge v5, v6, :cond_0

    iget-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v6, v5}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    iget-object v6, v6, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mWifiScanTimer:Lcom/android/server/power/stats/BatteryStatsImpl$DualTimer;

    invoke-virtual {v6, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getCountLocked(I)I

    move-result v6

    int-to-long v8, v6

    add-long v33, v33, v8

    add-int/lit8 v5, v5, 0x1

    goto :goto_0

    :cond_0
    const/16 v5, 0x8

    new-array v6, v5, [J

    move v8, v7

    :goto_1
    if-ge v8, v5, :cond_1

    invoke-virtual {v0, v8, v1, v2, v7}, Lcom/android/server/power/stats/BatteryStatsImpl;->getWifiStateTime(IJI)J

    move-result-wide v9

    div-long/2addr v9, v3

    aput-wide v9, v6, v8

    add-int/lit8 v8, v8, 0x1

    goto :goto_1

    :cond_1
    const/16 v5, 0xd

    new-array v15, v5, [J

    move v8, v7

    :goto_2
    if-ge v8, v5, :cond_2

    invoke-virtual {v0, v8, v1, v2, v7}, Lcom/android/server/power/stats/BatteryStatsImpl;->getWifiSupplStateTime(IJI)J

    move-result-wide v9

    div-long/2addr v9, v3

    aput-wide v9, v15, v8

    add-int/lit8 v8, v8, 0x1

    goto :goto_2

    :cond_2
    const/4 v5, 0x5

    new-array v13, v5, [J

    move v8, v7

    :goto_3
    if-ge v8, v5, :cond_3

    invoke-virtual {v0, v8, v1, v2, v7}, Lcom/android/server/power/stats/BatteryStatsImpl;->getWifiSignalStrengthTime(IJI)J

    move-result-wide v9

    div-long/2addr v9, v3

    aput-wide v9, v13, v8

    add-int/lit8 v8, v8, 0x1

    goto :goto_3

    :cond_3
    new-instance v5, Landroid/os/connectivity/WifiBatteryStats;

    move-object v8, v5

    invoke-virtual {v0, v1, v2, v7}, Lcom/android/server/power/stats/BatteryStatsImpl;->computeBatteryRealtime(JI)J

    move-result-wide v9

    div-long/2addr v9, v3

    invoke-virtual {v0, v1, v2, v7}, Lcom/android/server/power/stats/BatteryStatsImpl;->getWifiActiveTime(JI)J

    move-result-wide v1

    div-long v11, v1, v3

    const/4 v1, 0x3

    invoke-virtual {v0, v1, v7}, Lcom/android/server/power/stats/BatteryStatsImpl;->getNetworkActivityPackets(II)J

    move-result-wide v2

    move-object v4, v13

    move-wide v13, v2

    invoke-virtual {v0, v1, v7}, Lcom/android/server/power/stats/BatteryStatsImpl;->getNetworkActivityBytes(II)J

    move-result-wide v1

    move-object v3, v15

    move-wide v15, v1

    const/4 v1, 0x2

    invoke-virtual {v0, v1, v7}, Lcom/android/server/power/stats/BatteryStatsImpl;->getNetworkActivityPackets(II)J

    move-result-wide v17

    invoke-virtual {v0, v1, v7}, Lcom/android/server/power/stats/BatteryStatsImpl;->getNetworkActivityBytes(II)J

    move-result-wide v19

    move-object/from16 v35, v6

    move-object/from16 v36, v4

    move-object/from16 v37, v3

    invoke-direct/range {v8 .. v39}, Landroid/os/connectivity/WifiBatteryStats;-><init>(JJJJJJJJJJJJJ[J[J[JJ)V

    return-object v5
.end method

.method public getWifiControllerActivity()Landroid/os/BatteryStats$ControllerActivityCounter;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiActivity:Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;

    return-object p0
.end method

.method public getWifiEnergyConsumptionUC()J
    .locals 2

    const/4 v0, 0x4

    invoke-virtual {p0, v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getPowerBucketConsumptionUC(I)J

    move-result-wide v0

    return-wide v0
.end method

.method public getWifiIfaces()[Ljava/lang/String;
    .locals 1

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiNetworkLock:Ljava/lang/Object;

    monitor-enter v0

    :try_start_0
    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiIfaces:[Ljava/lang/String;

    monitor-exit v0

    return-object p0

    :catchall_0
    move-exception p0

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw p0
.end method

.method public getWifiMulticastWakelockCount(I)I
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiMulticastWakelockTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getCountLocked(I)I

    move-result p0

    return p0
.end method

.method public getWifiMulticastWakelockTime(JI)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiMulticastWakelockTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTotalTimeLocked(JI)J

    move-result-wide p0

    return-wide p0
.end method

.method public getWifiOnTime(JI)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTotalTimeLocked(JI)J

    move-result-wide p0

    return-wide p0
.end method

.method public getWifiSignalStrengthCount(II)I
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object p0, p0, p1

    invoke-virtual {p0, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getCountLocked(I)I

    move-result p0

    return p0
.end method

.method public getWifiSignalStrengthTime(IJI)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object p0, p0, p1

    invoke-virtual {p0, p2, p3, p4}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTotalTimeLocked(JI)J

    move-result-wide p0

    return-wide p0
.end method

.method public bridge synthetic getWifiSignalStrengthTimer(I)Landroid/os/BatteryStats$Timer;
    .locals 0

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->getWifiSignalStrengthTimer(I)Lcom/android/server/power/stats/BatteryStatsImpl$Timer;

    move-result-object p0

    return-object p0
.end method

.method public getWifiSignalStrengthTimer(I)Lcom/android/server/power/stats/BatteryStatsImpl$Timer;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object p0, p0, p1

    return-object p0
.end method

.method public getWifiStateCount(II)I
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object p0, p0, p1

    invoke-virtual {p0, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getCountLocked(I)I

    move-result p0

    return p0
.end method

.method public getWifiStateTime(IJI)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object p0, p0, p1

    invoke-virtual {p0, p2, p3, p4}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTotalTimeLocked(JI)J

    move-result-wide p0

    return-wide p0
.end method

.method public bridge synthetic getWifiStateTimer(I)Landroid/os/BatteryStats$Timer;
    .locals 0

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->getWifiStateTimer(I)Lcom/android/server/power/stats/BatteryStatsImpl$Timer;

    move-result-object p0

    return-object p0
.end method

.method public getWifiStateTimer(I)Lcom/android/server/power/stats/BatteryStatsImpl$Timer;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object p0, p0, p1

    return-object p0
.end method

.method public getWifiSupplStateCount(II)I
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object p0, p0, p1

    invoke-virtual {p0, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getCountLocked(I)I

    move-result p0

    return p0
.end method

.method public getWifiSupplStateTime(IJI)J
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object p0, p0, p1

    invoke-virtual {p0, p2, p3, p4}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTotalTimeLocked(JI)J

    move-result-wide p0

    return-wide p0
.end method

.method public bridge synthetic getWifiSupplStateTimer(I)Landroid/os/BatteryStats$Timer;
    .locals 0

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->getWifiSupplStateTimer(I)Lcom/android/server/power/stats/BatteryStatsImpl$Timer;

    move-result-object p0

    return-object p0
.end method

.method public getWifiSupplStateTimer(I)Lcom/android/server/power/stats/BatteryStatsImpl$Timer;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object p0, p0, p1

    return-object p0
.end method

.method public hasAvailableStorage()Z
    .locals 5

    invoke-static {}, Landroid/os/Environment;->getDataDirectory()Ljava/io/File;

    move-result-object p0

    new-instance v0, Landroid/os/StatFs;

    invoke-virtual {p0}, Ljava/io/File;->getPath()Ljava/lang/String;

    move-result-object p0

    invoke-direct {v0, p0}, Landroid/os/StatFs;-><init>(Ljava/lang/String;)V

    invoke-virtual {v0}, Landroid/os/StatFs;->getAvailableBlocksLong()J

    move-result-wide v1

    invoke-virtual {v0}, Landroid/os/StatFs;->getBlockSizeLong()J

    move-result-wide v3

    mul-long/2addr v1, v3

    const-wide/32 v3, 0xc800000

    cmp-long p0, v1, v3

    if-gtz p0, :cond_0

    const/4 p0, 0x0

    goto :goto_0

    :cond_0
    const/4 p0, 0x1

    :goto_0
    return p0
.end method

.method public hasBluetoothActivityReporting()Z
    .locals 0

    iget-boolean p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHasBluetoothReporting:Z

    return p0
.end method

.method public hasDisplayPowerReporting()Z
    .locals 0

    iget-boolean p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHasDisplayPowerReporting:Z

    return p0
.end method

.method public hasModemActivityReporting()Z
    .locals 0

    iget-boolean p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHasModemReporting:Z

    return p0
.end method

.method public hasSpeakerOutPowerReporting()Z
    .locals 0

    iget-boolean p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHasSpeakerOutReporting:Z

    return p0
.end method

.method public hasWifiActivityReporting()Z
    .locals 0

    iget-boolean p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHasWifiReporting:Z

    return p0
.end method

.method public incrementIsolatedUidRefCount(I)V
    .locals 2

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsolatedUidRefCounts:Landroid/util/SparseIntArray;

    const/4 v1, 0x0

    invoke-virtual {v0, p1, v1}, Landroid/util/SparseIntArray;->get(II)I

    move-result v0

    if-gtz v0, :cond_0

    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "Attempted to increment ref counted of untracked isolated uid ("

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, ")"

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    const-string p1, "BatteryStatsImpl"

    invoke-static {p1, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    return-void

    :cond_0
    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsolatedUidRefCounts:Landroid/util/SparseIntArray;

    add-int/lit8 v0, v0, 0x1

    invoke-virtual {p0, p1, v0}, Landroid/util/SparseIntArray;->put(II)V

    return-void
.end method

.method public final incrementPerRatDataLocked(Landroid/telephony/ModemActivityInfo;J)Lcom/android/server/power/stats/BatteryStatsImpl$RxTxConsumption;
    .locals 39

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-wide/from16 v2, p2

    invoke-virtual/range {p1 .. p1}, Landroid/telephony/ModemActivityInfo;->getSpecificInfoLength()I

    move-result v4

    const/4 v5, 0x1

    const/4 v6, 0x3

    const/4 v7, 0x0

    const-wide/16 v10, 0x0

    if-ne v4, v5, :cond_c

    invoke-virtual {v1, v7}, Landroid/telephony/ModemActivityInfo;->getSpecificInfoRat(I)I

    move-result v5

    if-nez v5, :cond_c

    invoke-virtual {v1, v7}, Landroid/telephony/ModemActivityInfo;->getSpecificInfoFrequencyRange(I)I

    move-result v5

    if-nez v5, :cond_c

    invoke-static {}, Landroid/telephony/CellSignalStrength;->getNumSignalStrengthLevels()I

    move-result v4

    new-array v5, v4, [J

    move v12, v7

    move-wide v13, v10

    :goto_0
    if-ge v12, v6, :cond_3

    iget-object v15, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPerRatBatteryStats:[Lcom/android/server/power/stats/BatteryStatsImpl$RadioAccessTechnologyBatteryStats;

    aget-object v15, v15, v12

    if-nez v15, :cond_0

    goto :goto_3

    :cond_0
    invoke-virtual {v15}, Lcom/android/server/power/stats/BatteryStatsImpl$RadioAccessTechnologyBatteryStats;->getFrequencyRangeCount()I

    move-result v7

    const/4 v8, 0x0

    :goto_1
    if-ge v8, v7, :cond_2

    const/4 v9, 0x0

    :goto_2
    if-ge v9, v4, :cond_1

    invoke-virtual {v15, v8, v9, v2, v3}, Lcom/android/server/power/stats/BatteryStatsImpl$RadioAccessTechnologyBatteryStats;->getTimeSinceMark(IIJ)J

    move-result-wide v18

    aget-wide v20, v5, v9

    add-long v20, v20, v18

    aput-wide v20, v5, v9

    add-long v13, v13, v18

    add-int/lit8 v9, v9, 0x1

    goto :goto_2

    :cond_1
    add-int/lit8 v8, v8, 0x1

    goto :goto_1

    :cond_2
    :goto_3
    add-int/lit8 v12, v12, 0x1

    const/4 v7, 0x0

    goto :goto_0

    :cond_3
    cmp-long v7, v13, v10

    if-eqz v7, :cond_b

    move-wide/from16 v18, v10

    move-wide/from16 v20, v18

    const/4 v7, 0x0

    const-wide/16 v8, 0x0

    const-wide/16 v16, 0x0

    :goto_4
    if-ge v7, v6, :cond_a

    iget-object v12, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPerRatBatteryStats:[Lcom/android/server/power/stats/BatteryStatsImpl$RadioAccessTechnologyBatteryStats;

    aget-object v12, v12, v7

    if-nez v12, :cond_4

    move/from16 v32, v4

    move-object/from16 v34, v5

    move-wide/from16 v28, v10

    goto/16 :goto_8

    :cond_4
    invoke-virtual {v12}, Lcom/android/server/power/stats/BatteryStatsImpl$RadioAccessTechnologyBatteryStats;->getFrequencyRangeCount()I

    move-result v15

    move-wide/from16 v24, v18

    const/4 v6, 0x0

    :goto_5
    if-ge v6, v15, :cond_9

    move-wide/from16 v18, v10

    move-wide/from16 v26, v20

    const/4 v10, 0x0

    :goto_6
    const-wide/16 v20, 0x2

    if-ge v10, v4, :cond_7

    invoke-virtual {v12, v6, v10, v2, v3}, Lcom/android/server/power/stats/BatteryStatsImpl$RadioAccessTechnologyBatteryStats;->getTimeSinceMark(IIJ)J

    move-result-wide v22

    aget-wide v30, v5, v10

    const-wide/16 v28, 0x0

    cmp-long v11, v30, v28

    if-nez v11, :cond_5

    move/from16 v32, v4

    move-object/from16 v34, v5

    goto :goto_7

    :cond_5
    invoke-virtual {v1, v10}, Landroid/telephony/ModemActivityInfo;->getTransmitDurationMillisAtPowerLevel(I)J

    move-result-wide v32

    mul-long v32, v32, v22

    div-long v20, v30, v20

    add-long v32, v32, v20

    move v11, v4

    move-object/from16 v34, v5

    div-long v4, v32, v30

    invoke-virtual {v12, v6, v10, v4, v5}, Lcom/android/server/power/stats/BatteryStatsImpl$RadioAccessTechnologyBatteryStats;->incrementTxDuration(IIJ)V

    add-long v30, v18, v22

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->isMobileRadioEnergyConsumerSupportedLocked()Z

    move-result v18

    move/from16 v32, v11

    if-eqz v18, :cond_6

    iget-object v11, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioPowerCalculator:Lcom/android/server/power/stats/MobileRadioPowerCalculator;

    move-object/from16 v18, v11

    move/from16 v19, v7

    move/from16 v20, v6

    move/from16 v21, v10

    move-wide/from16 v22, v4

    invoke-virtual/range {v18 .. v23}, Lcom/android/server/power/stats/MobileRadioPowerCalculator;->calcTxStatePowerMah(IIIJ)D

    move-result-wide v18

    add-double v16, v16, v18

    add-long v26, v26, v4

    :cond_6
    move-wide/from16 v18, v30

    :goto_7
    add-int/lit8 v10, v10, 0x1

    move/from16 v4, v32

    move-object/from16 v5, v34

    goto :goto_6

    :cond_7
    move/from16 v32, v4

    move-object/from16 v34, v5

    const-wide/16 v28, 0x0

    invoke-virtual/range {p1 .. p1}, Landroid/telephony/ModemActivityInfo;->getReceiveTimeMillis()J

    move-result-wide v4

    mul-long v18, v18, v4

    div-long v4, v13, v20

    add-long v18, v18, v4

    div-long v4, v18, v13

    invoke-virtual {v12, v6, v4, v5}, Lcom/android/server/power/stats/BatteryStatsImpl$RadioAccessTechnologyBatteryStats;->incrementRxDuration(IJ)V

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->isMobileRadioEnergyConsumerSupportedLocked()Z

    move-result v10

    if-eqz v10, :cond_8

    iget-object v10, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioPowerCalculator:Lcom/android/server/power/stats/MobileRadioPowerCalculator;

    invoke-virtual {v10, v7, v6, v4, v5}, Lcom/android/server/power/stats/MobileRadioPowerCalculator;->calcRxStatePowerMah(IIJ)D

    move-result-wide v10

    add-double/2addr v8, v10

    add-long v24, v24, v4

    :cond_8
    add-int/lit8 v6, v6, 0x1

    move-wide/from16 v20, v26

    move-wide/from16 v10, v28

    move/from16 v4, v32

    move-object/from16 v5, v34

    goto/16 :goto_5

    :cond_9
    move/from16 v32, v4

    move-object/from16 v34, v5

    move-wide/from16 v28, v10

    move-wide/from16 v18, v24

    :goto_8
    add-int/lit8 v7, v7, 0x1

    move-wide/from16 v10, v28

    move/from16 v4, v32

    move-object/from16 v5, v34

    const/4 v6, 0x3

    goto/16 :goto_4

    :cond_a
    move-wide/from16 v10, v18

    move-wide/from16 v28, v20

    goto/16 :goto_b

    :cond_b
    move-wide/from16 v28, v10

    const-wide/16 v8, 0x0

    const-wide/16 v16, 0x0

    goto :goto_b

    :cond_c
    move-wide/from16 v28, v10

    move-wide/from16 v10, v28

    const/4 v5, 0x0

    const-wide/16 v8, 0x0

    const-wide/16 v16, 0x0

    :goto_9
    if-ge v5, v4, :cond_10

    invoke-virtual {v1, v5}, Landroid/telephony/ModemActivityInfo;->getSpecificInfoRat(I)I

    move-result v6

    invoke-virtual {v1, v5}, Landroid/telephony/ModemActivityInfo;->getSpecificInfoFrequencyRange(I)I

    move-result v7

    invoke-static {v6}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapRadioAccessNetworkTypeToRadioAccessTechnology(I)I

    move-result v12

    invoke-virtual {v0, v12}, Lcom/android/server/power/stats/BatteryStatsImpl;->getRatBatteryStatsLocked(I)Lcom/android/server/power/stats/BatteryStatsImpl$RadioAccessTechnologyBatteryStats;

    move-result-object v13

    invoke-virtual {v1, v6, v7}, Landroid/telephony/ModemActivityInfo;->getReceiveTimeMillis(II)J

    move-result-wide v14

    invoke-virtual {v1, v6, v7}, Landroid/telephony/ModemActivityInfo;->getTransmitTimeMillis(II)[I

    move-result-object v6

    invoke-virtual {v13, v7, v14, v15}, Lcom/android/server/power/stats/BatteryStatsImpl$RadioAccessTechnologyBatteryStats;->incrementRxDuration(IJ)V

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->isMobileRadioEnergyConsumerSupportedLocked()Z

    move-result v18

    if-eqz v18, :cond_d

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioPowerCalculator:Lcom/android/server/power/stats/MobileRadioPowerCalculator;

    invoke-virtual {v1, v12, v7, v14, v15}, Lcom/android/server/power/stats/MobileRadioPowerCalculator;->calcRxStatePowerMah(IIJ)D

    move-result-wide v18

    add-double v8, v8, v18

    add-long/2addr v10, v14

    :cond_d
    array-length v1, v6

    const/4 v14, 0x0

    :goto_a
    if-ge v14, v1, :cond_f

    aget v15, v6, v14

    move-wide/from16 v24, v8

    int-to-long v8, v15

    invoke-virtual {v13, v7, v14, v8, v9}, Lcom/android/server/power/stats/BatteryStatsImpl$RadioAccessTechnologyBatteryStats;->incrementTxDuration(IIJ)V

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->isMobileRadioEnergyConsumerSupportedLocked()Z

    move-result v15

    if-eqz v15, :cond_e

    iget-object v15, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioPowerCalculator:Lcom/android/server/power/stats/MobileRadioPowerCalculator;

    move-object/from16 v18, v15

    move/from16 v19, v12

    move/from16 v20, v7

    move/from16 v21, v14

    move-wide/from16 v22, v8

    invoke-virtual/range {v18 .. v23}, Lcom/android/server/power/stats/MobileRadioPowerCalculator;->calcTxStatePowerMah(IIIJ)D

    move-result-wide v18

    add-double v16, v16, v18

    add-long v28, v28, v8

    :cond_e
    add-int/lit8 v14, v14, 0x1

    move-wide/from16 v8, v24

    goto :goto_a

    :cond_f
    move-wide/from16 v24, v8

    add-int/lit8 v5, v5, 0x1

    move-object/from16 v1, p1

    goto :goto_9

    :cond_10
    :goto_b
    move-wide/from16 v31, v8

    move-wide/from16 v33, v10

    move-wide/from16 v35, v16

    move-wide/from16 v37, v28

    const/4 v1, 0x3

    const/4 v7, 0x0

    :goto_c
    if-ge v7, v1, :cond_12

    iget-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPerRatBatteryStats:[Lcom/android/server/power/stats/BatteryStatsImpl$RadioAccessTechnologyBatteryStats;

    aget-object v4, v4, v7

    if-nez v4, :cond_11

    goto :goto_d

    :cond_11
    invoke-virtual {v4, v2, v3}, Lcom/android/server/power/stats/BatteryStatsImpl$RadioAccessTechnologyBatteryStats;->setMark(J)V

    :goto_d
    add-int/lit8 v7, v7, 0x1

    goto :goto_c

    :cond_12
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->isMobileRadioEnergyConsumerSupportedLocked()Z

    move-result v0

    if-eqz v0, :cond_13

    new-instance v0, Lcom/android/server/power/stats/BatteryStatsImpl$RxTxConsumption;

    move-object/from16 v30, v0

    invoke-direct/range {v30 .. v38}, Lcom/android/server/power/stats/BatteryStatsImpl$RxTxConsumption;-><init>(DJDJ)V

    return-object v0

    :cond_13
    const/4 v0, 0x0

    return-object v0
.end method

.method public informThatAllExternalStatsAreFlushed()V
    .locals 1

    monitor-enter p0

    const/4 v0, 0x0

    :try_start_0
    iput-boolean v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIgnoreNextExternalStats:Z

    monitor-exit p0

    return-void

    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public final init(Lcom/android/internal/os/Clock;)V
    .locals 2

    iput-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    new-instance v0, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;

    const/4 v1, 0x1

    invoke-direct {v0, v1, p1}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;-><init>(ZLcom/android/internal/os/Clock;)V

    iput-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuUidUserSysTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;

    new-instance v0, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

    invoke-direct {v0, v1, p1}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;-><init>(ZLcom/android/internal/os/Clock;)V

    iput-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuUidFreqTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

    new-instance v0, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;

    invoke-direct {v0, v1, p1}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;-><init>(ZLcom/android/internal/os/Clock;)V

    iput-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuUidActiveTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;

    new-instance v0, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;

    invoke-direct {v0, v1, p1}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;-><init>(ZLcom/android/internal/os/Clock;)V

    iput-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuUidClusterTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;

    invoke-virtual {p1}, Lcom/android/internal/os/Clock;->elapsedRealtime()J

    move-result-wide v0

    iput-wide v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastCallbackTime:J

    return-void
.end method

.method public final initActiveHistoryEventsLocked(JJ)V
    .locals 15

    move-object v0, p0

    const/4 v1, 0x0

    move v10, v1

    :goto_0
    const/16 v2, 0x16

    if-ge v10, v2, :cond_4

    iget-boolean v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mRecordAllHistory:Z

    if-nez v2, :cond_0

    const/4 v2, 0x1

    if-ne v10, v2, :cond_0

    goto :goto_2

    :cond_0
    iget-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    invoke-virtual {v2, v10}, Landroid/os/BatteryStats$HistoryEventTracker;->getStateForEvent(I)Ljava/util/HashMap;

    move-result-object v2

    if-nez v2, :cond_1

    goto :goto_2

    :cond_1
    invoke-virtual {v2}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v2

    invoke-interface {v2}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v11

    :cond_2
    invoke-interface {v11}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_3

    invoke-interface {v11}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    move-object v12, v2

    check-cast v12, Ljava/util/Map$Entry;

    invoke-interface {v12}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v2

    move-object v13, v2

    check-cast v13, Landroid/util/SparseIntArray;

    move v14, v1

    :goto_1
    invoke-virtual {v13}, Landroid/util/SparseIntArray;->size()I

    move-result v2

    if-ge v14, v2, :cond_2

    iget-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    invoke-interface {v12}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v3

    move-object v8, v3

    check-cast v8, Ljava/lang/String;

    invoke-virtual {v13, v14}, Landroid/util/SparseIntArray;->keyAt(I)I

    move-result v9

    move-wide/from16 v3, p1

    move-wide/from16 v5, p3

    move v7, v10

    invoke-virtual/range {v2 .. v9}, Lcom/android/internal/os/BatteryStatsHistory;->recordEvent(JJILjava/lang/String;I)V

    add-int/lit8 v14, v14, 0x1

    goto :goto_1

    :cond_3
    :goto_2
    add-int/lit8 v10, v10, 0x1

    goto :goto_0

    :cond_4
    return-void
.end method

.method public initDischarge(J)V
    .locals 2

    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLowDischargeAmountSinceCharge:I

    iput v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHighDischargeAmountSinceCharge:I

    iput v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenOn:I

    iput v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenOnSinceCharge:I

    iput v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenOff:I

    iput v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenOffSinceCharge:I

    iput v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenDoze:I

    iput v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenDozeSinceCharge:I

    iput v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenOnSinceChargePermil:I

    iput v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenOffSinceChargePermil:I

    iput v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenOnSinceChargeCoulombCounter:I

    iput v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenOffSinceChargeCoulombCounter:I

    iput v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeSubScreenOnUnplugLevelPermil:I

    iput v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeSubScreenOffUnplugLevelPermil:I

    iput v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountSubScreenOnSinceChargePermil:I

    iput v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountSubScreenOffSinceChargePermil:I

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v1}, Landroid/os/BatteryStats$LevelStepTracker;->init()V

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v1}, Landroid/os/BatteryStats$LevelStepTracker;->init()V

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOffCounter:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v0, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->reset(ZJ)Z

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenDozeCounter:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v0, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->reset(ZJ)Z

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeLightDozeCounter:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v0, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->reset(ZJ)Z

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeDeepDozeCounter:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v0, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->reset(ZJ)Z

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeCounter:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {p0, v0, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->reset(ZJ)Z

    return-void
.end method

.method public initEnergyConsumerStatsLocked([Z[Ljava/lang/String;)V
    .locals 7

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPerDisplayBatteryStats:[Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;

    array-length v0, v0

    const/4 v1, 0x0

    move v2, v1

    :goto_0
    if-ge v2, v0, :cond_0

    iget-object v3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPerDisplayBatteryStats:[Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;

    aget-object v3, v3, v2

    iget v4, v3, Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;->screenState:I

    iput v4, v3, Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;->screenStateAtLastEnergyMeasurement:I

    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x1

    if-eqz p1, :cond_5

    new-instance v1, Lcom/android/internal/power/EnergyConsumerStats$Config;

    sget-object v2, Lcom/android/server/power/stats/BatteryStatsImpl;->SUPPORTED_PER_PROCESS_STATE_STANDARD_ENERGY_BUCKETS:[I

    invoke-static {}, Lcom/android/server/power/stats/BatteryStatsImpl;->getBatteryConsumerProcessStateNames()[Ljava/lang/String;

    move-result-object v3

    invoke-direct {v1, p1, p2, v2, v3}, Lcom/android/internal/power/EnergyConsumerStats$Config;-><init>([Z[Ljava/lang/String;[I[Ljava/lang/String;)V

    iget-object p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mEnergyConsumerStatsConfig:Lcom/android/internal/power/EnergyConsumerStats$Config;

    if-nez p2, :cond_1

    goto :goto_1

    :cond_1
    invoke-virtual {p2, v1}, Lcom/android/internal/power/EnergyConsumerStats$Config;->isCompatible(Lcom/android/internal/power/EnergyConsumerStats$Config;)Z

    move-result v0

    :goto_1
    iput-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mEnergyConsumerStatsConfig:Lcom/android/internal/power/EnergyConsumerStats$Config;

    new-instance p2, Lcom/android/internal/power/EnergyConsumerStats;

    invoke-direct {p2, v1}, Lcom/android/internal/power/EnergyConsumerStats;-><init>(Lcom/android/internal/power/EnergyConsumerStats$Config;)V

    iput-object p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mGlobalEnergyConsumerStats:Lcom/android/internal/power/EnergyConsumerStats;

    const/4 p2, 0x5

    aget-boolean p2, p1, p2

    if-eqz p2, :cond_2

    new-instance p2, Lcom/android/server/power/stats/BluetoothPowerCalculator;

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-direct {p2, v1}, Lcom/android/server/power/stats/BluetoothPowerCalculator;-><init>(Lcom/android/internal/os/PowerProfile;)V

    iput-object p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBluetoothPowerCalculator:Lcom/android/server/power/stats/BluetoothPowerCalculator;

    :cond_2
    const/4 p2, 0x3

    aget-boolean p2, p1, p2

    if-eqz p2, :cond_3

    new-instance p2, Lcom/android/server/power/stats/CpuPowerCalculator;

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-direct {p2, v1}, Lcom/android/server/power/stats/CpuPowerCalculator;-><init>(Lcom/android/internal/os/PowerProfile;)V

    iput-object p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuPowerCalculator:Lcom/android/server/power/stats/CpuPowerCalculator;

    :cond_3
    const/4 p2, 0x7

    aget-boolean p2, p1, p2

    if-eqz p2, :cond_4

    new-instance p2, Lcom/android/server/power/stats/MobileRadioPowerCalculator;

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-direct {p2, v1}, Lcom/android/server/power/stats/MobileRadioPowerCalculator;-><init>(Lcom/android/internal/os/PowerProfile;)V

    iput-object p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioPowerCalculator:Lcom/android/server/power/stats/MobileRadioPowerCalculator;

    :cond_4
    const/4 p2, 0x4

    aget-boolean p1, p1, p2

    if-eqz p1, :cond_7

    new-instance p1, Lcom/android/server/power/stats/WifiPowerCalculator;

    iget-object p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-direct {p1, p2}, Lcom/android/server/power/stats/WifiPowerCalculator;-><init>(Lcom/android/internal/os/PowerProfile;)V

    iput-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiPowerCalculator:Lcom/android/server/power/stats/WifiPowerCalculator;

    goto :goto_2

    :cond_5
    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mEnergyConsumerStatsConfig:Lcom/android/internal/power/EnergyConsumerStats$Config;

    if-nez p1, :cond_6

    move v1, v0

    :cond_6
    const/4 p1, 0x0

    iput-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mEnergyConsumerStatsConfig:Lcom/android/internal/power/EnergyConsumerStats$Config;

    iput-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mGlobalEnergyConsumerStats:Lcom/android/internal/power/EnergyConsumerStats;

    move v0, v1

    :cond_7
    :goto_2
    if-nez v0, :cond_8

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v2

    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v4

    const/4 v6, 0x4

    move-object v1, p0

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/power/stats/BatteryStatsImpl;->resetAllStatsLocked(JJI)V

    :cond_8
    return-void
.end method

.method public final initKernelSingleUidTimeReaderLocked()Z
    .locals 3

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelSingleUidTimeReader:Lcom/android/internal/os/KernelSingleUidTimeReader;

    const/4 v1, 0x0

    if-nez v0, :cond_3

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    if-nez v0, :cond_0

    return v1

    :cond_0
    iget-object v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuFreqs:[J

    if-nez v2, :cond_1

    iget-object v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuUidFreqTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

    invoke-virtual {v2, v0}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;->readFreqs(Lcom/android/internal/os/PowerProfile;)[J

    move-result-object v0

    iput-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuFreqs:[J

    :cond_1
    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuFreqs:[J

    if-eqz v0, :cond_2

    new-instance v0, Lcom/android/internal/os/KernelSingleUidTimeReader;

    iget-object v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuFreqs:[J

    array-length v2, v2

    invoke-direct {v0, v2}, Lcom/android/internal/os/KernelSingleUidTimeReader;-><init>(I)V

    iput-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelSingleUidTimeReader:Lcom/android/internal/os/KernelSingleUidTimeReader;

    goto :goto_0

    :cond_2
    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuUidFreqTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

    invoke-virtual {v0}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;->allUidTimesAvailable()Z

    move-result v0

    iput-boolean v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPerProcStateCpuTimesAvailable:Z

    return v1

    :cond_3
    :goto_0
    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuUidFreqTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

    invoke-virtual {v0}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;->allUidTimesAvailable()Z

    move-result v0

    const/4 v2, 0x1

    if-eqz v0, :cond_4

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelSingleUidTimeReader:Lcom/android/internal/os/KernelSingleUidTimeReader;

    invoke-virtual {v0}, Lcom/android/internal/os/KernelSingleUidTimeReader;->singleUidCpuTimesAvailable()Z

    move-result v0

    if-eqz v0, :cond_4

    move v1, v2

    :cond_4
    iput-boolean v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPerProcStateCpuTimesAvailable:Z

    return v2
.end method

.method public initTimersAndCounters()V
    .locals 20

    move-object/from16 v0, p0

    new-instance v7, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    const/4 v3, 0x0

    const/4 v4, -0x1

    const/4 v5, 0x0

    iget-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    move-object v1, v7

    invoke-direct/range {v1 .. v6}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    iput-object v7, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    new-instance v1, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget-object v9, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    const/4 v10, 0x0

    const/4 v11, -0x1

    const/4 v12, 0x0

    iget-object v13, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    move-object v8, v1

    invoke-direct/range {v8 .. v13}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    iput-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenDozeTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    const/4 v1, 0x0

    move v2, v1

    :goto_0
    const/4 v3, 0x5

    if-ge v2, v3, :cond_0

    iget-object v3, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    new-instance v10, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget-object v5, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    const/4 v6, 0x0

    rsub-int/lit8 v7, v2, -0x64

    const/4 v8, 0x0

    iget-object v9, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    move-object v4, v10

    invoke-direct/range {v4 .. v9}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    aput-object v10, v3, v2

    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    :cond_0
    const/4 v2, 0x1

    new-array v4, v2, [Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;

    iput-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPerDisplayBatteryStats:[Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;

    new-instance v5, Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;

    iget-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    iget-object v7, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-direct {v5, v6, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    aput-object v5, v4, v1

    iput v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenState:I

    new-instance v4, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget-object v9, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    const/4 v10, 0x0

    const/4 v11, -0x1

    const/4 v12, 0x0

    iget-object v13, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    move-object v8, v4

    invoke-direct/range {v8 .. v13}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    iput-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    new-instance v4, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget-object v15, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    const/16 v16, 0x0

    const/16 v17, -0x1

    const/16 v18, 0x0

    iget-object v5, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    move-object v14, v4

    move-object/from16 v19, v5

    invoke-direct/range {v14 .. v19}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    iput-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenDozeTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    move v4, v1

    :goto_1
    if-ge v4, v3, :cond_1

    iget-object v5, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    new-instance v12, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget-object v7, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    const/4 v8, 0x0

    rsub-int/lit8 v9, v4, -0x64

    const/4 v10, 0x0

    iget-object v11, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    move-object v6, v12

    invoke-direct/range {v6 .. v11}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    aput-object v12, v5, v4

    add-int/lit8 v4, v4, 0x1

    goto :goto_1

    :cond_1
    move v4, v1

    :goto_2
    if-ge v4, v3, :cond_2

    iget-object v5, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenAutoBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    new-instance v12, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget-object v7, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    const/4 v8, 0x0

    rsub-int/lit8 v9, v4, -0x65

    const/4 v10, 0x0

    iget-object v11, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    move-object v6, v12

    invoke-direct/range {v6 .. v11}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    aput-object v12, v5, v4

    add-int/lit8 v4, v4, 0x1

    goto :goto_2

    :cond_2
    move v4, v1

    :goto_3
    if-ge v4, v3, :cond_3

    iget-object v5, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenAutoBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    new-instance v12, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget-object v7, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    const/4 v8, 0x0

    rsub-int/lit8 v9, v4, -0x65

    const/4 v10, 0x0

    iget-object v11, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    move-object v6, v12

    invoke-direct/range {v6 .. v11}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    aput-object v12, v5, v4

    add-int/lit8 v4, v4, 0x1

    goto :goto_3

    :cond_3
    new-instance v4, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    const/4 v7, 0x0

    const/4 v8, -0x1

    const/4 v9, 0x0

    iget-object v10, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    move-object v5, v4

    invoke-direct/range {v5 .. v10}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    iput-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenHighBrightnessTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    new-instance v4, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget-object v12, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    const/4 v13, 0x0

    const/4 v14, -0x1

    const/4 v15, 0x0

    iget-object v5, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    move-object v11, v4

    move-object/from16 v16, v5

    invoke-direct/range {v11 .. v16}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    iput-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenHighBrightnessTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    move v4, v1

    :goto_4
    const/4 v5, 0x4

    if-ge v4, v5, :cond_4

    iget-object v5, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHighRefreshRateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    new-instance v12, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget-object v7, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    const/4 v8, 0x0

    rsub-int v9, v4, -0x44c

    const/4 v10, 0x0

    iget-object v11, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    move-object v6, v12

    invoke-direct/range {v6 .. v11}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    aput-object v12, v5, v4

    add-int/lit8 v4, v4, 0x1

    goto :goto_4

    :cond_4
    move v4, v1

    :goto_5
    if-ge v4, v5, :cond_5

    iget-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubHighRefreshRateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    new-instance v13, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget-object v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    const/4 v9, 0x0

    rsub-int v10, v4, -0x44c

    const/4 v11, 0x0

    iget-object v12, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    move-object v7, v13

    invoke-direct/range {v7 .. v12}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    aput-object v13, v6, v4

    add-int/lit8 v4, v4, 0x1

    goto :goto_5

    :cond_5
    new-instance v4, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    iget-object v5, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-direct {v4, v5}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    iput-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDisplayPowerDrainCounter:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    move v4, v1

    :goto_6
    const/16 v5, 0x10

    if-ge v4, v5, :cond_6

    iget-object v5, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSpeakerMediaTimeCounters:[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    new-instance v6, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    iget-object v7, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-direct {v6, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    aput-object v6, v5, v4

    iget-object v5, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSpeakerCallTimeCounters:[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    new-instance v6, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    iget-object v7, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-direct {v6, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    aput-object v6, v5, v4

    add-int/lit8 v4, v4, 0x1

    goto :goto_6

    :cond_6
    new-instance v4, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    const/4 v7, 0x0

    const/4 v8, -0x4

    const/4 v9, 0x0

    iget-object v10, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    move-object v5, v4

    invoke-direct/range {v5 .. v10}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    iput-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mTxPowerSharingTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    const-wide/16 v4, 0x0

    iput-wide v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mTxPowerSharingDischargeMah:J

    new-instance v4, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget-object v7, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    const/4 v8, 0x0

    const/4 v9, -0x1

    const/4 v10, 0x0

    iget-object v11, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    move-object v6, v4

    invoke-direct/range {v6 .. v11}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    iput-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileActiveTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    new-instance v4, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget-object v13, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    const/4 v14, 0x0

    const/4 v15, -0x1

    const/16 v16, 0x0

    iget-object v5, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    move-object v12, v4

    move-object/from16 v17, v5

    invoke-direct/range {v12 .. v17}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    iput-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileActive5GTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    new-instance v4, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget-object v7, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    iget-object v11, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    move-object v6, v4

    invoke-direct/range {v6 .. v11}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    iput-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenOnGpsTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    new-instance v4, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget-object v13, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    const/16 v15, -0xa

    iget-object v5, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    move-object v12, v4

    move-object/from16 v17, v5

    invoke-direct/range {v12 .. v17}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    iput-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mInteractiveTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    new-instance v4, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget-object v7, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    const/4 v9, -0x2

    iget-object v11, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    move-object v6, v4

    invoke-direct/range {v6 .. v11}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    iput-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerSaveModeEnabledTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    new-instance v4, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget-object v13, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    const/16 v15, -0xb

    iget-object v5, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    move-object v12, v4

    move-object/from16 v17, v5

    invoke-direct/range {v12 .. v17}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    iput-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeviceIdleModeLightTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    new-instance v4, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget-object v7, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    const/16 v9, -0xe

    iget-object v11, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    move-object v6, v4

    invoke-direct/range {v6 .. v11}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    iput-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeviceIdleModeFullTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    new-instance v4, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget-object v13, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    const/16 v15, -0xf

    iget-object v5, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    move-object v12, v4

    move-object/from16 v17, v5

    invoke-direct/range {v12 .. v17}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    iput-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeviceLightIdlingTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    new-instance v4, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget-object v7, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    const/16 v9, -0xc

    iget-object v11, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    move-object v6, v4

    invoke-direct/range {v6 .. v11}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    iput-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeviceIdlingTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    new-instance v4, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget-object v13, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    const/4 v15, -0x3

    iget-object v5, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    move-object v12, v4

    move-object/from16 v17, v5

    invoke-direct/range {v12 .. v17}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    iput-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    move v4, v1

    :goto_7
    invoke-static {}, Landroid/telephony/CellSignalStrength;->getNumSignalStrengthLevels()I

    move-result v5

    if-ge v4, v5, :cond_7

    iget-object v5, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    new-instance v12, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget-object v7, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    const/4 v8, 0x0

    rsub-int v9, v4, -0xc8

    const/4 v10, 0x0

    iget-object v11, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    move-object v6, v12

    invoke-direct/range {v6 .. v11}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    aput-object v12, v5, v4

    add-int/lit8 v4, v4, 0x1

    goto :goto_7

    :cond_7
    new-instance v4, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    const/4 v7, 0x0

    const/16 v8, -0xc7

    const/4 v9, 0x0

    iget-object v10, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    move-object v5, v4

    invoke-direct/range {v5 .. v10}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    iput-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    move v4, v1

    :goto_8
    sget v5, Landroid/os/BatteryStats;->NUM_DATA_CONNECTION_TYPES:I

    if-ge v4, v5, :cond_8

    iget-object v5, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    new-instance v12, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget-object v7, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    const/4 v8, 0x0

    rsub-int v9, v4, -0x12c

    const/4 v10, 0x0

    iget-object v11, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    move-object v6, v12

    invoke-direct/range {v6 .. v11}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    aput-object v12, v5, v4

    add-int/lit8 v4, v4, 0x1

    goto :goto_8

    :cond_8
    move v4, v1

    :goto_9
    const/16 v5, 0xa

    if-ge v4, v5, :cond_9

    iget-object v5, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    new-instance v6, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    iget-object v7, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-direct {v6, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    aput-object v6, v5, v4

    iget-object v5, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    new-instance v6, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    iget-object v7, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-direct {v6, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    aput-object v6, v5, v4

    add-int/lit8 v4, v4, 0x1

    goto :goto_9

    :cond_9
    new-instance v4, Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;

    iget-object v5, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    iget-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-direct {v4, v5, v6, v2}, Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;I)V

    iput-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiActivity:Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;

    new-instance v4, Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;

    iget-object v5, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    iget-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-direct {v4, v5, v6, v2}, Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;I)V

    iput-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBluetoothActivity:Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;

    new-instance v2, Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;

    iget-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    iget-object v5, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-static {}, Landroid/telephony/ModemActivityInfo;->getNumTxPowerLevels()I

    move-result v6

    invoke-direct {v2, v4, v5, v6}, Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;I)V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mModemActivity:Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;

    new-instance v2, Lcom/android/server/power/stats/BatteryStatsImpl$ModemActivityCounterImpl;

    iget-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-direct {v2, v4, v3}, Lcom/android/server/power/stats/BatteryStatsImpl$ModemActivityCounterImpl;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;I)V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNetworkModemActivity:Lcom/android/server/power/stats/BatteryStatsImpl$ModemActivityCounterImpl;

    new-instance v2, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    const/4 v7, 0x0

    const/16 v8, -0x190

    const/4 v9, 0x0

    iget-object v10, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    move-object v5, v2

    invoke-direct/range {v5 .. v10}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    new-instance v2, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget-object v12, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    const/4 v13, 0x0

    const/16 v14, -0x191

    const/4 v15, 0x0

    iget-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    move-object v11, v2

    move-object/from16 v16, v4

    invoke-direct/range {v11 .. v16}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioActivePerAppTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    new-instance v2, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    iget-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-direct {v2, v4}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioActiveAdjustedTime:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    new-instance v2, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    iget-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-direct {v2, v4}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioActiveUnknownTime:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    new-instance v2, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    iget-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-direct {v2, v4}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioActiveUnknownCount:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    new-instance v2, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    const/16 v8, 0x17

    iget-object v10, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    move-object v5, v2

    invoke-direct/range {v5 .. v10}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiMulticastWakelockTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    new-instance v2, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget-object v12, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    const/4 v14, -0x4

    iget-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    move-object v11, v2

    move-object/from16 v16, v4

    invoke-direct/range {v11 .. v16}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    new-instance v2, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    const/4 v8, -0x5

    iget-object v10, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    move-object v5, v2

    invoke-direct/range {v5 .. v10}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mGlobalWifiRunningTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    move v2, v1

    :goto_a
    const/16 v4, 0x8

    if-ge v2, v4, :cond_a

    iget-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    new-instance v11, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    const/4 v7, 0x0

    rsub-int v8, v2, -0x258

    const/4 v9, 0x0

    iget-object v10, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    move-object v5, v11

    invoke-direct/range {v5 .. v10}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    aput-object v11, v4, v2

    add-int/lit8 v2, v2, 0x1

    goto :goto_a

    :cond_a
    move v2, v1

    :goto_b
    const/16 v4, 0xd

    if-ge v2, v4, :cond_b

    iget-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    new-instance v11, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    const/4 v7, 0x0

    rsub-int v8, v2, -0x2bc

    const/4 v9, 0x0

    iget-object v10, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    move-object v5, v11

    invoke-direct/range {v5 .. v10}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    aput-object v11, v4, v2

    add-int/lit8 v2, v2, 0x1

    goto :goto_b

    :cond_b
    move v2, v1

    :goto_c
    if-ge v2, v3, :cond_c

    iget-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    new-instance v11, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    const/4 v7, 0x0

    rsub-int v8, v2, -0x320

    const/4 v9, 0x0

    iget-object v10, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    move-object v5, v11

    invoke-direct/range {v5 .. v10}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    aput-object v11, v4, v2

    add-int/lit8 v2, v2, 0x1

    goto :goto_c

    :cond_c
    new-instance v2, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget-object v5, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    const/4 v6, 0x0

    const/16 v7, -0x384

    const/4 v8, 0x0

    iget-object v9, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    move-object v4, v2

    invoke-direct/range {v4 .. v9}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiActiveTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    move v2, v1

    :goto_d
    iget-object v3, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    array-length v4, v3

    if-ge v2, v4, :cond_d

    new-instance v4, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    const/4 v7, 0x0

    rsub-int v8, v2, -0x3e8

    const/4 v9, 0x0

    iget-object v10, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    move-object v5, v4

    invoke-direct/range {v5 .. v10}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    aput-object v4, v3, v2

    add-int/lit8 v2, v2, 0x1

    goto :goto_d

    :cond_d
    new-instance v2, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    const/4 v5, 0x0

    const/4 v6, -0x7

    const/4 v7, 0x0

    iget-object v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    move-object v3, v2

    invoke-direct/range {v3 .. v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mAudioOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    new-instance v2, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget-object v10, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    const/4 v11, 0x0

    const/4 v12, -0x8

    const/4 v13, 0x0

    iget-object v14, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    move-object v9, v2

    invoke-direct/range {v9 .. v14}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mVideoOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    new-instance v2, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    const/16 v6, -0x9

    iget-object v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    move-object v3, v2

    invoke-direct/range {v3 .. v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    new-instance v2, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget-object v10, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    const/16 v12, -0xd

    iget-object v14, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    move-object v9, v2

    invoke-direct/range {v9 .. v14}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCameraOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    new-instance v2, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    const/16 v6, -0xe

    iget-object v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    move-object v3, v2

    invoke-direct/range {v3 .. v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBluetoothScanTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    new-instance v2, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    iget-object v3, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-direct {v2, v3}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOffCounter:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    new-instance v2, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    iget-object v3, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-direct {v2, v3}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenDozeCounter:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    new-instance v2, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    iget-object v3, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-direct {v2, v3}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeLightDozeCounter:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    new-instance v2, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    iget-object v3, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-direct {v2, v3}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeDeepDozeCounter:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    new-instance v2, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    iget-object v3, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-direct {v2, v3}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeCounter:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    iput v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeUnplugLevel:I

    const/4 v2, -0x1

    iput v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargePlugLevel:I

    iput v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeCurrentLevel:I

    iput v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryLevel:I

    return-void
.end method

.method public initTimes(JJ)V
    .locals 2

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v0}, Lcom/android/internal/os/Clock;->currentTimeMillis()J

    move-result-wide v0

    iput-wide v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mStartClockTimeMs:J

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;->init(JJ)V

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;->init(JJ)V

    const-wide/16 v0, 0x0

    iput-wide v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mRealtimeUs:J

    iput-wide v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUptimeUs:J

    iput-wide p3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mRealtimeStartUs:J

    iput-wide p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUptimeStartUs:J

    return-void
.end method

.method public isCharging()Z
    .locals 0

    iget-boolean p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCharging:Z

    return p0
.end method

.method public isCpuClusterAvailableLocked()Z
    .locals 7

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-virtual {v0}, Lcom/android/internal/os/PowerProfile;->getNumCpuClusters()I

    move-result v0

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    if-lez v1, :cond_2

    const/4 v2, 0x0

    move v3, v2

    :goto_0
    if-ge v3, v1, :cond_2

    iget-object v4, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v4, v3}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v4

    iget-object v5, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v5, v4}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    invoke-virtual {v4}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->getCpuClusterTimes()[J

    move-result-object v4

    if-eqz v4, :cond_1

    array-length v5, v4

    if-eq v0, v5, :cond_1

    new-instance p0, Ljava/lang/StringBuilder;

    const-string v0, "Kernel table:: "

    invoke-direct {p0, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    array-length v0, v4

    move v1, v2

    :goto_1
    if-ge v1, v0, :cond_0

    aget-wide v5, v4, v1

    invoke-virtual {p0, v5, v6}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v3, " "

    invoke-virtual {p0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    :cond_0
    const-string v0, "BatteryStatsImpl"

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-static {v0, p0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    return v2

    :cond_1
    add-int/lit8 v3, v3, 0x1

    goto :goto_0

    :cond_2
    const/4 p0, 0x1

    return p0
.end method

.method public isCpuFrequencyAvailableLocked()Z
    .locals 7

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-virtual {v0}, Lcom/android/internal/os/PowerProfile;->getNumCpuClusters()I

    move-result v0

    const/4 v1, 0x0

    move v2, v1

    move v3, v2

    :goto_0
    if-ge v2, v0, :cond_0

    iget-object v4, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-virtual {v4, v2}, Lcom/android/internal/os/PowerProfile;->getNumSpeedStepsInCpuCluster(I)I

    move-result v4

    add-int/2addr v3, v4

    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    :cond_0
    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v0}, Landroid/util/SparseArray;->size()I

    move-result v0

    if-lez v0, :cond_3

    move v2, v1

    :goto_1
    if-ge v2, v0, :cond_3

    iget-object v4, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v4, v2}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v4

    iget-object v5, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v5, v4}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    invoke-virtual {v4, v1}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->getCpuFreqTimes(I)[J

    move-result-object v4

    if-eqz v4, :cond_2

    array-length v5, v4

    if-eq v3, v5, :cond_2

    new-instance p0, Ljava/lang/StringBuilder;

    const-string v0, "Kernel frequency table:: "

    invoke-direct {p0, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    array-length v0, v4

    move v2, v1

    :goto_2
    if-ge v2, v0, :cond_1

    aget-wide v5, v4, v2

    invoke-virtual {p0, v5, v6}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v3, " "

    invoke-virtual {p0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    add-int/lit8 v2, v2, 0x1

    goto :goto_2

    :cond_1
    const-string v0, "BatteryStatsImpl"

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-static {v0, p0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    return v1

    :cond_2
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    :cond_3
    const/4 p0, 0x1

    return p0
.end method

.method public isJdmModel()Z
    .locals 0

    iget-boolean p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsJdmModel:Z

    return p0
.end method

.method public final isMobileRadioEnergyConsumerSupportedLocked()Z
    .locals 1

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mGlobalEnergyConsumerStats:Lcom/android/internal/power/EnergyConsumerStats;

    if-nez p0, :cond_0

    const/4 p0, 0x0

    return p0

    :cond_0
    const/4 v0, 0x7

    invoke-virtual {p0, v0}, Lcom/android/internal/power/EnergyConsumerStats;->isStandardBucketSupported(I)Z

    move-result p0

    return p0
.end method

.method public isOnBattery()Z
    .locals 0

    iget-boolean p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBattery:Z

    return p0
.end method

.method public isOnBatteryLocked()Z
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;->isRunning()Z

    move-result p0

    return p0
.end method

.method public isOnBatteryScreenOffLocked()Z
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;->isRunning()Z

    move-result p0

    return p0
.end method

.method public isProcessStateDataAvailable()Z
    .locals 0

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->trackPerProcStateCpuTimes()Z

    move-result p0

    return p0
.end method

.method public isUsageHistoryEnabled()Z
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mConstants:Lcom/android/server/power/stats/BatteryStatsImpl$Constants;

    iget-boolean p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl$Constants;->RECORD_USAGE_HISTORY:Z

    return p0
.end method

.method public iterateBatteryStatsHistory()Lcom/android/internal/os/BatteryStatsHistoryIterator;
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsHistory;->copy()Lcom/android/internal/os/BatteryStatsHistory;

    move-result-object p0

    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsHistory;->iterate()Lcom/android/internal/os/BatteryStatsHistoryIterator;

    move-result-object p0

    return-object p0
.end method

.method public makeBackupData()V
    .locals 11

    const/4 v4, -0x1

    const-wide/16 v5, -0x1

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v0}, Lcom/android/internal/os/Clock;->currentTimeMillis()J

    move-result-wide v0

    new-instance v2, Ljava/text/SimpleDateFormat;

    const-string/jumbo v3, "yyMMddHHmmss"

    invoke-direct {v2, v3}, Ljava/text/SimpleDateFormat;-><init>(Ljava/lang/String;)V

    new-instance v3, Ljava/util/Date;

    invoke-direct {v3, v0, v1}, Ljava/util/Date;-><init>(J)V

    invoke-virtual {v2, v3}, Ljava/text/SimpleDateFormat;->format(Ljava/util/Date;)Ljava/lang/String;

    move-result-object v0

    const/4 v1, 0x0

    :try_start_0
    new-instance v7, Ljava/io/File;

    const-string v2, "/data/log/batterystats/"

    invoke-direct {v7, v2}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    invoke-virtual {v7}, Ljava/io/File;->exists()Z

    move-result v2

    if-nez v2, :cond_0

    return-void

    :cond_0
    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->hasAvailableStorage()Z

    move-result v2
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_3
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    const-string v8, "BatteryStatsImpl"

    if-nez v2, :cond_1

    :try_start_1
    const-string p0, "available space is short"

    invoke-static {v8, p0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    return-void

    :cond_1
    new-instance v9, Ljava/io/FileOutputStream;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "/data/log/batterystats/newbatterystats"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v9, v0}, Ljava/io/FileOutputStream;-><init>(Ljava/lang/String;)V
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_3
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    :try_start_2
    new-instance v10, Ljava/io/PrintWriter;

    invoke-direct {v10, v9}, Ljava/io/PrintWriter;-><init>(Ljava/io/OutputStream;)V
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    const/16 v3, 0x8

    const/4 v1, 0x0

    move-object v0, p0

    move-object v2, v10

    :try_start_3
    invoke-virtual/range {v0 .. v6}, Lcom/android/server/power/stats/BatteryStatsImpl;->dump(Landroid/content/Context;Ljava/io/PrintWriter;IIJ)V

    invoke-virtual {v9}, Ljava/io/FileOutputStream;->getFD()Ljava/io/FileDescriptor;

    move-result-object p0

    const/16 v0, 0x3e8

    const/16 v1, 0x3ef

    const/16 v2, 0x1a0

    invoke-static {p0, v2, v0, v1}, Landroid/os/FileUtils;->setPermissions(Ljava/io/FileDescriptor;III)I

    invoke-virtual {v10}, Ljava/io/PrintWriter;->close()V

    invoke-virtual {v9}, Ljava/io/FileOutputStream;->close()V

    invoke-virtual {v7}, Ljava/io/File;->listFiles()[Ljava/io/File;

    move-result-object p0

    if-eqz p0, :cond_5

    invoke-static {p0}, Ljava/util/Arrays;->sort([Ljava/lang/Object;)V

    array-length v0, p0

    add-int/lit8 v0, v0, -0x1

    const-wide/16 v1, 0x0

    :goto_0
    const/4 v3, -0x1

    if-ltz v0, :cond_3

    aget-object v4, p0, v0

    if-eqz v4, :cond_2

    invoke-virtual {v4}, Ljava/io/File;->length()J

    move-result-wide v4

    add-long/2addr v1, v4

    const-wide/32 v4, 0x3200000

    cmp-long v4, v1, v4

    if-lez v4, :cond_2

    goto :goto_1

    :cond_2
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    :cond_3
    move v0, v3

    :goto_1
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "count="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    array-length v5, p0

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v5, " size="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v1, v2}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v1, " index="

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v8, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    if-eq v0, v3, :cond_5

    const/4 v1, 0x0

    :goto_2
    if-gt v1, v0, :cond_5

    aget-object v2, p0, v1

    if-eqz v2, :cond_4

    invoke-virtual {v2}, Ljava/io/File;->delete()Z
    :try_end_3
    .catch Ljava/lang/Exception; {:try_start_3 .. :try_end_3} :catch_1
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :cond_4
    add-int/lit8 v1, v1, 0x1

    goto :goto_2

    :cond_5
    :try_start_4
    invoke-virtual {v10}, Ljava/io/PrintWriter;->close()V
    :try_end_4
    .catch Ljava/lang/Exception; {:try_start_4 .. :try_end_4} :catch_0

    :catch_0
    :goto_3
    :try_start_5
    invoke-virtual {v9}, Ljava/io/FileOutputStream;->close()V
    :try_end_5
    .catch Ljava/lang/Exception; {:try_start_5 .. :try_end_5} :catch_5

    goto :goto_5

    :catchall_0
    move-exception p0

    move-object v1, v10

    goto :goto_6

    :catch_1
    move-exception p0

    move-object v1, v10

    goto :goto_4

    :catch_2
    move-exception p0

    goto :goto_4

    :catchall_1
    move-exception p0

    move-object v9, v1

    goto :goto_6

    :catch_3
    move-exception p0

    move-object v9, v1

    :goto_4
    :try_start_6
    invoke-virtual {p0}, Ljava/lang/Exception;->printStackTrace()V
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_2

    if-eqz v1, :cond_6

    :try_start_7
    invoke-virtual {v1}, Ljava/io/PrintWriter;->close()V
    :try_end_7
    .catch Ljava/lang/Exception; {:try_start_7 .. :try_end_7} :catch_4

    :catch_4
    :cond_6
    if-eqz v9, :cond_7

    goto :goto_3

    :catch_5
    :cond_7
    :goto_5
    return-void

    :catchall_2
    move-exception p0

    :goto_6
    if-eqz v1, :cond_8

    :try_start_8
    invoke-virtual {v1}, Ljava/io/PrintWriter;->close()V
    :try_end_8
    .catch Ljava/lang/Exception; {:try_start_8 .. :try_end_8} :catch_6

    :catch_6
    :cond_8
    if-eqz v9, :cond_9

    :try_start_9
    invoke-virtual {v9}, Ljava/io/FileOutputStream;->close()V
    :try_end_9
    .catch Ljava/lang/Exception; {:try_start_9 .. :try_end_9} :catch_7

    :catch_7
    :cond_9
    throw p0
.end method

.method public final mapIsolatedUid(I)I
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsolatedUids:Landroid/util/SparseIntArray;

    invoke-virtual {p0, p1, p1}, Landroid/util/SparseIntArray;->get(II)I

    move-result p0

    return p0
.end method

.method public final mapUid(I)I
    .locals 1

    invoke-static {p1}, Landroid/os/Process;->isSdkSandboxUid(I)Z

    move-result v0

    if-eqz v0, :cond_0

    invoke-static {p1}, Landroid/os/Process;->getAppUidForSdkSandboxUid(I)I

    move-result p0

    return p0

    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapIsolatedUid(I)I

    move-result p0

    return p0
.end method

.method public markPartialTimersAsEligible()V
    .locals 5

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastPartialTimers:Ljava/util/ArrayList;

    invoke-static {v0, v1}, Lcom/android/internal/util/ArrayUtils;->referenceEquals(Ljava/util/ArrayList;Ljava/util/ArrayList;)Z

    move-result v0

    const/4 v1, 0x1

    if-eqz v0, :cond_0

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    sub-int/2addr v0, v1

    :goto_0
    if-ltz v0, :cond_2

    iget-object v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iput-boolean v1, v2, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->mInList:Z

    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    :cond_0
    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastPartialTimers:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    sub-int/2addr v0, v1

    :goto_1
    const/4 v2, 0x0

    if-ltz v0, :cond_1

    iget-object v3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastPartialTimers:Ljava/util/ArrayList;

    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iput-boolean v2, v3, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->mInList:Z

    add-int/lit8 v0, v0, -0x1

    goto :goto_1

    :cond_1
    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastPartialTimers:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->clear()V

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    :goto_2
    if-ge v2, v0, :cond_2

    iget-object v3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iput-boolean v1, v3, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->mInList:Z

    iget-object v4, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastPartialTimers:Ljava/util/ArrayList;

    invoke-virtual {v4, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    add-int/lit8 v2, v2, 0x1

    goto :goto_2

    :cond_2
    return-void
.end method

.method public maybeRemoveIsolatedUidLocked(IJJ)Z
    .locals 9

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsolatedUidRefCounts:Landroid/util/SparseIntArray;

    const/4 v1, 0x0

    invoke-virtual {v0, p1, v1}, Landroid/util/SparseIntArray;->get(II)I

    move-result v0

    const/4 v2, 0x1

    sub-int/2addr v0, v2

    if-lez v0, :cond_0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsolatedUidRefCounts:Landroid/util/SparseIntArray;

    invoke-virtual {p0, p1, v0}, Landroid/util/SparseIntArray;->put(II)V

    return v1

    :cond_0
    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsolatedUids:Landroid/util/SparseIntArray;

    invoke-virtual {v0, p1}, Landroid/util/SparseIntArray;->indexOfKey(I)I

    move-result v0

    if-ltz v0, :cond_1

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsolatedUids:Landroid/util/SparseIntArray;

    invoke-virtual {v1, v0}, Landroid/util/SparseIntArray;->valueAt(I)I

    move-result v4

    move-object v3, p0

    move-wide v5, p2

    move-wide v7, p4

    invoke-virtual/range {v3 .. v8}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object p4

    invoke-virtual {p4, p1}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->removeIsolatedUid(I)V

    iget-object p4, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsolatedUids:Landroid/util/SparseIntArray;

    invoke-virtual {p4, v0}, Landroid/util/SparseIntArray;->removeAt(I)V

    iget-object p4, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsolatedUidRefCounts:Landroid/util/SparseIntArray;

    invoke-virtual {p4, p1}, Landroid/util/SparseIntArray;->delete(I)V

    goto :goto_0

    :cond_1
    new-instance p4, Ljava/lang/StringBuilder;

    invoke-direct {p4}, Ljava/lang/StringBuilder;-><init>()V

    const-string p5, "Attempted to remove untracked isolated uid ("

    invoke-virtual {p4, p5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p4, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p5, ")"

    invoke-virtual {p4, p5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p4

    const-string p5, "BatteryStatsImpl"

    invoke-static {p5, p4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    :goto_0
    iget-object p4, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPendingRemovedUids:Ljava/util/Queue;

    new-instance p5, Lcom/android/server/power/stats/BatteryStatsImpl$UidToRemove;

    invoke-direct {p5, p0, p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$UidToRemove;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl;IJ)V

    invoke-interface {p4, p5}, Ljava/util/Queue;->add(Ljava/lang/Object;)Z

    return v2
.end method

.method public maybeResetWhilePluggedInLocked()V
    .locals 5

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v0}, Lcom/android/internal/os/Clock;->elapsedRealtime()J

    move-result-wide v0

    invoke-virtual {p0, v0, v1}, Lcom/android/server/power/stats/BatteryStatsImpl;->shouldResetWhilePluggedInLocked(J)Z

    move-result v2

    if-eqz v2, :cond_0

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Resetting due to long plug in duration. elapsed time = "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0, v1}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v0, " ms, last plug in time = "

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-wide v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryPluggedInRealTimeMs:J

    invoke-virtual {v2, v0, v1}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v0, " ms, last reset time = "

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-wide v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mRealtimeStartUs:J

    const-wide/16 v3, 0x3e8

    div-long/2addr v0, v3

    invoke-virtual {v2, v0, v1}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "BatteryStatsImpl"

    invoke-static {v1, v0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    const/4 v0, 0x5

    invoke-virtual {p0, v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->resetAllStatsAndHistoryLocked(I)V

    :cond_0
    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->scheduleNextResetWhilePluggedInCheck()V

    return-void
.end method

.method public final maybeUpdateOverallScreenBrightness(IIJJ)V
    .locals 7

    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenBrightnessBin:I

    if-eq v0, p1, :cond_5

    if-ltz p1, :cond_0

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    move-wide v2, p3

    move-wide v4, p5

    move v6, p1

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsHistory;->recordScreenBrightnessEvent(JJI)V

    :cond_0
    iget p5, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenState:I

    const/4 p6, 0x2

    if-ne p5, p6, :cond_4

    iget p5, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenBrightnessBin:I

    if-ltz p5, :cond_1

    iget-object p6, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object p5, p6, p5

    invoke-virtual {p5, p3, p4}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    iget-object p5, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget p6, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenBrightnessBin:I

    aget-object p5, p5, p6

    invoke-virtual {p5, p3, p4}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    iget-object p5, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenAutoBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget p6, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenBrightnessBin:I

    aget-object p5, p5, p6

    invoke-virtual {p5, p3, p4}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    iget-object p5, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenAutoBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget p6, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenBrightnessBin:I

    aget-object p5, p5, p6

    invoke-virtual {p5, p3, p4}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    :cond_1
    if-ltz p1, :cond_4

    const/4 p5, 0x1

    if-ne p2, p5, :cond_2

    goto :goto_0

    :cond_2
    const/4 p5, 0x0

    :goto_0
    iget-object p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object p2, p2, p1

    invoke-virtual {p2, p3, p4}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    if-eqz p5, :cond_3

    iget-object p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object p2, p2, p1

    invoke-virtual {p2, p3, p4}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    :cond_3
    iget-boolean p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mAutoBrightnessMode:Z

    if-eqz p2, :cond_4

    iget-object p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenAutoBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object p2, p2, p1

    invoke-virtual {p2, p3, p4}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    if-eqz p5, :cond_4

    iget-object p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenAutoBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object p2, p2, p1

    invoke-virtual {p2, p3, p4}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    :cond_4
    iput p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenBrightnessBin:I

    :cond_5
    return-void
.end method

.method public noteActivityPausedLocked(IJJ)V
    .locals 6

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v1

    move-object v0, p0

    move-wide v2, p2

    move-wide v4, p4

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object p0

    invoke-virtual {p0, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteActivityPausedLocked(J)V

    return-void
.end method

.method public noteActivityResumedLocked(IJJ)V
    .locals 6

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v1

    move-object v0, p0

    move-wide v2, p2

    move-wide v4, p4

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object p0

    invoke-virtual {p0, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteActivityResumedLocked(J)V

    return-void
.end method

.method public noteAlarmFinishLocked(Ljava/lang/String;Landroid/os/WorkSource;IJJ)V
    .locals 9

    const/16 v1, 0x400d

    move-object v0, p0

    move-object v2, p1

    move-object v3, p2

    move v4, p3

    move-wide v5, p4

    move-wide v7, p6

    invoke-virtual/range {v0 .. v8}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteAlarmStartOrFinishLocked(ILjava/lang/String;Landroid/os/WorkSource;IJJ)V

    return-void
.end method

.method public noteAlarmStartLocked(Ljava/lang/String;Landroid/os/WorkSource;IJJ)V
    .locals 9

    const v1, 0x800d

    move-object v0, p0

    move-object v2, p1

    move-object v3, p2

    move v4, p3

    move-wide v5, p4

    move-wide v7, p6

    invoke-virtual/range {v0 .. v8}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteAlarmStartOrFinishLocked(ILjava/lang/String;Landroid/os/WorkSource;IJJ)V

    return-void
.end method

.method public final noteAlarmStartOrFinishLocked(ILjava/lang/String;Landroid/os/WorkSource;IJJ)V
    .locals 14

    move-object v0, p0

    move v9, p1

    move-object/from16 v10, p2

    move-object/from16 v11, p3

    iget-boolean v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mRecordAllHistory:Z

    if-nez v1, :cond_0

    return-void

    :cond_0
    const/4 v12, 0x0

    if-eqz v11, :cond_4

    move v13, v12

    :goto_0
    invoke-virtual/range {p3 .. p3}, Landroid/os/WorkSource;->size()I

    move-result v1

    if-ge v13, v1, :cond_2

    invoke-virtual {v11, v13}, Landroid/os/WorkSource;->getUid(I)I

    move-result v1

    invoke-virtual {p0, v1}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v8

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    invoke-virtual {v1, p1, v10, v8, v12}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result v1

    if-eqz v1, :cond_1

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    move-wide/from16 v2, p5

    move-wide/from16 v4, p7

    move v6, p1

    move-object/from16 v7, p2

    invoke-virtual/range {v1 .. v8}, Lcom/android/internal/os/BatteryStatsHistory;->recordEvent(JJILjava/lang/String;I)V

    :cond_1
    add-int/lit8 v13, v13, 0x1

    goto :goto_0

    :cond_2
    invoke-virtual/range {p3 .. p3}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v11

    if-eqz v11, :cond_5

    move v13, v12

    :goto_1
    invoke-interface {v11}, Ljava/util/List;->size()I

    move-result v1

    if-ge v13, v1, :cond_5

    invoke-interface {v11, v13}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/os/WorkSource$WorkChain;

    invoke-virtual {v1}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v1

    invoke-virtual {p0, v1}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v8

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    invoke-virtual {v1, p1, v10, v8, v12}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result v1

    if-eqz v1, :cond_3

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    move-wide/from16 v2, p5

    move-wide/from16 v4, p7

    move v6, p1

    move-object/from16 v7, p2

    invoke-virtual/range {v1 .. v8}, Lcom/android/internal/os/BatteryStatsHistory;->recordEvent(JJILjava/lang/String;I)V

    :cond_3
    add-int/lit8 v13, v13, 0x1

    goto :goto_1

    :cond_4
    move/from16 v1, p4

    invoke-virtual {p0, v1}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v7

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    invoke-virtual {v1, p1, v10, v7, v12}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result v1

    if-eqz v1, :cond_5

    iget-object v0, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    move-wide/from16 v1, p5

    move-wide/from16 v3, p7

    move v5, p1

    move-object/from16 v6, p2

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsHistory;->recordEvent(JJILjava/lang/String;I)V

    :cond_5
    return-void
.end method

.method public noteAudioOffLocked(IJJ)V
    .locals 9

    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mAudioOnNesting:I

    if-nez v0, :cond_0

    return-void

    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v2

    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mAudioOnNesting:I

    add-int/lit8 p1, p1, -0x1

    iput p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mAudioOnNesting:I

    if-nez p1, :cond_1

    iget-object v3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/high16 v8, 0x400000

    move-wide v4, p2

    move-wide v6, p4

    invoke-virtual/range {v3 .. v8}, Lcom/android/internal/os/BatteryStatsHistory;->recordStateStopEvent(JJI)V

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mAudioOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    :cond_1
    move-object v1, p0

    move-wide v3, p2

    move-wide v5, p4

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object p0

    invoke-virtual {p0, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteAudioTurnedOffLocked(J)V

    return-void
.end method

.method public noteAudioOnLocked(IJJ)V
    .locals 8

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v1

    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mAudioOnNesting:I

    if-nez p1, :cond_0

    iget-object v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/high16 v7, 0x400000

    move-wide v3, p2

    move-wide v5, p4

    invoke-virtual/range {v2 .. v7}, Lcom/android/internal/os/BatteryStatsHistory;->recordStateStartEvent(JJI)V

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mAudioOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    :cond_0
    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mAudioOnNesting:I

    add-int/lit8 p1, p1, 0x1

    iput p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mAudioOnNesting:I

    move-object v0, p0

    move-wide v2, p2

    move-wide v4, p4

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object p0

    invoke-virtual {p0, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteAudioTurnedOnLocked(J)V

    return-void
.end method

.method public noteBinderCallStats(IJLjava/util/Collection;JJ)V
    .locals 6

    monitor-enter p0

    move-object v0, p0

    move v1, p1

    move-wide v2, p5

    move-wide v4, p7

    :try_start_0
    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object p1

    invoke-virtual {p1, p2, p3, p4}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteBinderCallStatsLocked(JLjava/util/Collection;)V

    monitor-exit p0

    return-void

    :catchall_0
    move-exception p1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw p1
.end method

.method public noteBinderThreadNativeIds([I)V
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSystemServerCpuThreadReader:Lcom/android/server/power/stats/SystemServerCpuThreadReader;

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/SystemServerCpuThreadReader;->setBinderThreadNativeTids([I)V

    return-void
.end method

.method public noteBluetoothDutyScanStartedFromSourceLocked(Landroid/os/WorkSource;ZIJJ)V
    .locals 13

    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v0

    const/4 v1, 0x0

    move v2, v1

    :goto_0
    if-ge v2, v0, :cond_0

    const/4 v4, 0x0

    move-object v12, p1

    invoke-virtual {p1, v2}, Landroid/os/WorkSource;->get(I)I

    move-result v5

    move-object v3, p0

    move v6, p2

    move/from16 v7, p3

    move-wide/from16 v8, p4

    move-wide/from16 v10, p6

    invoke-virtual/range {v3 .. v11}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteBluetoothDutyScanStartedLocked(Landroid/os/WorkSource$WorkChain;IZIJJ)V

    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    :cond_0
    move-object v12, p1

    invoke-virtual {p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v0

    if-eqz v0, :cond_1

    :goto_1
    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v2

    if-ge v1, v2, :cond_1

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    move-object v4, v2

    check-cast v4, Landroid/os/WorkSource$WorkChain;

    const/4 v5, -0x1

    move-object v3, p0

    move v6, p2

    move/from16 v7, p3

    move-wide/from16 v8, p4

    move-wide/from16 v10, p6

    invoke-virtual/range {v3 .. v11}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteBluetoothDutyScanStartedLocked(Landroid/os/WorkSource$WorkChain;IZIJJ)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    :cond_1
    return-void
.end method

.method public final noteBluetoothDutyScanStartedLocked(Landroid/os/WorkSource$WorkChain;IZIJJ)V
    .locals 6

    if-eqz p1, :cond_0

    invoke-virtual {p1}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result p2

    :cond_0
    move v1, p2

    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBluetoothScanNesting:I

    const/4 p2, 0x1

    if-nez p1, :cond_1

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    invoke-virtual {p1, p2}, Lcom/android/internal/os/BatteryStatsHistory;->setBluetoothScanState(Z)V

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    invoke-virtual {p1, p5, p6, p7, p8}, Lcom/android/internal/os/BatteryStatsHistory;->writeHistoryItem(JJ)V

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBluetoothScanTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p1, p5, p6}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    :cond_1
    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBluetoothScanNesting:I

    add-int/2addr p1, p2

    iput p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBluetoothScanNesting:I

    move-object v0, p0

    move-wide v2, p5

    move-wide v4, p7

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object p0

    invoke-virtual {p0, p5, p6, p3, p4}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteBluetoothScanStartedLocked(JZI)V

    return-void
.end method

.method public noteBluetoothDutyScanStoppedFromSourceLocked(Landroid/os/WorkSource;ZIJJ)V
    .locals 13

    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v0

    const/4 v1, 0x0

    move v2, v1

    :goto_0
    if-ge v2, v0, :cond_0

    const/4 v4, 0x0

    move-object v12, p1

    invoke-virtual {p1, v2}, Landroid/os/WorkSource;->get(I)I

    move-result v5

    move-object v3, p0

    move v6, p2

    move/from16 v7, p3

    move-wide/from16 v8, p4

    move-wide/from16 v10, p6

    invoke-virtual/range {v3 .. v11}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteBluetoothDutyScanStoppedLocked(Landroid/os/WorkSource$WorkChain;IZIJJ)V

    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    :cond_0
    move-object v12, p1

    invoke-virtual {p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v0

    if-eqz v0, :cond_1

    :goto_1
    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v2

    if-ge v1, v2, :cond_1

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    move-object v4, v2

    check-cast v4, Landroid/os/WorkSource$WorkChain;

    const/4 v5, -0x1

    move-object v3, p0

    move v6, p2

    move/from16 v7, p3

    move-wide/from16 v8, p4

    move-wide/from16 v10, p6

    invoke-virtual/range {v3 .. v11}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteBluetoothDutyScanStoppedLocked(Landroid/os/WorkSource$WorkChain;IZIJJ)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    :cond_1
    return-void
.end method

.method public final noteBluetoothDutyScanStoppedLocked(Landroid/os/WorkSource$WorkChain;IZIJJ)V
    .locals 6

    if-eqz p1, :cond_0

    invoke-virtual {p1}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result p2

    :cond_0
    move v1, p2

    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBluetoothScanNesting:I

    add-int/lit8 p1, p1, -0x1

    iput p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBluetoothScanNesting:I

    if-nez p1, :cond_1

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/4 p2, 0x0

    invoke-virtual {p1, p2}, Lcom/android/internal/os/BatteryStatsHistory;->setBluetoothScanState(Z)V

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    invoke-virtual {p1, p5, p6, p7, p8}, Lcom/android/internal/os/BatteryStatsHistory;->writeHistoryItem(JJ)V

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBluetoothScanTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p1, p5, p6}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    :cond_1
    move-object v0, p0

    move-wide v2, p5

    move-wide v4, p7

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object p0

    invoke-virtual {p0, p5, p6, p3, p4}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteBluetoothScanStoppedLocked(JZI)V

    return-void
.end method

.method public noteBluetoothScanResultsFromSourceLocked(Landroid/os/WorkSource;IJJ)V
    .locals 12

    move-object v6, p0

    move v7, p2

    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v8

    const/4 v9, 0x0

    move v10, v9

    :goto_0
    if-ge v10, v8, :cond_0

    move-object v11, p1

    invoke-virtual {p1, v10}, Landroid/os/WorkSource;->getUid(I)I

    move-result v0

    invoke-virtual {p0, v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v1

    move-object v0, p0

    move-wide v2, p3

    move-wide/from16 v4, p5

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object v0

    invoke-virtual {v0, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteBluetoothScanResultsLocked(I)V

    add-int/lit8 v10, v10, 0x1

    goto :goto_0

    :cond_0
    move-object v11, p1

    invoke-virtual {p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v8

    if-eqz v8, :cond_1

    :goto_1
    invoke-interface {v8}, Ljava/util/List;->size()I

    move-result v0

    if-ge v9, v0, :cond_1

    invoke-interface {v8, v9}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/os/WorkSource$WorkChain;

    invoke-virtual {v0}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v0

    invoke-virtual {p0, v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v1

    move-object v0, p0

    move-wide v2, p3

    move-wide/from16 v4, p5

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object v0

    invoke-virtual {v0, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteBluetoothScanResultsLocked(I)V

    add-int/lit8 v9, v9, 0x1

    goto :goto_1

    :cond_1
    return-void
.end method

.method public noteBluetoothScanStartedFromSourceLocked(Landroid/os/WorkSource;ZJJ)V
    .locals 12

    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v0

    const/4 v1, 0x0

    move v2, v1

    :goto_0
    if-ge v2, v0, :cond_0

    const/4 v4, 0x0

    move-object v11, p1

    invoke-virtual {p1, v2}, Landroid/os/WorkSource;->getUid(I)I

    move-result v5

    move-object v3, p0

    move v6, p2

    move-wide v7, p3

    move-wide/from16 v9, p5

    invoke-virtual/range {v3 .. v10}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteBluetoothScanStartedLocked(Landroid/os/WorkSource$WorkChain;IZJJ)V

    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    :cond_0
    move-object v11, p1

    invoke-virtual {p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v0

    if-eqz v0, :cond_1

    :goto_1
    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v2

    if-ge v1, v2, :cond_1

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    move-object v4, v2

    check-cast v4, Landroid/os/WorkSource$WorkChain;

    const/4 v5, -0x1

    move-object v3, p0

    move v6, p2

    move-wide v7, p3

    move-wide/from16 v9, p5

    invoke-virtual/range {v3 .. v10}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteBluetoothScanStartedLocked(Landroid/os/WorkSource$WorkChain;IZJJ)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    :cond_1
    return-void
.end method

.method public final noteBluetoothScanStartedLocked(Landroid/os/WorkSource$WorkChain;IZJJ)V
    .locals 8

    if-eqz p1, :cond_0

    invoke-virtual {p1}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result p2

    :cond_0
    invoke-virtual {p0, p2}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v1

    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBluetoothScanNesting:I

    if-nez p1, :cond_1

    iget-object v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/high16 v7, 0x100000

    move-wide v3, p4

    move-wide v5, p6

    invoke-virtual/range {v2 .. v7}, Lcom/android/internal/os/BatteryStatsHistory;->recordState2StartEvent(JJI)V

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBluetoothScanTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p1, p4, p5}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    :cond_1
    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBluetoothScanNesting:I

    add-int/lit8 p1, p1, 0x1

    iput p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBluetoothScanNesting:I

    move-object v0, p0

    move-wide v2, p4

    move-wide v4, p6

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object p0

    invoke-virtual {p0, p4, p5, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteBluetoothScanStartedLocked(JZ)V

    return-void
.end method

.method public noteBluetoothScanStoppedFromSourceLocked(Landroid/os/WorkSource;ZJJ)V
    .locals 12

    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v0

    const/4 v1, 0x0

    move v2, v1

    :goto_0
    if-ge v2, v0, :cond_0

    const/4 v4, 0x0

    move-object v11, p1

    invoke-virtual {p1, v2}, Landroid/os/WorkSource;->getUid(I)I

    move-result v5

    move-object v3, p0

    move v6, p2

    move-wide v7, p3

    move-wide/from16 v9, p5

    invoke-virtual/range {v3 .. v10}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteBluetoothScanStoppedLocked(Landroid/os/WorkSource$WorkChain;IZJJ)V

    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    :cond_0
    move-object v11, p1

    invoke-virtual {p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v0

    if-eqz v0, :cond_1

    :goto_1
    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v2

    if-ge v1, v2, :cond_1

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    move-object v4, v2

    check-cast v4, Landroid/os/WorkSource$WorkChain;

    const/4 v5, -0x1

    move-object v3, p0

    move v6, p2

    move-wide v7, p3

    move-wide/from16 v9, p5

    invoke-virtual/range {v3 .. v10}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteBluetoothScanStoppedLocked(Landroid/os/WorkSource$WorkChain;IZJJ)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    :cond_1
    return-void
.end method

.method public final noteBluetoothScanStoppedLocked(Landroid/os/WorkSource$WorkChain;IZJJ)V
    .locals 8

    if-eqz p1, :cond_0

    invoke-virtual {p1}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result p2

    :cond_0
    invoke-virtual {p0, p2}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v1

    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBluetoothScanNesting:I

    add-int/lit8 p1, p1, -0x1

    iput p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBluetoothScanNesting:I

    if-nez p1, :cond_1

    iget-object v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/high16 v7, 0x100000

    move-wide v3, p4

    move-wide v5, p6

    invoke-virtual/range {v2 .. v7}, Lcom/android/internal/os/BatteryStatsHistory;->recordState2StopEvent(JJI)V

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBluetoothScanTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p1, p4, p5}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    :cond_1
    move-object v0, p0

    move-wide v2, p4

    move-wide v4, p6

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object p0

    invoke-virtual {p0, p4, p5, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteBluetoothScanStoppedLocked(JZ)V

    return-void
.end method

.method public noteCameraOffLocked(IJJ)V
    .locals 9

    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCameraOnNesting:I

    if-nez v0, :cond_0

    return-void

    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v2

    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCameraOnNesting:I

    add-int/lit8 p1, p1, -0x1

    iput p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCameraOnNesting:I

    if-nez p1, :cond_1

    iget-object v3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/high16 v8, 0x200000

    move-wide v4, p2

    move-wide v6, p4

    invoke-virtual/range {v3 .. v8}, Lcom/android/internal/os/BatteryStatsHistory;->recordState2StopEvent(JJI)V

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCameraOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    :cond_1
    move-object v1, p0

    move-wide v3, p2

    move-wide v5, p4

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object p1

    invoke-virtual {p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteCameraTurnedOffLocked(J)V

    const-string p1, "camera-off"

    const/16 p2, 0x40

    invoke-virtual {p0, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl;->scheduleSyncExternalStatsLocked(Ljava/lang/String;I)V

    return-void
.end method

.method public noteCameraOnLocked(IJJ)V
    .locals 8

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v1

    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCameraOnNesting:I

    add-int/lit8 v0, p1, 0x1

    iput v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCameraOnNesting:I

    if-nez p1, :cond_0

    iget-object v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/high16 v7, 0x200000

    move-wide v3, p2

    move-wide v5, p4

    invoke-virtual/range {v2 .. v7}, Lcom/android/internal/os/BatteryStatsHistory;->recordState2StartEvent(JJI)V

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCameraOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    :cond_0
    move-object v0, p0

    move-wide v2, p2

    move-wide v4, p4

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object p1

    invoke-virtual {p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteCameraTurnedOnLocked(J)V

    const-string p1, "camera-on"

    const/16 p2, 0x40

    invoke-virtual {p0, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl;->scheduleSyncExternalStatsLocked(Ljava/lang/String;I)V

    return-void
.end method

.method public noteChangeWakelockFromSourceLocked(Landroid/os/WorkSource;ILjava/lang/String;Ljava/lang/String;ILandroid/os/WorkSource;ILjava/lang/String;Ljava/lang/String;IZJJ)V
    .locals 18

    move-object/from16 v0, p1

    move-object/from16 v1, p6

    invoke-static {v0, v1}, Landroid/os/WorkSource;->diffChains(Landroid/os/WorkSource;Landroid/os/WorkSource;)[Ljava/util/ArrayList;

    move-result-object v2

    invoke-virtual/range {p6 .. p6}, Landroid/os/WorkSource;->size()I

    move-result v3

    const/4 v4, 0x0

    move v5, v4

    :goto_0
    if-ge v5, v3, :cond_0

    invoke-virtual {v1, v5}, Landroid/os/WorkSource;->getUid(I)I

    move-result v7

    const/4 v9, 0x0

    move-object/from16 v6, p0

    move/from16 v8, p7

    move-object/from16 v10, p8

    move-object/from16 v11, p9

    move/from16 v12, p10

    move/from16 v13, p11

    move-wide/from16 v14, p12

    move-wide/from16 v16, p14

    invoke-virtual/range {v6 .. v17}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteStartWakeLocked(IILandroid/os/WorkSource$WorkChain;Ljava/lang/String;Ljava/lang/String;IZJJ)V

    add-int/lit8 v5, v5, 0x1

    goto :goto_0

    :cond_0
    if-eqz v2, :cond_1

    aget-object v1, v2, v4

    if-eqz v1, :cond_1

    move v3, v4

    :goto_1
    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v5

    if-ge v3, v5, :cond_1

    invoke-interface {v1, v3}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v5

    move-object v9, v5

    check-cast v9, Landroid/os/WorkSource$WorkChain;

    invoke-virtual {v9}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v7

    move-object/from16 v6, p0

    move/from16 v8, p7

    move-object/from16 v10, p8

    move-object/from16 v11, p9

    move/from16 v12, p10

    move/from16 v13, p11

    move-wide/from16 v14, p12

    move-wide/from16 v16, p14

    invoke-virtual/range {v6 .. v17}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteStartWakeLocked(IILandroid/os/WorkSource$WorkChain;Ljava/lang/String;Ljava/lang/String;IZJJ)V

    add-int/lit8 v3, v3, 0x1

    goto :goto_1

    :cond_1
    invoke-virtual/range {p1 .. p1}, Landroid/os/WorkSource;->size()I

    move-result v1

    move v3, v4

    :goto_2
    if-ge v3, v1, :cond_2

    invoke-virtual {v0, v3}, Landroid/os/WorkSource;->getUid(I)I

    move-result v6

    const/4 v8, 0x0

    move-object/from16 v5, p0

    move/from16 v7, p2

    move-object/from16 v9, p3

    move-object/from16 v10, p4

    move/from16 v11, p5

    move-wide/from16 v12, p12

    move-wide/from16 v14, p14

    invoke-virtual/range {v5 .. v15}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteStopWakeLocked(IILandroid/os/WorkSource$WorkChain;Ljava/lang/String;Ljava/lang/String;IJJ)V

    add-int/lit8 v3, v3, 0x1

    goto :goto_2

    :cond_2
    if-eqz v2, :cond_3

    const/4 v0, 0x1

    aget-object v0, v2, v0

    if-eqz v0, :cond_3

    :goto_3
    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v1

    if-ge v4, v1, :cond_3

    invoke-interface {v0, v4}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v1

    move-object v8, v1

    check-cast v8, Landroid/os/WorkSource$WorkChain;

    invoke-virtual {v8}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v6

    move-object/from16 v5, p0

    move/from16 v7, p2

    move-object/from16 v9, p3

    move-object/from16 v10, p4

    move/from16 v11, p5

    move-wide/from16 v12, p12

    move-wide/from16 v14, p14

    invoke-virtual/range {v5 .. v15}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteStopWakeLocked(IILandroid/os/WorkSource$WorkChain;Ljava/lang/String;Ljava/lang/String;IJJ)V

    add-int/lit8 v4, v4, 0x1

    goto :goto_3

    :cond_3
    return-void
.end method

.method public noteConnectivityChangedLocked(ILjava/lang/String;JJ)V
    .locals 8

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/16 v5, 0x9

    move-wide v1, p3

    move-wide v3, p5

    move-object v6, p2

    move v7, p1

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsHistory;->recordEvent(JJILjava/lang/String;I)V

    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNumConnectivityChange:I

    add-int/lit8 p1, p1, 0x1

    iput p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNumConnectivityChange:I

    return-void
.end method

.method public noteCurrentTimeChangedLocked(JJJ)V
    .locals 7

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    move-wide v1, p3

    move-wide v3, p5

    move-wide v5, p1

    invoke-virtual/range {v0 .. v6}, Lcom/android/internal/os/BatteryStatsHistory;->recordCurrentTimeChange(JJJ)V

    return-void
.end method

.method public noteDeviceIdleModeLocked(ILjava/lang/String;IJJ)V
    .locals 16

    move-object/from16 v0, p0

    move/from16 v7, p1

    move-wide/from16 v4, p4

    const/4 v6, 0x1

    const/4 v2, 0x2

    if-ne v7, v2, :cond_0

    move v3, v6

    goto :goto_0

    :cond_0
    const/4 v3, 0x0

    :goto_0
    iget-boolean v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeviceIdling:Z

    if-eqz v8, :cond_1

    if-nez v3, :cond_1

    if-nez p2, :cond_1

    move v3, v6

    :cond_1
    if-ne v7, v6, :cond_2

    move v9, v6

    goto :goto_1

    :cond_2
    const/4 v9, 0x0

    :goto_1
    iget-boolean v10, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeviceLightIdling:Z

    if-eqz v10, :cond_3

    if-nez v9, :cond_3

    if-nez v3, :cond_3

    if-nez p2, :cond_3

    move v15, v6

    goto :goto_2

    :cond_3
    move v15, v9

    :goto_2
    if-eqz p2, :cond_5

    if-nez v8, :cond_4

    if-eqz v10, :cond_5

    :cond_4
    iget-object v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/16 v13, 0xa

    move-wide/from16 v9, p4

    move-wide/from16 v11, p6

    move-object/from16 v14, p2

    move v1, v15

    move/from16 v15, p3

    invoke-virtual/range {v8 .. v15}, Lcom/android/internal/os/BatteryStatsHistory;->recordEvent(JJILjava/lang/String;I)V

    goto :goto_3

    :cond_5
    move v1, v15

    :goto_3
    iget-boolean v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeviceIdling:Z

    if-ne v8, v3, :cond_6

    iget-boolean v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeviceLightIdling:Z

    if-eq v8, v1, :cond_9

    :cond_6
    if-eqz v3, :cond_7

    move v8, v2

    goto :goto_4

    :cond_7
    if-eqz v1, :cond_8

    move v8, v6

    goto :goto_4

    :cond_8
    const/4 v8, 0x0

    :goto_4
    const/16 v9, 0x16

    invoke-static {v9, v8}, Lcom/android/internal/util/FrameworkStatsLog;->write(II)V

    :cond_9
    iget-boolean v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeviceIdling:Z

    if-eq v8, v3, :cond_c

    iput-boolean v3, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeviceIdling:Z

    if-eqz v3, :cond_a

    const/16 v8, 0x8

    goto :goto_5

    :cond_a
    const/4 v8, 0x0

    :goto_5
    iget v9, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mModStepMode:I

    iget v10, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCurStepMode:I

    and-int/lit8 v11, v10, 0x8

    xor-int/2addr v11, v8

    or-int/2addr v9, v11

    iput v9, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mModStepMode:I

    and-int/lit8 v9, v10, -0x9

    or-int/2addr v8, v9

    iput v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCurStepMode:I

    if-eqz v3, :cond_b

    iget-object v3, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeviceIdlingTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v3, v4, v5}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    goto :goto_6

    :cond_b
    iget-object v3, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeviceIdlingTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v3, v4, v5}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    :cond_c
    :goto_6
    iget-boolean v3, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeviceLightIdling:Z

    if-eq v3, v1, :cond_e

    iput-boolean v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeviceLightIdling:Z

    if-eqz v1, :cond_d

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeviceLightIdlingTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v4, v5}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    goto :goto_7

    :cond_d
    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeviceLightIdlingTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v4, v5}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    :cond_e
    :goto_7
    iget v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeviceIdleMode:I

    if-eq v1, v7, :cond_15

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    move v8, v2

    move-wide/from16 v2, p4

    move-wide v9, v4

    move-wide/from16 v4, p6

    move v11, v6

    move/from16 v6, p1

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsHistory;->recordDeviceIdleEvent(JJI)V

    iget-wide v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastIdleTimeStartMs:J

    sub-long v1, v9, v1

    iput-wide v9, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastIdleTimeStartMs:J

    iget v3, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeviceIdleMode:I

    if-ne v3, v11, :cond_10

    iget-wide v3, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLongestLightIdleTimeMs:J

    cmp-long v3, v1, v3

    if-lez v3, :cond_f

    iput-wide v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLongestLightIdleTimeMs:J

    :cond_f
    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeviceIdleModeLightTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v9, v10}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    goto :goto_8

    :cond_10
    if-ne v3, v8, :cond_12

    iget-wide v3, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLongestFullIdleTimeMs:J

    cmp-long v3, v1, v3

    if-lez v3, :cond_11

    iput-wide v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLongestFullIdleTimeMs:J

    :cond_11
    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeviceIdleModeFullTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v9, v10}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    :cond_12
    :goto_8
    if-ne v7, v11, :cond_13

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeviceIdleModeLightTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v9, v10}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    goto :goto_9

    :cond_13
    if-ne v7, v8, :cond_14

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeviceIdleModeFullTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v9, v10}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    :cond_14
    :goto_9
    iput v7, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeviceIdleMode:I

    const/16 v0, 0x15

    invoke-static {v0, v7}, Lcom/android/internal/util/FrameworkStatsLog;->write(II)V

    :cond_15
    return-void
.end method

.method public noteDisplayHighRefreshRateLocked(I)V
    .locals 4

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v0}, Lcom/android/internal/os/Clock;->elapsedRealtime()J

    move-result-wide v0

    if-ltz p1, :cond_4

    const/4 v2, 0x4

    if-lt p1, v2, :cond_0

    goto :goto_1

    :cond_0
    iget v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenState:I

    invoke-static {v2}, Landroid/view/Display;->isOnState(I)Z

    move-result v2

    if-eqz v2, :cond_2

    iget v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHighRefreshRateBin:I

    if-ltz v2, :cond_1

    iget-object v3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHighRefreshRateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v3, v2

    invoke-virtual {v2}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v2

    if-eqz v2, :cond_1

    iget-object v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHighRefreshRateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget v3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHighRefreshRateBin:I

    aget-object v2, v2, v3

    invoke-virtual {v2, v0, v1}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    :cond_1
    iget-object v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHighRefreshRateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, p1

    invoke-virtual {v2}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v2

    if-nez v2, :cond_3

    iget-object v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHighRefreshRateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, p1

    invoke-virtual {v2, v0, v1}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    goto :goto_0

    :cond_2
    const/4 v2, -0x1

    invoke-virtual {p0, v2, v0, v1}, Lcom/android/server/power/stats/BatteryStatsImpl;->stopAllDisplayHighRefreshRateTimersLocked(IJ)V

    :cond_3
    :goto_0
    iput p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHighRefreshRateBin:I

    return-void

    :cond_4
    :goto_1
    const-string p0, "BatteryStatsImpl"

    const-string p1, "Something was wrong while updating display refresh rate"

    invoke-static {p0, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method public noteEventLocked(ILjava/lang/String;IJJ)V
    .locals 8

    invoke-virtual {p0, p3}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v7

    iget-object p3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const/4 v0, 0x0

    invoke-virtual {p3, p1, p2, v7, v0}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result p3

    if-nez p3, :cond_0

    return-void

    :cond_0
    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    move-wide v1, p4

    move-wide v3, p6

    move v5, p1

    move-object v6, p2

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsHistory;->recordEvent(JJILjava/lang/String;I)V

    return-void
.end method

.method public noteFlashlightOffLocked(IJJ)V
    .locals 9

    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mFlashlightOnNesting:I

    if-nez v0, :cond_0

    return-void

    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v2

    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mFlashlightOnNesting:I

    add-int/lit8 p1, p1, -0x1

    iput p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mFlashlightOnNesting:I

    if-nez p1, :cond_1

    iget-object v3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/high16 v8, 0x8000000

    move-wide v4, p2

    move-wide v6, p4

    invoke-virtual/range {v3 .. v8}, Lcom/android/internal/os/BatteryStatsHistory;->recordState2StopEvent(JJI)V

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    :cond_1
    move-object v1, p0

    move-wide v3, p2

    move-wide v5, p4

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object p0

    invoke-virtual {p0, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteFlashlightTurnedOffLocked(J)V

    return-void
.end method

.method public noteFlashlightOnLocked(IJJ)V
    .locals 8

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v1

    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mFlashlightOnNesting:I

    add-int/lit8 v0, p1, 0x1

    iput v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mFlashlightOnNesting:I

    if-nez p1, :cond_0

    iget-object v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/high16 v7, 0x8000000

    move-wide v3, p2

    move-wide v5, p4

    invoke-virtual/range {v2 .. v7}, Lcom/android/internal/os/BatteryStatsHistory;->recordState2StartEvent(JJI)V

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    :cond_0
    move-object v0, p0

    move-wide v2, p2

    move-wide v4, p4

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object p0

    invoke-virtual {p0, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteFlashlightTurnedOnLocked(J)V

    return-void
.end method

.method public noteFullWifiLockAcquiredFromSourceLocked(Landroid/os/WorkSource;JJ)V
    .locals 10

    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v0

    const/4 v1, 0x0

    move v2, v1

    :goto_0
    if-ge v2, v0, :cond_0

    invoke-virtual {p1, v2}, Landroid/os/WorkSource;->getUid(I)I

    move-result v3

    invoke-virtual {p0, v3}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v5

    move-object v4, p0

    move-wide v6, p2

    move-wide v8, p4

    invoke-virtual/range {v4 .. v9}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteFullWifiLockAcquiredLocked(IJJ)V

    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    :cond_0
    invoke-virtual {p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object p1

    if-eqz p1, :cond_1

    :goto_1
    invoke-interface {p1}, Ljava/util/List;->size()I

    move-result v0

    if-ge v1, v0, :cond_1

    invoke-interface {p1, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/os/WorkSource$WorkChain;

    invoke-virtual {v0}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v0

    invoke-virtual {p0, v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v3

    move-object v2, p0

    move-wide v4, p2

    move-wide v6, p4

    invoke-virtual/range {v2 .. v7}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteFullWifiLockAcquiredLocked(IJJ)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    :cond_1
    return-void
.end method

.method public noteFullWifiLockAcquiredLocked(IJJ)V
    .locals 7

    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiFullLockNesting:I

    if-nez v0, :cond_0

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/high16 v6, 0x10000000

    move-wide v2, p2

    move-wide v4, p4

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsHistory;->recordStateStartEvent(JJI)V

    :cond_0
    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiFullLockNesting:I

    add-int/lit8 v0, v0, 0x1

    iput v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiFullLockNesting:I

    invoke-virtual/range {p0 .. p5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object p0

    invoke-virtual {p0, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteFullWifiLockAcquiredLocked(J)V

    return-void
.end method

.method public noteFullWifiLockReleasedFromSourceLocked(Landroid/os/WorkSource;JJ)V
    .locals 10

    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v0

    const/4 v1, 0x0

    move v2, v1

    :goto_0
    if-ge v2, v0, :cond_0

    invoke-virtual {p1, v2}, Landroid/os/WorkSource;->getUid(I)I

    move-result v3

    invoke-virtual {p0, v3}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v5

    move-object v4, p0

    move-wide v6, p2

    move-wide v8, p4

    invoke-virtual/range {v4 .. v9}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteFullWifiLockReleasedLocked(IJJ)V

    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    :cond_0
    invoke-virtual {p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object p1

    if-eqz p1, :cond_1

    :goto_1
    invoke-interface {p1}, Ljava/util/List;->size()I

    move-result v0

    if-ge v1, v0, :cond_1

    invoke-interface {p1, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/os/WorkSource$WorkChain;

    invoke-virtual {v0}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v0

    invoke-virtual {p0, v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v3

    move-object v2, p0

    move-wide v4, p2

    move-wide v6, p4

    invoke-virtual/range {v2 .. v7}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteFullWifiLockReleasedLocked(IJJ)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    :cond_1
    return-void
.end method

.method public noteFullWifiLockReleasedLocked(IJJ)V
    .locals 7

    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiFullLockNesting:I

    add-int/lit8 v0, v0, -0x1

    iput v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiFullLockNesting:I

    if-nez v0, :cond_0

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/high16 v6, 0x10000000

    move-wide v2, p2

    move-wide v4, p4

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsHistory;->recordStateStopEvent(JJI)V

    :cond_0
    invoke-virtual/range {p0 .. p5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object p0

    invoke-virtual {p0, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteFullWifiLockReleasedLocked(J)V

    return-void
.end method

.method public noteGpsChangedLocked(Landroid/os/WorkSource;Landroid/os/WorkSource;JJ)V
    .locals 12

    const/4 v0, 0x0

    move v1, v0

    :goto_0
    invoke-virtual {p2}, Landroid/os/WorkSource;->size()I

    move-result v2

    if-ge v1, v2, :cond_0

    move-object v2, p2

    invoke-virtual {p2, v1}, Landroid/os/WorkSource;->getUid(I)I

    move-result v4

    const/4 v5, 0x0

    move-object v3, p0

    move-wide v6, p3

    move-wide/from16 v8, p5

    invoke-virtual/range {v3 .. v9}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteStartGpsLocked(ILandroid/os/WorkSource$WorkChain;JJ)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    :cond_0
    move-object v2, p2

    move v1, v0

    :goto_1
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v3

    if-ge v1, v3, :cond_1

    move-object v3, p1

    invoke-virtual {p1, v1}, Landroid/os/WorkSource;->getUid(I)I

    move-result v5

    const/4 v6, 0x0

    move-object v4, p0

    move-wide v7, p3

    move-wide/from16 v9, p5

    invoke-virtual/range {v4 .. v10}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteStopGpsLocked(ILandroid/os/WorkSource$WorkChain;JJ)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    :cond_1
    move-object v3, p1

    invoke-static {p1, p2}, Landroid/os/WorkSource;->diffChains(Landroid/os/WorkSource;Landroid/os/WorkSource;)[Ljava/util/ArrayList;

    move-result-object v1

    if-eqz v1, :cond_3

    aget-object v2, v1, v0

    if-eqz v2, :cond_2

    move v3, v0

    :goto_2
    invoke-interface {v2}, Ljava/util/List;->size()I

    move-result v4

    if-ge v3, v4, :cond_2

    const/4 v6, -0x1

    invoke-interface {v2, v3}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v4

    move-object v7, v4

    check-cast v7, Landroid/os/WorkSource$WorkChain;

    move-object v5, p0

    move-wide v8, p3

    move-wide/from16 v10, p5

    invoke-virtual/range {v5 .. v11}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteStartGpsLocked(ILandroid/os/WorkSource$WorkChain;JJ)V

    add-int/lit8 v3, v3, 0x1

    goto :goto_2

    :cond_2
    const/4 v2, 0x1

    aget-object v1, v1, v2

    if-eqz v1, :cond_3

    :goto_3
    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v2

    if-ge v0, v2, :cond_3

    const/4 v4, -0x1

    invoke-interface {v1, v0}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    move-object v5, v2

    check-cast v5, Landroid/os/WorkSource$WorkChain;

    move-object v3, p0

    move-wide v6, p3

    move-wide/from16 v8, p5

    invoke-virtual/range {v3 .. v9}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteStopGpsLocked(ILandroid/os/WorkSource$WorkChain;JJ)V

    add-int/lit8 v0, v0, 0x1

    goto :goto_3

    :cond_3
    return-void
.end method

.method public noteGpsOffLocked(I)V
    .locals 2

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v0}, Lcom/android/internal/os/Clock;->elapsedRealtime()J

    move-result-wide v0

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object p0

    invoke-virtual {p0, v0, v1}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteStopActualGps(J)V

    return-void
.end method

.method public noteGpsOnLocked(I)V
    .locals 2

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v0}, Lcom/android/internal/os/Clock;->elapsedRealtime()J

    move-result-wide v0

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object p0

    invoke-virtual {p0, v0, v1}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteStartActualGps(J)V

    return-void
.end method

.method public noteGpsSignalQualityLocked(IJJ)V
    .locals 7

    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mGpsNesting:I

    if-nez v0, :cond_0

    return-void

    :cond_0
    if-ltz p1, :cond_5

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    array-length v1, v0

    if-lt p1, v1, :cond_1

    goto :goto_0

    :cond_1
    iget v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mGpsSignalQualityBin:I

    if-eq v1, p1, :cond_4

    if-ltz v1, :cond_2

    aget-object v0, v0, v1

    invoke-virtual {v0, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    :cond_2
    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    invoke-virtual {v0}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v0

    if-nez v0, :cond_3

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    invoke-virtual {v0, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    :cond_3
    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    move-wide v2, p2

    move-wide v4, p4

    move v6, p1

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsHistory;->recordGpsSignalQualityEvent(JJI)V

    iput p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mGpsSignalQualityBin:I

    :cond_4
    return-void

    :cond_5
    :goto_0
    const/4 p1, -0x1

    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl;->stopAllGpsSignalQualityTimersLocked(IJ)V

    return-void
.end method

.method public final noteHotspotStateLocked(IJJ)V
    .locals 2

    const/16 v0, 0xd

    if-ne p1, v0, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    iget v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHotspotState:I

    if-eq v1, p1, :cond_1

    iput p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHotspotState:I

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    invoke-virtual {p1, v0}, Lcom/android/internal/os/BatteryStatsHistory;->setWifiApState(Z)V

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    invoke-virtual {p0, p2, p3, p4, p5}, Lcom/android/internal/os/BatteryStatsHistory;->writeHistoryItem(JJ)V

    :cond_1
    return-void
.end method

.method public noteInteractiveLocked(ZJ)V
    .locals 1

    iget-boolean v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mInteractive:Z

    if-eq v0, p1, :cond_1

    iput-boolean p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mInteractive:Z

    if-eqz p1, :cond_0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mInteractiveTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p0, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    goto :goto_0

    :cond_0
    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mInteractiveTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p0, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    :cond_1
    :goto_0
    return-void
.end method

.method public noteJobFinishLocked(Ljava/lang/String;IIJJ)V
    .locals 8

    invoke-virtual {p0, p2}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v7

    invoke-static {p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->encodingPersonalInformation(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v6

    move-object v0, p0

    move v1, v7

    move-wide v2, p4

    move-wide v4, p6

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object p1

    invoke-virtual {p1, v6, p4, p5, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteStopJobLocked(Ljava/lang/String;JI)V

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const/16 p2, 0x4006

    const/4 p3, 0x0

    invoke-virtual {p1, p2, v6, v7, p3}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result p1

    if-nez p1, :cond_0

    return-void

    :cond_0
    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/16 v5, 0x4006

    move-wide v1, p4

    move-wide v3, p6

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsHistory;->recordEvent(JJILjava/lang/String;I)V

    return-void
.end method

.method public noteJobStartLocked(Ljava/lang/String;IJJ)V
    .locals 8

    invoke-virtual {p0, p2}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v7

    invoke-static {p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->encodingPersonalInformation(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v6

    move-object v0, p0

    move v1, v7

    move-wide v2, p3

    move-wide v4, p5

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object p1

    invoke-virtual {p1, v6, p3, p4}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteStartJobLocked(Ljava/lang/String;J)V

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const p2, 0x8006

    const/4 v0, 0x0

    invoke-virtual {p1, p2, v6, v7, v0}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result p1

    if-nez p1, :cond_0

    return-void

    :cond_0
    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const v5, 0x8006

    move-wide v1, p3

    move-wide v3, p5

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsHistory;->recordEvent(JJILjava/lang/String;I)V

    return-void
.end method

.method public noteJobsDeferredLocked(IIJJJ)V
    .locals 6

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v1

    move-object v0, p0

    move-wide v2, p5

    move-wide v4, p7

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object p0

    invoke-virtual {p0, p2, p3, p4}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteJobsDeferredLocked(IJ)V

    return-void
.end method

.method public final noteLongPartialWakeLockFinishInternal(Ljava/lang/String;Ljava/lang/String;IJJ)V
    .locals 11

    move-object v0, p0

    move v1, p3

    invoke-virtual {p0, p3}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v10

    if-nez p2, :cond_0

    move-object v2, p1

    goto :goto_0

    :cond_0
    move-object v2, p2

    :goto_0
    iget-object v3, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const/16 v4, 0x4014

    const/4 v5, 0x0

    invoke-virtual {v3, v4, v2, v10, v5}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result v3

    if-nez v3, :cond_1

    return-void

    :cond_1
    invoke-static {v2}, Lcom/android/server/power/stats/BatteryStatsImpl;->encodingPersonalInformation(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v8

    iget-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/16 v7, 0x4014

    move-wide v3, p4

    move-wide/from16 v5, p6

    move v9, v10

    invoke-virtual/range {v2 .. v9}, Lcom/android/internal/os/BatteryStatsHistory;->recordEvent(JJILjava/lang/String;I)V

    if-eq v10, v1, :cond_2

    move-object v0, p0

    move v1, p3

    move-wide v2, p4

    move-wide/from16 v4, p6

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->maybeRemoveIsolatedUidLocked(IJJ)Z

    :cond_2
    return-void
.end method

.method public final noteLongPartialWakeLockStartInternal(Ljava/lang/String;Ljava/lang/String;IJJ)V
    .locals 11

    move-object v0, p0

    move v1, p3

    invoke-virtual {p0, p3}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v10

    if-nez p2, :cond_0

    move-object v2, p1

    goto :goto_0

    :cond_0
    move-object v2, p2

    :goto_0
    iget-object v3, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const v4, 0x8014

    const/4 v5, 0x0

    invoke-virtual {v3, v4, v2, v10, v5}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result v3

    if-nez v3, :cond_1

    return-void

    :cond_1
    invoke-static {v2}, Lcom/android/server/power/stats/BatteryStatsImpl;->encodingPersonalInformation(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v8

    iget-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const v7, 0x8014

    move-wide v3, p4

    move-wide/from16 v5, p6

    move v9, v10

    invoke-virtual/range {v2 .. v9}, Lcom/android/internal/os/BatteryStatsHistory;->recordEvent(JJILjava/lang/String;I)V

    if-eq v10, v1, :cond_2

    invoke-virtual {p0, p3}, Lcom/android/server/power/stats/BatteryStatsImpl;->incrementIsolatedUidRefCount(I)V

    :cond_2
    return-void
.end method

.method public noteLongPartialWakelockFinish(Ljava/lang/String;Ljava/lang/String;IJJ)V
    .locals 0

    invoke-virtual/range {p0 .. p7}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteLongPartialWakeLockFinishInternal(Ljava/lang/String;Ljava/lang/String;IJJ)V

    return-void
.end method

.method public noteLongPartialWakelockFinishFromSource(Ljava/lang/String;Ljava/lang/String;Landroid/os/WorkSource;JJ)V
    .locals 14

    invoke-virtual/range {p3 .. p3}, Landroid/os/WorkSource;->size()I

    move-result v0

    const/4 v1, 0x0

    move v2, v1

    :goto_0
    if-ge v2, v0, :cond_0

    move-object/from16 v3, p3

    invoke-virtual {v3, v2}, Landroid/os/WorkSource;->getUid(I)I

    move-result v4

    move-object v13, p0

    invoke-virtual {p0, v4}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v8

    move-object v5, p0

    move-object v6, p1

    move-object/from16 v7, p2

    move-wide/from16 v9, p4

    move-wide/from16 v11, p6

    invoke-virtual/range {v5 .. v12}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteLongPartialWakeLockFinishInternal(Ljava/lang/String;Ljava/lang/String;IJJ)V

    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    :cond_0
    move-object v13, p0

    move-object/from16 v3, p3

    invoke-virtual/range {p3 .. p3}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v0

    if-eqz v0, :cond_1

    :goto_1
    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v2

    if-ge v1, v2, :cond_1

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/os/WorkSource$WorkChain;

    invoke-virtual {v2}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v8

    move-object v5, p0

    move-object v6, p1

    move-object/from16 v7, p2

    move-wide/from16 v9, p4

    move-wide/from16 v11, p6

    invoke-virtual/range {v5 .. v12}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteLongPartialWakeLockFinishInternal(Ljava/lang/String;Ljava/lang/String;IJJ)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    :cond_1
    return-void
.end method

.method public noteLongPartialWakelockStart(Ljava/lang/String;Ljava/lang/String;IJJ)V
    .locals 0

    invoke-virtual/range {p0 .. p7}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteLongPartialWakeLockStartInternal(Ljava/lang/String;Ljava/lang/String;IJJ)V

    return-void
.end method

.method public noteLongPartialWakelockStartFromSource(Ljava/lang/String;Ljava/lang/String;Landroid/os/WorkSource;JJ)V
    .locals 14

    invoke-virtual/range {p3 .. p3}, Landroid/os/WorkSource;->size()I

    move-result v0

    const/4 v1, 0x0

    move v2, v1

    :goto_0
    if-ge v2, v0, :cond_0

    move-object/from16 v3, p3

    invoke-virtual {v3, v2}, Landroid/os/WorkSource;->getUid(I)I

    move-result v4

    move-object v13, p0

    invoke-virtual {p0, v4}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v8

    move-object v5, p0

    move-object v6, p1

    move-object/from16 v7, p2

    move-wide/from16 v9, p4

    move-wide/from16 v11, p6

    invoke-virtual/range {v5 .. v12}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteLongPartialWakeLockStartInternal(Ljava/lang/String;Ljava/lang/String;IJJ)V

    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    :cond_0
    move-object v13, p0

    move-object/from16 v3, p3

    invoke-virtual/range {p3 .. p3}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v0

    if-eqz v0, :cond_1

    :goto_1
    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v2

    if-ge v1, v2, :cond_1

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/os/WorkSource$WorkChain;

    invoke-virtual {v2}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v8

    move-object v5, p0

    move-object v6, p1

    move-object/from16 v7, p2

    move-wide/from16 v9, p4

    move-wide/from16 v11, p6

    invoke-virtual/range {v5 .. v12}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteLongPartialWakeLockStartInternal(Ljava/lang/String;Ljava/lang/String;IJJ)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    :cond_1
    return-void
.end method

.method public final noteMobileRadioApWakeupLocked(JJI)V
    .locals 8

    invoke-virtual {p0, p5}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result p5

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/16 v5, 0x13

    const-string v6, ""

    move-wide v1, p1

    move-wide v3, p3

    move v7, p5

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsHistory;->recordEvent(JJILjava/lang/String;I)V

    move-object v0, p0

    move v1, p5

    move-wide v2, p1

    move-wide v4, p3

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object p0

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteMobileRadioApWakeupLocked()V

    return-void
.end method

.method public noteMobileRadioPowerStateLocked(IJIJJ)Z
    .locals 14

    move-object v6, p0

    move v7, p1

    move-wide/from16 v8, p5

    iget v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioPowerState:I

    const/4 v10, 0x0

    if-eq v0, v7, :cond_8

    invoke-static {p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->isActiveRadioPowerState(I)Z

    move-result v11

    const-wide/32 v12, 0xf4240

    if-eqz v11, :cond_1

    if-lez p4, :cond_0

    move-object v0, p0

    move-wide/from16 v1, p5

    move-wide/from16 v3, p7

    move/from16 v5, p4

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteMobileRadioApWakeupLocked(JJI)V

    :cond_0
    div-long v12, p2, v12

    iput-wide v12, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioActiveStartTimeMs:J

    iget-object v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/high16 v5, 0x2000000

    move-wide/from16 v1, p5

    move-wide/from16 v3, p7

    invoke-virtual/range {v0 .. v5}, Lcom/android/internal/os/BatteryStatsHistory;->recordStateStartEvent(JJI)V

    iget-object v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileActiveTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v0

    if-nez v0, :cond_5

    iget-object v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileActiveTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8, v9}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    iget-boolean v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsServiceStateNr:Z

    if-eqz v0, :cond_5

    iget-object v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileActive5GTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v0

    if-nez v0, :cond_5

    iget-object v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileActive5GTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8, v9}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    goto :goto_1

    :cond_1
    div-long v0, p2, v12

    iget-wide v2, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioActiveStartTimeMs:J

    cmp-long v4, v0, v2

    if-gez v4, :cond_2

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Data connection inactive timestamp "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v0, v1}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v0, " is before start time "

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v2, v3}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "BatteryStatsImpl"

    invoke-static {v1, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    move-wide v12, v8

    goto :goto_0

    :cond_2
    cmp-long v2, v0, v8

    if-gez v2, :cond_3

    iget-object v2, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioActiveAdjustedTime:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    sub-long v3, v8, v0

    invoke-virtual {v2, v3, v4}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    :cond_3
    move-wide v12, v0

    :goto_0
    iget-object v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/high16 v5, 0x2000000

    move-wide/from16 v1, p5

    move-wide/from16 v3, p7

    invoke-virtual/range {v0 .. v5}, Lcom/android/internal/os/BatteryStatsHistory;->recordStateStopEvent(JJI)V

    iget-object v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileActiveTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v0

    if-eqz v0, :cond_4

    iget-object v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileActiveTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8, v9}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    :cond_4
    iget-object v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileActive5GTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v0

    if-eqz v0, :cond_5

    iget-object v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileActive5GTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8, v9}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    :cond_5
    :goto_1
    iput v7, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioPowerState:I

    iget v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mActiveRat:I

    invoke-virtual {p0, v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getRatBatteryStatsLocked(I)Lcom/android/server/power/stats/BatteryStatsImpl$RadioAccessTechnologyBatteryStats;

    move-result-object v0

    invoke-virtual {v0, v11, v8, v9}, Lcom/android/server/power/stats/BatteryStatsImpl$RadioAccessTechnologyBatteryStats;->noteActive(ZJ)V

    if-eqz v11, :cond_6

    iget-object v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8, v9}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    iget-object v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioActivePerAppTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8, v9}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    goto :goto_2

    :cond_6
    iget-object v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    iget-object v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioActivePerAppTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    iget-object v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastModemActivityInfo:Landroid/telephony/ModemActivityInfo;

    if-eqz v0, :cond_7

    invoke-virtual {v0}, Landroid/telephony/ModemActivityInfo;->getTimestampMillis()J

    move-result-wide v0

    const-wide/32 v2, 0x927c0

    add-long/2addr v0, v2

    cmp-long v0, v8, v0

    if-gez v0, :cond_7

    return v10

    :cond_7
    const/4 v0, 0x1

    return v0

    :cond_8
    :goto_2
    return v10
.end method

.method public noteModemControllerActivity(Landroid/telephony/ModemActivityInfo;JJJLandroid/app/usage/NetworkStatsManager;)V
    .locals 43

    move-object/from16 v11, p0

    move-object/from16 v0, p1

    move-wide/from16 v12, p4

    iget-object v1, v11, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastModemActivityInfo:Landroid/telephony/ModemActivityInfo;

    if-nez v1, :cond_0

    move-object v14, v0

    goto :goto_0

    :cond_0
    invoke-virtual {v1, v0}, Landroid/telephony/ModemActivityInfo;->getDelta(Landroid/telephony/ModemActivityInfo;)Landroid/telephony/ModemActivityInfo;

    move-result-object v1

    move-object v14, v1

    :goto_0
    iput-object v0, v11, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastModemActivityInfo:Landroid/telephony/ModemActivityInfo;

    move-object/from16 v1, p0

    move-object v2, v14

    move-wide/from16 v3, p4

    move-wide/from16 v5, p6

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/power/stats/BatteryStatsImpl;->addModemTxPowerToHistory(Landroid/telephony/ModemActivityInfo;JJ)V

    iget-object v1, v11, Lcom/android/server/power/stats/BatteryStatsImpl;->mModemNetworkLock:Ljava/lang/Object;

    monitor-enter v1

    move-object/from16 v0, p8

    :try_start_0
    invoke-virtual {v11, v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->readMobileNetworkStatsLocked(Landroid/app/usage/NetworkStatsManager;)Landroid/net/NetworkStats;

    move-result-object v0

    if-eqz v0, :cond_1

    iget-object v3, v11, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastModemNetworkStats:Landroid/net/NetworkStats;

    invoke-virtual {v0, v3}, Landroid/net/NetworkStats;->subtract(Landroid/net/NetworkStats;)Landroid/net/NetworkStats;

    move-result-object v3

    iput-object v0, v11, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastModemNetworkStats:Landroid/net/NetworkStats;

    move-object v7, v3

    goto :goto_1

    :cond_1
    const/4 v7, 0x0

    :goto_1
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    monitor-enter p0

    if-eqz v7, :cond_2

    :try_start_1
    invoke-virtual {v11, v7}, Lcom/android/server/power/stats/BatteryStatsImpl;->notifyNetworkStatsUpdatedCallbacksLocked(Landroid/net/NetworkStats;)V

    :cond_2
    iget-object v0, v11, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    const-wide/16 v15, 0x3e8

    mul-long v9, v12, v15

    invoke-virtual {v0, v9, v10}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTimeSinceMarkLocked(J)J

    move-result-wide v0

    div-long v5, v0, v15

    iget-object v0, v11, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->setMark(J)V

    iget-object v0, v11, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v9, v10}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTimeSinceMarkLocked(J)J

    move-result-wide v0

    div-long/2addr v0, v15

    invoke-static {v5, v6, v0, v1}, Ljava/lang/Math;->min(JJ)J

    move-result-wide v0

    iget-object v3, v11, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v3, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->setMark(J)V

    iget-boolean v3, v11, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryInternal:Z

    if-eqz v3, :cond_19

    iget-boolean v3, v11, Lcom/android/server/power/stats/BatteryStatsImpl;->mIgnoreNextExternalStats:Z

    if-eqz v3, :cond_3

    goto/16 :goto_12

    :cond_3
    const-wide/16 v17, 0x0

    cmp-long v3, p2, v17

    if-lez v3, :cond_5

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->isMobileRadioEnergyConsumerSupportedLocked()Z

    move-result v3

    if-eqz v3, :cond_5

    cmp-long v3, v5, v17

    if-nez v3, :cond_4

    move-wide/from16 v0, v17

    goto :goto_2

    :cond_4
    mul-long v0, v0, p2

    const-wide/16 v3, 0x2

    div-long v3, v5, v3

    add-long/2addr v0, v3

    div-long/2addr v0, v5

    :goto_2
    sub-long v3, p2, v0

    iget-object v8, v11, Lcom/android/server/power/stats/BatteryStatsImpl;->mGlobalEnergyConsumerStats:Lcom/android/internal/power/EnergyConsumerStats;

    const/16 v2, 0x9

    invoke-virtual {v8, v2, v0, v1}, Lcom/android/internal/power/EnergyConsumerStats;->updateStandardBucket(IJ)V

    iget-object v0, v11, Lcom/android/server/power/stats/BatteryStatsImpl;->mGlobalEnergyConsumerStats:Lcom/android/internal/power/EnergyConsumerStats;

    const/4 v1, 0x7

    invoke-virtual {v0, v1, v3, v4}, Lcom/android/internal/power/EnergyConsumerStats;->updateStandardBucket(IJ)V

    new-instance v0, Landroid/util/SparseDoubleArray;

    invoke-direct {v0}, Landroid/util/SparseDoubleArray;-><init>()V

    move-object v8, v0

    move-wide/from16 v19, v3

    goto :goto_3

    :cond_5
    const-wide/16 v0, -0x1

    move-wide/from16 v19, v0

    const/4 v8, 0x0

    :goto_3
    const-wide/16 v21, 0x0

    const/4 v3, 0x1

    const/16 v23, 0x0

    if-eqz v14, :cond_a

    iput-boolean v3, v11, Lcom/android/server/power/stats/BatteryStatsImpl;->mHasModemReporting:Z

    iget-object v0, v11, Lcom/android/server/power/stats/BatteryStatsImpl;->mModemActivity:Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-static {v0}, Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;->-$$Nest$mgetOrCreateIdleTimeCounter(Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;)Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;

    move-result-object v0

    invoke-virtual {v14}, Landroid/telephony/ModemActivityInfo;->getIdleTimeMillis()J

    move-result-wide v1

    invoke-static {v0, v1, v2, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;->-$$Nest$mincrement(Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;JJ)V

    iget-object v0, v11, Lcom/android/server/power/stats/BatteryStatsImpl;->mModemActivity:Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v0}, Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;->getSleepTimeCounter()Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v0

    invoke-virtual {v14}, Landroid/telephony/ModemActivityInfo;->getSleepTimeMillis()J

    move-result-wide v1

    invoke-virtual {v0, v1, v2}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    iget-object v0, v11, Lcom/android/server/power/stats/BatteryStatsImpl;->mModemActivity:Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-static {v0}, Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;->-$$Nest$mgetOrCreateRxTimeCounter(Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;)Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;

    move-result-object v0

    invoke-virtual {v14}, Landroid/telephony/ModemActivityInfo;->getReceiveTimeMillis()J

    move-result-wide v1

    invoke-static {v0, v1, v2, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;->-$$Nest$mincrement(Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;JJ)V

    move/from16 v0, v23

    :goto_4
    invoke-static {}, Landroid/telephony/ModemActivityInfo;->getNumTxPowerLevels()I

    move-result v1

    if-ge v0, v1, :cond_6

    iget-object v1, v11, Lcom/android/server/power/stats/BatteryStatsImpl;->mModemActivity:Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-static {v1}, Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;->-$$Nest$mgetOrCreateTxTimeCounters(Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;)[Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;

    move-result-object v1

    aget-object v1, v1, v0

    invoke-virtual {v14, v0}, Landroid/telephony/ModemActivityInfo;->getTransmitDurationMillisAtPowerLevel(I)J

    move-result-wide v3

    invoke-static {v1, v3, v4, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;->-$$Nest$mincrement(Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;JJ)V

    add-int/lit8 v0, v0, 0x1

    const/4 v3, 0x1

    goto :goto_4

    :cond_6
    iget-object v0, v11, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    const-string/jumbo v1, "modem.controller.voltage"

    invoke-virtual {v0, v1}, Lcom/android/internal/os/PowerProfile;->getAveragePower(Ljava/lang/String;)D

    move-result-wide v0

    const-wide v2, 0x408f400000000000L    # 1000.0

    div-double/2addr v0, v2

    cmpl-double v2, v0, v21

    if-eqz v2, :cond_8

    invoke-virtual {v14}, Landroid/telephony/ModemActivityInfo;->getSleepTimeMillis()J

    move-result-wide v2

    long-to-double v2, v2

    iget-object v4, v11, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    const-string/jumbo v15, "modem.controller.sleep"

    invoke-virtual {v4, v15}, Lcom/android/internal/os/PowerProfile;->getAveragePower(Ljava/lang/String;)D

    move-result-wide v15

    mul-double/2addr v2, v15

    move-wide v15, v5

    invoke-virtual {v14}, Landroid/telephony/ModemActivityInfo;->getIdleTimeMillis()J

    move-result-wide v4

    long-to-double v4, v4

    iget-object v6, v11, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    move-wide/from16 v24, v15

    const-string/jumbo v15, "modem.controller.idle"

    invoke-virtual {v6, v15}, Lcom/android/internal/os/PowerProfile;->getAveragePower(Ljava/lang/String;)D

    move-result-wide v15

    mul-double/2addr v4, v15

    add-double/2addr v2, v4

    invoke-virtual {v14}, Landroid/telephony/ModemActivityInfo;->getReceiveTimeMillis()J

    move-result-wide v4

    long-to-double v4, v4

    iget-object v6, v11, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    const-string/jumbo v15, "modem.controller.rx"

    invoke-virtual {v6, v15}, Lcom/android/internal/os/PowerProfile;->getAveragePower(Ljava/lang/String;)D

    move-result-wide v15

    mul-double/2addr v4, v15

    add-double/2addr v2, v4

    move/from16 v4, v23

    :goto_5
    invoke-static {}, Landroid/telephony/ModemActivityInfo;->getNumTxPowerLevels()I

    move-result v5

    invoke-static {}, Landroid/telephony/CellSignalStrength;->getNumSignalStrengthLevels()I

    move-result v6

    invoke-static {v5, v6}, Ljava/lang/Math;->min(II)I

    move-result v5

    if-ge v4, v5, :cond_7

    invoke-virtual {v14, v4}, Landroid/telephony/ModemActivityInfo;->getTransmitDurationMillisAtPowerLevel(I)J

    move-result-wide v5

    long-to-double v5, v5

    iget-object v15, v11, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    move-object/from16 p3, v8

    const-string/jumbo v8, "modem.controller.tx"

    invoke-virtual {v15, v8, v4}, Lcom/android/internal/os/PowerProfile;->getAveragePower(Ljava/lang/String;I)D

    move-result-wide v15

    mul-double/2addr v5, v15

    add-double/2addr v2, v5

    add-int/lit8 v4, v4, 0x1

    move-object/from16 v8, p3

    goto :goto_5

    :cond_7
    move-object/from16 p3, v8

    iget-object v4, v11, Lcom/android/server/power/stats/BatteryStatsImpl;->mModemActivity:Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v4}, Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;->getPowerCounter()Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v4

    double-to-long v2, v2

    invoke-virtual {v4, v2, v3}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    iget-object v2, v11, Lcom/android/server/power/stats/BatteryStatsImpl;->mTmpRailStats:Lcom/android/internal/os/RailStats;

    invoke-virtual {v2}, Lcom/android/internal/os/RailStats;->getCellularTotalEnergyUseduWs()J

    move-result-wide v2

    long-to-double v2, v2

    div-double/2addr v2, v0

    double-to-long v0, v2

    iget-object v2, v11, Lcom/android/server/power/stats/BatteryStatsImpl;->mModemActivity:Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v2}, Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;->getMonitoredRailChargeConsumedMaMs()Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v2

    invoke-virtual {v2, v0, v1}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    iget-object v2, v11, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    long-to-double v0, v0

    const-wide v3, 0x414b774000000000L    # 3600000.0

    div-double v5, v0, v3

    move-object v0, v2

    move-wide/from16 v1, p4

    const/4 v8, 0x1

    move-wide/from16 v3, p6

    move-wide/from16 v26, v24

    invoke-virtual/range {v0 .. v6}, Lcom/android/internal/os/BatteryStatsHistory;->recordWifiConsumedCharge(JJD)V

    iget-object v0, v11, Lcom/android/server/power/stats/BatteryStatsImpl;->mTmpRailStats:Lcom/android/internal/os/RailStats;

    invoke-virtual {v0}, Lcom/android/internal/os/RailStats;->resetCellularTotalEnergyUsed()V

    goto :goto_6

    :cond_8
    move-wide/from16 v26, v5

    move-object/from16 p3, v8

    const/4 v8, 0x1

    :goto_6
    invoke-virtual {v11, v14, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl;->incrementPerRatDataLocked(Landroid/telephony/ModemActivityInfo;J)Lcom/android/server/power/stats/BatteryStatsImpl$RxTxConsumption;

    move-result-object v2

    iget-object v0, v11, Lcom/android/server/power/stats/BatteryStatsImpl;->mConstants:Lcom/android/server/power/stats/BatteryStatsImpl$Constants;

    iget v0, v0, Lcom/android/server/power/stats/BatteryStatsImpl$Constants;->PER_UID_MODEM_MODEL:I

    const/4 v1, 0x2

    if-ne v0, v1, :cond_9

    if-eqz v2, :cond_9

    move v3, v8

    goto :goto_7

    :cond_9
    move/from16 v3, v23

    :goto_7
    move-object v0, v2

    move v15, v3

    goto :goto_8

    :cond_a
    move-wide/from16 v26, v5

    move-object/from16 p3, v8

    move v8, v3

    move/from16 v15, v23

    const/4 v0, 0x0

    :goto_8
    iget-object v1, v11, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioActivePerAppTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v9, v10}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTimeSinceMarkLocked(J)J

    move-result-wide v24

    iget-object v1, v11, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioActivePerAppTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->setMark(J)V

    if-eqz v7, :cond_18

    invoke-virtual {v7}, Landroid/net/NetworkStats;->iterator()Ljava/util/Iterator;

    move-result-object v16

    move-wide/from16 v28, v17

    move-wide/from16 v30, v28

    :goto_9
    invoke-interface/range {v16 .. v16}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_d

    invoke-interface/range {v16 .. v16}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    move-object/from16 v32, v1

    check-cast v32, Landroid/net/NetworkStats$Entry;

    invoke-virtual/range {v32 .. v32}, Landroid/net/NetworkStats$Entry;->getRxPackets()J

    move-result-wide v1

    cmp-long v1, v1, v17

    if-nez v1, :cond_b

    invoke-virtual/range {v32 .. v32}, Landroid/net/NetworkStats$Entry;->getTxPackets()J

    move-result-wide v1

    cmp-long v1, v1, v17

    if-nez v1, :cond_b

    goto :goto_9

    :cond_b
    invoke-virtual/range {v32 .. v32}, Landroid/net/NetworkStats$Entry;->getRxPackets()J

    move-result-wide v1

    add-long v28, v28, v1

    invoke-virtual/range {v32 .. v32}, Landroid/net/NetworkStats$Entry;->getTxPackets()J

    move-result-wide v1

    add-long v30, v30, v1

    invoke-virtual/range {v32 .. v32}, Landroid/net/NetworkStats$Entry;->getUid()I

    move-result v1

    invoke-virtual {v11, v1}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v2

    move-object/from16 v1, p0

    move-wide/from16 v3, p4

    move-wide/from16 v5, p6

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object v1

    const/16 v34, 0x0

    invoke-virtual/range {v32 .. v32}, Landroid/net/NetworkStats$Entry;->getRxBytes()J

    move-result-wide v35

    invoke-virtual/range {v32 .. v32}, Landroid/net/NetworkStats$Entry;->getRxPackets()J

    move-result-wide v37

    move-object/from16 v33, v1

    invoke-virtual/range {v33 .. v38}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteNetworkActivityLocked(IJJ)V

    const/16 v34, 0x1

    invoke-virtual/range {v32 .. v32}, Landroid/net/NetworkStats$Entry;->getTxBytes()J

    move-result-wide v35

    invoke-virtual/range {v32 .. v32}, Landroid/net/NetworkStats$Entry;->getTxPackets()J

    move-result-wide v37

    move-object/from16 v33, v1

    invoke-virtual/range {v33 .. v38}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteNetworkActivityLocked(IJJ)V

    invoke-virtual/range {v32 .. v32}, Landroid/net/NetworkStats$Entry;->getSet()I

    move-result v2

    if-nez v2, :cond_c

    const/16 v34, 0x6

    invoke-virtual/range {v32 .. v32}, Landroid/net/NetworkStats$Entry;->getRxBytes()J

    move-result-wide v35

    invoke-virtual/range {v32 .. v32}, Landroid/net/NetworkStats$Entry;->getRxPackets()J

    move-result-wide v37

    move-object/from16 v33, v1

    invoke-virtual/range {v33 .. v38}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteNetworkActivityLocked(IJJ)V

    const/16 v34, 0x7

    invoke-virtual/range {v32 .. v32}, Landroid/net/NetworkStats$Entry;->getTxBytes()J

    move-result-wide v35

    invoke-virtual/range {v32 .. v32}, Landroid/net/NetworkStats$Entry;->getTxPackets()J

    move-result-wide v37

    move-object/from16 v33, v1

    invoke-virtual/range {v33 .. v38}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteNetworkActivityLocked(IJJ)V

    :cond_c
    iget-object v1, v11, Lcom/android/server/power/stats/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    aget-object v1, v1, v23

    invoke-virtual/range {v32 .. v32}, Landroid/net/NetworkStats$Entry;->getRxBytes()J

    move-result-wide v2

    invoke-virtual {v1, v2, v3}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    iget-object v1, v11, Lcom/android/server/power/stats/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    aget-object v1, v1, v8

    invoke-virtual/range {v32 .. v32}, Landroid/net/NetworkStats$Entry;->getTxBytes()J

    move-result-wide v2

    invoke-virtual {v1, v2, v3}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    iget-object v1, v11, Lcom/android/server/power/stats/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    aget-object v1, v1, v23

    invoke-virtual/range {v32 .. v32}, Landroid/net/NetworkStats$Entry;->getRxPackets()J

    move-result-wide v2

    invoke-virtual {v1, v2, v3}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    iget-object v1, v11, Lcom/android/server/power/stats/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    aget-object v1, v1, v8

    invoke-virtual/range {v32 .. v32}, Landroid/net/NetworkStats$Entry;->getTxPackets()J

    move-result-wide v2

    invoke-virtual {v1, v2, v3}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    goto/16 :goto_9

    :cond_d
    add-long v1, v28, v30

    cmp-long v3, v1, v17

    if-lez v3, :cond_14

    invoke-virtual {v7}, Landroid/net/NetworkStats;->iterator()Ljava/util/Iterator;

    move-result-object v16

    move-wide/from16 v32, v24

    move-wide/from16 v24, v1

    :goto_a
    invoke-interface/range {v16 .. v16}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_13

    invoke-interface/range {v16 .. v16}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    move-object/from16 v34, v1

    check-cast v34, Landroid/net/NetworkStats$Entry;

    invoke-virtual/range {v34 .. v34}, Landroid/net/NetworkStats$Entry;->getRxPackets()J

    move-result-wide v1

    cmp-long v1, v1, v17

    if-nez v1, :cond_e

    invoke-virtual/range {v34 .. v34}, Landroid/net/NetworkStats$Entry;->getTxPackets()J

    move-result-wide v1

    cmp-long v1, v1, v17

    if-nez v1, :cond_e

    goto :goto_a

    :cond_e
    invoke-virtual/range {v34 .. v34}, Landroid/net/NetworkStats$Entry;->getUid()I

    move-result v1

    invoke-virtual {v11, v1}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v2

    move-object/from16 v1, p0

    move-wide/from16 v3, p4

    move-wide/from16 v5, p6

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object v7

    invoke-virtual/range {v34 .. v34}, Landroid/net/NetworkStats$Entry;->getRxPackets()J

    move-result-wide v1

    invoke-virtual/range {v34 .. v34}, Landroid/net/NetworkStats$Entry;->getTxPackets()J

    move-result-wide v3

    add-long v35, v1, v3

    mul-long v1, v32, v35

    div-long v5, v1, v24

    invoke-virtual {v7, v5, v6, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteMobileRadioActiveTimeLocked(JJ)V

    if-eqz p3, :cond_10

    if-eqz v15, :cond_f

    invoke-virtual/range {v34 .. v34}, Landroid/net/NetworkStats$Entry;->getRxPackets()J

    move-result-wide v3

    invoke-virtual/range {v34 .. v34}, Landroid/net/NetworkStats$Entry;->getTxPackets()J

    move-result-wide v37

    move-object/from16 v1, p0

    move-object v2, v0

    move-wide/from16 v39, v5

    move-wide/from16 v5, v37

    move-object/from16 p1, v0

    move-object/from16 v37, v7

    move-object/from16 v0, p3

    move-wide/from16 v7, v28

    move-wide/from16 v41, v9

    move-wide/from16 v9, v30

    invoke-virtual/range {v1 .. v10}, Lcom/android/server/power/stats/BatteryStatsImpl;->smearModemActivityInfoRxTxConsumptionMah(Lcom/android/server/power/stats/BatteryStatsImpl$RxTxConsumption;JJJJ)D

    move-result-wide v1

    goto :goto_b

    :cond_f
    move-object/from16 p1, v0

    move-wide/from16 v39, v5

    move-object/from16 v37, v7

    move-wide/from16 v41, v9

    move-object/from16 v0, p3

    iget-object v1, v11, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioPowerCalculator:Lcom/android/server/power/stats/MobileRadioPowerCalculator;

    const-wide/16 v2, 0x3e8

    div-long v5, v39, v2

    invoke-virtual {v1, v5, v6}, Lcom/android/server/power/stats/MobileRadioPowerCalculator;->calcPowerFromRadioActiveDurationMah(J)D

    move-result-wide v1

    :goto_b
    invoke-virtual/range {v37 .. v37}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->getUid()I

    move-result v3

    invoke-virtual {v0, v3, v1, v2}, Landroid/util/SparseDoubleArray;->incrementValue(ID)V

    goto :goto_c

    :cond_10
    move-object/from16 p1, v0

    move-wide/from16 v39, v5

    move-object/from16 v37, v7

    move-wide/from16 v41, v9

    move-object/from16 v0, p3

    :goto_c
    sub-long v32, v32, v39

    sub-long v24, v24, v35

    if-eqz v14, :cond_12

    invoke-virtual/range {v37 .. v37}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->getOrCreateModemControllerActivityLocked()Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;

    move-result-object v1

    cmp-long v2, v28, v17

    if-lez v2, :cond_11

    invoke-virtual/range {v34 .. v34}, Landroid/net/NetworkStats$Entry;->getRxPackets()J

    move-result-wide v2

    cmp-long v2, v2, v17

    if-lez v2, :cond_11

    invoke-virtual/range {v34 .. v34}, Landroid/net/NetworkStats$Entry;->getRxPackets()J

    move-result-wide v2

    invoke-virtual {v14}, Landroid/telephony/ModemActivityInfo;->getReceiveTimeMillis()J

    move-result-wide v4

    mul-long/2addr v2, v4

    div-long v2, v2, v28

    invoke-static {v1}, Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;->-$$Nest$mgetOrCreateRxTimeCounter(Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;)Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;

    move-result-object v4

    invoke-static {v4, v2, v3, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;->-$$Nest$mincrement(Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;JJ)V

    :cond_11
    cmp-long v2, v30, v17

    if-lez v2, :cond_12

    invoke-virtual/range {v34 .. v34}, Landroid/net/NetworkStats$Entry;->getTxPackets()J

    move-result-wide v2

    cmp-long v2, v2, v17

    if-lez v2, :cond_12

    move/from16 v2, v23

    :goto_d
    invoke-static {}, Landroid/telephony/ModemActivityInfo;->getNumTxPowerLevels()I

    move-result v3

    if-ge v2, v3, :cond_12

    invoke-virtual/range {v34 .. v34}, Landroid/net/NetworkStats$Entry;->getTxPackets()J

    move-result-wide v3

    invoke-virtual {v14, v2}, Landroid/telephony/ModemActivityInfo;->getTransmitDurationMillisAtPowerLevel(I)J

    move-result-wide v5

    mul-long/2addr v3, v5

    div-long v3, v3, v30

    invoke-static {v1}, Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;->-$$Nest$mgetOrCreateTxTimeCounters(Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;)[Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;

    move-result-object v5

    aget-object v5, v5, v2

    invoke-static {v5, v3, v4, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;->-$$Nest$mincrement(Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;JJ)V

    add-int/lit8 v2, v2, 0x1

    goto :goto_d

    :cond_12
    move-object/from16 p3, v0

    move-wide/from16 v9, v41

    move-object/from16 v0, p1

    goto/16 :goto_a

    :cond_13
    move-object/from16 p1, v0

    move-wide/from16 v41, v9

    move-object/from16 v0, p3

    move-wide/from16 v1, v32

    goto :goto_e

    :cond_14
    move-object/from16 p1, v0

    move-wide/from16 v41, v9

    move-object/from16 v0, p3

    move-wide/from16 v1, v24

    :goto_e
    cmp-long v3, v1, v17

    if-lez v3, :cond_15

    iget-object v3, v11, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioActiveUnknownTime:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v3, v1, v2}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    iget-object v1, v11, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioActiveUnknownCount:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    const-wide/16 v2, 0x1

    invoke-virtual {v1, v2, v3}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    :cond_15
    if-eqz v0, :cond_18

    if-eqz v15, :cond_16

    invoke-virtual {v14}, Landroid/telephony/ModemActivityInfo;->getSleepTimeMillis()J

    move-result-wide v1

    invoke-virtual {v14}, Landroid/telephony/ModemActivityInfo;->getIdleTimeMillis()J

    move-result-wide v3

    iget-object v5, v11, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioPowerCalculator:Lcom/android/server/power/stats/MobileRadioPowerCalculator;

    invoke-virtual {v5, v1, v2, v3, v4}, Lcom/android/server/power/stats/MobileRadioPowerCalculator;->calcInactiveStatePowerMah(JJ)D

    move-result-wide v1

    add-double v1, v1, v21

    move-object/from16 v3, p1

    iget-wide v4, v3, Lcom/android/server/power/stats/BatteryStatsImpl$RxTxConsumption;->rxConsumptionMah:D

    add-double/2addr v1, v4

    iget-wide v3, v3, Lcom/android/server/power/stats/BatteryStatsImpl$RxTxConsumption;->txConsumptionMah:D

    :goto_f
    add-double/2addr v1, v3

    move-wide v6, v1

    goto :goto_11

    :cond_16
    iget-object v1, v11, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioPowerCalculator:Lcom/android/server/power/stats/MobileRadioPowerCalculator;

    move-wide/from16 v2, v26

    invoke-virtual {v1, v2, v3}, Lcom/android/server/power/stats/MobileRadioPowerCalculator;->calcPowerFromRadioActiveDurationMah(J)D

    move-result-wide v1

    add-double v1, v1, v21

    iget-object v3, v11, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    array-length v3, v3

    move/from16 v4, v23

    :goto_10
    if-ge v4, v3, :cond_17

    iget-object v5, v11, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v5, v5, v4

    move-wide/from16 v6, v41

    invoke-virtual {v5, v6, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTimeSinceMarkLocked(J)J

    move-result-wide v8

    const-wide/16 v14, 0x3e8

    div-long/2addr v8, v14

    iget-object v5, v11, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v5, v5, v4

    invoke-virtual {v5, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->setMark(J)V

    iget-object v5, v11, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioPowerCalculator:Lcom/android/server/power/stats/MobileRadioPowerCalculator;

    invoke-virtual {v5, v8, v9, v4}, Lcom/android/server/power/stats/MobileRadioPowerCalculator;->calcIdlePowerAtSignalStrengthMah(JI)D

    move-result-wide v8

    add-double/2addr v1, v8

    add-int/lit8 v4, v4, 0x1

    move-wide/from16 v41, v6

    goto :goto_10

    :cond_17
    move-wide/from16 v6, v41

    iget-object v3, v11, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v3, v6, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTimeSinceMarkLocked(J)J

    move-result-wide v3

    const-wide/16 v5, 0x3e8

    div-long/2addr v3, v5

    iget-object v5, v11, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v5, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->setMark(J)V

    iget-object v5, v11, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioPowerCalculator:Lcom/android/server/power/stats/MobileRadioPowerCalculator;

    invoke-virtual {v5, v3, v4}, Lcom/android/server/power/stats/MobileRadioPowerCalculator;->calcScanTimePowerMah(J)D

    move-result-wide v3

    goto :goto_f

    :goto_11
    const/4 v2, 0x7

    move-object/from16 v1, p0

    move-wide/from16 v3, v19

    move-object v5, v0

    move-wide/from16 v8, p4

    invoke-virtual/range {v1 .. v9}, Lcom/android/server/power/stats/BatteryStatsImpl;->distributeEnergyToUidsLocked(IJLandroid/util/SparseDoubleArray;DJ)V

    :cond_18
    monitor-exit p0

    return-void

    :cond_19
    :goto_12
    monitor-exit p0

    return-void

    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v0

    :catchall_1
    move-exception v0

    :try_start_2
    monitor-exit v1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    throw v0
.end method

.method public noteNetworkInterfaceForTransports(Ljava/lang/String;[I)V
    .locals 2

    invoke-static {p1}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v0

    if-eqz v0, :cond_0

    return-void

    :cond_0
    invoke-static {p2}, Lcom/android/net/module/util/NetworkCapabilitiesUtils;->getDisplayTransport([I)I

    move-result p2

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mModemNetworkLock:Ljava/lang/Object;

    monitor-enter v0

    if-nez p2, :cond_1

    :try_start_0
    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mModemIfaces:[Ljava/lang/String;

    invoke-static {v1, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->includeInStringArray([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v1

    iput-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mModemIfaces:[Ljava/lang/String;

    goto :goto_0

    :cond_1
    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mModemIfaces:[Ljava/lang/String;

    invoke-static {v1, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->excludeFromStringArray([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v1

    iput-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mModemIfaces:[Ljava/lang/String;

    :goto_0
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiNetworkLock:Ljava/lang/Object;

    monitor-enter v1

    const/4 v0, 0x1

    if-ne p2, v0, :cond_2

    :try_start_1
    iget-object p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiIfaces:[Ljava/lang/String;

    invoke-static {p2, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->includeInStringArray([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;

    move-result-object p1

    iput-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiIfaces:[Ljava/lang/String;

    goto :goto_1

    :cond_2
    iget-object p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiIfaces:[Ljava/lang/String;

    invoke-static {p2, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->excludeFromStringArray([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;

    move-result-object p1

    iput-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiIfaces:[Ljava/lang/String;

    :goto_1
    monitor-exit v1

    return-void

    :catchall_0
    move-exception p0

    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw p0

    :catchall_1
    move-exception p0

    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    throw p0
.end method

.method public notePackageInstalledLocked(Ljava/lang/String;JJJ)V
    .locals 8

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/16 v5, 0xb

    long-to-int v7, p2

    move-wide v1, p4

    move-wide v3, p6

    move-object v6, p1

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsHistory;->recordEvent(JJILjava/lang/String;I)V

    new-instance p4, Landroid/os/BatteryStats$PackageChange;

    invoke-direct {p4}, Landroid/os/BatteryStats$PackageChange;-><init>()V

    iput-object p1, p4, Landroid/os/BatteryStats$PackageChange;->mPackageName:Ljava/lang/String;

    const/4 p1, 0x1

    iput-boolean p1, p4, Landroid/os/BatteryStats$PackageChange;->mUpdate:Z

    iput-wide p2, p4, Landroid/os/BatteryStats$PackageChange;->mVersionCode:J

    invoke-virtual {p0, p4}, Lcom/android/server/power/stats/BatteryStatsImpl;->addPackageChange(Landroid/os/BatteryStats$PackageChange;)V

    return-void
.end method

.method public notePackageUninstalledLocked(Ljava/lang/String;JJ)V
    .locals 8

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/16 v5, 0xc

    const/4 v7, 0x0

    move-wide v1, p2

    move-wide v3, p4

    move-object v6, p1

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsHistory;->recordEvent(JJILjava/lang/String;I)V

    new-instance p2, Landroid/os/BatteryStats$PackageChange;

    invoke-direct {p2}, Landroid/os/BatteryStats$PackageChange;-><init>()V

    iput-object p1, p2, Landroid/os/BatteryStats$PackageChange;->mPackageName:Ljava/lang/String;

    const/4 p1, 0x1

    iput-boolean p1, p2, Landroid/os/BatteryStats$PackageChange;->mUpdate:Z

    invoke-virtual {p0, p2}, Lcom/android/server/power/stats/BatteryStatsImpl;->addPackageChange(Landroid/os/BatteryStats$PackageChange;)V

    return-void
.end method

.method public notePhoneDataConnectionStateLocked(IZIIJJ)V
    .locals 12

    move-object v0, p0

    move v1, p1

    move v2, p3

    move-wide/from16 v7, p5

    const/4 v3, 0x2

    const/4 v9, 0x0

    if-eqz p2, :cond_2

    if-lez v1, :cond_0

    invoke-static {}, Landroid/telephony/TelephonyManager;->getAllNetworkTypes()[I

    move-result-object v4

    array-length v4, v4

    if-gt v1, v4, :cond_0

    goto :goto_0

    :cond_0
    const/4 v1, 0x1

    if-eq v2, v1, :cond_2

    if-eq v2, v3, :cond_1

    sget v1, Landroid/os/BatteryStats;->DATA_CONNECTION_OTHER:I

    goto :goto_0

    :cond_1
    sget v1, Landroid/os/BatteryStats;->DATA_CONNECTION_EMERGENCY_SERVICE:I

    :goto_0
    move v10, v1

    goto :goto_1

    :cond_2
    move v10, v9

    :goto_1
    invoke-static {v10}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapNetworkTypeToRadioAccessTechnology(I)I

    move-result v11

    if-ne v11, v3, :cond_3

    invoke-virtual {p0, v11}, Lcom/android/server/power/stats/BatteryStatsImpl;->getRatBatteryStatsLocked(I)Lcom/android/server/power/stats/BatteryStatsImpl$RadioAccessTechnologyBatteryStats;

    move-result-object v1

    move/from16 v2, p4

    invoke-virtual {v1, v2, v7, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$RadioAccessTechnologyBatteryStats;->noteFrequencyRange(IJ)V

    :cond_3
    iget v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneDataConnectionType:I

    if-eq v1, v10, :cond_6

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    move-wide/from16 v2, p5

    move-wide/from16 v4, p7

    move v6, v10

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsHistory;->recordDataConnectionTypeChangeEvent(JJI)V

    iget v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneDataConnectionType:I

    if-ltz v1, :cond_4

    iget-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v1, v2, v1

    invoke-virtual {v1, v7, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    :cond_4
    iput v10, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneDataConnectionType:I

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v1, v1, v10

    invoke-virtual {v1, v7, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    iget v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mActiveRat:I

    if-eq v1, v11, :cond_5

    invoke-virtual {p0, v1}, Lcom/android/server/power/stats/BatteryStatsImpl;->getRatBatteryStatsLocked(I)Lcom/android/server/power/stats/BatteryStatsImpl$RadioAccessTechnologyBatteryStats;

    move-result-object v1

    invoke-virtual {v1, v9, v7, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$RadioAccessTechnologyBatteryStats;->noteActive(ZJ)V

    iput v11, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mActiveRat:I

    :cond_5
    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v1

    invoke-virtual {p0, v11}, Lcom/android/server/power/stats/BatteryStatsImpl;->getRatBatteryStatsLocked(I)Lcom/android/server/power/stats/BatteryStatsImpl$RadioAccessTechnologyBatteryStats;

    move-result-object v0

    invoke-virtual {v0, v1, v7, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$RadioAccessTechnologyBatteryStats;->noteActive(ZJ)V

    :cond_6
    return-void
.end method

.method public notePhoneOffLocked(JJ)V
    .locals 7

    iget-boolean v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneOn:Z

    if-eqz v0, :cond_0

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/high16 v6, 0x800000

    move-wide v2, p1

    move-wide v4, p3

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsHistory;->recordState2StopEvent(JJI)V

    const/4 p3, 0x0

    iput-boolean p3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneOn:Z

    iget-object p3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p3, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    const-string/jumbo p1, "phone-off"

    const/4 p2, 0x4

    invoke-virtual {p0, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl;->scheduleSyncExternalStatsLocked(Ljava/lang/String;I)V

    :cond_0
    return-void
.end method

.method public notePhoneOnLocked(JJ)V
    .locals 7

    iget-boolean v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneOn:Z

    if-nez v0, :cond_0

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/high16 v6, 0x800000

    move-wide v2, p1

    move-wide v4, p3

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsHistory;->recordState2StartEvent(JJI)V

    const/4 p3, 0x1

    iput-boolean p3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneOn:Z

    iget-object p3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p3, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mConstants:Lcom/android/server/power/stats/BatteryStatsImpl$Constants;

    iget-boolean p1, p1, Lcom/android/server/power/stats/BatteryStatsImpl$Constants;->PHONE_ON_EXTERNAL_STATS_COLLECTION:Z

    if-eqz p1, :cond_0

    const-string/jumbo p1, "phone-on"

    const/4 p2, 0x4

    invoke-virtual {p0, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl;->scheduleSyncExternalStatsLocked(Ljava/lang/String;I)V

    :cond_0
    return-void
.end method

.method public notePhoneSignalStrengthLocked(ILandroid/util/SparseIntArray;JJ)V
    .locals 8

    invoke-virtual {p2}, Landroid/util/SparseIntArray;->size()I

    move-result v2

    const/4 v3, 0x0

    :goto_0
    if-ge v3, v2, :cond_0

    invoke-virtual {p2, v3}, Landroid/util/SparseIntArray;->keyAt(I)I

    move-result v4

    invoke-virtual {p2, v3}, Landroid/util/SparseIntArray;->valueAt(I)I

    move-result v5

    invoke-virtual {p0, v4}, Lcom/android/server/power/stats/BatteryStatsImpl;->getRatBatteryStatsLocked(I)Lcom/android/server/power/stats/BatteryStatsImpl$RadioAccessTechnologyBatteryStats;

    move-result-object v4

    invoke-virtual {v4, v5, p3, p4}, Lcom/android/server/power/stats/BatteryStatsImpl$RadioAccessTechnologyBatteryStats;->noteSignalStrength(IJ)V

    add-int/lit8 v3, v3, 0x1

    goto :goto_0

    :cond_0
    iget v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneServiceStateRaw:I

    iget v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneSimStateRaw:I

    move-object v0, p0

    move v3, p1

    move-wide v4, p3

    move-wide v6, p5

    invoke-virtual/range {v0 .. v7}, Lcom/android/server/power/stats/BatteryStatsImpl;->updateAllPhoneStateLocked(IIIJJ)V

    return-void
.end method

.method public notePhoneSignalStrengthLocked(Landroid/telephony/SignalStrength;JJ)V
    .locals 8

    invoke-virtual {p1}, Landroid/telephony/SignalStrength;->getLevel()I

    move-result v1

    new-instance v2, Landroid/util/SparseIntArray;

    const/4 v0, 0x3

    invoke-direct {v2, v0}, Landroid/util/SparseIntArray;-><init>(I)V

    invoke-virtual {p1}, Landroid/telephony/SignalStrength;->getCellSignalStrengths()Ljava/util/List;

    move-result-object p1

    invoke-interface {p1}, Ljava/util/List;->size()I

    move-result v0

    const/4 v3, 0x0

    move v4, v3

    :goto_0
    if-ge v4, v0, :cond_3

    invoke-interface {p1, v4}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Landroid/telephony/CellSignalStrength;

    instance-of v6, v5, Landroid/telephony/CellSignalStrengthNr;

    if-eqz v6, :cond_0

    invoke-virtual {v5}, Landroid/telephony/CellSignalStrength;->getLevel()I

    move-result v5

    const/4 v6, 0x2

    goto :goto_1

    :cond_0
    instance-of v6, v5, Landroid/telephony/CellSignalStrengthLte;

    if-eqz v6, :cond_1

    invoke-virtual {v5}, Landroid/telephony/CellSignalStrength;->getLevel()I

    move-result v5

    const/4 v6, 0x1

    goto :goto_1

    :cond_1
    invoke-virtual {v5}, Landroid/telephony/CellSignalStrength;->getLevel()I

    move-result v5

    move v6, v3

    :goto_1
    const/4 v7, -0x1

    invoke-virtual {v2, v6, v7}, Landroid/util/SparseIntArray;->get(II)I

    move-result v7

    if-ge v7, v5, :cond_2

    invoke-virtual {v2, v6, v5}, Landroid/util/SparseIntArray;->put(II)V

    :cond_2
    add-int/lit8 v4, v4, 0x1

    goto :goto_0

    :cond_3
    move-object v0, p0

    move-wide v3, p2

    move-wide v5, p4

    invoke-virtual/range {v0 .. v6}, Lcom/android/server/power/stats/BatteryStatsImpl;->notePhoneSignalStrengthLocked(ILandroid/util/SparseIntArray;JJ)V

    return-void
.end method

.method public notePhoneStateLocked(IIJJ)V
    .locals 8

    iget v3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneSignalStrengthBinRaw:I

    move-object v0, p0

    move v1, p1

    move v2, p2

    move-wide v4, p3

    move-wide v6, p5

    invoke-virtual/range {v0 .. v7}, Lcom/android/server/power/stats/BatteryStatsImpl;->updateAllPhoneStateLocked(IIIJJ)V

    return-void
.end method

.method public notePowerSaveModeLocked(ZJJ)V
    .locals 7

    iget-boolean v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerSaveModeEnabled:Z

    if-eq v0, p1, :cond_2

    if-eqz p1, :cond_0

    const/4 v0, 0x4

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    iget v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mModStepMode:I

    iget v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCurStepMode:I

    and-int/lit8 v3, v2, 0x4

    xor-int/2addr v3, v0

    or-int/2addr v1, v3

    iput v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mModStepMode:I

    and-int/lit8 v1, v2, -0x5

    or-int/2addr v0, v1

    iput v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCurStepMode:I

    iput-boolean p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerSaveModeEnabled:Z

    if-eqz p1, :cond_1

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/high16 v6, -0x80000000

    move-wide v2, p2

    move-wide v4, p4

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsHistory;->recordState2StartEvent(JJI)V

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerSaveModeEnabledTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p0, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    goto :goto_1

    :cond_1
    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/high16 v5, -0x80000000

    move-wide v1, p2

    move-wide v3, p4

    invoke-virtual/range {v0 .. v5}, Lcom/android/internal/os/BatteryStatsHistory;->recordState2StopEvent(JJI)V

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerSaveModeEnabledTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p0, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    :goto_1
    const/16 p0, 0x14

    invoke-static {p0, p1}, Lcom/android/internal/util/FrameworkStatsLog;->write(II)V

    :cond_2
    return-void
.end method

.method public notePowerSaveModeLockedInit(ZJJ)V
    .locals 1

    iget-boolean v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerSaveModeEnabled:Z

    if-eq v0, p1, :cond_0

    invoke-virtual/range {p0 .. p5}, Lcom/android/server/power/stats/BatteryStatsImpl;->notePowerSaveModeLocked(ZJJ)V

    goto :goto_0

    :cond_0
    const/16 p0, 0x14

    invoke-static {p0, p1}, Lcom/android/internal/util/FrameworkStatsLog;->write(II)V

    :goto_0
    return-void
.end method

.method public noteProcessAnrLocked(Ljava/lang/String;IJJ)V
    .locals 6

    invoke-virtual {p0, p2}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v1

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->isOnBattery()Z

    move-result p2

    if-eqz p2, :cond_0

    move-object v0, p0

    move-wide v2, p3

    move-wide v4, p5

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object p0

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->getProcessStatsLocked(Ljava/lang/String;)Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Proc;

    move-result-object p0

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Proc;->incNumAnrsLocked()V

    :cond_0
    return-void
.end method

.method public noteProcessCrashLocked(Ljava/lang/String;IJJ)V
    .locals 6

    invoke-virtual {p0, p2}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v1

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->isOnBattery()Z

    move-result p2

    if-eqz p2, :cond_0

    move-object v0, p0

    move-wide v2, p3

    move-wide v4, p5

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object p0

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->getProcessStatsLocked(Ljava/lang/String;)Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Proc;

    move-result-object p0

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Proc;->incNumCrashesLocked()V

    :cond_0
    return-void
.end method

.method public noteProcessDiedLocked(II)V
    .locals 0

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {p0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object p0

    check-cast p0, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    if-eqz p0, :cond_0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mPids:Landroid/util/SparseArray;

    invoke-virtual {p0, p2}, Landroid/util/SparseArray;->remove(I)V

    :cond_0
    return-void
.end method

.method public noteProcessFinishLocked(Ljava/lang/String;IJJ)V
    .locals 8

    invoke-virtual {p0, p2}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v7

    iget-object p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const/16 v0, 0x4001

    const/4 v1, 0x0

    invoke-virtual {p2, v0, p1, v7, v1}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result p2

    if-nez p2, :cond_0

    return-void

    :cond_0
    iget-boolean p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mRecordAllHistory:Z

    if-nez p2, :cond_1

    return-void

    :cond_1
    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/16 v5, 0x4001

    move-wide v1, p3

    move-wide v3, p5

    move-object v6, p1

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsHistory;->recordEvent(JJILjava/lang/String;I)V

    return-void
.end method

.method public noteProcessStartLocked(Ljava/lang/String;IJJ)V
    .locals 8

    invoke-virtual {p0, p2}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v7

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->isOnBattery()Z

    move-result p2

    if-eqz p2, :cond_0

    move-object v0, p0

    move v1, v7

    move-wide v2, p3

    move-wide v4, p5

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object p2

    invoke-virtual {p2, p1}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->getProcessStatsLocked(Ljava/lang/String;)Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Proc;

    move-result-object p2

    invoke-virtual {p2}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Proc;->incStartsLocked()V

    :cond_0
    iget-object p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const v0, 0x8001

    const/4 v1, 0x0

    invoke-virtual {p2, v0, p1, v7, v1}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result p2

    if-nez p2, :cond_1

    return-void

    :cond_1
    iget-boolean p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mRecordAllHistory:Z

    if-nez p2, :cond_2

    return-void

    :cond_2
    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const v5, 0x8001

    move-wide v1, p3

    move-wide v3, p5

    move-object v6, p1

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsHistory;->recordEvent(JJILjava/lang/String;I)V

    return-void
.end method

.method public noteResetAudioLocked(JJ)V
    .locals 7

    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mAudioOnNesting:I

    if-lez v0, :cond_0

    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mAudioOnNesting:I

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/high16 v6, 0x400000

    move-wide v2, p1

    move-wide v4, p3

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsHistory;->recordStateStopEvent(JJI)V

    iget-object p3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mAudioOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p3, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopAllRunningLocked(J)V

    :goto_0
    iget-object p3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {p3}, Landroid/util/SparseArray;->size()I

    move-result p3

    if-ge v0, p3, :cond_0

    iget-object p3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {p3, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object p3

    check-cast p3, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    invoke-virtual {p3, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteResetAudioLocked(J)V

    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    :cond_0
    return-void
.end method

.method public noteResetBluetoothScanLocked(JJ)V
    .locals 7

    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBluetoothScanNesting:I

    if-lez v0, :cond_0

    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBluetoothScanNesting:I

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/high16 v6, 0x100000

    move-wide v2, p1

    move-wide v4, p3

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsHistory;->recordState2StopEvent(JJI)V

    iget-object p3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBluetoothScanTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p3, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopAllRunningLocked(J)V

    :goto_0
    iget-object p3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {p3}, Landroid/util/SparseArray;->size()I

    move-result p3

    if-ge v0, p3, :cond_0

    iget-object p3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {p3, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object p3

    check-cast p3, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    invoke-virtual {p3, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteResetBluetoothScanLocked(J)V

    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    :cond_0
    return-void
.end method

.method public noteResetCameraLocked(JJ)V
    .locals 7

    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCameraOnNesting:I

    if-lez v0, :cond_0

    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCameraOnNesting:I

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/high16 v6, 0x200000

    move-wide v2, p1

    move-wide v4, p3

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsHistory;->recordState2StopEvent(JJI)V

    iget-object p3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCameraOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p3, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopAllRunningLocked(J)V

    :goto_0
    iget-object p3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {p3}, Landroid/util/SparseArray;->size()I

    move-result p3

    if-ge v0, p3, :cond_0

    iget-object p3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {p3, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object p3

    check-cast p3, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    invoke-virtual {p3, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteResetCameraLocked(J)V

    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    :cond_0
    const-string p1, "camera-reset"

    const/16 p2, 0x40

    invoke-virtual {p0, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl;->scheduleSyncExternalStatsLocked(Ljava/lang/String;I)V

    return-void
.end method

.method public noteResetFlashlightLocked(JJ)V
    .locals 7

    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mFlashlightOnNesting:I

    if-lez v0, :cond_0

    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mFlashlightOnNesting:I

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/high16 v6, 0x8000000

    move-wide v2, p1

    move-wide v4, p3

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsHistory;->recordState2StopEvent(JJI)V

    iget-object p3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p3, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopAllRunningLocked(J)V

    :goto_0
    iget-object p3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {p3}, Landroid/util/SparseArray;->size()I

    move-result p3

    if-ge v0, p3, :cond_0

    iget-object p3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {p3, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object p3

    check-cast p3, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    invoke-virtual {p3, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteResetFlashlightLocked(J)V

    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    :cond_0
    return-void
.end method

.method public noteResetGpsLocked()V
    .locals 4

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v0}, Lcom/android/internal/os/Clock;->elapsedRealtime()J

    move-result-wide v0

    const/4 v2, 0x0

    :goto_0
    iget-object v3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    move-result v3

    if-ge v2, v3, :cond_0

    iget-object v3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v3, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    invoke-virtual {v3, v0, v1}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteStopActualGps(J)V

    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    :cond_0
    return-void
.end method

.method public noteResetVideoLocked(JJ)V
    .locals 7

    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mVideoOnNesting:I

    if-lez v0, :cond_0

    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mVideoOnNesting:I

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/high16 v6, 0x40000000    # 2.0f

    move-wide v2, p1

    move-wide v4, p3

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsHistory;->recordState2StopEvent(JJI)V

    iget-object p3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mVideoOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p3, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopAllRunningLocked(J)V

    :goto_0
    iget-object p3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {p3}, Landroid/util/SparseArray;->size()I

    move-result p3

    if-ge v0, p3, :cond_0

    iget-object p3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {p3, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object p3

    check-cast p3, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    invoke-virtual {p3, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteResetVideoLocked(J)V

    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    :cond_0
    return-void
.end method

.method public noteScreenAutoBrightnessLocked(I)V
    .locals 4

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v0}, Lcom/android/internal/os/Clock;->elapsedRealtime()J

    move-result-wide v0

    const/4 v2, 0x1

    if-ne p1, v2, :cond_0

    goto :goto_0

    :cond_0
    const/4 v2, 0x0

    :goto_0
    iget-boolean p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mAutoBrightnessMode:Z

    if-eq p1, v2, :cond_4

    iput-boolean v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mAutoBrightnessMode:Z

    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenBrightnessBin:I

    if-ltz p1, :cond_4

    const/4 v3, 0x5

    if-lt p1, v3, :cond_1

    goto :goto_2

    :cond_1
    if-eqz v2, :cond_2

    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenState:I

    invoke-static {p1}, Landroid/view/Display;->isOnState(I)Z

    move-result p1

    if-eqz p1, :cond_2

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenAutoBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget v3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenBrightnessBin:I

    aget-object p1, p1, v3

    invoke-virtual {p1, v0, v1}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    goto :goto_1

    :cond_2
    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenAutoBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget v3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenBrightnessBin:I

    aget-object p1, p1, v3

    invoke-virtual {p1, v0, v1}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    :goto_1
    if-eqz v2, :cond_3

    iget-boolean p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsSubScreen:Z

    if-eqz p1, :cond_3

    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenState:I

    invoke-static {p1}, Landroid/view/Display;->isOnState(I)Z

    move-result p1

    if-eqz p1, :cond_3

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenAutoBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenBrightnessBin:I

    aget-object p0, p1, p0

    invoke-virtual {p0, v0, v1}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    goto :goto_2

    :cond_3
    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenAutoBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenBrightnessBin:I

    aget-object p0, p1, p0

    invoke-virtual {p0, v0, v1}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    nop

    :cond_4
    :goto_2
    return-void
.end method

.method public noteScreenBrightnessLocked(IIIIJJ)V
    .locals 7

    const/4 p3, 0x0

    const/4 v0, 0x1

    if-ne p4, v0, :cond_0

    move v1, v0

    goto :goto_0

    :cond_0
    move v1, p3

    :goto_0
    if-eqz v1, :cond_1

    iget-object v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPerDisplayBatteryStats:[Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;

    array-length v2, v2

    if-le v2, v0, :cond_1

    move p1, v0

    :cond_1
    const/16 v2, 0xff

    const/4 v3, 0x2

    if-le p2, v2, :cond_3

    iput-boolean v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenHighBrightness:Z

    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenState:I

    if-ne v0, v3, :cond_2

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenHighBrightnessTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v0

    if-nez v0, :cond_2

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenHighBrightnessTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p5, p6}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    :cond_2
    if-eqz v1, :cond_5

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenHighBrightnessTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v0

    if-nez v0, :cond_5

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenHighBrightnessTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p5, p6}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    goto :goto_1

    :cond_3
    iput-boolean p3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenHighBrightness:Z

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenHighBrightnessTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v0

    if-eqz v0, :cond_4

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenHighBrightnessTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p5, p6}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    :cond_4
    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenHighBrightnessTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v0

    if-eqz v0, :cond_5

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenHighBrightnessTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p5, p6}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    :cond_5
    :goto_1
    div-int/lit8 p2, p2, 0x33

    if-gez p2, :cond_6

    goto :goto_2

    :cond_6
    const/4 p3, 0x5

    if-lt p2, p3, :cond_7

    const/4 p3, 0x4

    goto :goto_2

    :cond_7
    move p3, p2

    :goto_2
    iget-object p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPerDisplayBatteryStats:[Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;

    array-length v0, p2

    if-ltz p1, :cond_c

    if-lt p1, v0, :cond_8

    goto :goto_5

    :cond_8
    aget-object p1, p2, p1

    iget p2, p1, Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;->screenBrightnessBin:I

    if-ne p2, p3, :cond_9

    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenBrightnessBin:I

    :goto_3
    move v1, p1

    goto :goto_4

    :cond_9
    iput p3, p1, Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;->screenBrightnessBin:I

    iget v0, p1, Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;->screenState:I

    if-ne v0, v3, :cond_b

    if-ltz p2, :cond_a

    iget-object v0, p1, Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;->screenBrightnessTimers:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object p2, v0, p2

    invoke-virtual {p2, p5, p6}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    :cond_a
    iget-object p1, p1, Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;->screenBrightnessTimers:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object p1, p1, p3

    invoke-virtual {p1, p5, p6}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    :cond_b
    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->evaluateOverallScreenBrightnessBinLocked()I

    move-result p1

    goto :goto_3

    :goto_4
    move-object v0, p0

    move v2, p4

    move-wide v3, p5

    move-wide v5, p7

    invoke-virtual/range {v0 .. v6}, Lcom/android/server/power/stats/BatteryStatsImpl;->maybeUpdateOverallScreenBrightness(IIJJ)V

    return-void

    :cond_c
    :goto_5
    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string p3, "Unexpected note screen brightness for display "

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, " (only "

    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPerDisplayBatteryStats:[Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;

    array-length p0, p0

    invoke-virtual {p2, p0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p0, " displays exist...)"

    invoke-virtual {p2, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    const-string p1, "BatteryStatsImpl"

    invoke-static {p1, p0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method public noteScreenBrightnessLocked(IIJJ)V
    .locals 9

    const/4 v3, 0x0

    const/4 v4, -0x1

    move-object v0, p0

    move v1, p1

    move v2, p2

    move-wide v5, p3

    move-wide v7, p5

    invoke-virtual/range {v0 .. v8}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteScreenBrightnessLocked(IIIIJJ)V

    return-void
.end method

.method public noteScreenStateLocked(IIIIJJJ)V
    .locals 26

    move-object/from16 v12, p0

    move/from16 v0, p2

    move/from16 v13, p4

    move-wide/from16 v14, p5

    move-wide/from16 v10, p7

    iget-boolean v1, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsFoldableDevice:Z

    const/4 v8, 0x0

    const/4 v9, 0x1

    if-eqz v1, :cond_1

    if-ne v13, v9, :cond_0

    move v1, v9

    goto :goto_0

    :cond_0
    move v1, v8

    :goto_0
    iput-boolean v1, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsSubScreen:Z

    if-eqz v1, :cond_2

    iget-object v1, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mPerDisplayBatteryStats:[Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;

    array-length v1, v1

    if-le v1, v9, :cond_2

    move v7, v9

    goto :goto_1

    :cond_1
    iput-boolean v8, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsSubScreen:Z

    iput v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenState:I

    :cond_2
    move/from16 v7, p1

    :goto_1
    iget v1, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mDisplayId:I

    if-eq v1, v7, :cond_6

    iget-boolean v2, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsFold:Z

    if-eqz v2, :cond_3

    iget-object v2, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mPerDisplayBatteryStats:[Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;

    aget-object v1, v2, v1

    invoke-virtual {v1, v14, v15}, Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;->stopAllRunningTimers(J)V

    :cond_3
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getTopAppStatsMap()Ljava/util/concurrent/ConcurrentHashMap;

    move-result-object v1

    invoke-virtual {v1}, Ljava/util/concurrent/ConcurrentHashMap;->keySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_2
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_6

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/Integer;

    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I

    move-result v2

    invoke-virtual {v12, v2}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object v2

    invoke-virtual {v2}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->getOrCreateDisplayTopActivityTimers()[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    move-result-object v3

    iget v4, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mDisplayId:I

    aget-object v4, v3, v4

    if-eqz v4, :cond_4

    invoke-virtual {v4, v14, v15}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    :cond_4
    aget-object v4, v3, v7

    if-nez v4, :cond_5

    const/4 v4, 0x0

    invoke-virtual {v2, v7, v4}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->makeDisplayTopActivityTimer(ILandroid/os/Parcel;)V

    :cond_5
    aget-object v2, v3, v7

    invoke-virtual {v2, v14, v15}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    goto :goto_2

    :cond_6
    const-string v1, "BatteryStatsImpl"

    const/4 v2, 0x4

    if-le v0, v2, :cond_b

    invoke-static/range {p2 .. p2}, Landroid/view/Display;->isOnState(I)Z

    move-result v4

    if-eqz v4, :cond_7

    const/4 v5, 0x2

    goto :goto_3

    :cond_7
    invoke-static/range {p2 .. p2}, Landroid/view/Display;->isDozeState(I)Z

    move-result v4

    if-eqz v4, :cond_9

    invoke-static/range {p2 .. p2}, Landroid/view/Display;->isSuspendedState(I)Z

    move-result v0

    if-eqz v0, :cond_8

    move v5, v2

    goto :goto_3

    :cond_8
    const/4 v5, 0x3

    goto :goto_3

    :cond_9
    invoke-static/range {p2 .. p2}, Landroid/view/Display;->isOffState(I)Z

    move-result v4

    if-eqz v4, :cond_a

    move v5, v9

    goto :goto_3

    :cond_a
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Unknown screen state (not mapped): "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    move v5, v8

    goto :goto_3

    :cond_b
    move v5, v0

    :goto_3
    iget v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenBrightnessBin:I

    iget-object v4, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mPerDisplayBatteryStats:[Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;

    array-length v8, v4

    if-ltz v7, :cond_52

    if-lt v7, v8, :cond_c

    goto/16 :goto_21

    :cond_c
    aget-object v2, v4, v7

    iget v3, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mDisplayId:I

    if-eq v3, v7, :cond_d

    aget-object v3, v4, v3

    iget v4, v3, Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;->screenState:I

    iget-boolean v6, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsFlip:Z

    if-eqz v6, :cond_e

    invoke-virtual {v3, v14, v15}, Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;->stopAllRunningTimers(J)V

    goto :goto_4

    :cond_d
    iget v4, v2, Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;->screenState:I

    :cond_e
    :goto_4
    if-ne v4, v5, :cond_f

    iget v2, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenState:I

    move/from16 v16, v0

    move/from16 v19, v7

    const/4 v3, 0x0

    const/4 v7, 0x0

    goto/16 :goto_11

    :cond_f
    iput v5, v2, Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;->screenState:I

    if-eqz v4, :cond_16

    if-eq v4, v9, :cond_16

    const/4 v3, 0x2

    if-eq v4, v3, :cond_14

    const/4 v3, 0x3

    if-eq v4, v3, :cond_12

    const/4 v6, 0x4

    if-eq v4, v6, :cond_10

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Attempted to stop timer for unexpected display state "

    invoke-virtual {v6, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v1, v6}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_6

    :cond_10
    if-ne v5, v3, :cond_11

    goto :goto_6

    :cond_11
    iget-object v3, v2, Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;->screenDozeTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v3, v14, v15}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    goto :goto_5

    :cond_12
    const/4 v3, 0x4

    if-ne v5, v3, :cond_13

    goto :goto_6

    :cond_13
    iget-object v3, v2, Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;->screenDozeTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v3, v14, v15}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    goto :goto_5

    :cond_14
    iget-object v0, v2, Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;->screenOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v14, v15}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    iget v0, v2, Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;->screenBrightnessBin:I

    if-ltz v0, :cond_15

    iget-object v3, v2, Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;->screenBrightnessTimers:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v0, v3, v0

    invoke-virtual {v0, v14, v15}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    :cond_15
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->evaluateOverallScreenBrightnessBinLocked()I

    move-result v0

    :goto_5
    const/4 v3, 0x1

    goto :goto_7

    :cond_16
    :goto_6
    const/4 v3, 0x0

    :goto_7
    if-eqz v5, :cond_20

    const/4 v6, 0x1

    if-eq v5, v6, :cond_20

    const/4 v6, 0x2

    if-eq v5, v6, :cond_1b

    const/4 v6, 0x3

    if-eq v5, v6, :cond_19

    const/4 v6, 0x4

    if-eq v5, v6, :cond_17

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Attempted to start timer for unexpected display state "

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, " for display "

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_a

    :cond_17
    const/4 v6, 0x3

    if-ne v4, v6, :cond_18

    goto :goto_a

    :cond_18
    iget-object v2, v2, Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;->screenDozeTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v2, v14, v15}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    goto :goto_8

    :cond_19
    const/4 v6, 0x4

    if-ne v4, v6, :cond_1a

    goto :goto_a

    :cond_1a
    iget-object v2, v2, Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;->screenDozeTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v2, v14, v15}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    :goto_8
    const/4 v3, 0x1

    goto :goto_a

    :cond_1b
    iget-object v0, v2, Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;->screenOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v14, v15}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    iget v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenPolicy:I

    if-eq v0, v13, :cond_1e

    if-nez v13, :cond_1c

    iget-object v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mPerDisplayBatteryStats:[Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;

    iget v3, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mDisplayId:I

    aget-object v0, v0, v3

    iget v0, v0, Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;->screenBrightnessBin:I

    goto :goto_9

    :cond_1c
    iget-boolean v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsSubScreen:Z

    if-eqz v0, :cond_1d

    const/4 v0, 0x1

    if-ne v13, v0, :cond_1d

    iget-object v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mPerDisplayBatteryStats:[Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;

    iget v3, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mDisplayId:I

    aget-object v0, v0, v3

    iget v0, v0, Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;->screenBrightnessBin:I

    goto :goto_9

    :cond_1d
    const/4 v0, -0x1

    goto :goto_9

    :cond_1e
    iget v0, v2, Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;->screenBrightnessBin:I

    :goto_9
    if-ltz v0, :cond_1f

    iget-object v3, v2, Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;->screenBrightnessTimers:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v3, v3, v0

    invoke-virtual {v3, v14, v15}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    iput v0, v2, Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;->screenBrightnessBin:I

    :cond_1f
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->evaluateOverallScreenBrightnessBinLocked()I

    move-result v0

    goto :goto_8

    :cond_20
    :goto_a
    if-eqz v3, :cond_21

    iget-object v2, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mGlobalEnergyConsumerStats:Lcom/android/internal/power/EnergyConsumerStats;

    if-eqz v2, :cond_21

    const/4 v9, 0x0

    invoke-virtual {v2, v9}, Lcom/android/internal/power/EnergyConsumerStats;->isStandardBucketSupported(I)Z

    move-result v2

    if-eqz v2, :cond_22

    const/16 v2, 0x20

    goto :goto_b

    :cond_21
    const/4 v9, 0x0

    :cond_22
    move v2, v9

    :goto_b
    move v4, v9

    move v6, v4

    :goto_c
    if-ge v6, v8, :cond_2b

    iget-object v9, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mPerDisplayBatteryStats:[Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;

    aget-object v9, v9, v6

    iget v9, v9, Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;->screenState:I

    move/from16 v19, v7

    const/4 v7, 0x2

    if-eq v9, v7, :cond_29

    if-ne v4, v7, :cond_23

    goto :goto_f

    :cond_23
    const/4 v7, 0x3

    if-eq v9, v7, :cond_28

    if-ne v4, v7, :cond_24

    goto :goto_e

    :cond_24
    const/4 v7, 0x4

    if-eq v9, v7, :cond_27

    if-ne v4, v7, :cond_25

    goto :goto_d

    :cond_25
    const/4 v7, 0x1

    if-eq v9, v7, :cond_26

    if-ne v4, v7, :cond_2a

    :cond_26
    const/4 v4, 0x1

    goto :goto_10

    :cond_27
    :goto_d
    const/4 v4, 0x4

    goto :goto_10

    :cond_28
    :goto_e
    const/4 v4, 0x3

    goto :goto_10

    :cond_29
    :goto_f
    const/4 v4, 0x2

    :cond_2a
    :goto_10
    add-int/lit8 v6, v6, 0x1

    move/from16 v7, v19

    const/4 v9, 0x0

    goto :goto_c

    :cond_2b
    move/from16 v19, v7

    move/from16 v16, v0

    move v7, v2

    move v2, v4

    :goto_11
    iget-object v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-virtual {v0}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;->isRunning()Z

    move-result v20

    iget-object v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-virtual {v0}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;->isRunning()Z

    move-result v21

    iget-boolean v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mPretendScreenOff:Z

    if-eqz v0, :cond_2c

    const/4 v8, 0x1

    goto :goto_12

    :cond_2c
    move v8, v2

    :goto_12
    iget v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenState:I

    if-eq v0, v8, :cond_3b

    move-wide/from16 v2, p9

    const/4 v9, 0x1

    invoke-virtual {v12, v9, v2, v3}, Lcom/android/server/power/stats/BatteryStatsImpl;->recordDailyStatsIfNeededLocked(ZJ)V

    iget v6, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenState:I

    iput v8, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenState:I

    if-eqz v8, :cond_2e

    add-int/lit8 v0, v8, -0x1

    and-int/lit8 v2, v0, 0x3

    if-ne v2, v0, :cond_2d

    iget v1, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mModStepMode:I

    iget v2, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mCurStepMode:I

    and-int/lit8 v3, v2, 0x3

    xor-int/2addr v3, v0

    or-int/2addr v1, v3

    iput v1, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mModStepMode:I

    and-int/lit8 v1, v2, -0x4

    or-int/2addr v0, v1

    iput v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mCurStepMode:I

    goto :goto_13

    :cond_2d
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Unexpected screen state: "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    :cond_2e
    :goto_13
    invoke-static {v8}, Landroid/view/Display;->isDozeState(I)Z

    move-result v0

    const/high16 v1, 0x40000

    if-eqz v0, :cond_2f

    invoke-static {v6}, Landroid/view/Display;->isDozeState(I)Z

    move-result v0

    if-nez v0, :cond_2f

    iget-object v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenDozeTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v14, v15}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    const/4 v0, 0x0

    goto :goto_15

    :cond_2f
    invoke-static {v6}, Landroid/view/Display;->isDozeState(I)Z

    move-result v0

    if-eqz v0, :cond_30

    invoke-static {v8}, Landroid/view/Display;->isDozeState(I)Z

    move-result v0

    if-nez v0, :cond_30

    iget-object v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenDozeTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v14, v15}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    move v0, v1

    goto :goto_14

    :cond_30
    const/4 v0, 0x0

    :goto_14
    const/4 v1, 0x0

    :goto_15
    invoke-static {v8}, Landroid/view/Display;->isOnState(I)Z

    move-result v2

    const/high16 v3, 0x100000

    if-eqz v2, :cond_33

    or-int/2addr v1, v3

    iget-object v2, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v2, v14, v15}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    iget v2, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mHighRefreshRateBin:I

    invoke-virtual {v12, v2}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteDisplayHighRefreshRateLocked(I)V

    iget v2, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mGpsNesting:I

    if-lez v2, :cond_31

    iget-object v2, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenOnGpsTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v2, v14, v15}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    :cond_31
    iget v2, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenBrightnessBin:I

    if-ltz v2, :cond_35

    iget-object v3, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v3, v2

    invoke-virtual {v2, v14, v15}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    iget-boolean v2, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mAutoBrightnessMode:Z

    if-eqz v2, :cond_32

    iget-object v2, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenAutoBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget v3, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenBrightnessBin:I

    aget-object v2, v2, v3

    invoke-virtual {v2, v14, v15}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    :cond_32
    iget-boolean v2, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenHighBrightness:Z

    if-eqz v2, :cond_35

    iget-object v2, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenHighBrightnessTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v2, v14, v15}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    goto :goto_16

    :cond_33
    invoke-static {v6}, Landroid/view/Display;->isOnState(I)Z

    move-result v2

    if-eqz v2, :cond_35

    or-int/2addr v0, v3

    iget-object v2, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v2, v14, v15}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    iget v2, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mHighRefreshRateBin:I

    invoke-virtual {v12, v2}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteDisplayHighRefreshRateLocked(I)V

    iget-object v2, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenOnGpsTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v2, v14, v15}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    iget v2, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenBrightnessBin:I

    if-ltz v2, :cond_35

    iget-object v3, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v3, v2

    invoke-virtual {v2, v14, v15}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    iget-boolean v2, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mAutoBrightnessMode:Z

    if-eqz v2, :cond_34

    iget-object v2, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenAutoBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget v3, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenBrightnessBin:I

    aget-object v2, v2, v3

    invoke-virtual {v2, v14, v15}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    :cond_34
    iget-object v2, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenHighBrightnessTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v2}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v2

    if-eqz v2, :cond_35

    iget-object v2, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenHighBrightnessTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v2, v14, v15}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    :cond_35
    :goto_16
    move/from16 v22, v0

    move/from16 v18, v1

    if-nez v18, :cond_37

    if-eqz v22, :cond_36

    goto :goto_17

    :cond_36
    move v13, v5

    move/from16 p1, v6

    goto :goto_18

    :cond_37
    :goto_17
    iget-object v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    move-wide/from16 v1, p5

    move-wide/from16 v3, p7

    move v13, v5

    move/from16 v5, v18

    move/from16 p1, v6

    move/from16 v6, v22

    invoke-virtual/range {v0 .. v6}, Lcom/android/internal/os/BatteryStatsHistory;->recordStateChangeEvent(JJII)V

    :goto_18
    or-int/lit8 v17, v7, 0x1

    invoke-static {v8}, Landroid/view/Display;->isOnState(I)Z

    move-result v0

    const-wide/16 v23, 0x3e8

    if-eqz v0, :cond_38

    iget-object v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-virtual {v0}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;->isRunning()Z

    move-result v1

    mul-long v3, v10, v23

    mul-long v5, v14, v23

    move-object/from16 v0, p0

    move v2, v8

    invoke-virtual/range {v0 .. v6}, Lcom/android/server/power/stats/BatteryStatsImpl;->updateTimeBasesLocked(ZIJJ)V

    const/4 v1, -0x1

    const/4 v2, -0x1

    const/4 v3, 0x0

    const-string/jumbo v4, "screen"

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    move/from16 v25, v19

    move/from16 p2, v8

    move-wide/from16 v8, p5

    move v15, v13

    move-wide v13, v10

    move-wide/from16 v10, p7

    invoke-virtual/range {v0 .. v11}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteStartWakeLocked(IILandroid/os/WorkSource$WorkChain;Ljava/lang/String;Ljava/lang/String;IZJJ)V

    goto :goto_19

    :cond_38
    move/from16 p2, v8

    move v15, v13

    move/from16 v25, v19

    move-wide v13, v10

    invoke-static/range {p1 .. p1}, Landroid/view/Display;->isOnState(I)Z

    move-result v0

    if-eqz v0, :cond_39

    const/4 v1, -0x1

    const/4 v2, -0x1

    const/4 v3, 0x0

    const-string/jumbo v4, "screen"

    const-string/jumbo v5, "screen"

    const/4 v6, 0x0

    move-object/from16 v0, p0

    move-wide/from16 v7, p5

    move-wide/from16 v9, p7

    invoke-virtual/range {v0 .. v10}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteStopWakeLocked(IILandroid/os/WorkSource$WorkChain;Ljava/lang/String;Ljava/lang/String;IJJ)V

    iget-object v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-virtual {v0}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;->isRunning()Z

    move-result v1

    mul-long v3, v13, v23

    move-wide/from16 v8, p5

    move-wide v10, v13

    mul-long v5, v8, v23

    move-object/from16 v0, p0

    move/from16 v2, p2

    invoke-virtual/range {v0 .. v6}, Lcom/android/server/power/stats/BatteryStatsImpl;->updateTimeBasesLocked(ZIJJ)V

    goto :goto_1a

    :cond_39
    move-wide/from16 v8, p5

    :goto_19
    move-wide v10, v13

    :goto_1a
    iget-boolean v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryInternal:Z

    if-eqz v0, :cond_3a

    move/from16 v0, p1

    move/from16 v13, p2

    invoke-virtual {v12, v0, v13}, Lcom/android/server/power/stats/BatteryStatsImpl;->updateDischargeScreenLevelsLocked(II)V

    goto :goto_1b

    :cond_3a
    move/from16 v13, p2

    :goto_1b
    move/from16 v7, v17

    const/4 v14, 0x1

    goto :goto_1c

    :cond_3b
    move/from16 p1, v3

    move v13, v8

    move-wide v8, v14

    move/from16 v25, v19

    move v15, v5

    move/from16 v14, p1

    :goto_1c
    iget v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenState:I

    move v6, v15

    if-eq v0, v6, :cond_46

    iget-boolean v1, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsSubScreen:Z

    if-eqz v1, :cond_3c

    invoke-static {v6}, Landroid/view/Display;->isDozeState(I)Z

    move-result v1

    if-eqz v1, :cond_3c

    invoke-static {v0}, Landroid/view/Display;->isDozeState(I)Z

    move-result v1

    if-nez v1, :cond_3c

    iget-object v1, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenDozeTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v8, v9}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    const/4 v1, 0x1

    iput-boolean v1, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsSubScreenDoze:Z

    move v2, v1

    const/4 v15, 0x0

    goto :goto_1d

    :cond_3c
    const/4 v1, 0x1

    invoke-static {v0}, Landroid/view/Display;->isDozeState(I)Z

    move-result v2

    if-eqz v2, :cond_3d

    invoke-static {v6}, Landroid/view/Display;->isDozeState(I)Z

    move-result v2

    if-nez v2, :cond_3d

    iget-object v2, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenDozeTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v2, v8, v9}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    const/4 v15, 0x0

    iput-boolean v15, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsSubScreenDoze:Z

    move v2, v1

    goto :goto_1d

    :cond_3d
    const/4 v15, 0x0

    move v2, v15

    :goto_1d
    iget-boolean v3, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsSubScreen:Z

    if-eqz v3, :cond_41

    invoke-static {v6}, Landroid/view/Display;->isOnState(I)Z

    move-result v3

    if-eqz v3, :cond_41

    iget-object v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8, v9}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    iget v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mHighRefreshRateBin:I

    const/4 v3, 0x2

    invoke-virtual {v12, v3, v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteSubDisplayHighRefreshRateLocked(II)V

    iget v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenBrightnessBin:I

    if-ltz v0, :cond_3f

    iget-object v2, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v0, v2, v0

    invoke-virtual {v0, v8, v9}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    iget-boolean v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mAutoBrightnessMode:Z

    if-eqz v0, :cond_3e

    iget-object v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenAutoBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget v2, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenBrightnessBin:I

    aget-object v0, v0, v2

    invoke-virtual {v0, v8, v9}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    :cond_3e
    iget-boolean v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenHighBrightness:Z

    if-eqz v0, :cond_3f

    iget-object v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenHighBrightnessTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v0

    if-nez v0, :cond_3f

    iget-object v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenHighBrightnessTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8, v9}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    :cond_3f
    iget-boolean v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryInternal:Z

    if-eqz v0, :cond_40

    invoke-virtual {v12, v1, v3}, Lcom/android/server/power/stats/BatteryStatsImpl;->updateDischargeSubScreenLevelsLocked(II)V

    :cond_40
    iput-boolean v1, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsSubScreenOn:Z

    goto :goto_1e

    :cond_41
    const/4 v3, 0x2

    invoke-static {v0}, Landroid/view/Display;->isOnState(I)Z

    move-result v0

    if-eqz v0, :cond_45

    iget-object v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8, v9}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    iget v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mHighRefreshRateBin:I

    invoke-virtual {v12, v1, v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteSubDisplayHighRefreshRateLocked(II)V

    iget v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenBrightnessBin:I

    if-ltz v0, :cond_43

    iget-object v2, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v0, v2, v0

    invoke-virtual {v0, v8, v9}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    iget-object v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenAutoBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget v2, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenBrightnessBin:I

    aget-object v0, v0, v2

    invoke-virtual {v0}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v0

    if-eqz v0, :cond_42

    iget-object v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenAutoBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget v2, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenBrightnessBin:I

    aget-object v0, v0, v2

    invoke-virtual {v0, v8, v9}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    :cond_42
    iget-object v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenHighBrightnessTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v0

    if-eqz v0, :cond_43

    iget-object v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenHighBrightnessTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8, v9}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    :cond_43
    iget-boolean v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryInternal:Z

    if-eqz v0, :cond_44

    invoke-virtual {v12, v3, v1}, Lcom/android/server/power/stats/BatteryStatsImpl;->updateDischargeSubScreenLevelsLocked(II)V

    :cond_44
    iput-boolean v15, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsSubScreenOn:Z

    goto :goto_1e

    :cond_45
    move v1, v2

    :goto_1e
    move/from16 v2, p4

    goto/16 :goto_1f

    :cond_46
    const/4 v1, 0x1

    const/4 v3, 0x2

    const/4 v15, 0x0

    iget v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenPolicy:I

    move/from16 v2, p4

    if-eq v0, v2, :cond_4e

    if-nez v2, :cond_4a

    invoke-static {v6}, Landroid/view/Display;->isOnState(I)Z

    move-result v0

    if-eqz v0, :cond_4e

    iget-object v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenDozeTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8, v9}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    iget-object v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8, v9}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    iget v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mHighRefreshRateBin:I

    invoke-virtual {v12, v1, v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteSubDisplayHighRefreshRateLocked(II)V

    iget v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenBrightnessBin:I

    if-ltz v0, :cond_48

    iget-object v4, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v0, v4, v0

    invoke-virtual {v0, v8, v9}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    iget-object v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenAutoBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget v4, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenBrightnessBin:I

    aget-object v0, v0, v4

    invoke-virtual {v0}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v0

    if-eqz v0, :cond_47

    iget-object v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenAutoBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget v4, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenBrightnessBin:I

    aget-object v0, v0, v4

    invoke-virtual {v0, v8, v9}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    :cond_47
    iget-object v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenHighBrightnessTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v0

    if-eqz v0, :cond_48

    iget-object v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenHighBrightnessTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8, v9}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    :cond_48
    iget-boolean v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryInternal:Z

    if-eqz v0, :cond_49

    invoke-virtual {v12, v3, v1}, Lcom/android/server/power/stats/BatteryStatsImpl;->updateDischargeSubScreenLevelsLocked(II)V

    :cond_49
    iput-boolean v15, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsSubScreenOn:Z

    goto :goto_1f

    :cond_4a
    iget-boolean v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsSubScreen:Z

    if-eqz v0, :cond_4e

    if-ne v2, v1, :cond_4e

    invoke-static {v6}, Landroid/view/Display;->isOnState(I)Z

    move-result v0

    if-eqz v0, :cond_4e

    iget-object v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenDozeTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8, v9}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    iget-object v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8, v9}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    iget v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mHighRefreshRateBin:I

    invoke-virtual {v12, v3, v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteSubDisplayHighRefreshRateLocked(II)V

    iget v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenBrightnessBin:I

    if-ltz v0, :cond_4c

    iget-object v4, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v0, v4, v0

    invoke-virtual {v0, v8, v9}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    iget-boolean v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mAutoBrightnessMode:Z

    if-eqz v0, :cond_4b

    iget-object v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenAutoBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget v4, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenBrightnessBin:I

    aget-object v0, v0, v4

    invoke-virtual {v0, v8, v9}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    :cond_4b
    iget-boolean v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenHighBrightness:Z

    if-eqz v0, :cond_4c

    iget-object v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenHighBrightnessTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v0

    if-nez v0, :cond_4c

    iget-object v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenHighBrightnessTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8, v9}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    :cond_4c
    iget-boolean v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryInternal:Z

    if-eqz v0, :cond_4d

    invoke-virtual {v12, v1, v3}, Lcom/android/server/power/stats/BatteryStatsImpl;->updateDischargeSubScreenLevelsLocked(II)V

    :cond_4d
    iput-boolean v1, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsSubScreenOn:Z

    goto :goto_1f

    :cond_4e
    move v1, v15

    :goto_1f
    iput v6, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenState:I

    iput v2, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenPolicy:I

    move/from16 v0, v25

    iput v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mDisplayId:I

    if-eqz v1, :cond_4f

    iget-object v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    iget-boolean v1, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsSubScreenOn:Z

    iget-boolean v3, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsSubScreenDoze:Z

    invoke-virtual {v0, v1, v3}, Lcom/android/internal/os/BatteryStatsHistory;->setSubScreenState(ZZ)V

    iget-object v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    invoke-virtual {v0, v8, v9, v10, v11}, Lcom/android/internal/os/BatteryStatsHistory;->writeHistoryItem(JJ)V

    :cond_4f
    move-object/from16 v0, p0

    move/from16 v1, v16

    move/from16 v2, p4

    move-wide/from16 v3, p5

    move-wide/from16 v5, p7

    invoke-virtual/range {v0 .. v6}, Lcom/android/server/power/stats/BatteryStatsImpl;->maybeUpdateOverallScreenBrightness(IIJJ)V

    if-eqz v14, :cond_51

    iget-object v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mPerDisplayBatteryStats:[Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;

    array-length v0, v0

    new-array v1, v0, [I

    move v8, v15

    :goto_20
    if-ge v8, v0, :cond_50

    iget-object v2, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mPerDisplayBatteryStats:[Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;

    aget-object v2, v2, v8

    iget v2, v2, Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;->screenState:I

    aput v2, v1, v8

    add-int/lit8 v8, v8, 0x1

    goto :goto_20

    :cond_50
    iget-object v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mExternalSync:Lcom/android/server/power/stats/BatteryStatsImpl$ExternalStatsSync;

    move-object/from16 p4, v0

    move/from16 p5, v7

    move/from16 p6, v20

    move/from16 p7, v21

    move/from16 p8, v13

    move-object/from16 p9, v1

    invoke-interface/range {p4 .. p9}, Lcom/android/server/power/stats/BatteryStatsImpl$ExternalStatsSync;->scheduleSyncDueToScreenStateChange(IZZI[I)Ljava/util/concurrent/Future;

    :cond_51
    return-void

    :cond_52
    :goto_21
    move v0, v7

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Unexpected note screen state for display "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v0, " (only "

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mPerDisplayBatteryStats:[Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;

    array-length v0, v0

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v0, " displays exist...)"

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method public noteScreenStateLocked(IIJJJ)V
    .locals 11

    const/4 v3, 0x0

    const/4 v4, -0x1

    move-object v0, p0

    move v1, p1

    move v2, p2

    move-wide v5, p3

    move-wide/from16 v7, p5

    move-wide/from16 v9, p7

    invoke-virtual/range {v0 .. v10}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteScreenStateLocked(IIIIJJJ)V

    return-void
.end method

.method public final noteStartGpsLocked(ILandroid/os/WorkSource$WorkChain;JJ)V
    .locals 8

    if-eqz p2, :cond_0

    invoke-virtual {p2}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result p1

    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v1

    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mGpsNesting:I

    if-nez v0, :cond_1

    iget-object v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/high16 v7, 0x20000000

    move-wide v3, p3

    move-wide v5, p5

    invoke-virtual/range {v2 .. v7}, Lcom/android/internal/os/BatteryStatsHistory;->recordStateStartEvent(JJI)V

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v0

    if-eqz v0, :cond_1

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenOnGpsTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p3, p4}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    :cond_1
    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mGpsNesting:I

    const/4 v2, 0x1

    add-int/2addr v0, v2

    iput v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mGpsNesting:I

    const/4 v0, 0x6

    if-nez p2, :cond_2

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapIsolatedUid(I)I

    move-result p1

    const/4 p2, 0x0

    invoke-static {v0, p1, p2, v2}, Lcom/android/internal/util/FrameworkStatsLog;->write_non_chained(IILjava/lang/String;I)V

    goto :goto_0

    :cond_2
    invoke-virtual {p2}, Landroid/os/WorkSource$WorkChain;->getUids()[I

    move-result-object p1

    invoke-virtual {p2}, Landroid/os/WorkSource$WorkChain;->getTags()[Ljava/lang/String;

    move-result-object p2

    invoke-static {v0, p1, p2, v2}, Lcom/android/internal/util/FrameworkStatsLog;->write(I[I[Ljava/lang/String;I)V

    :goto_0
    move-object v0, p0

    move-wide v2, p3

    move-wide v4, p5

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object p0

    invoke-virtual {p0, p3, p4}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteStartGps(J)V

    return-void
.end method

.method public noteStartSensorLocked(IIJJ)V
    .locals 8

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v1

    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSensorNesting:I

    if-nez p1, :cond_0

    iget-object v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/high16 v7, 0x800000

    move-wide v3, p3

    move-wide v5, p5

    invoke-virtual/range {v2 .. v7}, Lcom/android/internal/os/BatteryStatsHistory;->recordStateStartEvent(JJI)V

    :cond_0
    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSensorNesting:I

    add-int/lit8 p1, p1, 0x1

    iput p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSensorNesting:I

    move-object v0, p0

    move-wide v2, p3

    move-wide v4, p5

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object p0

    invoke-virtual {p0, p2, p3, p4}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteStartSensor(IJ)V

    return-void
.end method

.method public noteStartTxPowerSharingLocked()V
    .locals 4

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v0}, Lcom/android/internal/os/Clock;->elapsedRealtime()J

    move-result-wide v0

    iget-object v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v2}, Lcom/android/internal/os/Clock;->uptimeMillis()J

    move-result-wide v2

    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteStartTxPowerSharingLocked(JJ)V

    return-void
.end method

.method public noteStartTxPowerSharingLocked(JJ)V
    .locals 0

    iget-boolean p3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mTxPowerSharingOn:Z

    if-nez p3, :cond_0

    const/4 p3, 0x1

    iput-boolean p3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mTxPowerSharingOn:Z

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mTxPowerSharingTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p0, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    :cond_0
    return-void
.end method

.method public noteStartWakeFromSourceLocked(Landroid/os/WorkSource;ILjava/lang/String;Ljava/lang/String;IZJJ)V
    .locals 16

    invoke-virtual/range {p1 .. p1}, Landroid/os/WorkSource;->size()I

    move-result v0

    const/4 v1, 0x0

    move v2, v1

    :goto_0
    if-ge v2, v0, :cond_0

    move-object/from16 v3, p1

    invoke-virtual {v3, v2}, Landroid/os/WorkSource;->getUid(I)I

    move-result v5

    const/4 v7, 0x0

    move-object/from16 v4, p0

    move/from16 v6, p2

    move-object/from16 v8, p3

    move-object/from16 v9, p4

    move/from16 v10, p5

    move/from16 v11, p6

    move-wide/from16 v12, p7

    move-wide/from16 v14, p9

    invoke-virtual/range {v4 .. v15}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteStartWakeLocked(IILandroid/os/WorkSource$WorkChain;Ljava/lang/String;Ljava/lang/String;IZJJ)V

    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    :cond_0
    move-object/from16 v3, p1

    invoke-virtual/range {p1 .. p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v0

    if-eqz v0, :cond_1

    :goto_1
    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v2

    if-ge v1, v2, :cond_1

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    move-object v6, v2

    check-cast v6, Landroid/os/WorkSource$WorkChain;

    invoke-virtual {v6}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v4

    move-object/from16 v3, p0

    move/from16 v5, p2

    move-object/from16 v7, p3

    move-object/from16 v8, p4

    move/from16 v9, p5

    move/from16 v10, p6

    move-wide/from16 v11, p7

    move-wide/from16 v13, p9

    invoke-virtual/range {v3 .. v14}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteStartWakeLocked(IILandroid/os/WorkSource$WorkChain;Ljava/lang/String;Ljava/lang/String;IZJJ)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    :cond_1
    return-void
.end method

.method public noteStartWakeLocked(IILandroid/os/WorkSource$WorkChain;Ljava/lang/String;Ljava/lang/String;IZJJ)V
    .locals 16

    move-object/from16 v6, p0

    move/from16 v7, p6

    invoke-virtual/range {p0 .. p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v1

    move-wide/from16 v4, p8

    move-wide/from16 v2, p10

    if-nez v7, :cond_4

    invoke-virtual {v6, v4, v5, v2, v3}, Lcom/android/server/power/stats/BatteryStatsImpl;->aggregateLastWakeupUptimeLocked(JJ)V

    if-nez p5, :cond_0

    move-object/from16 v0, p4

    goto :goto_0

    :cond_0
    move-object/from16 v0, p5

    :goto_0
    iget-boolean v8, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mRecordAllHistory:Z

    if-eqz v8, :cond_1

    iget-object v8, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const v9, 0x8005

    const/4 v10, 0x0

    invoke-virtual {v8, v9, v0, v1, v10}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result v8

    if-eqz v8, :cond_1

    iget-object v8, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const v13, 0x8005

    move-wide/from16 v9, p8

    move-wide/from16 v11, p10

    move-object v14, v0

    move v15, v1

    invoke-virtual/range {v8 .. v15}, Lcom/android/internal/os/BatteryStatsHistory;->recordEvent(JJILjava/lang/String;I)V

    :cond_1
    iget v8, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mWakeLockNesting:I

    const/4 v15, 0x1

    if-nez v8, :cond_2

    xor-int/lit8 v8, p7, 0x1

    iput-boolean v8, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mWakeLockImportant:Z

    iget-object v8, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    move-wide/from16 v9, p8

    move-wide/from16 v11, p10

    move-object v13, v0

    move v14, v1

    invoke-virtual/range {v8 .. v14}, Lcom/android/internal/os/BatteryStatsHistory;->recordWakelockStartEvent(JJLjava/lang/String;I)V

    goto :goto_1

    :cond_2
    iget-boolean v8, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mWakeLockImportant:Z

    if-nez v8, :cond_3

    if-nez p7, :cond_3

    iget-object v8, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    move-wide/from16 v9, p8

    move-wide/from16 v11, p10

    move-object v13, v0

    move v14, v1

    invoke-virtual/range {v8 .. v14}, Lcom/android/internal/os/BatteryStatsHistory;->maybeUpdateWakelockTag(JJLjava/lang/String;I)Z

    move-result v0

    if-eqz v0, :cond_3

    iput-boolean v15, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mWakeLockImportant:Z

    :cond_3
    :goto_1
    iget v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mWakeLockNesting:I

    add-int/2addr v0, v15

    iput v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mWakeLockNesting:I

    :cond_4
    if-ltz v1, :cond_8

    move/from16 v8, p1

    if-eq v1, v8, :cond_5

    invoke-virtual/range {p0 .. p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->incrementIsolatedUidRefCount(I)V

    :cond_5
    iget-object v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-virtual {v0}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;->isRunning()Z

    move-result v0

    if-eqz v0, :cond_6

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->requestWakelockCpuUpdate()V

    :cond_6
    move-object/from16 v0, p0

    move-wide/from16 v2, p8

    move-wide/from16 v4, p10

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object v9

    move-object v0, v9

    move/from16 v1, p2

    move-object/from16 v2, p4

    move/from16 v3, p6

    move-wide/from16 v4, p8

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteStartWakeLocked(ILjava/lang/String;IJ)V

    iget v0, v9, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mProcessState:I

    if-eqz p3, :cond_7

    const/16 v1, 0xa

    invoke-virtual/range {p3 .. p3}, Landroid/os/WorkSource$WorkChain;->getUids()[I

    move-result-object v2

    invoke-virtual/range {p3 .. p3}, Landroid/os/WorkSource$WorkChain;->getTags()[Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v6, v7}, Lcom/android/server/power/stats/BatteryStatsImpl;->getPowerManagerWakeLockLevel(I)I

    move-result v4

    const/4 v5, 0x1

    move/from16 p5, v1

    move-object/from16 p6, v2

    move-object/from16 p7, v3

    move/from16 p8, v4

    move-object/from16 p9, p4

    move/from16 p10, v5

    move/from16 p11, v0

    invoke-static/range {p5 .. p11}, Lcom/android/internal/util/FrameworkStatsLog;->write(I[I[Ljava/lang/String;ILjava/lang/String;II)V

    goto :goto_2

    :cond_7
    const/16 v1, 0xa

    invoke-virtual/range {p0 .. p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapIsolatedUid(I)I

    move-result v2

    const/4 v3, 0x0

    invoke-virtual {v6, v7}, Lcom/android/server/power/stats/BatteryStatsImpl;->getPowerManagerWakeLockLevel(I)I

    move-result v4

    const/4 v5, 0x1

    move/from16 p5, v1

    move/from16 p6, v2

    move-object/from16 p7, v3

    move/from16 p8, v4

    move-object/from16 p9, p4

    move/from16 p10, v5

    move/from16 p11, v0

    invoke-static/range {p5 .. p11}, Lcom/android/internal/util/FrameworkStatsLog;->write_non_chained(IILjava/lang/String;ILjava/lang/String;II)V

    :cond_8
    :goto_2
    return-void
.end method

.method public final noteStopGpsLocked(ILandroid/os/WorkSource$WorkChain;JJ)V
    .locals 8

    if-eqz p2, :cond_0

    invoke-virtual {p2}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result p1

    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v1

    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mGpsNesting:I

    add-int/lit8 v0, v0, -0x1

    iput v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mGpsNesting:I

    if-nez v0, :cond_1

    iget-object v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/high16 v7, 0x20000000

    move-wide v3, p3

    move-wide v5, p5

    invoke-virtual/range {v2 .. v7}, Lcom/android/internal/os/BatteryStatsHistory;->recordStateStopEvent(JJI)V

    const/4 v0, -0x1

    invoke-virtual {p0, v0, p3, p4}, Lcom/android/server/power/stats/BatteryStatsImpl;->stopAllGpsSignalQualityTimersLocked(IJ)V

    iput v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mGpsSignalQualityBin:I

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenOnGpsTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p3, p4}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    :cond_1
    const/4 v0, 0x0

    const/4 v2, 0x6

    if-nez p2, :cond_2

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapIsolatedUid(I)I

    move-result p1

    const/4 p2, 0x0

    invoke-static {v2, p1, p2, v0}, Lcom/android/internal/util/FrameworkStatsLog;->write_non_chained(IILjava/lang/String;I)V

    goto :goto_0

    :cond_2
    invoke-virtual {p2}, Landroid/os/WorkSource$WorkChain;->getUids()[I

    move-result-object p1

    invoke-virtual {p2}, Landroid/os/WorkSource$WorkChain;->getTags()[Ljava/lang/String;

    move-result-object p2

    invoke-static {v2, p1, p2, v0}, Lcom/android/internal/util/FrameworkStatsLog;->write(I[I[Ljava/lang/String;I)V

    :goto_0
    move-object v0, p0

    move-wide v2, p3

    move-wide v4, p5

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object p0

    invoke-virtual {p0, p3, p4}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteStopGps(J)V

    return-void
.end method

.method public noteStopSensorLocked(IIJJ)V
    .locals 8

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v1

    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSensorNesting:I

    add-int/lit8 p1, p1, -0x1

    iput p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSensorNesting:I

    if-nez p1, :cond_0

    iget-object v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/high16 v7, 0x800000

    move-wide v3, p3

    move-wide v5, p5

    invoke-virtual/range {v2 .. v7}, Lcom/android/internal/os/BatteryStatsHistory;->recordStateStopEvent(JJI)V

    :cond_0
    move-object v0, p0

    move-wide v2, p3

    move-wide v4, p5

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object p0

    invoke-virtual {p0, p2, p3, p4}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteStopSensor(IJ)V

    return-void
.end method

.method public noteStopTxPowerSharingLocked()V
    .locals 4

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v0}, Lcom/android/internal/os/Clock;->elapsedRealtime()J

    move-result-wide v0

    iget-object v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v2}, Lcom/android/internal/os/Clock;->uptimeMillis()J

    move-result-wide v2

    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteStopTxPowerSharingLocked(JJ)V

    return-void
.end method

.method public noteStopTxPowerSharingLocked(JJ)V
    .locals 0

    iget-boolean p3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mTxPowerSharingOn:Z

    if-eqz p3, :cond_0

    const/4 p3, 0x0

    iput-boolean p3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mTxPowerSharingOn:Z

    iget-object p3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mTxPowerSharingTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p3, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getTxConsume()I

    move-result p1

    int-to-long p1, p1

    iget-wide p3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mTxPowerSharingDischargeMah:J

    add-long/2addr p3, p1

    iput-wide p3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mTxPowerSharingDischargeMah:J

    :cond_0
    return-void
.end method

.method public noteStopWakeFromSourceLocked(Landroid/os/WorkSource;ILjava/lang/String;Ljava/lang/String;IJJ)V
    .locals 15

    invoke-virtual/range {p1 .. p1}, Landroid/os/WorkSource;->size()I

    move-result v0

    const/4 v1, 0x0

    move v2, v1

    :goto_0
    if-ge v2, v0, :cond_0

    move-object/from16 v3, p1

    invoke-virtual {v3, v2}, Landroid/os/WorkSource;->getUid(I)I

    move-result v5

    const/4 v7, 0x0

    move-object v4, p0

    move/from16 v6, p2

    move-object/from16 v8, p3

    move-object/from16 v9, p4

    move/from16 v10, p5

    move-wide/from16 v11, p6

    move-wide/from16 v13, p8

    invoke-virtual/range {v4 .. v14}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteStopWakeLocked(IILandroid/os/WorkSource$WorkChain;Ljava/lang/String;Ljava/lang/String;IJJ)V

    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    :cond_0
    move-object/from16 v3, p1

    invoke-virtual/range {p1 .. p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v0

    if-eqz v0, :cond_1

    :goto_1
    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v2

    if-ge v1, v2, :cond_1

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    move-object v6, v2

    check-cast v6, Landroid/os/WorkSource$WorkChain;

    invoke-virtual {v6}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v4

    move-object v3, p0

    move/from16 v5, p2

    move-object/from16 v7, p3

    move-object/from16 v8, p4

    move/from16 v9, p5

    move-wide/from16 v10, p6

    move-wide/from16 v12, p8

    invoke-virtual/range {v3 .. v13}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteStopWakeLocked(IILandroid/os/WorkSource$WorkChain;Ljava/lang/String;Ljava/lang/String;IJJ)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    :cond_1
    return-void
.end method

.method public noteStopWakeLocked(IILandroid/os/WorkSource$WorkChain;Ljava/lang/String;Ljava/lang/String;IJJ)V
    .locals 17

    move-object/from16 v6, p0

    move/from16 v7, p6

    invoke-virtual/range {p0 .. p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v4

    if-nez v7, :cond_2

    iget v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mWakeLockNesting:I

    add-int/lit8 v0, v0, -0x1

    iput v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mWakeLockNesting:I

    if-nez p5, :cond_0

    move-object/from16 v0, p4

    goto :goto_0

    :cond_0
    move-object/from16 v0, p5

    :goto_0
    iget-boolean v1, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mRecordAllHistory:Z

    if-eqz v1, :cond_1

    iget-object v1, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const/16 v2, 0x4005

    const/4 v3, 0x0

    invoke-virtual {v1, v2, v0, v4, v3}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result v1

    if-eqz v1, :cond_1

    iget-object v8, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/16 v13, 0x4005

    move-wide/from16 v9, p7

    move-wide/from16 v11, p9

    move-object v14, v0

    move v15, v4

    invoke-virtual/range {v8 .. v15}, Lcom/android/internal/os/BatteryStatsHistory;->recordEvent(JJILjava/lang/String;I)V

    :cond_1
    iget v1, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mWakeLockNesting:I

    if-nez v1, :cond_2

    iget-object v8, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    move-wide/from16 v9, p7

    move-wide/from16 v11, p9

    move-object v13, v0

    move v14, v4

    invoke-virtual/range {v8 .. v14}, Lcom/android/internal/os/BatteryStatsHistory;->recordWakelockStopEvent(JJLjava/lang/String;I)V

    :cond_2
    if-ltz v4, :cond_5

    iget-object v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-virtual {v0}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;->isRunning()Z

    move-result v0

    if-eqz v0, :cond_3

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->requestWakelockCpuUpdate()V

    :cond_3
    move-object/from16 v0, p0

    move v1, v4

    move-wide/from16 v2, p7

    move v8, v4

    move-wide/from16 v4, p9

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object v9

    move-object v0, v9

    move/from16 v1, p2

    move-object/from16 v2, p4

    move/from16 v3, p6

    move-wide/from16 v4, p7

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteStopWakeLocked(ILjava/lang/String;IJ)V

    iget v0, v9, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mProcessState:I

    if-eqz p3, :cond_4

    const/16 v10, 0xa

    invoke-virtual/range {p3 .. p3}, Landroid/os/WorkSource$WorkChain;->getUids()[I

    move-result-object v11

    invoke-virtual/range {p3 .. p3}, Landroid/os/WorkSource$WorkChain;->getTags()[Ljava/lang/String;

    move-result-object v12

    invoke-virtual {v6, v7}, Lcom/android/server/power/stats/BatteryStatsImpl;->getPowerManagerWakeLockLevel(I)I

    move-result v13

    const/4 v15, 0x0

    move-object/from16 v14, p4

    move/from16 v16, v0

    invoke-static/range {v10 .. v16}, Lcom/android/internal/util/FrameworkStatsLog;->write(I[I[Ljava/lang/String;ILjava/lang/String;II)V

    goto :goto_1

    :cond_4
    const/16 v10, 0xa

    invoke-virtual/range {p0 .. p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapIsolatedUid(I)I

    move-result v11

    const/4 v12, 0x0

    invoke-virtual {v6, v7}, Lcom/android/server/power/stats/BatteryStatsImpl;->getPowerManagerWakeLockLevel(I)I

    move-result v13

    const/4 v15, 0x0

    move-object/from16 v14, p4

    move/from16 v16, v0

    invoke-static/range {v10 .. v16}, Lcom/android/internal/util/FrameworkStatsLog;->write_non_chained(IILjava/lang/String;ILjava/lang/String;II)V

    :goto_1
    move/from16 v1, p1

    if-eq v8, v1, :cond_5

    move-object/from16 v0, p0

    move/from16 v1, p1

    move-wide/from16 v2, p7

    move-wide/from16 v4, p9

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->maybeRemoveIsolatedUidLocked(IJJ)Z

    :cond_5
    return-void
.end method

.method public noteSubDisplayHighRefreshRateLocked(II)V
    .locals 4

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v0}, Lcom/android/internal/os/Clock;->elapsedRealtime()J

    move-result-wide v0

    if-ltz p2, :cond_4

    const/4 v2, 0x4

    if-lt p2, v2, :cond_0

    goto :goto_1

    :cond_0
    iget-boolean v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsSubScreen:Z

    const/4 v3, -0x1

    if-nez v2, :cond_1

    invoke-virtual {p0, v3, v0, v1}, Lcom/android/server/power/stats/BatteryStatsImpl;->stopAllSubDisplayHighRefreshRateTimersLocked(IJ)V

    return-void

    :cond_1
    invoke-static {p1}, Landroid/view/Display;->isOnState(I)Z

    move-result p1

    if-eqz p1, :cond_3

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubHighRefreshRateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHighRefreshRateBin:I

    aget-object p1, p1, v2

    invoke-virtual {p1}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result p1

    if-eqz p1, :cond_2

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubHighRefreshRateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHighRefreshRateBin:I

    aget-object p1, p1, v2

    invoke-virtual {p1, v0, v1}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    :cond_2
    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubHighRefreshRateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object p0, p0, p2

    invoke-virtual {p0, v0, v1}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    goto :goto_0

    :cond_3
    invoke-virtual {p0, v3, v0, v1}, Lcom/android/server/power/stats/BatteryStatsImpl;->stopAllSubDisplayHighRefreshRateTimersLocked(IJ)V

    :goto_0
    return-void

    :cond_4
    :goto_1
    const-string p0, "BatteryStatsImpl"

    const-string p1, "Something was wrong while updateing sub-display refresh rate"

    invoke-static {p0, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method public noteSyncFinishLocked(Ljava/lang/String;IJJ)V
    .locals 8

    invoke-virtual {p0, p2}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v7

    invoke-static {p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->encodingPersonalInformation(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v6

    move-object v0, p0

    move v1, v7

    move-wide v2, p3

    move-wide v4, p5

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object p1

    invoke-virtual {p1, v6, p3, p4}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteStopSyncLocked(Ljava/lang/String;J)V

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const/16 p2, 0x4004

    const/4 v0, 0x0

    invoke-virtual {p1, p2, v6, v7, v0}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result p1

    if-nez p1, :cond_0

    return-void

    :cond_0
    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/16 v5, 0x4004

    move-wide v1, p3

    move-wide v3, p5

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsHistory;->recordEvent(JJILjava/lang/String;I)V

    return-void
.end method

.method public noteSyncStartLocked(Ljava/lang/String;IJJ)V
    .locals 8

    invoke-virtual {p0, p2}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v7

    invoke-static {p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->encodingPersonalInformation(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v6

    move-object v0, p0

    move v1, v7

    move-wide v2, p3

    move-wide v4, p5

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object p1

    invoke-virtual {p1, v6, p3, p4}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteStartSyncLocked(Ljava/lang/String;J)V

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const p2, 0x8004

    const/4 v0, 0x0

    invoke-virtual {p1, p2, v6, v7, v0}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result p1

    if-nez p1, :cond_0

    return-void

    :cond_0
    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const v5, 0x8004

    move-wide v1, p3

    move-wide v3, p5

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsHistory;->recordEvent(JJILjava/lang/String;I)V

    return-void
.end method

.method public noteUidProcessStateLocked(IIJJ)V
    .locals 9

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v1

    if-eq p1, v1, :cond_0

    invoke-static {p1}, Landroid/os/Process;->isIsolated(I)Z

    move-result v0

    if-eqz v0, :cond_0

    return-void

    :cond_0
    const/16 v0, 0x1b

    invoke-static {p2}, Landroid/app/ActivityManager;->processStateAmToProto(I)I

    move-result v2

    invoke-static {v0, p1, v2}, Lcom/android/internal/util/FrameworkStatsLog;->write(III)V

    move-object v0, p0

    move-wide v2, p3

    move-wide v4, p5

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object v3

    move v4, p2

    move-wide v5, p3

    move-wide v7, p5

    invoke-virtual/range {v3 .. v8}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->updateUidProcessStateLocked(IJJ)V

    return-void
.end method

.method public final noteUsbConnectionStateLocked(ZJJ)V
    .locals 15

    move-object v0, p0

    if-eqz p1, :cond_0

    const/4 v1, 0x2

    goto :goto_0

    :cond_0
    const/4 v1, 0x1

    :goto_0
    iget v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUsbDataState:I

    if-eq v2, v1, :cond_2

    iput v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUsbDataState:I

    if-eqz p1, :cond_1

    iget-object v3, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/high16 v8, 0x40000

    move-wide/from16 v4, p2

    move-wide/from16 v6, p4

    invoke-virtual/range {v3 .. v8}, Lcom/android/internal/os/BatteryStatsHistory;->recordState2StartEvent(JJI)V

    goto :goto_1

    :cond_1
    iget-object v9, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/high16 v14, 0x40000

    move-wide/from16 v10, p2

    move-wide/from16 v12, p4

    invoke-virtual/range {v9 .. v14}, Lcom/android/internal/os/BatteryStatsHistory;->recordState2StopEvent(JJI)V

    :cond_2
    :goto_1
    return-void
.end method

.method public noteUserActivityLocked(IIJJ)V
    .locals 7

    iget-boolean v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryInternal:Z

    if-eqz v0, :cond_0

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v2

    move-object v1, p0

    move-wide v3, p3

    move-wide v5, p5

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object p0

    invoke-virtual {p0, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteUserActivityLocked(I)V

    :cond_0
    return-void
.end method

.method public noteVibratorOffLocked(IJJ)V
    .locals 6

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v1

    move-object v0, p0

    move-wide v2, p2

    move-wide v4, p4

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object p0

    invoke-virtual {p0, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteVibratorOffLocked(J)V

    return-void
.end method

.method public noteVibratorOnLocked(IJJJ)V
    .locals 6

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v1

    move-object v0, p0

    move-wide v2, p4

    move-wide v4, p6

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object p0

    invoke-virtual {p0, p2, p3, p4, p5}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteVibratorOnLocked(JJ)V

    return-void
.end method

.method public noteVideoOffLocked(IJJ)V
    .locals 9

    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mVideoOnNesting:I

    if-nez v0, :cond_0

    return-void

    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v2

    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mVideoOnNesting:I

    add-int/lit8 p1, p1, -0x1

    iput p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mVideoOnNesting:I

    if-nez p1, :cond_1

    iget-object v3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/high16 v8, 0x40000000    # 2.0f

    move-wide v4, p2

    move-wide v6, p4

    invoke-virtual/range {v3 .. v8}, Lcom/android/internal/os/BatteryStatsHistory;->recordState2StopEvent(JJI)V

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mVideoOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    :cond_1
    move-object v1, p0

    move-wide v3, p2

    move-wide v5, p4

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object p0

    invoke-virtual {p0, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteVideoTurnedOffLocked(J)V

    return-void
.end method

.method public noteVideoOnLocked(IJJ)V
    .locals 8

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v1

    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mVideoOnNesting:I

    if-nez p1, :cond_0

    iget-object v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/high16 v7, 0x40000000    # 2.0f

    move-wide v3, p2

    move-wide v5, p4

    invoke-virtual/range {v2 .. v7}, Lcom/android/internal/os/BatteryStatsHistory;->recordState2StartEvent(JJI)V

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mVideoOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    :cond_0
    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mVideoOnNesting:I

    add-int/lit8 p1, p1, 0x1

    iput p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mVideoOnNesting:I

    move-object v0, p0

    move-wide v2, p2

    move-wide v4, p4

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object p0

    invoke-virtual {p0, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteVideoTurnedOnLocked(J)V

    return-void
.end method

.method public noteWakeUpLocked(Ljava/lang/String;IJJ)V
    .locals 8

    invoke-virtual {p0, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl;->updateScreenWakeLocked(Ljava/lang/String;I)V

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/16 v5, 0x12

    move-wide v1, p3

    move-wide v3, p5

    move-object v6, p1

    move v7, p2

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsHistory;->recordEvent(JJILjava/lang/String;I)V

    return-void
.end method

.method public noteWakeupReasonLocked(Ljava/lang/String;JJ)V
    .locals 6

    invoke-virtual {p0, p2, p3, p4, p5}, Lcom/android/server/power/stats/BatteryStatsImpl;->aggregateLastWakeupUptimeLocked(JJ)V

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    move-wide v1, p2

    move-wide v3, p4

    move-object v5, p1

    invoke-virtual/range {v0 .. v5}, Lcom/android/internal/os/BatteryStatsHistory;->recordWakeupEvent(JJLjava/lang/String;)V

    iput-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastWakeupReason:Ljava/lang/String;

    iput-wide p4, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastWakeupUptimeMs:J

    iput-wide p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastWakeupElapsedTimeMs:J

    return-void
.end method

.method public noteWakupAlarmLocked(Ljava/lang/String;ILandroid/os/WorkSource;Ljava/lang/String;JJ)V
    .locals 12

    move-object v0, p3

    move-object/from16 v1, p4

    if-eqz v0, :cond_4

    const/4 v2, 0x0

    move v3, v2

    :goto_0
    invoke-virtual {p3}, Landroid/os/WorkSource;->size()I

    move-result v4

    if-ge v3, v4, :cond_2

    invoke-virtual {p3, v3}, Landroid/os/WorkSource;->getUid(I)I

    move-result v6

    invoke-virtual {p3, v3}, Landroid/os/WorkSource;->getPackageName(I)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->isOnBattery()Z

    move-result v5

    if-eqz v5, :cond_1

    if-eqz v4, :cond_0

    move-object v7, v4

    goto :goto_1

    :cond_0
    move-object v7, p1

    :goto_1
    move-object v5, p0

    move-wide/from16 v8, p5

    move-wide/from16 v10, p7

    invoke-virtual/range {v5 .. v11}, Lcom/android/server/power/stats/BatteryStatsImpl;->getPackageStatsLocked(ILjava/lang/String;JJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Pkg;

    move-result-object v4

    invoke-virtual {v4, v1}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Pkg;->noteWakeupAlarmLocked(Ljava/lang/String;)V

    :cond_1
    add-int/lit8 v3, v3, 0x1

    goto :goto_0

    :cond_2
    invoke-virtual {p3}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v0

    if-eqz v0, :cond_5

    :goto_2
    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v3

    if-ge v2, v3, :cond_5

    invoke-interface {v0, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/os/WorkSource$WorkChain;

    invoke-virtual {v3}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v5

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->isOnBattery()Z

    move-result v3

    if-eqz v3, :cond_3

    move-object v4, p0

    move-object v6, p1

    move-wide/from16 v7, p5

    move-wide/from16 v9, p7

    invoke-virtual/range {v4 .. v10}, Lcom/android/server/power/stats/BatteryStatsImpl;->getPackageStatsLocked(ILjava/lang/String;JJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Pkg;

    move-result-object v3

    invoke-virtual {v3, v1}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Pkg;->noteWakeupAlarmLocked(Ljava/lang/String;)V

    :cond_3
    add-int/lit8 v2, v2, 0x1

    goto :goto_2

    :cond_4
    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->isOnBattery()Z

    move-result v0

    if-eqz v0, :cond_5

    move-object v2, p0

    move v3, p2

    move-object v4, p1

    move-wide/from16 v5, p5

    move-wide/from16 v7, p7

    invoke-virtual/range {v2 .. v8}, Lcom/android/server/power/stats/BatteryStatsImpl;->getPackageStatsLocked(ILjava/lang/String;JJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Pkg;

    move-result-object v0

    invoke-virtual {v0, v1}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Pkg;->noteWakeupAlarmLocked(Ljava/lang/String;)V

    :cond_5
    return-void
.end method

.method public noteWifiBatchedScanStartedFromSourceLocked(Landroid/os/WorkSource;IJJ)V
    .locals 11

    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v0

    const/4 v1, 0x0

    move v2, v1

    :goto_0
    if-ge v2, v0, :cond_0

    move-object v3, p1

    invoke-virtual {p1, v2}, Landroid/os/WorkSource;->getUid(I)I

    move-result v5

    move-object v4, p0

    move v6, p2

    move-wide v7, p3

    move-wide/from16 v9, p5

    invoke-virtual/range {v4 .. v10}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteWifiBatchedScanStartedLocked(IIJJ)V

    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    :cond_0
    move-object v3, p1

    invoke-virtual {p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v0

    if-eqz v0, :cond_1

    :goto_1
    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v2

    if-ge v1, v2, :cond_1

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/os/WorkSource$WorkChain;

    invoke-virtual {v2}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v4

    move-object v3, p0

    move v5, p2

    move-wide v6, p3

    move-wide/from16 v8, p5

    invoke-virtual/range {v3 .. v9}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteWifiBatchedScanStartedLocked(IIJJ)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    :cond_1
    return-void
.end method

.method public noteWifiBatchedScanStartedLocked(IIJJ)V
    .locals 6

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v1

    move-object v0, p0

    move-wide v2, p3

    move-wide v4, p5

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object p0

    invoke-virtual {p0, p2, p3, p4}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteWifiBatchedScanStartedLocked(IJ)V

    return-void
.end method

.method public noteWifiBatchedScanStoppedFromSourceLocked(Landroid/os/WorkSource;JJ)V
    .locals 9

    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v0

    const/4 v1, 0x0

    move v2, v1

    :goto_0
    if-ge v2, v0, :cond_0

    invoke-virtual {p1, v2}, Landroid/os/WorkSource;->getUid(I)I

    move-result v4

    move-object v3, p0

    move-wide v5, p2

    move-wide v7, p4

    invoke-virtual/range {v3 .. v8}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteWifiBatchedScanStoppedLocked(IJJ)V

    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    :cond_0
    invoke-virtual {p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object p1

    if-eqz p1, :cond_1

    :goto_1
    invoke-interface {p1}, Ljava/util/List;->size()I

    move-result v0

    if-ge v1, v0, :cond_1

    invoke-interface {p1, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/os/WorkSource$WorkChain;

    invoke-virtual {v0}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v3

    move-object v2, p0

    move-wide v4, p2

    move-wide v6, p4

    invoke-virtual/range {v2 .. v7}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteWifiBatchedScanStoppedLocked(IJJ)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    :cond_1
    return-void
.end method

.method public noteWifiBatchedScanStoppedLocked(IJJ)V
    .locals 6

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v1

    move-object v0, p0

    move-wide v2, p2

    move-wide v4, p4

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object p0

    invoke-virtual {p0, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteWifiBatchedScanStoppedLocked(J)V

    return-void
.end method

.method public noteWifiMulticastDisabledLocked(IJJ)V
    .locals 8

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v1

    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiMulticastNesting:I

    add-int/lit8 p1, p1, -0x1

    iput p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiMulticastNesting:I

    if-nez p1, :cond_0

    iget-object v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/high16 v7, 0x10000

    move-wide v3, p2

    move-wide v5, p4

    invoke-virtual/range {v2 .. v7}, Lcom/android/internal/os/BatteryStatsHistory;->recordStateStopEvent(JJI)V

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiMulticastWakelockTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p1}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result p1

    if-eqz p1, :cond_0

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiMulticastWakelockTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    :cond_0
    move-object v0, p0

    move-wide v2, p2

    move-wide v4, p4

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object p0

    invoke-virtual {p0, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteWifiMulticastDisabledLocked(J)V

    return-void
.end method

.method public noteWifiMulticastEnabledLocked(IJJ)V
    .locals 8

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v1

    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiMulticastNesting:I

    if-nez p1, :cond_0

    iget-object v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/high16 v7, 0x10000

    move-wide v3, p2

    move-wide v5, p4

    invoke-virtual/range {v2 .. v7}, Lcom/android/internal/os/BatteryStatsHistory;->recordStateStartEvent(JJI)V

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiMulticastWakelockTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p1}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result p1

    if-nez p1, :cond_0

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiMulticastWakelockTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    :cond_0
    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiMulticastNesting:I

    add-int/lit8 p1, p1, 0x1

    iput p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiMulticastNesting:I

    move-object v0, p0

    move-wide v2, p2

    move-wide v4, p4

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object p0

    invoke-virtual {p0, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteWifiMulticastEnabledLocked(J)V

    return-void
.end method

.method public noteWifiOffLocked(JJ)V
    .locals 7

    iget-boolean v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiOn:Z

    if-eqz v0, :cond_0

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/high16 v6, 0x10000000

    move-wide v2, p1

    move-wide v4, p3

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsHistory;->recordState2StopEvent(JJI)V

    const/4 p3, 0x0

    iput-boolean p3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiOn:Z

    iget-object p3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p3, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    const-string/jumbo p1, "wifi-on"

    const/4 p2, 0x2

    invoke-virtual {p0, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl;->scheduleSyncExternalStatsLocked(Ljava/lang/String;I)V

    :cond_0
    return-void
.end method

.method public noteWifiOnLocked(JJ)V
    .locals 7

    iget-boolean v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiOn:Z

    if-nez v0, :cond_0

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/high16 v6, 0x10000000

    move-wide v2, p1

    move-wide v4, p3

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsHistory;->recordState2StartEvent(JJI)V

    const/4 p3, 0x1

    iput-boolean p3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiOn:Z

    iget-object p3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p3, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    const-string/jumbo p1, "wifi-off"

    const/4 p2, 0x2

    invoke-virtual {p0, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl;->scheduleSyncExternalStatsLocked(Ljava/lang/String;I)V

    :cond_0
    return-void
.end method

.method public final noteWifiRadioApWakeupLocked(JJI)V
    .locals 8

    invoke-virtual {p0, p5}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result p5

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/16 v5, 0x13

    const-string v6, ""

    move-wide v1, p1

    move-wide v3, p3

    move v7, p5

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsHistory;->recordEvent(JJILjava/lang/String;I)V

    move-object v0, p0

    move v1, p5

    move-wide v2, p1

    move-wide v4, p3

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object p0

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteWifiRadioApWakeupLocked()V

    return-void
.end method

.method public noteWifiRadioPowerState(IJIJJ)V
    .locals 7

    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiRadioPowerState:I

    if-eq v0, p1, :cond_4

    const/4 v0, 0x2

    if-eq p1, v0, :cond_1

    const/4 v0, 0x3

    if-ne p1, v0, :cond_0

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    goto :goto_1

    :cond_1
    :goto_0
    const/4 v0, 0x1

    :goto_1
    if-eqz v0, :cond_3

    if-lez p4, :cond_2

    move-object v0, p0

    move-wide v1, p5

    move-wide v3, p7

    move v5, p4

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteWifiRadioApWakeupLocked(JJI)V

    :cond_2
    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/high16 v6, 0x4000000

    move-wide v2, p5

    move-wide v4, p7

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsHistory;->recordStateStartEvent(JJI)V

    iget-object p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiActiveTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {p2, p5, p6}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    goto :goto_2

    :cond_3
    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/high16 v5, 0x4000000

    move-wide v1, p5

    move-wide v3, p7

    invoke-virtual/range {v0 .. v5}, Lcom/android/internal/os/BatteryStatsHistory;->recordStateStopEvent(JJI)V

    iget-object p4, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiActiveTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    const-wide/32 p5, 0xf4240

    div-long/2addr p2, p5

    invoke-virtual {p4, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    :goto_2
    iput p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiRadioPowerState:I

    :cond_4
    return-void
.end method

.method public noteWifiRssiChangedLocked(IJJ)V
    .locals 7

    const/4 v0, 0x5

    invoke-static {p1, v0}, Landroid/net/wifi/WifiManager;->calculateSignalLevel(II)I

    move-result p1

    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiSignalStrengthBin:I

    if-eq v0, p1, :cond_3

    if-ltz v0, :cond_0

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v0, v1, v0

    invoke-virtual {v0, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    :cond_0
    if-ltz p1, :cond_2

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    invoke-virtual {v0}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v0

    if-nez v0, :cond_1

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    invoke-virtual {v0, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    :cond_1
    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    move-wide v2, p2

    move-wide v4, p4

    move v6, p1

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsHistory;->recordWifiSignalStrengthChangeEvent(JJI)V

    goto :goto_0

    :cond_2
    const/4 p4, -0x1

    invoke-virtual {p0, p4, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl;->stopAllWifiSignalStrengthTimersLocked(IJ)V

    :goto_0
    iput p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiSignalStrengthBin:I

    :cond_3
    return-void
.end method

.method public noteWifiRunningChangedLocked(Landroid/os/WorkSource;Landroid/os/WorkSource;JJ)V
    .locals 13

    move-object v6, p0

    move-wide/from16 v7, p3

    iget-boolean v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mGlobalWifiRunning:Z

    if-eqz v0, :cond_3

    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v9

    const/4 v10, 0x0

    move v11, v10

    :goto_0
    if-ge v11, v9, :cond_0

    move-object v12, p1

    invoke-virtual {p1, v11}, Landroid/os/WorkSource;->getUid(I)I

    move-result v0

    invoke-virtual {p0, v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v1

    move-object v0, p0

    move-wide/from16 v2, p3

    move-wide/from16 v4, p5

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object v0

    invoke-virtual {v0, v7, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteWifiStoppedLocked(J)V

    add-int/lit8 v11, v11, 0x1

    goto :goto_0

    :cond_0
    move-object v12, p1

    invoke-virtual {p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v9

    if-eqz v9, :cond_1

    move v11, v10

    :goto_1
    invoke-interface {v9}, Ljava/util/List;->size()I

    move-result v0

    if-ge v11, v0, :cond_1

    invoke-interface {v9, v11}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/os/WorkSource$WorkChain;

    invoke-virtual {v0}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v0

    invoke-virtual {p0, v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v1

    move-object v0, p0

    move-wide/from16 v2, p3

    move-wide/from16 v4, p5

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object v0

    invoke-virtual {v0, v7, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteWifiStoppedLocked(J)V

    add-int/lit8 v11, v11, 0x1

    goto :goto_1

    :cond_1
    invoke-virtual {p2}, Landroid/os/WorkSource;->size()I

    move-result v9

    move v11, v10

    :goto_2
    if-ge v11, v9, :cond_2

    move-object v12, p2

    invoke-virtual {p2, v11}, Landroid/os/WorkSource;->getUid(I)I

    move-result v0

    invoke-virtual {p0, v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v1

    move-object v0, p0

    move-wide/from16 v2, p3

    move-wide/from16 v4, p5

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object v0

    invoke-virtual {v0, v7, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteWifiRunningLocked(J)V

    add-int/lit8 v11, v11, 0x1

    goto :goto_2

    :cond_2
    move-object v12, p2

    invoke-virtual {p2}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object v9

    if-eqz v9, :cond_4

    :goto_3
    invoke-interface {v9}, Ljava/util/List;->size()I

    move-result v0

    if-ge v10, v0, :cond_4

    invoke-interface {v9, v10}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/os/WorkSource$WorkChain;

    invoke-virtual {v0}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v0

    invoke-virtual {p0, v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v1

    move-object v0, p0

    move-wide/from16 v2, p3

    move-wide/from16 v4, p5

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object v0

    invoke-virtual {v0, v7, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteWifiRunningLocked(J)V

    add-int/lit8 v10, v10, 0x1

    goto :goto_3

    :cond_3
    const-string v0, "BatteryStatsImpl"

    const-string/jumbo v1, "noteWifiRunningChangedLocked -- called while WIFI not running"

    invoke-static {v0, v1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    :cond_4
    return-void
.end method

.method public noteWifiRunningLocked(Landroid/os/WorkSource;JJ)V
    .locals 10

    iget-boolean v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mGlobalWifiRunning:Z

    if-nez v0, :cond_2

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/high16 v6, 0x20000000

    move-wide v2, p2

    move-wide v4, p4

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsHistory;->recordState2StartEvent(JJI)V

    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mGlobalWifiRunning:Z

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mGlobalWifiRunningTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v0

    const/4 v1, 0x0

    move v2, v1

    :goto_0
    if-ge v2, v0, :cond_0

    invoke-virtual {p1, v2}, Landroid/os/WorkSource;->getUid(I)I

    move-result v3

    invoke-virtual {p0, v3}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v5

    move-object v4, p0

    move-wide v6, p2

    move-wide v8, p4

    invoke-virtual/range {v4 .. v9}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object v3

    invoke-virtual {v3, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteWifiRunningLocked(J)V

    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    :cond_0
    invoke-virtual {p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object p1

    if-eqz p1, :cond_1

    :goto_1
    invoke-interface {p1}, Ljava/util/List;->size()I

    move-result v0

    if-ge v1, v0, :cond_1

    invoke-interface {p1, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/os/WorkSource$WorkChain;

    invoke-virtual {v0}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v0

    invoke-virtual {p0, v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v3

    move-object v2, p0

    move-wide v4, p2

    move-wide v6, p4

    invoke-virtual/range {v2 .. v7}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object v0

    invoke-virtual {v0, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteWifiRunningLocked(J)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    :cond_1
    const-string/jumbo p1, "wifi-running"

    const/4 p2, 0x2

    invoke-virtual {p0, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl;->scheduleSyncExternalStatsLocked(Ljava/lang/String;I)V

    goto :goto_2

    :cond_2
    const-string p0, "BatteryStatsImpl"

    const-string/jumbo p1, "noteWifiRunningLocked -- called while WIFI running"

    invoke-static {p0, p1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    :goto_2
    return-void
.end method

.method public noteWifiScanStartedFromSourceLocked(Landroid/os/WorkSource;JJ)V
    .locals 10

    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v0

    const/4 v1, 0x0

    move v2, v1

    :goto_0
    if-ge v2, v0, :cond_0

    invoke-virtual {p1, v2}, Landroid/os/WorkSource;->getUid(I)I

    move-result v3

    invoke-virtual {p0, v3}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v5

    move-object v4, p0

    move-wide v6, p2

    move-wide v8, p4

    invoke-virtual/range {v4 .. v9}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteWifiScanStartedLocked(IJJ)V

    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    :cond_0
    invoke-virtual {p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object p1

    if-eqz p1, :cond_1

    :goto_1
    invoke-interface {p1}, Ljava/util/List;->size()I

    move-result v0

    if-ge v1, v0, :cond_1

    invoke-interface {p1, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/os/WorkSource$WorkChain;

    invoke-virtual {v0}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v0

    invoke-virtual {p0, v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v3

    move-object v2, p0

    move-wide v4, p2

    move-wide v6, p4

    invoke-virtual/range {v2 .. v7}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteWifiScanStartedLocked(IJJ)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    :cond_1
    return-void
.end method

.method public noteWifiScanStartedLocked(IJJ)V
    .locals 7

    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiScanNesting:I

    if-nez v0, :cond_0

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/high16 v6, 0x8000000

    move-wide v2, p2

    move-wide v4, p4

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsHistory;->recordStateStartEvent(JJI)V

    :cond_0
    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiScanNesting:I

    add-int/lit8 v0, v0, 0x1

    iput v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiScanNesting:I

    invoke-virtual/range {p0 .. p5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object p0

    invoke-virtual {p0, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteWifiScanStartedLocked(J)V

    return-void
.end method

.method public noteWifiScanStoppedFromSourceLocked(Landroid/os/WorkSource;JJ)V
    .locals 10

    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v0

    const/4 v1, 0x0

    move v2, v1

    :goto_0
    if-ge v2, v0, :cond_0

    invoke-virtual {p1, v2}, Landroid/os/WorkSource;->getUid(I)I

    move-result v3

    invoke-virtual {p0, v3}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v5

    move-object v4, p0

    move-wide v6, p2

    move-wide v8, p4

    invoke-virtual/range {v4 .. v9}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteWifiScanStoppedLocked(IJJ)V

    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    :cond_0
    invoke-virtual {p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object p1

    if-eqz p1, :cond_1

    :goto_1
    invoke-interface {p1}, Ljava/util/List;->size()I

    move-result v0

    if-ge v1, v0, :cond_1

    invoke-interface {p1, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/os/WorkSource$WorkChain;

    invoke-virtual {v0}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v0

    invoke-virtual {p0, v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v3

    move-object v2, p0

    move-wide v4, p2

    move-wide v6, p4

    invoke-virtual/range {v2 .. v7}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteWifiScanStoppedLocked(IJJ)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    :cond_1
    return-void
.end method

.method public noteWifiScanStoppedLocked(IJJ)V
    .locals 7

    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiScanNesting:I

    add-int/lit8 v0, v0, -0x1

    iput v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiScanNesting:I

    if-nez v0, :cond_0

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/high16 v6, 0x8000000

    move-wide v2, p2

    move-wide v4, p4

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsHistory;->recordStateStopEvent(JJI)V

    :cond_0
    invoke-virtual/range {p0 .. p5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object p0

    invoke-virtual {p0, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteWifiScanStoppedLocked(J)V

    return-void
.end method

.method public noteWifiStateLocked(ILjava/lang/String;J)V
    .locals 1

    iget p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiState:I

    if-eq p2, p1, :cond_1

    if-ltz p2, :cond_0

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object p2, v0, p2

    invoke-virtual {p2, p3, p4}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    :cond_0
    iput p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiState:I

    iget-object p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object p1, p2, p1

    invoke-virtual {p1, p3, p4}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    const-string/jumbo p1, "wifi-state"

    const/4 p2, 0x2

    invoke-virtual {p0, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl;->scheduleSyncExternalStatsLocked(Ljava/lang/String;I)V

    :cond_1
    return-void
.end method

.method public noteWifiStoppedLocked(Landroid/os/WorkSource;JJ)V
    .locals 10

    iget-boolean v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mGlobalWifiRunning:Z

    if-eqz v0, :cond_2

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/high16 v6, 0x20000000

    move-wide v2, p2

    move-wide v4, p4

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsHistory;->recordState2StopEvent(JJI)V

    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mGlobalWifiRunning:Z

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mGlobalWifiRunningTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v1

    move v2, v0

    :goto_0
    if-ge v2, v1, :cond_0

    invoke-virtual {p1, v2}, Landroid/os/WorkSource;->getUid(I)I

    move-result v3

    invoke-virtual {p0, v3}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v5

    move-object v4, p0

    move-wide v6, p2

    move-wide v8, p4

    invoke-virtual/range {v4 .. v9}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object v3

    invoke-virtual {v3, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteWifiStoppedLocked(J)V

    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    :cond_0
    invoke-virtual {p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    move-result-object p1

    if-eqz p1, :cond_1

    :goto_1
    invoke-interface {p1}, Ljava/util/List;->size()I

    move-result v1

    if-ge v0, v1, :cond_1

    invoke-interface {p1, v0}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/os/WorkSource$WorkChain;

    invoke-virtual {v1}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v1

    invoke-virtual {p0, v1}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v3

    move-object v2, p0

    move-wide v4, p2

    move-wide v6, p4

    invoke-virtual/range {v2 .. v7}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object v1

    invoke-virtual {v1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteWifiStoppedLocked(J)V

    add-int/lit8 v0, v0, 0x1

    goto :goto_1

    :cond_1
    const-string/jumbo p1, "wifi-stopped"

    const/4 p2, 0x2

    invoke-virtual {p0, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl;->scheduleSyncExternalStatsLocked(Ljava/lang/String;I)V

    goto :goto_2

    :cond_2
    const-string p0, "BatteryStatsImpl"

    const-string/jumbo p1, "noteWifiStoppedLocked -- called while WIFI not running"

    invoke-static {p0, p1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    :goto_2
    return-void
.end method

.method public noteWifiSupplicantStateChangedLocked(IZJJ)V
    .locals 6

    iget p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiSupplState:I

    if-eq p2, p1, :cond_1

    if-ltz p2, :cond_0

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object p2, v0, p2

    invoke-virtual {p2, p3, p4}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    :cond_0
    iput p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiSupplState:I

    iget-object p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object p2, p2, p1

    invoke-virtual {p2, p3, p4}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    move-wide v1, p3

    move-wide v3, p5

    move v5, p1

    invoke-virtual/range {v0 .. v5}, Lcom/android/internal/os/BatteryStatsHistory;->recordWifiSupplicantStateChangeEvent(JJI)V

    :cond_1
    return-void
.end method

.method public final notifyNetworkStatsUpdatedCallbacksLocked(Landroid/net/NetworkStats;)V
    .locals 6

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v0}, Lcom/android/internal/os/Clock;->elapsedRealtime()J

    move-result-wide v0

    iget-object v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNetworkStatsStack:Landroid/net/NetworkStats;

    if-nez v2, :cond_0

    iput-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNetworkStatsStack:Landroid/net/NetworkStats;

    goto :goto_0

    :cond_0
    invoke-virtual {v2, p1}, Landroid/net/NetworkStats;->add(Landroid/net/NetworkStats;)Landroid/net/NetworkStats;

    move-result-object p1

    iput-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNetworkStatsStack:Landroid/net/NetworkStats;

    :goto_0
    iget-wide v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastCallbackTime:J

    sub-long v2, v0, v2

    const-wide/32 v4, 0xea60

    cmp-long p1, v2, v4

    if-lez p1, :cond_2

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryStatsCallbacks:Landroid/os/RemoteCallbackList;

    invoke-virtual {p1}, Landroid/os/RemoteCallbackList;->beginBroadcast()I

    move-result p1

    const/4 v2, 0x0

    :goto_1
    const/4 v3, 0x0

    if-ge v2, p1, :cond_1

    :try_start_0
    iget-object v4, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryStatsCallbacks:Landroid/os/RemoteCallbackList;

    invoke-virtual {v4, v2}, Landroid/os/RemoteCallbackList;->getBroadcastItem(I)Landroid/os/IInterface;

    move-result-object v4

    check-cast v4, Lcom/android/internal/app/IBatteryStatsCallback;

    iget-object v5, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNetworkStatsStack:Landroid/net/NetworkStats;

    invoke-virtual {p0, v5, v4}, Lcom/android/server/power/stats/BatteryStatsImpl;->postNetworkStatsUpdateCallbackLocked(Landroid/net/NetworkStats;Lcom/android/internal/app/IBatteryStatsCallback;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    :catchall_0
    move-exception p1

    iput-object v3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNetworkStatsStack:Landroid/net/NetworkStats;

    iput-wide v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastCallbackTime:J

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryStatsCallbacks:Landroid/os/RemoteCallbackList;

    invoke-virtual {p0}, Landroid/os/RemoteCallbackList;->finishBroadcast()V

    throw p1

    :cond_1
    iput-object v3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNetworkStatsStack:Landroid/net/NetworkStats;

    iput-wide v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastCallbackTime:J

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryStatsCallbacks:Landroid/os/RemoteCallbackList;

    invoke-virtual {p0}, Landroid/os/RemoteCallbackList;->finishBroadcast()V

    :cond_2
    return-void
.end method

.method public onCleanupUserLocked(IJ)V
    .locals 7

    const/4 v0, 0x0

    invoke-static {p1, v0}, Landroid/os/UserHandle;->getUid(II)I

    move-result v3

    const v0, 0x1869f

    invoke-static {p1, v0}, Landroid/os/UserHandle;->getUid(II)I

    move-result v4

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPendingRemovedUids:Ljava/util/Queue;

    new-instance v0, Lcom/android/server/power/stats/BatteryStatsImpl$UidToRemove;

    move-object v1, v0

    move-object v2, p0

    move-wide v5, p2

    invoke-direct/range {v1 .. v6}, Lcom/android/server/power/stats/BatteryStatsImpl$UidToRemove;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl;IIJ)V

    invoke-interface {p1, v0}, Ljava/util/Queue;->add(Ljava/lang/Object;)Z

    return-void
.end method

.method public onSystemReady()V
    .locals 1

    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSystemReady:Z

    return-void
.end method

.method public onUserRemovedLocked(I)V
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mExternalSync:Lcom/android/server/power/stats/BatteryStatsImpl$ExternalStatsSync;

    if-eqz p0, :cond_0

    invoke-interface {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl$ExternalStatsSync;->scheduleCleanupDueToRemovedUser(I)Ljava/util/concurrent/Future;

    :cond_0
    return-void
.end method

.method public postBatteryNeedsCpuUpdateMsg()V
    .locals 1

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHandler:Landroid/os/Handler;

    const/4 v0, 0x1

    invoke-virtual {p0, v0}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    return-void
.end method

.method public final postNetworkStatsUpdateCallbackLocked(Landroid/net/NetworkStats;Lcom/android/internal/app/IBatteryStatsCallback;)V
    .locals 1

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHandler:Landroid/os/Handler;

    new-instance v0, Lcom/android/server/power/stats/BatteryStatsImpl$$ExternalSyntheticLambda8;

    invoke-direct {v0, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$$ExternalSyntheticLambda8;-><init>(Landroid/net/NetworkStats;Lcom/android/internal/app/IBatteryStatsCallback;)V

    invoke-virtual {p0, v0}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    move-result p0

    if-nez p0, :cond_0

    const-string p0, "BatteryStatsImpl"

    const-string p1, "Callback failed to queue"

    invoke-static {p0, p1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    :cond_0
    return-void
.end method

.method public prepareForDumpLocked()V
    .locals 0

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->pullPendingStateUpdatesLocked()V

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getStartClockTime()J

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->updateSystemServiceCallStats()V

    return-void
.end method

.method public pullPendingStateUpdatesLocked()V
    .locals 1

    iget-boolean v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryInternal:Z

    if-eqz v0, :cond_0

    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenState:I

    invoke-virtual {p0, v0, v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->updateDischargeScreenLevelsLocked(II)V

    :cond_0
    return-void
.end method

.method public readDailyItemTagDetailsLocked(Lcom/android/modules/utils/TypedXmlPullParser;Landroid/os/BatteryStats$DailyItem;ZLjava/lang/String;)V
    .locals 6

    const/4 p0, 0x0

    const-string/jumbo v0, "n"

    const/4 v1, -0x1

    invoke-interface {p1, p0, v0, v1}, Lcom/android/modules/utils/TypedXmlPullParser;->getAttributeInt(Ljava/lang/String;Ljava/lang/String;I)I

    move-result v0

    const-string v2, "BatteryStatsImpl"

    if-ne v0, v1, :cond_0

    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string p2, "Missing \'n\' attribute at "

    invoke-virtual {p0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-interface {p1}, Lcom/android/modules/utils/TypedXmlPullParser;->getPositionDescription()Ljava/lang/String;

    move-result-object p2

    invoke-virtual {p0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-static {v2, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    invoke-static {p1}, Lcom/android/internal/util/XmlUtils;->skipCurrentTag(Lorg/xmlpull/v1/XmlPullParser;)V

    return-void

    :cond_0
    new-instance v1, Landroid/os/BatteryStats$LevelStepTracker;

    invoke-direct {v1, v0}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    if-eqz p3, :cond_1

    iput-object v1, p2, Landroid/os/BatteryStats$DailyItem;->mChargeSteps:Landroid/os/BatteryStats$LevelStepTracker;

    goto :goto_0

    :cond_1
    iput-object v1, p2, Landroid/os/BatteryStats$DailyItem;->mDischargeSteps:Landroid/os/BatteryStats$LevelStepTracker;

    :goto_0
    invoke-interface {p1}, Lcom/android/modules/utils/TypedXmlPullParser;->getDepth()I

    move-result p2

    const/4 p3, 0x0

    :cond_2
    :goto_1
    invoke-interface {p1}, Lcom/android/modules/utils/TypedXmlPullParser;->next()I

    move-result v3

    const/4 v4, 0x1

    if-eq v3, v4, :cond_6

    const/4 v4, 0x3

    if-ne v3, v4, :cond_3

    invoke-interface {p1}, Lcom/android/modules/utils/TypedXmlPullParser;->getDepth()I

    move-result v5

    if-le v5, p2, :cond_6

    :cond_3
    if-eq v3, v4, :cond_2

    const/4 v4, 0x4

    if-ne v3, v4, :cond_4

    goto :goto_1

    :cond_4
    invoke-interface {p1}, Lcom/android/modules/utils/TypedXmlPullParser;->getName()Ljava/lang/String;

    move-result-object v3

    const-string/jumbo v4, "s"

    invoke-virtual {v4, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_5

    if-ge p3, v0, :cond_2

    const-string/jumbo v3, "v"

    invoke-interface {p1, p0, v3}, Lcom/android/modules/utils/TypedXmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v3

    if-eqz v3, :cond_2

    invoke-virtual {v1, p3, v3}, Landroid/os/BatteryStats$LevelStepTracker;->decodeEntryAt(ILjava/lang/String;)V

    add-int/lit8 p3, p3, 0x1

    goto :goto_1

    :cond_5
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Unknown element under <"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v4, ">: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-interface {p1}, Lcom/android/modules/utils/TypedXmlPullParser;->getName()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    invoke-static {p1}, Lcom/android/internal/util/XmlUtils;->skipCurrentTag(Lorg/xmlpull/v1/XmlPullParser;)V

    goto :goto_1

    :cond_6
    iput p3, v1, Landroid/os/BatteryStats$LevelStepTracker;->mNumStepDurations:I

    return-void
.end method

.method public readDailyItemTagLocked(Lcom/android/modules/utils/TypedXmlPullParser;)V
    .locals 10

    new-instance v0, Landroid/os/BatteryStats$DailyItem;

    invoke-direct {v0}, Landroid/os/BatteryStats$DailyItem;-><init>()V

    const/4 v1, 0x0

    const-string/jumbo v2, "start"

    const-wide/16 v3, 0x0

    invoke-interface {p1, v1, v2, v3, v4}, Lcom/android/modules/utils/TypedXmlPullParser;->getAttributeLong(Ljava/lang/String;Ljava/lang/String;J)J

    move-result-wide v5

    iput-wide v5, v0, Landroid/os/BatteryStats$DailyItem;->mStartTime:J

    const-string v2, "end"

    invoke-interface {p1, v1, v2, v3, v4}, Lcom/android/modules/utils/TypedXmlPullParser;->getAttributeLong(Ljava/lang/String;Ljava/lang/String;J)J

    move-result-wide v5

    iput-wide v5, v0, Landroid/os/BatteryStats$DailyItem;->mEndTime:J

    invoke-interface {p1}, Lcom/android/modules/utils/TypedXmlPullParser;->getDepth()I

    move-result v2

    :cond_0
    :goto_0
    invoke-interface {p1}, Lcom/android/modules/utils/TypedXmlPullParser;->next()I

    move-result v5

    const/4 v6, 0x1

    if-eq v5, v6, :cond_9

    const/4 v7, 0x3

    if-ne v5, v7, :cond_1

    invoke-interface {p1}, Lcom/android/modules/utils/TypedXmlPullParser;->getDepth()I

    move-result v8

    if-le v8, v2, :cond_9

    :cond_1
    if-eq v5, v7, :cond_0

    const/4 v7, 0x4

    if-ne v5, v7, :cond_2

    goto :goto_0

    :cond_2
    invoke-interface {p1}, Lcom/android/modules/utils/TypedXmlPullParser;->getName()Ljava/lang/String;

    move-result-object v5

    const-string v7, "dis"

    invoke-virtual {v5, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v8

    const/4 v9, 0x0

    if-eqz v8, :cond_3

    invoke-virtual {p0, p1, v0, v9, v7}, Lcom/android/server/power/stats/BatteryStatsImpl;->readDailyItemTagDetailsLocked(Lcom/android/modules/utils/TypedXmlPullParser;Landroid/os/BatteryStats$DailyItem;ZLjava/lang/String;)V

    goto :goto_0

    :cond_3
    const-string v7, "chg"

    invoke-virtual {v5, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_4

    invoke-virtual {p0, p1, v0, v6, v7}, Lcom/android/server/power/stats/BatteryStatsImpl;->readDailyItemTagDetailsLocked(Lcom/android/modules/utils/TypedXmlPullParser;Landroid/os/BatteryStats$DailyItem;ZLjava/lang/String;)V

    goto :goto_0

    :cond_4
    const-string/jumbo v7, "upd"

    invoke-virtual {v5, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v7

    if-eqz v7, :cond_6

    iget-object v5, v0, Landroid/os/BatteryStats$DailyItem;->mPackageChanges:Ljava/util/ArrayList;

    if-nez v5, :cond_5

    new-instance v5, Ljava/util/ArrayList;

    invoke-direct {v5}, Ljava/util/ArrayList;-><init>()V

    iput-object v5, v0, Landroid/os/BatteryStats$DailyItem;->mPackageChanges:Ljava/util/ArrayList;

    :cond_5
    new-instance v5, Landroid/os/BatteryStats$PackageChange;

    invoke-direct {v5}, Landroid/os/BatteryStats$PackageChange;-><init>()V

    iput-boolean v6, v5, Landroid/os/BatteryStats$PackageChange;->mUpdate:Z

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->getSafeAttributeValue(Lcom/android/modules/utils/TypedXmlPullParser;)Ljava/lang/String;

    move-result-object v6

    iput-object v6, v5, Landroid/os/BatteryStats$PackageChange;->mPackageName:Ljava/lang/String;

    const-string/jumbo v6, "ver"

    invoke-interface {p1, v1, v6, v3, v4}, Lcom/android/modules/utils/TypedXmlPullParser;->getAttributeLong(Ljava/lang/String;Ljava/lang/String;J)J

    move-result-wide v6

    iput-wide v6, v5, Landroid/os/BatteryStats$PackageChange;->mVersionCode:J

    iget-object v6, v0, Landroid/os/BatteryStats$DailyItem;->mPackageChanges:Ljava/util/ArrayList;

    invoke-virtual {v6, v5}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    invoke-static {p1}, Lcom/android/internal/util/XmlUtils;->skipCurrentTag(Lorg/xmlpull/v1/XmlPullParser;)V

    goto :goto_0

    :cond_6
    const-string/jumbo v6, "rem"

    invoke-virtual {v5, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_8

    iget-object v5, v0, Landroid/os/BatteryStats$DailyItem;->mPackageChanges:Ljava/util/ArrayList;

    if-nez v5, :cond_7

    new-instance v5, Ljava/util/ArrayList;

    invoke-direct {v5}, Ljava/util/ArrayList;-><init>()V

    iput-object v5, v0, Landroid/os/BatteryStats$DailyItem;->mPackageChanges:Ljava/util/ArrayList;

    :cond_7
    new-instance v5, Landroid/os/BatteryStats$PackageChange;

    invoke-direct {v5}, Landroid/os/BatteryStats$PackageChange;-><init>()V

    iput-boolean v9, v5, Landroid/os/BatteryStats$PackageChange;->mUpdate:Z

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->getSafeAttributeValue(Lcom/android/modules/utils/TypedXmlPullParser;)Ljava/lang/String;

    move-result-object v6

    iput-object v6, v5, Landroid/os/BatteryStats$PackageChange;->mPackageName:Ljava/lang/String;

    iget-object v6, v0, Landroid/os/BatteryStats$DailyItem;->mPackageChanges:Ljava/util/ArrayList;

    invoke-virtual {v6, v5}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    invoke-static {p1}, Lcom/android/internal/util/XmlUtils;->skipCurrentTag(Lorg/xmlpull/v1/XmlPullParser;)V

    goto/16 :goto_0

    :cond_8
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Unknown element under <item>: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-interface {p1}, Lcom/android/modules/utils/TypedXmlPullParser;->getName()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    const-string v6, "BatteryStatsImpl"

    invoke-static {v6, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    invoke-static {p1}, Lcom/android/internal/util/XmlUtils;->skipCurrentTag(Lorg/xmlpull/v1/XmlPullParser;)V

    goto/16 :goto_0

    :cond_9
    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    invoke-virtual {p0, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    return-void
.end method

.method public final readDailyItemsLocked(Lcom/android/modules/utils/TypedXmlPullParser;)V
    .locals 7

    const-string v0, "Failed parsing daily "

    const-string v1, "BatteryStatsImpl"

    :goto_0
    :try_start_0
    invoke-interface {p1}, Lcom/android/modules/utils/TypedXmlPullParser;->next()I

    move-result v2

    const/4 v3, 0x1

    const/4 v4, 0x2

    if-eq v2, v4, :cond_0

    if-eq v2, v3, :cond_0

    goto :goto_0

    :cond_0
    if-ne v2, v4, :cond_5

    invoke-interface {p1}, Lcom/android/modules/utils/TypedXmlPullParser;->getDepth()I

    move-result v2

    :cond_1
    :goto_1
    invoke-interface {p1}, Lcom/android/modules/utils/TypedXmlPullParser;->next()I

    move-result v4

    if-eq v4, v3, :cond_6

    const/4 v5, 0x3

    if-ne v4, v5, :cond_2

    invoke-interface {p1}, Lcom/android/modules/utils/TypedXmlPullParser;->getDepth()I

    move-result v6

    if-le v6, v2, :cond_6

    :cond_2
    if-eq v4, v5, :cond_1

    const/4 v5, 0x4

    if-ne v4, v5, :cond_3

    goto :goto_1

    :cond_3
    invoke-interface {p1}, Lcom/android/modules/utils/TypedXmlPullParser;->getName()Ljava/lang/String;

    move-result-object v4

    const-string v5, "item"

    invoke-virtual {v4, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_4

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->readDailyItemTagLocked(Lcom/android/modules/utils/TypedXmlPullParser;)V

    goto :goto_1

    :cond_4
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Unknown element under <daily-items>: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-interface {p1}, Lcom/android/modules/utils/TypedXmlPullParser;->getName()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v1, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    invoke-static {p1}, Lcom/android/internal/util/XmlUtils;->skipCurrentTag(Lorg/xmlpull/v1/XmlPullParser;)V

    goto :goto_1

    :cond_5
    new-instance p0, Ljava/lang/IllegalStateException;

    const-string/jumbo p1, "no start tag found"

    invoke-direct {p0, p1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p0
    :try_end_0
    .catch Ljava/lang/IllegalStateException; {:try_start_0 .. :try_end_0} :catch_5
    .catch Ljava/lang/NullPointerException; {:try_start_0 .. :try_end_0} :catch_4
    .catch Ljava/lang/NumberFormatException; {:try_start_0 .. :try_end_0} :catch_3
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_0 .. :try_end_0} :catch_2
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_1
    .catch Ljava/lang/IndexOutOfBoundsException; {:try_start_0 .. :try_end_0} :catch_0

    :catch_0
    move-exception p0

    new-instance p1, Ljava/lang/StringBuilder;

    invoke-direct {p1}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-static {v1, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_2

    :catch_1
    move-exception p0

    new-instance p1, Ljava/lang/StringBuilder;

    invoke-direct {p1}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-static {v1, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_2

    :catch_2
    move-exception p0

    new-instance p1, Ljava/lang/StringBuilder;

    invoke-direct {p1}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-static {v1, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_2

    :catch_3
    move-exception p0

    new-instance p1, Ljava/lang/StringBuilder;

    invoke-direct {p1}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-static {v1, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_2

    :catch_4
    move-exception p0

    new-instance p1, Ljava/lang/StringBuilder;

    invoke-direct {p1}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-static {v1, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_2

    :catch_5
    move-exception p0

    new-instance p1, Ljava/lang/StringBuilder;

    invoke-direct {p1}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-static {v1, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    :cond_6
    :goto_2
    return-void
.end method

.method public readDailyStatsLocked()V
    .locals 2

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Reading daily items from "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDailyFile:Landroid/util/AtomicFile;

    invoke-virtual {v1}, Landroid/util/AtomicFile;->getBaseFile()Ljava/io/File;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "BatteryStatsImpl"

    invoke-static {v1, v0}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->clear()V

    :try_start_0
    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDailyFile:Landroid/util/AtomicFile;

    invoke-virtual {v0}, Landroid/util/AtomicFile;->openRead()Ljava/io/FileInputStream;

    move-result-object v0
    :try_end_0
    .catch Ljava/io/FileNotFoundException; {:try_start_0 .. :try_end_0} :catch_2

    :try_start_1
    invoke-static {v0}, Landroid/util/Xml;->resolvePullParser(Ljava/io/InputStream;)Lcom/android/modules/utils/TypedXmlPullParser;

    move-result-object v1

    invoke-virtual {p0, v1}, Lcom/android/server/power/stats/BatteryStatsImpl;->readDailyItemsLocked(Lcom/android/modules/utils/TypedXmlPullParser;)V
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :catch_0
    :try_start_2
    invoke-virtual {v0}, Ljava/io/FileInputStream;->close()V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_2

    goto :goto_0

    :catchall_0
    move-exception p0

    :try_start_3
    invoke-virtual {v0}, Ljava/io/FileInputStream;->close()V
    :try_end_3
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_1

    :catch_1
    throw p0

    :catch_2
    :goto_0
    return-void
.end method

.method public readKernelUidCpuActiveTimesLocked(Z)V
    .locals 9

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {p1}, Lcom/android/internal/os/Clock;->uptimeMillis()J

    move-result-wide v6

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {p1}, Lcom/android/internal/os/Clock;->elapsedRealtime()J

    move-result-wide v2

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuUidActiveTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;

    new-instance v8, Lcom/android/server/power/stats/BatteryStatsImpl$$ExternalSyntheticLambda2;

    move-object v0, v8

    move-object v1, p0

    move-wide v4, v6

    invoke-direct/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl$$ExternalSyntheticLambda2;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl;JJ)V

    invoke-virtual {p1, v8}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;->readAbsolute(Lcom/android/internal/os/KernelCpuUidTimeReader$Callback;)V

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {p0}, Lcom/android/internal/os/Clock;->uptimeMillis()J

    move-result-wide p0

    sub-long/2addr p0, v6

    const-wide/16 v0, 0x64

    cmp-long v0, p0, v0

    if-ltz v0, :cond_0

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Reading cpu active times took "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p0, p1}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string/jumbo p0, "ms"

    invoke-virtual {v0, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    const-string p1, "BatteryStatsImpl"

    invoke-static {p1, p0}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    :cond_0
    return-void
.end method

.method public readKernelUidCpuClusterTimesLocked(ZLcom/android/server/power/stats/BatteryStatsImpl$CpuDeltaPowerAccumulator;)V
    .locals 13

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v0}, Lcom/android/internal/os/Clock;->uptimeMillis()J

    move-result-wide v9

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v0}, Lcom/android/internal/os/Clock;->elapsedRealtime()J

    move-result-wide v3

    if-eqz p2, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    iget-object v11, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuUidClusterTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;

    new-instance v12, Lcom/android/server/power/stats/BatteryStatsImpl$$ExternalSyntheticLambda6;

    move-object v1, v12

    move-object v2, p0

    move-wide v5, v9

    move v7, p1

    move-object v8, p2

    invoke-direct/range {v1 .. v8}, Lcom/android/server/power/stats/BatteryStatsImpl$$ExternalSyntheticLambda6;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl;JJZLcom/android/server/power/stats/BatteryStatsImpl$CpuDeltaPowerAccumulator;)V

    invoke-virtual {v11, v0, v12}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;->readDelta(ZLcom/android/internal/os/KernelCpuUidTimeReader$Callback;)V

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {p0}, Lcom/android/internal/os/Clock;->uptimeMillis()J

    move-result-wide p0

    sub-long/2addr p0, v9

    const-wide/16 v0, 0x64

    cmp-long p2, p0, v0

    if-ltz p2, :cond_1

    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "Reading cpu cluster times took "

    invoke-virtual {p2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, p0, p1}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string/jumbo p0, "ms"

    invoke-virtual {p2, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    const-string p1, "BatteryStatsImpl"

    invoke-static {p1, p0}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    :cond_1
    return-void
.end method

.method public readKernelUidCpuFreqTimesLocked(Ljava/util/ArrayList;ZZLcom/android/server/power/stats/BatteryStatsImpl$CpuDeltaPowerAccumulator;)V
    .locals 19

    move-object/from16 v12, p0

    move-object/from16 v13, p1

    iget-object v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuUidFreqTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

    invoke-virtual {v0}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;->perClusterTimesAvailable()Z

    move-result v8

    if-nez v13, :cond_0

    const/4 v15, 0x0

    goto :goto_0

    :cond_0
    invoke-virtual/range {p1 .. p1}, Ljava/util/ArrayList;->size()I

    move-result v0

    move v15, v0

    :goto_0
    iget-object v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-virtual {v0}, Lcom/android/internal/os/PowerProfile;->getNumCpuClusters()I

    move-result v11

    const/4 v0, 0x0

    iput-object v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mWakeLockAllocationsUs:[[J

    iget-object v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v0}, Lcom/android/internal/os/Clock;->uptimeMillis()J

    move-result-wide v16

    iget-object v0, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v0}, Lcom/android/internal/os/Clock;->elapsedRealtime()J

    move-result-wide v2

    if-eqz p4, :cond_1

    const/4 v0, 0x1

    move v10, v0

    goto :goto_1

    :cond_1
    const/4 v10, 0x0

    :goto_1
    iget-object v9, v12, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuUidFreqTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

    new-instance v7, Lcom/android/server/power/stats/BatteryStatsImpl$$ExternalSyntheticLambda5;

    move-object v0, v7

    move-object/from16 v1, p0

    move-wide/from16 v4, v16

    move/from16 v6, p2

    move-object v14, v7

    move/from16 v7, p3

    move-object v13, v9

    move v9, v11

    move v12, v10

    move v10, v15

    move/from16 v18, v11

    move-object/from16 v11, p4

    invoke-direct/range {v0 .. v11}, Lcom/android/server/power/stats/BatteryStatsImpl$$ExternalSyntheticLambda5;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl;JJZZZIILcom/android/server/power/stats/BatteryStatsImpl$CpuDeltaPowerAccumulator;)V

    invoke-virtual {v13, v12, v14}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;->readDelta(ZLcom/android/internal/os/KernelCpuUidTimeReader$Callback;)V

    move-object/from16 v6, p0

    iget-object v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v0}, Lcom/android/internal/os/Clock;->uptimeMillis()J

    move-result-wide v0

    sub-long v0, v0, v16

    const-wide/16 v2, 0x64

    cmp-long v2, v0, v2

    if-ltz v2, :cond_2

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Reading cpu freq times took "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0, v1}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string/jumbo v0, "ms"

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "BatteryStatsImpl"

    invoke-static {v1, v0}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    :cond_2
    iget-object v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mWakeLockAllocationsUs:[[J

    if-eqz v0, :cond_b

    const/4 v7, 0x0

    :goto_2
    if-ge v7, v15, :cond_b

    move-object/from16 v8, p1

    invoke-virtual {v8, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget-object v9, v0, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->mUid:Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    iget-object v0, v9, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    if-eqz v0, :cond_3

    array-length v1, v0

    move/from16 v10, v18

    if-eq v1, v10, :cond_4

    goto :goto_3

    :cond_3
    move/from16 v10, v18

    :goto_3
    invoke-static {v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->detachIfNotNull([[Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;)V

    new-array v0, v10, [[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    iput-object v0, v9, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    :cond_4
    const/4 v11, 0x0

    :goto_4
    if-ge v11, v10, :cond_a

    iget-object v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-virtual {v0, v11}, Lcom/android/internal/os/PowerProfile;->getNumSpeedStepsInCpuCluster(I)I

    move-result v12

    iget-object v0, v9, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    aget-object v0, v0, v11

    if-eqz v0, :cond_5

    array-length v1, v0

    if-eq v1, v12, :cond_6

    :cond_5
    invoke-static {v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->detachIfNotNull([Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;)V

    iget-object v0, v9, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    new-array v1, v12, [Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    aput-object v1, v0, v11

    :cond_6
    iget-object v0, v9, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    aget-object v13, v0, v11

    const/4 v14, 0x0

    :goto_5
    if-ge v14, v12, :cond_9

    aget-object v0, v13, v14

    if-nez v0, :cond_7

    new-instance v0, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    iget-object v1, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-direct {v0, v1}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    aput-object v0, v13, v14

    :cond_7
    iget-object v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mWakeLockAllocationsUs:[[J

    aget-object v0, v0, v11

    aget-wide v0, v0, v14

    sub-int v2, v15, v7

    int-to-long v2, v2

    div-long/2addr v0, v2

    aget-object v2, v13, v14

    move/from16 v4, p2

    invoke-virtual {v2, v0, v1, v4}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(JZ)V

    iget-object v2, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mWakeLockAllocationsUs:[[J

    aget-object v2, v2, v11

    aget-wide v16, v2, v14

    sub-long v16, v16, v0

    aput-wide v16, v2, v14

    if-eqz p4, :cond_8

    const-wide/16 v2, 0x3e8

    div-long v16, v0, v2

    move-object/from16 v0, p4

    move-object v1, v9

    move v2, v11

    move v3, v14

    move-wide/from16 v4, v16

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl$CpuDeltaPowerAccumulator;->addCpuClusterSpeedDurationsMs(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;IIJ)V

    :cond_8
    add-int/lit8 v14, v14, 0x1

    goto :goto_5

    :cond_9
    add-int/lit8 v11, v11, 0x1

    goto :goto_4

    :cond_a
    add-int/lit8 v7, v7, 0x1

    move/from16 v18, v10

    goto/16 :goto_2

    :cond_b
    return-void
.end method

.method public readKernelUidCpuTimesLocked(Ljava/util/ArrayList;Landroid/util/SparseLongArray;Z)V
    .locals 19

    move-object/from16 v9, p0

    move-object/from16 v10, p1

    move-object/from16 v11, p2

    move/from16 v12, p3

    const-wide/16 v13, 0x0

    iput-wide v13, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mTempTotalCpuSystemTimeUs:J

    iput-wide v13, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mTempTotalCpuUserTimeUs:J

    const/4 v15, 0x0

    if-nez v10, :cond_0

    move v8, v15

    goto :goto_0

    :cond_0
    invoke-virtual/range {p1 .. p1}, Ljava/util/ArrayList;->size()I

    move-result v0

    move v8, v0

    :goto_0
    iget-object v0, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v0}, Lcom/android/internal/os/Clock;->uptimeMillis()J

    move-result-wide v16

    iget-object v0, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v0}, Lcom/android/internal/os/Clock;->elapsedRealtime()J

    move-result-wide v2

    iget-object v7, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuUidUserSysTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;

    new-instance v6, Lcom/android/server/power/stats/BatteryStatsImpl$$ExternalSyntheticLambda1;

    move-object v0, v6

    move-object/from16 v1, p0

    move-wide/from16 v4, v16

    move-object v13, v6

    move v6, v8

    move-object v14, v7

    move/from16 v7, p3

    move/from16 v18, v8

    move-object/from16 v8, p2

    invoke-direct/range {v0 .. v8}, Lcom/android/server/power/stats/BatteryStatsImpl$$ExternalSyntheticLambda1;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl;JJIZLandroid/util/SparseLongArray;)V

    invoke-virtual {v14, v15, v13}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;->readDelta(ZLcom/android/internal/os/KernelCpuUidTimeReader$Callback;)V

    iget-object v0, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v0}, Lcom/android/internal/os/Clock;->uptimeMillis()J

    move-result-wide v0

    sub-long v0, v0, v16

    const-wide/16 v2, 0x64

    cmp-long v4, v0, v2

    if-ltz v4, :cond_1

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Reading cpu stats took "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v0, v1}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string/jumbo v0, "ms"

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "BatteryStatsImpl"

    invoke-static {v1, v0}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    :cond_1
    move/from16 v0, v18

    if-lez v0, :cond_3

    iget-wide v4, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mTempTotalCpuUserTimeUs:J

    const-wide/16 v6, 0x32

    mul-long/2addr v4, v6

    div-long/2addr v4, v2

    iput-wide v4, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mTempTotalCpuUserTimeUs:J

    iget-wide v4, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mTempTotalCpuSystemTimeUs:J

    mul-long/2addr v4, v6

    div-long/2addr v4, v2

    iput-wide v4, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mTempTotalCpuSystemTimeUs:J

    :goto_1
    if-ge v15, v0, :cond_3

    invoke-virtual {v10, v15}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget-wide v2, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mTempTotalCpuUserTimeUs:J

    sub-int v8, v0, v15

    int-to-long v4, v8

    div-long/2addr v2, v4

    long-to-int v2, v2

    iget-wide v6, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mTempTotalCpuSystemTimeUs:J

    div-long/2addr v6, v4

    long-to-int v3, v6

    iget-object v4, v1, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->mUid:Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    iget-object v4, v4, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mUserCpuTime:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    int-to-long v5, v2

    invoke-virtual {v4, v5, v6, v12}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(JZ)V

    iget-object v4, v1, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->mUid:Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    iget-object v4, v4, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mSystemCpuTime:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    int-to-long v7, v3

    invoke-virtual {v4, v7, v8, v12}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(JZ)V

    if-eqz v11, :cond_2

    iget-object v4, v1, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->mUid:Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    invoke-virtual {v4}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->getUid()I

    move-result v4

    const-wide/16 v13, 0x0

    invoke-virtual {v11, v4, v13, v14}, Landroid/util/SparseLongArray;->get(IJ)J

    move-result-wide v16

    add-long v16, v16, v5

    add-long v13, v16, v7

    invoke-virtual {v11, v4, v13, v14}, Landroid/util/SparseLongArray;->put(IJ)V

    :cond_2
    iget-object v1, v1, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->mUid:Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    const-string v4, "*wakelock*"

    invoke-virtual {v1, v4}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->getProcessStatsLocked(Ljava/lang/String;)Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Proc;

    move-result-object v1

    div-int/lit16 v2, v2, 0x3e8

    div-int/lit16 v3, v3, 0x3e8

    invoke-virtual {v1, v2, v3, v12}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Proc;->addCpuTimeLocked(IIZ)V

    iget-wide v1, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mTempTotalCpuUserTimeUs:J

    sub-long/2addr v1, v5

    iput-wide v1, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mTempTotalCpuUserTimeUs:J

    iget-wide v1, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mTempTotalCpuSystemTimeUs:J

    sub-long/2addr v1, v7

    iput-wide v1, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mTempTotalCpuSystemTimeUs:J

    add-int/lit8 v15, v15, 0x1

    goto :goto_1

    :cond_3
    return-void
.end method

.method public readLocked()V
    .locals 12

    const-string v0, "BatteryStatsImpl"

    const/4 v1, 0x2

    const/4 v2, 0x0

    :try_start_0
    iget-object v3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSystemDir:Ljava/io/File;

    if-nez v3, :cond_0

    new-instance v3, Ljava/io/File;

    const-string v4, "data/system"

    invoke-direct {v3, v4}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    iput-object v3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSystemDir:Ljava/io/File;

    :cond_0
    new-instance v3, Ljava/io/File;

    iget-object v4, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSystemDir:Ljava/io/File;

    const-string v5, "BCheck0"

    invoke-direct {v3, v4, v5}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    invoke-virtual {v3}, Ljava/io/File;->exists()Z

    move-result v4
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_1

    const-string v5, "BCheck"

    const/4 v6, 0x1

    if-nez v4, :cond_1

    :try_start_1
    const-string v4, "create %s%d (%b) / path=%s"

    const/4 v7, 0x4

    new-array v7, v7, [Ljava/lang/Object;

    aput-object v5, v7, v2

    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    aput-object v5, v7, v6

    invoke-virtual {v3}, Ljava/io/File;->createNewFile()Z

    move-result v5

    invoke-static {v5}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v5

    aput-object v5, v7, v1

    invoke-virtual {v3}, Ljava/io/File;->getAbsolutePath()Ljava/lang/String;

    move-result-object v3

    const/4 v5, 0x3

    aput-object v3, v7, v5

    invoke-static {v4, v7}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v3

    invoke-static {v0, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    move v8, v2

    goto :goto_2

    :cond_1
    iget-object v3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSystemDir:Ljava/io/File;

    invoke-virtual {v3}, Ljava/io/File;->list()[Ljava/lang/String;

    move-result-object v3

    invoke-static {v3}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    check-cast v3, [Ljava/lang/String;

    array-length v4, v3
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_1

    move v7, v2

    move v8, v7

    :goto_0
    if-ge v7, v4, :cond_3

    :try_start_2
    aget-object v9, v3, v7

    invoke-virtual {v9, v5}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v10

    if-eqz v10, :cond_2

    const-string v10, "[^\\d]"

    const-string v11, ""

    invoke-virtual {v9, v10, v11}, Ljava/lang/String;->replaceAll(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v9

    invoke-static {v9}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v9

    if-ge v8, v9, :cond_2

    move v8, v9

    :cond_2
    add-int/lit8 v7, v7, 0x1

    goto :goto_0

    :cond_3
    new-instance v3, Ljava/io/File;

    iget-object v4, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSystemDir:Ljava/io/File;

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v7, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    add-int/lit8 v8, v8, 0x1

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-direct {v3, v4, v5}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    const-string v4, "Repeating abnormal reboot :: %d times (%b)"

    new-array v5, v1, [Ljava/lang/Object;

    invoke-static {v8}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v7

    aput-object v7, v5, v2

    invoke-virtual {v3}, Ljava/io/File;->createNewFile()Z

    move-result v3

    invoke-static {v3}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v3

    aput-object v3, v5, v6

    invoke-static {v4, v5}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v3

    invoke-static {v0, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_0

    goto :goto_2

    :catch_0
    move-exception v3

    goto :goto_1

    :catch_1
    move-exception v3

    move v8, v2

    :goto_1
    const-string v4, "Something was wrong while checking the abnormal state"

    invoke-static {v0, v4, v3}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    :goto_2
    if-le v8, v1, :cond_4

    const-string v1, "Was reboot continuously"

    invoke-static {v0, v1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v3

    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v5

    const/4 v7, 0x1

    move-object v2, p0

    invoke-virtual/range {v2 .. v7}, Lcom/android/server/power/stats/BatteryStatsImpl;->resetAllStatsLocked(JJI)V

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsHistory;->reset()V

    return-void

    :cond_4
    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDailyFile:Landroid/util/AtomicFile;

    if-eqz v1, :cond_5

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->readDailyStatsLocked()V

    :cond_5
    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mStatsFile:Landroid/util/AtomicFile;

    if-nez v1, :cond_6

    const-string/jumbo p0, "readLocked: no file associated with this instance"

    invoke-static {v0, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    return-void

    :cond_6
    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->clear()V

    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v1

    :try_start_3
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    iget-object v3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mStatsFile:Landroid/util/AtomicFile;

    invoke-virtual {v3}, Landroid/util/AtomicFile;->exists()Z

    move-result v3

    if-eqz v3, :cond_7

    iget-object v3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mStatsFile:Landroid/util/AtomicFile;

    invoke-virtual {v3}, Landroid/util/AtomicFile;->readFully()[B

    move-result-object v3

    array-length v4, v3

    invoke-virtual {v1, v3, v2, v4}, Landroid/os/Parcel;->unmarshall([BII)V

    invoke-virtual {v1, v2}, Landroid/os/Parcel;->setDataPosition(I)V

    invoke-virtual {p0, v1}, Lcom/android/server/power/stats/BatteryStatsImpl;->readSummaryFromParcel(Landroid/os/Parcel;)V
    :try_end_3
    .catch Ljava/lang/Exception; {:try_start_3 .. :try_end_3} :catch_3
    .catch Ljava/lang/OutOfMemoryError; {:try_start_3 .. :try_end_3} :catch_2
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :cond_7
    :goto_3
    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V

    goto :goto_4

    :catchall_0
    move-exception p0

    goto :goto_5

    :catch_2
    move-exception v3

    :try_start_4
    const-string v4, "Abnormal mStatsFile"

    invoke-static {v0, v4, v3}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v6

    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v8

    const/4 v10, 0x1

    move-object v5, p0

    invoke-virtual/range {v5 .. v10}, Lcom/android/server/power/stats/BatteryStatsImpl;->resetAllStatsLocked(JJI)V

    goto :goto_3

    :catch_3
    move-exception v3

    const-string v4, "Error reading battery statistics"

    invoke-static {v0, v4, v3}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v6

    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v8

    const/4 v10, 0x1

    move-object v5, p0

    invoke-virtual/range {v5 .. v10}, Lcom/android/server/power/stats/BatteryStatsImpl;->resetAllStatsLocked(JJI)V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    goto :goto_3

    :goto_4
    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsHistory;->readSummary()Z

    move-result v0

    if-nez v0, :cond_8

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v4

    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v6

    const/4 v8, 0x1

    move-object v3, p0

    invoke-virtual/range {v3 .. v8}, Lcom/android/server/power/stats/BatteryStatsImpl;->resetAllStatsLocked(JJI)V

    :cond_8
    sget-object v0, Landroid/os/Build;->ID:Ljava/lang/String;

    iput-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mEndPlatformVersion:Ljava/lang/String;

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsHistory;->continueRecordingHistory()V

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v0}, Lcom/android/internal/os/Clock;->currentTimeMillis()J

    move-result-wide v0

    invoke-virtual {p0, v2, v0, v1}, Lcom/android/server/power/stats/BatteryStatsImpl;->recordDailyStatsIfNeededLocked(ZJ)V

    return-void

    :goto_5
    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V

    throw p0
.end method

.method public readMobileNetworkStatsLocked(Landroid/app/usage/NetworkStatsManager;)Landroid/net/NetworkStats;
    .locals 0

    invoke-virtual {p1}, Landroid/app/usage/NetworkStatsManager;->getMobileUidStats()Landroid/net/NetworkStats;

    move-result-object p0

    return-object p0
.end method

.method public final readOneLine(Ljava/lang/String;)J
    .locals 5

    iget-boolean v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mFeatureComputeChargeTimeModel:Z

    const-wide/16 v1, -0x1

    if-nez v0, :cond_0

    const-string p0, "BatteryStatsImpl"

    const-string p1, "This device does not support its own charge time"

    invoke-static {p0, p1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    return-wide v1

    :cond_0
    const/4 v0, 0x0

    :try_start_0
    new-instance v3, Ljava/io/BufferedReader;

    new-instance v4, Ljava/io/FileReader;

    invoke-direct {v4, p1}, Ljava/io/FileReader;-><init>(Ljava/lang/String;)V

    const/16 p1, 0xa

    invoke-direct {v3, v4, p1}, Ljava/io/BufferedReader;-><init>(Ljava/io/Reader;I)V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_2
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-virtual {v3}, Ljava/io/BufferedReader;->readLine()Ljava/lang/String;

    move-result-object v0

    if-eqz v0, :cond_1

    invoke-static {v0, p1}, Ljava/lang/Long;->parseLong(Ljava/lang/String;I)J

    move-result-wide p0
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-wide v1, p0

    :cond_1
    :try_start_2
    invoke-virtual {v3}, Ljava/io/BufferedReader;->close()V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_0

    goto :goto_1

    :catch_0
    move-exception p0

    invoke-virtual {p0}, Ljava/io/IOException;->printStackTrace()V

    goto :goto_1

    :catchall_0
    move-exception p0

    move-object v0, v3

    goto :goto_2

    :catch_1
    move-object v0, v3

    goto :goto_0

    :catchall_1
    move-exception p0

    goto :goto_2

    :catch_2
    :goto_0
    const/4 p1, 0x0

    :try_start_3
    iput-boolean p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mFeatureComputeChargeTimeModel:Z
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    if-eqz v0, :cond_2

    :try_start_4
    invoke-virtual {v0}, Ljava/io/BufferedReader;->close()V
    :try_end_4
    .catch Ljava/io/IOException; {:try_start_4 .. :try_end_4} :catch_0

    :cond_2
    :goto_1
    const-wide/16 p0, 0x3e8

    mul-long/2addr v1, p0

    mul-long/2addr v1, p0

    return-wide v1

    :goto_2
    if-eqz v0, :cond_3

    :try_start_5
    invoke-virtual {v0}, Ljava/io/BufferedReader;->close()V
    :try_end_5
    .catch Ljava/io/IOException; {:try_start_5 .. :try_end_5} :catch_3

    goto :goto_3

    :catch_3
    move-exception p1

    invoke-virtual {p1}, Ljava/io/IOException;->printStackTrace()V

    :cond_3
    :goto_3
    throw p0
.end method

.method public readSummaryFromParcel(Landroid/os/Parcel;)V
    .locals 27

    move-object/from16 v7, p0

    move-object/from16 v8, p1

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    const v1, 0x1200d4

    if-eq v0, v1, :cond_0

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "readFromParcel: version got "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v0, ", expected "

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v0, "; erasing old stats"

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "BatteryStats"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    return-void

    :cond_0
    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    invoke-virtual {v0, v8}, Lcom/android/internal/os/BatteryStatsHistory;->readSummaryFromParcel(Landroid/os/Parcel;)V

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    iput v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mStartCount:I

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v0

    iput-wide v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mUptimeUs:J

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v0

    iput-wide v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mRealtimeUs:J

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v0

    iput-wide v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mStartClockTimeMs:J

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v0

    iput-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mStartPlatformVersion:Ljava/lang/String;

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v0

    iput-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mEndPlatformVersion:Ljava/lang/String;

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;->readSummaryFromParcel(Landroid/os/Parcel;)V

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;->readSummaryFromParcel(Landroid/os/Parcel;)V

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    iput v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeUnplugLevel:I

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    iput v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargePlugLevel:I

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    iput v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeCurrentLevel:I

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    iput v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryLevel:I

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    iput v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mEstimatedBatteryCapacityMah:I

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    iput v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastLearnedBatteryCapacityUah:I

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    iput v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mMinLearnedBatteryCapacityUah:I

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    iput v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mMaxLearnedBatteryCapacityUah:I

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    iput v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mLowDischargeAmountSinceCharge:I

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    iput v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mHighDischargeAmountSinceCharge:I

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    iput v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenOnSinceCharge:I

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    iput v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenOffSinceCharge:I

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    iput v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mProtectBatteryMode:I

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    iput v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenOnSinceChargePermil:I

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    iput v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenOffSinceChargePermil:I

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    iput v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountSubScreenOnSinceChargePermil:I

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    iput v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountSubScreenOffSinceChargePermil:I

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    iput v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenOnSinceChargeCoulombCounter:I

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    iput v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenOffSinceChargeCoulombCounter:I

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    iput v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenDozeSinceCharge:I

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v0, v8}, Landroid/os/BatteryStats$LevelStepTracker;->readFromParcel(Landroid/os/Parcel;)V

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v0, v8}, Landroid/os/BatteryStats$LevelStepTracker;->readFromParcel(Landroid/os/Parcel;)V

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v0, v8}, Landroid/os/BatteryStats$LevelStepTracker;->readFromParcel(Landroid/os/Parcel;)V

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v0, v8}, Landroid/os/BatteryStats$LevelStepTracker;->readFromParcel(Landroid/os/Parcel;)V

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeCounter:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOffCounter:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenDozeCounter:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeLightDozeCounter:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeDeepDozeCounter:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    const/4 v9, 0x0

    const/4 v10, 0x1

    const/4 v11, 0x0

    if-lez v0, :cond_2

    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1, v0}, Ljava/util/ArrayList;-><init>(I)V

    iput-object v1, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    :goto_0
    if-lez v0, :cond_3

    add-int/lit8 v0, v0, -0x1

    new-instance v1, Landroid/os/BatteryStats$PackageChange;

    invoke-direct {v1}, Landroid/os/BatteryStats$PackageChange;-><init>()V

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v2

    iput-object v2, v1, Landroid/os/BatteryStats$PackageChange;->mPackageName:Ljava/lang/String;

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v2

    if-eqz v2, :cond_1

    move v2, v10

    goto :goto_1

    :cond_1
    move v2, v11

    :goto_1
    iput-boolean v2, v1, Landroid/os/BatteryStats$PackageChange;->mUpdate:Z

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v2

    iput-wide v2, v1, Landroid/os/BatteryStats$PackageChange;->mVersionCode:J

    iget-object v2, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_0

    :cond_2
    iput-object v9, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    :cond_3
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v0

    iput-wide v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDailyStartTimeMs:J

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v0

    iput-wide v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mNextMinDailyDeadlineMs:J

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v0

    iput-wide v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mNextMaxDailyDeadlineMs:J

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v0

    iput-wide v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryTimeToFullSeconds:J

    invoke-static/range {p1 .. p1}, Lcom/android/internal/power/EnergyConsumerStats$Config;->createFromParcel(Landroid/os/Parcel;)Lcom/android/internal/power/EnergyConsumerStats$Config;

    move-result-object v0

    iget-object v1, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mEnergyConsumerStatsConfig:Lcom/android/internal/power/EnergyConsumerStats$Config;

    invoke-static {v1, v8}, Lcom/android/internal/power/EnergyConsumerStats;->createAndReadSummaryFromParcel(Lcom/android/internal/power/EnergyConsumerStats$Config;Landroid/os/Parcel;)Lcom/android/internal/power/EnergyConsumerStats;

    move-result-object v1

    if-eqz v0, :cond_4

    invoke-virtual {v0}, Lcom/android/internal/power/EnergyConsumerStats$Config;->getStateNames()[Ljava/lang/String;

    move-result-object v2

    invoke-static {}, Lcom/android/server/power/stats/BatteryStatsImpl;->getBatteryConsumerProcessStateNames()[Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Ljava/util/Arrays;->equals([Ljava/lang/Object;[Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_4

    iput-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mEnergyConsumerStatsConfig:Lcom/android/internal/power/EnergyConsumerStats$Config;

    iput-object v1, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mGlobalEnergyConsumerStats:Lcom/android/internal/power/EnergyConsumerStats;

    :cond_4
    iget v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mStartCount:I

    add-int/2addr v0, v10

    iput v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mStartCount:I

    iput v11, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenState:I

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenDozeTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    move v0, v11

    :goto_2
    const/4 v12, 0x5

    if-ge v0, v12, :cond_5

    iget-object v1, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v1, v1, v0

    invoke-virtual {v1, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    add-int/lit8 v0, v0, 0x1

    goto :goto_2

    :cond_5
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    move v1, v11

    :goto_3
    if-ge v1, v0, :cond_6

    iget-object v2, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mPerDisplayBatteryStats:[Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;

    aget-object v2, v2, v1

    invoke-virtual {v2, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;->readSummaryFromParcel(Landroid/os/Parcel;)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_3

    :cond_6
    iput v11, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenState:I

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenDozeTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    move v0, v11

    :goto_4
    if-ge v0, v12, :cond_7

    iget-object v1, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v1, v1, v0

    invoke-virtual {v1, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    add-int/lit8 v0, v0, 0x1

    goto :goto_4

    :cond_7
    move v0, v11

    :goto_5
    if-ge v0, v12, :cond_8

    iget-object v1, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenAutoBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v1, v1, v0

    invoke-virtual {v1, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    add-int/lit8 v0, v0, 0x1

    goto :goto_5

    :cond_8
    move v0, v11

    :goto_6
    if-ge v0, v12, :cond_9

    iget-object v1, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenAutoBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v1, v1, v0

    invoke-virtual {v1, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    add-int/lit8 v0, v0, 0x1

    goto :goto_6

    :cond_9
    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenHighBrightnessTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenHighBrightnessTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    move v0, v11

    :goto_7
    const/4 v1, 0x4

    if-ge v0, v1, :cond_a

    iget-object v1, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mHighRefreshRateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v1, v1, v0

    invoke-virtual {v1, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    add-int/lit8 v0, v0, 0x1

    goto :goto_7

    :cond_a
    move v0, v11

    :goto_8
    if-ge v0, v1, :cond_b

    iget-object v2, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubHighRefreshRateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v0

    invoke-virtual {v2, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    add-int/lit8 v0, v0, 0x1

    goto :goto_8

    :cond_b
    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDisplayPowerDrainCounter:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    if-eqz v0, :cond_c

    move v0, v10

    goto :goto_9

    :cond_c
    move v0, v11

    :goto_9
    iput-boolean v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mHasDisplayPowerReporting:Z

    move v0, v11

    :goto_a
    const/16 v13, 0x10

    if-ge v0, v13, :cond_d

    iget-object v1, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mSpeakerMediaTimeCounters:[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    aget-object v1, v1, v0

    invoke-virtual {v1, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    iget-object v1, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mSpeakerCallTimeCounters:[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    aget-object v1, v1, v0

    invoke-virtual {v1, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    add-int/lit8 v0, v0, 0x1

    goto :goto_a

    :cond_d
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    if-eqz v0, :cond_e

    move v0, v10

    goto :goto_b

    :cond_e
    move v0, v11

    :goto_b
    iput-boolean v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mHasSpeakerOutReporting:Z

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mTxPowerSharingTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v0

    iput-wide v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mTxPowerSharingDischargeMah:J

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileActiveTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileActive5GTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenOnGpsTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    iput-boolean v11, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mInteractive:Z

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mInteractiveTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    iput-boolean v11, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneOn:Z

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerSaveModeEnabledTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v0

    iput-wide v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mLongestLightIdleTimeMs:J

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v0

    iput-wide v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mLongestFullIdleTimeMs:J

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeviceIdleModeLightTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeviceIdleModeFullTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeviceLightIdlingTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeviceIdlingTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    move v0, v11

    :goto_c
    invoke-static {}, Landroid/telephony/CellSignalStrength;->getNumSignalStrengthLevels()I

    move-result v1

    if-ge v0, v1, :cond_f

    iget-object v1, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v1, v1, v0

    invoke-virtual {v1, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    add-int/lit8 v0, v0, 0x1

    goto :goto_c

    :cond_f
    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    move v0, v11

    :goto_d
    sget v1, Landroid/os/BatteryStats;->NUM_DATA_CONNECTION_TYPES:I

    if-ge v0, v1, :cond_10

    iget-object v1, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v1, v1, v0

    invoke-virtual {v1, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    add-int/lit8 v0, v0, 0x1

    goto :goto_d

    :cond_10
    move v0, v11

    :goto_e
    const/16 v14, 0xa

    if-ge v0, v14, :cond_11

    iget-object v1, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    aget-object v1, v1, v0

    invoke-virtual {v1, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    iget-object v1, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    aget-object v1, v1, v0

    invoke-virtual {v1, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    add-int/lit8 v0, v0, 0x1

    goto :goto_e

    :cond_11
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    move v1, v11

    :goto_f
    if-ge v1, v0, :cond_13

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v2

    if-nez v2, :cond_12

    goto :goto_10

    :cond_12
    invoke-virtual {v7, v1}, Lcom/android/server/power/stats/BatteryStatsImpl;->getRatBatteryStatsLocked(I)Lcom/android/server/power/stats/BatteryStatsImpl$RadioAccessTechnologyBatteryStats;

    move-result-object v2

    invoke-virtual {v2, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$RadioAccessTechnologyBatteryStats;->readSummaryFromParcel(Landroid/os/Parcel;)V

    :goto_10
    add-int/lit8 v1, v1, 0x1

    goto :goto_f

    :cond_13
    iput v10, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioPowerState:I

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioActivePerAppTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioActiveAdjustedTime:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioActiveUnknownTime:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioActiveUnknownCount:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiMulticastWakelockTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    iput v10, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiRadioPowerState:I

    iput-boolean v11, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiOn:Z

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    iput-boolean v11, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mGlobalWifiRunning:Z

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mGlobalWifiRunningTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    move v0, v11

    :goto_11
    const/16 v1, 0x8

    if-ge v0, v1, :cond_14

    iget-object v1, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v1, v1, v0

    invoke-virtual {v1, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    add-int/lit8 v0, v0, 0x1

    goto :goto_11

    :cond_14
    move v0, v11

    :goto_12
    const/16 v1, 0xd

    if-ge v0, v1, :cond_15

    iget-object v1, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v1, v1, v0

    invoke-virtual {v1, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    add-int/lit8 v0, v0, 0x1

    goto :goto_12

    :cond_15
    move v0, v11

    :goto_13
    if-ge v0, v12, :cond_16

    iget-object v1, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v1, v1, v0

    invoke-virtual {v1, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    add-int/lit8 v0, v0, 0x1

    goto :goto_13

    :cond_16
    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiActiveTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiActivity:Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;->readSummaryFromParcel(Landroid/os/Parcel;)V

    move v0, v11

    :goto_14
    iget-object v1, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    array-length v2, v1

    if-ge v0, v2, :cond_17

    aget-object v1, v1, v0

    invoke-virtual {v1, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    add-int/lit8 v0, v0, 0x1

    goto :goto_14

    :cond_17
    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mBluetoothActivity:Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;->readSummaryFromParcel(Landroid/os/Parcel;)V

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mModemActivity:Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;->readSummaryFromParcel(Landroid/os/Parcel;)V

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mNetworkModemActivity:Lcom/android/server/power/stats/BatteryStatsImpl$ModemActivityCounterImpl;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$ModemActivityCounterImpl;->readSummaryFromParcel(Landroid/os/Parcel;)V

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    if-eqz v0, :cond_18

    move v0, v10

    goto :goto_15

    :cond_18
    move v0, v11

    :goto_15
    iput-boolean v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mHasWifiReporting:Z

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    if-eqz v0, :cond_19

    move v0, v10

    goto :goto_16

    :cond_19
    move v0, v11

    :goto_16
    iput-boolean v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mHasBluetoothReporting:Z

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    if-eqz v0, :cond_1a

    move v0, v10

    goto :goto_17

    :cond_1a
    move v0, v11

    :goto_17
    iput-boolean v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mHasModemReporting:Z

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    iput v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mNumConnectivityChange:I

    iput v11, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mFlashlightOnNesting:I

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    iput v11, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mCameraOnNesting:I

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mCameraOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    iput v11, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mBluetoothScanNesting:I

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mBluetoothScanTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    const/16 v15, 0x2710

    if-gt v0, v15, :cond_6d

    move v1, v11

    :goto_18
    if-ge v1, v0, :cond_1c

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v2

    if-eqz v2, :cond_1b

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v7, v2}, Lcom/android/server/power/stats/BatteryStatsImpl;->getRpmTimerLocked(Ljava/lang/String;)Lcom/android/server/power/stats/BatteryStatsImpl$SamplingTimer;

    move-result-object v2

    invoke-virtual {v2, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    :cond_1b
    add-int/lit8 v1, v1, 0x1

    goto :goto_18

    :cond_1c
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    if-gt v0, v15, :cond_6c

    move v1, v11

    :goto_19
    if-ge v1, v0, :cond_1e

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v2

    if-eqz v2, :cond_1d

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v7, v2}, Lcom/android/server/power/stats/BatteryStatsImpl;->getScreenOffRpmTimerLocked(Ljava/lang/String;)Lcom/android/server/power/stats/BatteryStatsImpl$SamplingTimer;

    move-result-object v2

    invoke-virtual {v2, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    :cond_1d
    add-int/lit8 v1, v1, 0x1

    goto :goto_19

    :cond_1e
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    if-gt v0, v15, :cond_6b

    move v1, v11

    :goto_1a
    if-ge v1, v0, :cond_20

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v2

    if-eqz v2, :cond_1f

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v7, v2}, Lcom/android/server/power/stats/BatteryStatsImpl;->getKernelWakelockTimerLocked(Ljava/lang/String;)Lcom/android/server/power/stats/BatteryStatsImpl$SamplingTimer;

    move-result-object v2

    invoke-virtual {v2, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    :cond_1f
    add-int/lit8 v1, v1, 0x1

    goto :goto_1a

    :cond_20
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    if-gt v0, v15, :cond_6a

    move v1, v11

    :goto_1b
    if-ge v1, v0, :cond_22

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v2

    if-eqz v2, :cond_21

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v7, v2}, Lcom/android/server/power/stats/BatteryStatsImpl;->getWakeupReasonTimerLocked(Ljava/lang/String;)Lcom/android/server/power/stats/BatteryStatsImpl$SamplingTimer;

    move-result-object v2

    invoke-virtual {v2, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    :cond_21
    add-int/lit8 v1, v1, 0x1

    goto :goto_1b

    :cond_22
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    move v1, v11

    :goto_1c
    if-ge v1, v0, :cond_24

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v2

    if-eqz v2, :cond_23

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v2

    invoke-virtual {v7, v2, v3}, Lcom/android/server/power/stats/BatteryStatsImpl;->getKernelMemoryTimerLocked(J)Lcom/android/server/power/stats/BatteryStatsImpl$SamplingTimer;

    move-result-object v2

    invoke-virtual {v2, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    :cond_23
    add-int/lit8 v1, v1, 0x1

    goto :goto_1c

    :cond_24
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v5

    if-gt v5, v15, :cond_69

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v0}, Lcom/android/internal/os/Clock;->elapsedRealtime()J

    move-result-wide v3

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v0}, Lcom/android/internal/os/Clock;->uptimeMillis()J

    move-result-wide v16

    move v6, v11

    :goto_1d
    if-ge v6, v5, :cond_68

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v2

    new-instance v1, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-object v0, v1

    move-object v15, v1

    move-object/from16 v1, p0

    move/from16 v18, v2

    move-wide/from16 v19, v3

    move/from16 v21, v5

    move/from16 v22, v6

    move-wide/from16 v5, v16

    invoke-direct/range {v0 .. v6}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl;IJJ)V

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    move/from16 v1, v18

    invoke-virtual {v0, v1, v15}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    iget-object v0, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mOnBatteryBackgroundTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;->readSummaryFromParcel(Landroid/os/Parcel;)V

    iget-object v0, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mOnBatteryScreenOffBackgroundTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;->readSummaryFromParcel(Landroid/os/Parcel;)V

    iput-boolean v11, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mWifiRunning:Z

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    if-eqz v0, :cond_25

    iget-object v0, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mWifiRunningTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    :cond_25
    iput-boolean v11, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mFullWifiLockOut:Z

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    if-eqz v0, :cond_26

    iget-object v0, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mFullWifiLockTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    :cond_26
    iput-boolean v11, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mWifiScanStarted:Z

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    if-eqz v0, :cond_27

    iget-object v0, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mWifiScanTimer:Lcom/android/server/power/stats/BatteryStatsImpl$DualTimer;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$DualTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    :cond_27
    const/4 v0, -0x1

    iput v0, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mWifiBatchedScanBinStarted:I

    move v0, v11

    :goto_1e
    if-ge v0, v12, :cond_29

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    if-eqz v1, :cond_28

    invoke-virtual {v15, v0, v9}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->makeWifiBatchedScanBin(ILandroid/os/Parcel;)V

    iget-object v1, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mWifiBatchedScanTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v1, v1, v0

    invoke-virtual {v1, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    :cond_28
    add-int/lit8 v0, v0, 0x1

    goto :goto_1e

    :cond_29
    iput v11, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mWifiMulticastWakelockCount:I

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    if-eqz v0, :cond_2a

    iget-object v0, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mWifiMulticastTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    :cond_2a
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    if-eqz v0, :cond_2b

    invoke-virtual {v15}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->createAudioTurnedOnTimerLocked()Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    move-result-object v0

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    :cond_2b
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    if-eqz v0, :cond_2c

    invoke-virtual {v15}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->createVideoTurnedOnTimerLocked()Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    move-result-object v0

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    :cond_2c
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    if-eqz v0, :cond_2d

    invoke-virtual {v15}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->createFlashlightTurnedOnTimerLocked()Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    move-result-object v0

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    :cond_2d
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    if-eqz v0, :cond_2e

    invoke-virtual {v15}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->createCameraTurnedOnTimerLocked()Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    move-result-object v0

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    :cond_2e
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    if-eqz v0, :cond_2f

    invoke-virtual {v15}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->createForegroundActivityTimerLocked()Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    move-result-object v0

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    :cond_2f
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    if-eqz v0, :cond_30

    invoke-virtual {v15}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->createForegroundServiceTimerLocked()Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    move-result-object v0

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    :cond_30
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    if-eqz v0, :cond_31

    invoke-virtual {v15}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->createAggregatedPartialWakelockTimerLocked()Lcom/android/server/power/stats/BatteryStatsImpl$DualTimer;

    move-result-object v0

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$DualTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    :cond_31
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    if-eqz v0, :cond_32

    invoke-virtual {v15}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->createBluetoothDutyScanTimerLocked()Lcom/android/server/power/stats/BatteryStatsImpl$DutyTimer;

    move-result-object v0

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$DutyTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    :cond_32
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    if-eqz v0, :cond_34

    invoke-static {v15}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$fgetmDisplayTimeMs(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;)Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v0

    if-nez v0, :cond_33

    invoke-virtual {v15}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->initDisplayPowerCounterLocked()V

    :cond_33
    invoke-static {v15}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$fgetmDisplayTimeMs(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;)Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v0

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    invoke-static {v15}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$fgetmDisplayPowerDrainMah(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;)Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v0

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    :cond_34
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    if-eqz v0, :cond_36

    invoke-static {v15}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$fgetmSpeakerMediaTimeCounters(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;)[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v0

    if-nez v0, :cond_35

    invoke-virtual {v15}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->initSpeakerTimeCounterLocked()V

    :cond_35
    move v0, v11

    :goto_1f
    if-ge v0, v13, :cond_36

    invoke-static {v15}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$fgetmSpeakerMediaTimeCounters(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;)[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v1

    aget-object v1, v1, v0

    invoke-virtual {v1, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    add-int/lit8 v0, v0, 0x1

    goto :goto_1f

    :cond_36
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    if-eqz v0, :cond_3a

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    iget-object v1, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    if-eqz v1, :cond_38

    invoke-virtual {v1}, Lcom/android/internal/os/PowerProfile;->getNumDisplays()I

    move-result v1

    if-ne v1, v0, :cond_37

    goto :goto_20

    :cond_37
    new-instance v0, Landroid/os/ParcelFormatException;

    const-string v1, "The defined number of displays may have been changed, possibly due to modifications made to the power_profile file."

    invoke-direct {v0, v1}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_38
    :goto_20
    invoke-static {v15}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$fgetmPerDisplayTopActivityTimer(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;)[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    move-result-object v1

    invoke-static {v1}, Lcom/android/server/power/stats/BatteryStatsImpl;->detachIfNotNull([Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;)V

    new-array v1, v0, [Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-static {v15, v1}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$fputmPerDisplayTopActivityTimer(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;)V

    move v1, v11

    :goto_21
    if-ge v1, v0, :cond_3a

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v2

    if-eqz v2, :cond_39

    invoke-virtual {v15, v1, v9}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->makeDisplayTopActivityTimer(ILandroid/os/Parcel;)V

    invoke-static {v15}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$fgetmPerDisplayTopActivityTimer(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;)[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    move-result-object v2

    aget-object v2, v2, v1

    invoke-virtual {v2, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    goto :goto_22

    :cond_39
    invoke-static {v15}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$fgetmPerDisplayTopActivityTimer(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;)[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    move-result-object v2

    aput-object v9, v2, v1

    :goto_22
    add-int/lit8 v1, v1, 0x1

    goto :goto_21

    :cond_3a
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    if-eqz v0, :cond_3b

    invoke-virtual {v15}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->createBluetoothScanTimerLocked()Lcom/android/server/power/stats/BatteryStatsImpl$DualTimer;

    move-result-object v0

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$DualTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    :cond_3b
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    if-eqz v0, :cond_3c

    invoke-virtual {v15}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->createBluetoothUnoptimizedScanTimerLocked()Lcom/android/server/power/stats/BatteryStatsImpl$DualTimer;

    move-result-object v0

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$DualTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    :cond_3c
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    if-eqz v0, :cond_3d

    invoke-virtual {v15}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->createBluetoothScanResultCounterLocked()Lcom/android/server/power/stats/BatteryStatsImpl$Counter;

    move-result-object v0

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$Counter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    :cond_3d
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    if-eqz v0, :cond_3e

    invoke-virtual {v15}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->createBluetoothScanResultBgCounterLocked()Lcom/android/server/power/stats/BatteryStatsImpl$Counter;

    move-result-object v0

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$Counter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    :cond_3e
    const/4 v0, 0x7

    iput v0, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mProcessState:I

    move v1, v11

    :goto_23
    if-ge v1, v0, :cond_40

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v2

    if-eqz v2, :cond_3f

    invoke-virtual {v15, v1, v9}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->makeProcessState(ILandroid/os/Parcel;)V

    iget-object v2, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mProcessStateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    invoke-virtual {v2, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    :cond_3f
    add-int/lit8 v1, v1, 0x1

    goto :goto_23

    :cond_40
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    if-eqz v0, :cond_41

    invoke-virtual {v15}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->createVibratorOnTimerLocked()Lcom/android/server/power/stats/BatteryStatsImpl$BatchTimer;

    move-result-object v0

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    :cond_41
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    if-eqz v0, :cond_43

    iget-object v0, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mUserActivityCounters:[Lcom/android/server/power/stats/BatteryStatsImpl$Counter;

    if-nez v0, :cond_42

    invoke-virtual {v15}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->initUserActivityLocked()V

    :cond_42
    move v0, v11

    :goto_24
    sget v1, Landroid/os/BatteryStats$Uid;->NUM_USER_ACTIVITY_TYPES:I

    if-ge v0, v1, :cond_43

    iget-object v1, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mUserActivityCounters:[Lcom/android/server/power/stats/BatteryStatsImpl$Counter;

    aget-object v1, v1, v0

    invoke-virtual {v1, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$Counter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    add-int/lit8 v0, v0, 0x1

    goto :goto_24

    :cond_43
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    if-eqz v0, :cond_46

    invoke-virtual {v15}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->ensureNetworkActivityLocked()V

    move v0, v11

    :goto_25
    if-ge v0, v14, :cond_44

    iget-object v1, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mNetworkByteActivityCounters:[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    aget-object v1, v1, v0

    invoke-virtual {v1, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    iget-object v1, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mNetworkPacketActivityCounters:[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    aget-object v1, v1, v0

    invoke-virtual {v1, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    add-int/lit8 v0, v0, 0x1

    goto :goto_25

    :cond_44
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readBoolean()Z

    move-result v0

    if-eqz v0, :cond_45

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    move-wide/from16 v4, v19

    invoke-static {v8, v0, v12, v4, v5}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;->-$$Nest$smreadFromParcel(Landroid/os/Parcel;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;IJ)Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;

    move-result-object v0

    iput-object v0, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mMobileRadioActiveTime:Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;

    goto :goto_26

    :cond_45
    move-wide/from16 v4, v19

    :goto_26
    iget-object v0, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mMobileRadioActiveCount:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    goto :goto_27

    :cond_46
    move-wide/from16 v4, v19

    :goto_27
    iget-object v0, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mUserCpuTime:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    iget-object v0, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mSystemCpuTime:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    if-eqz v0, :cond_4e

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    iget-object v1, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    if-eqz v1, :cond_48

    invoke-virtual {v1}, Lcom/android/internal/os/PowerProfile;->getNumCpuClusters()I

    move-result v1

    if-ne v1, v0, :cond_47

    goto :goto_28

    :cond_47
    new-instance v0, Landroid/os/ParcelFormatException;

    const-string v1, "Incompatible cpu cluster arrangement"

    invoke-direct {v0, v1}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_48
    :goto_28
    iget-object v1, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-static {v1}, Lcom/android/server/power/stats/BatteryStatsImpl;->detachIfNotNull([[Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;)V

    new-array v1, v0, [[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    iput-object v1, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    move v1, v11

    :goto_29
    if-ge v1, v0, :cond_4f

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v2

    if-eqz v2, :cond_4c

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v2

    iget-object v3, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    if-eqz v3, :cond_4a

    invoke-virtual {v3, v1}, Lcom/android/internal/os/PowerProfile;->getNumSpeedStepsInCpuCluster(I)I

    move-result v3

    if-ne v3, v2, :cond_49

    goto :goto_2a

    :cond_49
    new-instance v0, Landroid/os/ParcelFormatException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "File corrupt: too many speed bins "

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_4a
    :goto_2a
    iget-object v3, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    new-array v6, v2, [Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    aput-object v6, v3, v1

    move v3, v11

    :goto_2b
    if-ge v3, v2, :cond_4d

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v6

    if-eqz v6, :cond_4b

    iget-object v6, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    aget-object v6, v6, v1

    new-instance v11, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    iget-object v13, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-direct {v11, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    aput-object v11, v6, v3

    iget-object v6, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    aget-object v6, v6, v1

    aget-object v6, v6, v3

    invoke-virtual {v6, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    :cond_4b
    add-int/lit8 v3, v3, 0x1

    const/4 v11, 0x0

    const/16 v13, 0x10

    goto :goto_2b

    :cond_4c
    iget-object v2, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    aput-object v9, v2, v1

    :cond_4d
    add-int/lit8 v1, v1, 0x1

    const/4 v11, 0x0

    const/16 v13, 0x10

    goto :goto_29

    :cond_4e
    iget-object v0, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-static {v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->detachIfNotNull([[Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;)V

    iput-object v9, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    :cond_4f
    iget-object v0, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mCpuFreqTimeMs:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;

    invoke-static {v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->detachIfNotNull(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;)V

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-static {v8, v0}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;->readSummaryFromParcelLocked(Landroid/os/Parcel;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;

    move-result-object v0

    iput-object v0, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mCpuFreqTimeMs:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;

    iget-object v0, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mScreenOffCpuFreqTimeMs:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;

    invoke-static {v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->detachIfNotNull(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;)V

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-static {v8, v0}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;->readSummaryFromParcelLocked(Landroid/os/Parcel;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;

    move-result-object v0

    iput-object v0, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mScreenOffCpuFreqTimeMs:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    if-eqz v0, :cond_50

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    iget-object v1, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v1}, Lcom/android/internal/os/Clock;->elapsedRealtime()J

    move-result-wide v1

    invoke-static {v8, v0, v12, v1, v2}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;->-$$Nest$smreadFromParcel(Landroid/os/Parcel;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;IJ)Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;

    move-result-object v0

    iput-object v0, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mCpuActiveTimeMs:Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;

    :cond_50
    iget-object v0, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mCpuClusterTimesMs:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;

    invoke-static {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;->-$$Nest$mreadSummaryFromParcelLocked(Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;Landroid/os/Parcel;)V

    iget-object v0, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mProcStateTimeMs:Lcom/android/server/power/stats/BatteryStatsImpl$TimeInFreqMultiStateCounter;

    invoke-static {v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->detachIfNotNull(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;)V

    iput-object v9, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mProcStateTimeMs:Lcom/android/server/power/stats/BatteryStatsImpl$TimeInFreqMultiStateCounter;

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    if-eqz v0, :cond_51

    iget-object v0, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mProcStateTimeMs:Lcom/android/server/power/stats/BatteryStatsImpl$TimeInFreqMultiStateCounter;

    invoke-static {v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->detachIfNotNull(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;)V

    iget-object v1, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    const/16 v2, 0x8

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getCpuFreqCount()I

    move-result v3

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v0}, Lcom/android/internal/os/Clock;->elapsedRealtime()J

    move-result-wide v23

    move-object/from16 v0, p1

    move-wide/from16 v25, v4

    move-wide/from16 v4, v23

    invoke-static/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeInFreqMultiStateCounter;->-$$Nest$smreadFromParcel(Landroid/os/Parcel;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;IIJ)Lcom/android/server/power/stats/BatteryStatsImpl$TimeInFreqMultiStateCounter;

    move-result-object v0

    iput-object v0, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mProcStateTimeMs:Lcom/android/server/power/stats/BatteryStatsImpl$TimeInFreqMultiStateCounter;

    goto :goto_2c

    :cond_51
    move-wide/from16 v25, v4

    :goto_2c
    iget-object v0, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mProcStateScreenOffTimeMs:Lcom/android/server/power/stats/BatteryStatsImpl$TimeInFreqMultiStateCounter;

    invoke-static {v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->detachIfNotNull(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;)V

    iput-object v9, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mProcStateScreenOffTimeMs:Lcom/android/server/power/stats/BatteryStatsImpl$TimeInFreqMultiStateCounter;

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    if-eqz v0, :cond_52

    iget-object v0, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mProcStateScreenOffTimeMs:Lcom/android/server/power/stats/BatteryStatsImpl$TimeInFreqMultiStateCounter;

    invoke-static {v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->detachIfNotNull(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;)V

    iget-object v1, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    const/16 v2, 0x8

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getCpuFreqCount()I

    move-result v3

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v0}, Lcom/android/internal/os/Clock;->elapsedRealtime()J

    move-result-wide v4

    move-object/from16 v0, p1

    invoke-static/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeInFreqMultiStateCounter;->-$$Nest$smreadFromParcel(Landroid/os/Parcel;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;IIJ)Lcom/android/server/power/stats/BatteryStatsImpl$TimeInFreqMultiStateCounter;

    move-result-object v0

    iput-object v0, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mProcStateScreenOffTimeMs:Lcom/android/server/power/stats/BatteryStatsImpl$TimeInFreqMultiStateCounter;

    :cond_52
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    if-eqz v0, :cond_53

    invoke-static {v15}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$fgetmMobileRadioApWakeupCount(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;)Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v0

    invoke-static {v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->detachIfNotNull(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;)V

    new-instance v0, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    iget-object v1, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-direct {v0, v1}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    invoke-static {v15, v0}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$fputmMobileRadioApWakeupCount(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;)V

    invoke-static {v15}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$fgetmMobileRadioApWakeupCount(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;)Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v0

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    goto :goto_2d

    :cond_53
    invoke-static {v15}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$fgetmMobileRadioApWakeupCount(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;)Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v0

    invoke-static {v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->detachIfNotNull(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;)V

    invoke-static {v15, v9}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$fputmMobileRadioApWakeupCount(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;)V

    :goto_2d
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    if-eqz v0, :cond_54

    invoke-static {v15}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$fgetmWifiRadioApWakeupCount(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;)Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v0

    invoke-static {v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->detachIfNotNull(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;)V

    new-instance v0, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    iget-object v1, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-direct {v0, v1}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    invoke-static {v15, v0}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$fputmWifiRadioApWakeupCount(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;)V

    invoke-static {v15}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$fgetmWifiRadioApWakeupCount(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;)Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v0

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    goto :goto_2e

    :cond_54
    invoke-static {v15}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$fgetmWifiRadioApWakeupCount(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;)Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v0

    invoke-static {v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->detachIfNotNull(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;)V

    invoke-static {v15, v9}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$fputmWifiRadioApWakeupCount(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;)V

    :goto_2e
    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mEnergyConsumerStatsConfig:Lcom/android/internal/power/EnergyConsumerStats$Config;

    invoke-static {v0, v8}, Lcom/android/internal/power/EnergyConsumerStats;->createAndReadSummaryFromParcel(Lcom/android/internal/power/EnergyConsumerStats$Config;Landroid/os/Parcel;)Lcom/android/internal/power/EnergyConsumerStats;

    move-result-object v0

    invoke-static {v15, v0}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$fputmUidEnergyConsumerStats(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;Lcom/android/internal/power/EnergyConsumerStats;)V

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    sget v1, Lcom/android/server/power/stats/BatteryStatsImpl;->MAX_WAKELOCKS_PER_UID:I

    add-int/2addr v1, v10

    if-gt v0, v1, :cond_67

    const/4 v1, 0x0

    :goto_2f
    if-ge v1, v0, :cond_55

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v15, v2, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->readWakeSummaryFromParcelLocked(Ljava/lang/String;Landroid/os/Parcel;)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_2f

    :cond_55
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    sget v1, Lcom/android/server/power/stats/BatteryStatsImpl;->MAX_WAKELOCKS_PER_UID:I

    add-int/2addr v1, v10

    if-gt v0, v1, :cond_66

    const/4 v1, 0x0

    :goto_30
    if-ge v1, v0, :cond_56

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v15, v2, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->readSyncSummaryFromParcelLocked(Ljava/lang/String;Landroid/os/Parcel;)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_30

    :cond_56
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    sget v1, Lcom/android/server/power/stats/BatteryStatsImpl;->MAX_WAKELOCKS_PER_UID:I

    add-int/2addr v1, v10

    if-gt v0, v1, :cond_65

    const/4 v1, 0x0

    :goto_31
    if-ge v1, v0, :cond_57

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v15, v2, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->readJobSummaryFromParcelLocked(Ljava/lang/String;Landroid/os/Parcel;)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_31

    :cond_57
    invoke-virtual {v15, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->readJobCompletionsFromParcelLocked(Landroid/os/Parcel;)V

    iget-object v0, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mJobsDeferredEventCount:Lcom/android/server/power/stats/BatteryStatsImpl$Counter;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$Counter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    iget-object v0, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mJobsDeferredCount:Lcom/android/server/power/stats/BatteryStatsImpl$Counter;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$Counter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    iget-object v0, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mJobsFreshnessTimeMs:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    iget-object v0, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mJobsFreshnessBuckets:[Lcom/android/server/power/stats/BatteryStatsImpl$Counter;

    invoke-static {v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->detachIfNotNull([Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;)V

    const/4 v0, 0x0

    :goto_32
    sget-object v1, Landroid/os/BatteryStats;->JOB_FRESHNESS_BUCKETS:[J

    array-length v1, v1

    if-ge v0, v1, :cond_59

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    if-eqz v1, :cond_58

    iget-object v1, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mJobsFreshnessBuckets:[Lcom/android/server/power/stats/BatteryStatsImpl$Counter;

    new-instance v2, Lcom/android/server/power/stats/BatteryStatsImpl$Counter;

    iget-object v3, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mBsi:Lcom/android/server/power/stats/BatteryStatsImpl;

    iget-object v3, v3, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-direct {v2, v3}, Lcom/android/server/power/stats/BatteryStatsImpl$Counter;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    aput-object v2, v1, v0

    iget-object v1, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mJobsFreshnessBuckets:[Lcom/android/server/power/stats/BatteryStatsImpl$Counter;

    aget-object v1, v1, v0

    invoke-virtual {v1, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$Counter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    :cond_58
    add-int/lit8 v0, v0, 0x1

    goto :goto_32

    :cond_59
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    const/16 v1, 0x3e8

    if-gt v0, v1, :cond_64

    const/4 v2, 0x0

    :goto_33
    if-ge v2, v0, :cond_5b

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v3

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v4

    if-eqz v4, :cond_5a

    invoke-virtual {v15, v3, v10}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->getSensorTimerLocked(IZ)Lcom/android/server/power/stats/BatteryStatsImpl$DualTimer;

    move-result-object v3

    invoke-virtual {v3, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$DualTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    :cond_5a
    add-int/lit8 v2, v2, 0x1

    goto :goto_33

    :cond_5b
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    if-gt v0, v1, :cond_63

    const/4 v1, 0x0

    :goto_34
    if-ge v1, v0, :cond_5c

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v15, v2}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->getProcessStatsLocked(Ljava/lang/String;)Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Proc;

    move-result-object v2

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v3

    iput-wide v3, v2, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Proc;->mUserTimeMs:J

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v3

    iput-wide v3, v2, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Proc;->mSystemTimeMs:J

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v3

    iput-wide v3, v2, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Proc;->mForegroundTimeMs:J

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v3

    iput v3, v2, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Proc;->mStarts:I

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v3

    iput v3, v2, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Proc;->mNumCrashes:I

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v3

    iput v3, v2, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Proc;->mNumAnrs:I

    invoke-virtual {v2, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Proc;->readExcessivePowerFromParcelLocked(Landroid/os/Parcel;)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_34

    :cond_5c
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    const/16 v1, 0x2710

    if-gt v0, v1, :cond_62

    const/4 v2, 0x0

    :goto_35
    if-ge v2, v0, :cond_61

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v3

    iget-object v4, v15, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mPackageStats:Landroid/util/ArrayMap;

    invoke-virtual {v4, v3}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Pkg;

    invoke-static {v4}, Lcom/android/server/power/stats/BatteryStatsImpl;->detachIfNotNull(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;)V

    invoke-virtual {v15, v3}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->getPackageStatsLocked(Ljava/lang/String;)Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Pkg;

    move-result-object v4

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v5

    if-gt v5, v1, :cond_60

    iget-object v1, v4, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Pkg;->mWakeupAlarms:Landroid/util/ArrayMap;

    invoke-virtual {v1}, Landroid/util/ArrayMap;->clear()V

    const/4 v1, 0x0

    :goto_36
    if-ge v1, v5, :cond_5d

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v6

    new-instance v11, Lcom/android/server/power/stats/BatteryStatsImpl$Counter;

    iget-object v13, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-direct {v11, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Counter;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    invoke-virtual {v11, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$Counter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    iget-object v13, v4, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Pkg;->mWakeupAlarms:Landroid/util/ArrayMap;

    invoke-virtual {v13, v6, v11}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    add-int/lit8 v1, v1, 0x1

    goto :goto_36

    :cond_5d
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    const/16 v4, 0x2710

    if-gt v1, v4, :cond_5f

    const/4 v5, 0x0

    :goto_37
    if-ge v5, v1, :cond_5e

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v15, v3, v6}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->getServiceStatsLocked(Ljava/lang/String;Ljava/lang/String;)Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Pkg$Serv;

    move-result-object v6

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v9

    iput-wide v9, v6, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Pkg$Serv;->mStartTimeMs:J

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v9

    iput v9, v6, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Pkg$Serv;->mStarts:I

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v9

    iput v9, v6, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Pkg$Serv;->mLaunches:I

    add-int/lit8 v5, v5, 0x1

    const/4 v9, 0x0

    const/4 v10, 0x1

    goto :goto_37

    :cond_5e
    add-int/lit8 v2, v2, 0x1

    move v1, v4

    const/4 v9, 0x0

    const/4 v10, 0x1

    goto :goto_35

    :cond_5f
    new-instance v0, Landroid/os/ParcelFormatException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "File corrupt: too many services "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_60
    new-instance v0, Landroid/os/ParcelFormatException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "File corrupt: too many wakeup alarms "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_61
    move v4, v1

    add-int/lit8 v6, v22, 0x1

    move v15, v4

    move/from16 v5, v21

    move-wide/from16 v3, v25

    const/4 v9, 0x0

    const/4 v10, 0x1

    const/4 v11, 0x0

    const/16 v13, 0x10

    goto/16 :goto_1d

    :cond_62
    new-instance v1, Landroid/os/ParcelFormatException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "File corrupt: too many packages "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v1, v0}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v1

    :cond_63
    new-instance v1, Landroid/os/ParcelFormatException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "File corrupt: too many processes "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v1, v0}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v1

    :cond_64
    new-instance v1, Landroid/os/ParcelFormatException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "File corrupt: too many sensors "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v1, v0}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v1

    :cond_65
    new-instance v1, Landroid/os/ParcelFormatException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "File corrupt: too many job timers "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v1, v0}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v1

    :cond_66
    new-instance v1, Landroid/os/ParcelFormatException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "File corrupt: too many syncs "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v1, v0}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v1

    :cond_67
    new-instance v1, Landroid/os/ParcelFormatException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "File corrupt: too many wake locks "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v1, v0}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v1

    :cond_68
    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-static {v8, v0}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;->readSummaryFromParcelLocked(Landroid/os/Parcel;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;

    move-result-object v0

    iput-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mBinderThreadCpuTimesUs:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;

    return-void

    :cond_69
    move/from16 v21, v5

    new-instance v0, Landroid/os/ParcelFormatException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "File corrupt: too many uids "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move/from16 v2, v21

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_6a
    new-instance v1, Landroid/os/ParcelFormatException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "File corrupt: too many wakeup reasons "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v1, v0}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v1

    :cond_6b
    new-instance v1, Landroid/os/ParcelFormatException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "File corrupt: too many kernel wake locks "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v1, v0}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v1

    :cond_6c
    new-instance v1, Landroid/os/ParcelFormatException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "File corrupt: too many screen-off rpm stats "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v1, v0}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v1

    :cond_6d
    new-instance v1, Landroid/os/ParcelFormatException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "File corrupt: too many rpm stats "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v1, v0}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v1
.end method

.method public readWifiNetworkStatsLocked(Landroid/app/usage/NetworkStatsManager;)Landroid/net/NetworkStats;
    .locals 0

    invoke-virtual {p1}, Landroid/app/usage/NetworkStatsManager;->getWifiUidStats()Landroid/net/NetworkStats;

    move-result-object p0

    return-object p0
.end method

.method public final recordCpuUsage(ILcom/android/internal/os/LongArrayMultiStateCounter$LongArrayContainer;JJ)V
    .locals 6

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuUsageDetails:Landroid/os/BatteryStats$CpuUsageDetails;

    iget-object v0, v0, Landroid/os/BatteryStats$CpuUsageDetails;->cpuUsageMs:[J

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuPowerBracketMap:[I

    invoke-virtual {p2, v0, v1}, Lcom/android/internal/os/LongArrayMultiStateCounter$LongArrayContainer;->combineValues([J[I)Z

    move-result p2

    if-nez p2, :cond_0

    return-void

    :cond_0
    iget-object v5, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuUsageDetails:Landroid/os/BatteryStats$CpuUsageDetails;

    iput p1, v5, Landroid/os/BatteryStats$CpuUsageDetails;->uid:I

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    move-wide v1, p3

    move-wide v3, p5

    invoke-virtual/range {v0 .. v5}, Lcom/android/internal/os/BatteryStatsHistory;->recordCpuUsage(JJLandroid/os/BatteryStats$CpuUsageDetails;)V

    return-void
.end method

.method public recordDailyStatsIfNeededLocked(ZJ)V
    .locals 4

    iget-wide v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNextMaxDailyDeadlineMs:J

    cmp-long v0, p2, v0

    if-ltz v0, :cond_0

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->recordDailyStatsLocked()V

    goto :goto_0

    :cond_0
    if-eqz p1, :cond_1

    iget-wide v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNextMinDailyDeadlineMs:J

    cmp-long p1, p2, v0

    if-ltz p1, :cond_1

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->recordDailyStatsLocked()V

    goto :goto_0

    :cond_1
    iget-wide v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDailyStartTimeMs:J

    const-wide/32 v2, 0x5265c00

    sub-long/2addr v0, v2

    cmp-long p1, p2, v0

    if-gez p1, :cond_2

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->recordDailyStatsLocked()V

    :cond_2
    :goto_0
    return-void
.end method

.method public recordDailyStatsLocked()V
    .locals 6

    new-instance v0, Landroid/os/BatteryStats$DailyItem;

    invoke-direct {v0}, Landroid/os/BatteryStats$DailyItem;-><init>()V

    iget-wide v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDailyStartTimeMs:J

    iput-wide v1, v0, Landroid/os/BatteryStats$DailyItem;->mStartTime:J

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v1}, Lcom/android/internal/os/Clock;->currentTimeMillis()J

    move-result-wide v1

    iput-wide v1, v0, Landroid/os/BatteryStats$DailyItem;->mEndTime:J

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    iget v1, v1, Landroid/os/BatteryStats$LevelStepTracker;->mNumStepDurations:I

    const/4 v2, 0x1

    const/4 v3, 0x0

    if-lez v1, :cond_0

    new-instance v1, Landroid/os/BatteryStats$LevelStepTracker;

    iget-object v4, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    iget v5, v4, Landroid/os/BatteryStats$LevelStepTracker;->mNumStepDurations:I

    iget-object v4, v4, Landroid/os/BatteryStats$LevelStepTracker;->mStepDurations:[J

    invoke-direct {v1, v5, v4}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I[J)V

    iput-object v1, v0, Landroid/os/BatteryStats$DailyItem;->mDischargeSteps:Landroid/os/BatteryStats$LevelStepTracker;

    move v1, v2

    goto :goto_0

    :cond_0
    move v1, v3

    :goto_0
    iget-object v4, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    iget v4, v4, Landroid/os/BatteryStats$LevelStepTracker;->mNumStepDurations:I

    if-lez v4, :cond_1

    new-instance v1, Landroid/os/BatteryStats$LevelStepTracker;

    iget-object v4, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    iget v5, v4, Landroid/os/BatteryStats$LevelStepTracker;->mNumStepDurations:I

    iget-object v4, v4, Landroid/os/BatteryStats$LevelStepTracker;->mStepDurations:[J

    invoke-direct {v1, v5, v4}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I[J)V

    iput-object v1, v0, Landroid/os/BatteryStats$DailyItem;->mChargeSteps:Landroid/os/BatteryStats$LevelStepTracker;

    move v1, v2

    :cond_1
    iget-object v4, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    if-eqz v4, :cond_2

    iput-object v4, v0, Landroid/os/BatteryStats$DailyItem;->mPackageChanges:Ljava/util/ArrayList;

    const/4 v1, 0x0

    iput-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    goto :goto_1

    :cond_2
    move v2, v1

    :goto_1
    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v1}, Landroid/os/BatteryStats$LevelStepTracker;->init()V

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v1}, Landroid/os/BatteryStats$LevelStepTracker;->init()V

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->updateDailyDeadlineLocked()V

    if-eqz v2, :cond_4

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v1

    iget-object v4, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    :goto_2
    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    const/16 v4, 0xa

    if-le v0, v4, :cond_3

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    invoke-virtual {v0, v3}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    goto :goto_2

    :cond_3
    new-instance v0, Ljava/io/ByteArrayOutputStream;

    invoke-direct {v0}, Ljava/io/ByteArrayOutputStream;-><init>()V

    :try_start_0
    invoke-static {v0}, Landroid/util/Xml;->resolveSerializer(Ljava/io/OutputStream;)Lcom/android/modules/utils/TypedXmlSerializer;

    move-result-object v3

    invoke-virtual {p0, v3}, Lcom/android/server/power/stats/BatteryStatsImpl;->writeDailyItemsLocked(Lcom/android/modules/utils/TypedXmlSerializer;)V

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v3

    sub-long/2addr v3, v1

    invoke-static {}, Lcom/android/internal/os/BackgroundThread;->getHandler()Landroid/os/Handler;

    move-result-object v1

    new-instance v2, Lcom/android/server/power/stats/BatteryStatsImpl$5;

    invoke-direct {v2, p0, v0, v3, v4}, Lcom/android/server/power/stats/BatteryStatsImpl$5;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl;Ljava/io/ByteArrayOutputStream;J)V

    invoke-virtual {v1, v2}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    :catch_0
    :cond_4
    return-void
.end method

.method public recordEnergyConsumerDetailsLocked(JJLandroid/os/BatteryStats$EnergyConsumerDetails;)V
    .locals 7

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->isUsageHistoryEnabled()Z

    move-result v0

    if-eqz v0, :cond_0

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    move-wide v2, p1

    move-wide v4, p3

    move-object v6, p5

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsHistory;->recordEnergyConsumerDetails(JJLandroid/os/BatteryStats$EnergyConsumerDetails;)V

    :cond_0
    return-void
.end method

.method public recordHistoryEventLocked(JJILjava/lang/String;I)V
    .locals 8

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    move-wide v1, p1

    move-wide v3, p3

    move v5, p5

    move-object v6, p6

    move v7, p7

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsHistory;->recordEvent(JJILjava/lang/String;I)V

    return-void
.end method

.method public registerBatteryStatsCallbackLocked(Lcom/android/internal/app/IBatteryStatsCallback;)Z
    .locals 1

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryStatsCallbacks:Landroid/os/RemoteCallbackList;

    const/4 v0, 0x0

    invoke-virtual {p0, p1, v0}, Landroid/os/RemoteCallbackList;->register(Landroid/os/IInterface;Ljava/lang/Object;)Z

    move-result p0

    return p0
.end method

.method public final registerUsbStateReceiver(Landroid/content/Context;)V
    .locals 6

    new-instance v0, Landroid/content/IntentFilter;

    invoke-direct {v0}, Landroid/content/IntentFilter;-><init>()V

    const-string v1, "android.hardware.usb.action.USB_STATE"

    invoke-virtual {v0, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    new-instance v1, Lcom/android/server/power/stats/BatteryStatsImpl$3;

    invoke-direct {v1, p0}, Lcom/android/server/power/stats/BatteryStatsImpl$3;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl;)V

    invoke-virtual {p1, v1, v0}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    monitor-enter p0

    :try_start_0
    iget v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUsbDataState:I

    if-nez v1, :cond_1

    const/4 v1, 0x0

    invoke-virtual {p1, v1, v0}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    move-result-object p1

    const/4 v0, 0x0

    if-eqz p1, :cond_0

    const-string v1, "connected"

    invoke-virtual {p1, v1, v0}, Landroid/content/Intent;->getBooleanExtra(Ljava/lang/String;Z)Z

    move-result p1

    if-eqz p1, :cond_0

    const/4 v0, 0x1

    :cond_0
    move v1, v0

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {p1}, Lcom/android/internal/os/Clock;->elapsedRealtime()J

    move-result-wide v2

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {p1}, Lcom/android/internal/os/Clock;->uptimeMillis()J

    move-result-wide v4

    move-object v0, p0

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteUsbConnectionStateLocked(ZJJ)V

    :cond_1
    monitor-exit p0

    return-void

    :catchall_0
    move-exception p1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw p1
.end method

.method public final registerWifiApStateReceiver(Landroid/content/Context;)V
    .locals 6

    new-instance v0, Landroid/content/IntentFilter;

    invoke-direct {v0}, Landroid/content/IntentFilter;-><init>()V

    const-string v1, "android.net.wifi.WIFI_AP_STATE_CHANGED"

    invoke-virtual {v0, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    new-instance v1, Lcom/android/server/power/stats/BatteryStatsImpl$4;

    invoke-direct {v1, p0}, Lcom/android/server/power/stats/BatteryStatsImpl$4;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl;)V

    invoke-virtual {p1, v1, v0}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    monitor-enter p0

    :try_start_0
    iget v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUsbDataState:I

    const/16 v2, 0xe

    if-ne v1, v2, :cond_1

    const/4 v1, 0x0

    invoke-virtual {p1, v1, v0}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    move-result-object p1

    if-eqz p1, :cond_0

    const-string/jumbo v0, "wifi_state"

    invoke-virtual {p1, v0, v2}, Landroid/content/Intent;->getIntExtra(Ljava/lang/String;I)I

    move-result v2

    :cond_0
    move v1, v2

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {p1}, Lcom/android/internal/os/Clock;->elapsedRealtime()J

    move-result-wide v2

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {p1}, Lcom/android/internal/os/Clock;->uptimeMillis()J

    move-result-wide v4

    move-object v0, p0

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteHotspotStateLocked(IJJ)V

    :cond_1
    monitor-exit p0

    return-void

    :catchall_0
    move-exception p1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw p1
.end method

.method public final removeCpuStatsForUidRangeLocked(II)V
    .locals 1

    if-ne p1, p2, :cond_2

    iget-object p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuUidUserSysTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;

    invoke-virtual {p2, p1}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;->removeUid(I)V

    iget-object p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuUidFreqTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

    invoke-virtual {p2, p1}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;->removeUid(I)V

    iget-object p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mConstants:Lcom/android/server/power/stats/BatteryStatsImpl$Constants;

    iget-boolean p2, p2, Lcom/android/server/power/stats/BatteryStatsImpl$Constants;->TRACK_CPU_ACTIVE_CLUSTER_TIME:Z

    if-eqz p2, :cond_0

    iget-object p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuUidActiveTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;

    invoke-virtual {p2, p1}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;->removeUid(I)V

    iget-object p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuUidClusterTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;

    invoke-virtual {p2, p1}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;->removeUid(I)V

    :cond_0
    iget-object p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelSingleUidTimeReader:Lcom/android/internal/os/KernelSingleUidTimeReader;

    if-eqz p2, :cond_1

    invoke-virtual {p2, p1}, Lcom/android/internal/os/KernelSingleUidTimeReader;->removeUid(I)V

    :cond_1
    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNumUidsRemoved:I

    add-int/lit8 p1, p1, 0x1

    iput p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNumUidsRemoved:I

    goto :goto_0

    :cond_2
    if-ge p1, p2, :cond_5

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuUidFreqTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

    invoke-virtual {v0, p1, p2}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;->removeUidsInRange(II)V

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuUidUserSysTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;

    invoke-virtual {v0, p1, p2}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;->removeUidsInRange(II)V

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mConstants:Lcom/android/server/power/stats/BatteryStatsImpl$Constants;

    iget-boolean v0, v0, Lcom/android/server/power/stats/BatteryStatsImpl$Constants;->TRACK_CPU_ACTIVE_CLUSTER_TIME:Z

    if-eqz v0, :cond_3

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuUidActiveTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;

    invoke-virtual {v0, p1, p2}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;->removeUidsInRange(II)V

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuUidClusterTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;

    invoke-virtual {v0, p1, p2}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;->removeUidsInRange(II)V

    :cond_3
    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelSingleUidTimeReader:Lcom/android/internal/os/KernelSingleUidTimeReader;

    if-eqz v0, :cond_4

    invoke-virtual {v0, p1, p2}, Lcom/android/internal/os/KernelSingleUidTimeReader;->removeUidsInRange(II)V

    :cond_4
    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNumUidsRemoved:I

    add-int/lit8 p1, p1, 0x1

    iput p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNumUidsRemoved:I

    goto :goto_0

    :cond_5
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "End UID "

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p2, " is smaller than start UID "

    invoke-virtual {p0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    const-string p1, "BatteryStatsImpl"

    invoke-static {p1, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    :goto_0
    return-void
.end method

.method public removeUidStatsLocked(IJ)V
    .locals 2

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    if-eqz v0, :cond_0

    invoke-virtual {v0}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->detachFromTimeBase()V

    :cond_0
    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->remove(I)V

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPendingRemovedUids:Ljava/util/Queue;

    new-instance v1, Lcom/android/server/power/stats/BatteryStatsImpl$UidToRemove;

    invoke-direct {v1, p0, p1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$UidToRemove;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl;IJ)V

    invoke-interface {v0, v1}, Ljava/util/Queue;->add(Ljava/lang/Object;)Z

    return-void
.end method

.method public final reportChangesToStatsLog(III)V
    .locals 1

    iget-boolean v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHaveBatteryLevel:Z

    if-eqz v0, :cond_0

    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryStatus:I

    if-eq v0, p1, :cond_1

    :cond_0
    const/16 v0, 0x1f

    invoke-static {v0, p1}, Lcom/android/internal/util/FrameworkStatsLog;->write(II)V

    :cond_1
    iget-boolean p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHaveBatteryLevel:Z

    if-eqz p1, :cond_2

    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryPlugType:I

    if-eq p1, p2, :cond_3

    :cond_2
    const/16 p1, 0x20

    invoke-static {p1, p2}, Lcom/android/internal/util/FrameworkStatsLog;->write(II)V

    :cond_3
    iget-boolean p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHaveBatteryLevel:Z

    if-eqz p1, :cond_4

    iget p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryLevel:I

    if-eq p0, p3, :cond_5

    :cond_4
    const/16 p0, 0x1e

    invoke-static {p0, p3}, Lcom/android/internal/util/FrameworkStatsLog;->write(II)V

    :cond_5
    return-void
.end method

.method public reportExcessiveCpuLocked(ILjava/lang/String;JJ)V
    .locals 6

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {p0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object p0

    move-object v0, p0

    check-cast v0, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    if-eqz v0, :cond_0

    move-object v1, p2

    move-wide v2, p3

    move-wide v4, p5

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->reportExcessiveCpuLocked(Ljava/lang/String;JJ)V

    :cond_0
    return-void
.end method

.method public final requestImmediateCpuUpdate()V
    .locals 2

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mExternalSync:Lcom/android/server/power/stats/BatteryStatsImpl$ExternalStatsSync;

    const-wide/16 v0, 0x0

    invoke-interface {p0, v0, v1}, Lcom/android/server/power/stats/BatteryStatsImpl$ExternalStatsSync;->scheduleCpuSyncDueToWakelockChange(J)Ljava/util/concurrent/Future;

    return-void
.end method

.method public final requestWakelockCpuUpdate()V
    .locals 2

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mExternalSync:Lcom/android/server/power/stats/BatteryStatsImpl$ExternalStatsSync;

    const-wide/32 v0, 0xea60

    invoke-interface {p0, v0, v1}, Lcom/android/server/power/stats/BatteryStatsImpl$ExternalStatsSync;->scheduleCpuSyncDueToWakelockChange(J)Ljava/util/concurrent/Future;

    return-void
.end method

.method public resetAllStatsAndHistoryLocked(I)V
    .locals 15

    move-object v6, p0

    iget-object v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v0}, Lcom/android/internal/os/Clock;->uptimeMillis()J

    move-result-wide v7

    const-wide/16 v0, 0x3e8

    mul-long v9, v7, v0

    iget-object v2, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v2}, Lcom/android/internal/os/Clock;->elapsedRealtime()J

    move-result-wide v11

    mul-long v13, v11, v0

    move-object v0, p0

    move-wide v1, v7

    move-wide v3, v11

    move/from16 v5, p1

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->resetAllStatsLocked(JJI)V

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->pullPendingStateUpdatesLocked()V

    iget-object v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    invoke-virtual {v0, v11, v12, v7, v8}, Lcom/android/internal/os/BatteryStatsHistory;->writeHistoryItem(JJ)V

    iget v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryLevel:I

    iput v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargePlugLevel:I

    iput v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeUnplugLevel:I

    iput v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeCurrentLevel:I

    iget-object v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-virtual {v0, v9, v10, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;->reset(JJ)V

    iget-object v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-virtual {v0, v9, v10, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;->reset(JJ)V

    iget-boolean v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryPluggedIn:Z

    if-nez v0, :cond_3

    iget v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenState:I

    invoke-static {v0}, Landroid/view/Display;->isOnState(I)Z

    move-result v0

    const/4 v1, 0x0

    if-eqz v0, :cond_0

    iget v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryLevel:I

    iput v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    iput v1, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    iput v1, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getBatteryPermil()I

    move-result v0

    iput v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOnUnplugLevelPermil:I

    iput v1, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOffUnplugLevelPermil:I

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getBatteryCCInfo()I

    move-result v0

    iput v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOnUnplugLevelCoulombCounter:I

    iput v1, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOffUnplugLevelCoulombCounter:I

    goto :goto_0

    :cond_0
    iget v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenState:I

    invoke-static {v0}, Landroid/view/Display;->isDozeState(I)Z

    move-result v0

    if-eqz v0, :cond_1

    iput v1, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    iget v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryLevel:I

    iput v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    iput v1, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    iput v1, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOnUnplugLevelPermil:I

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getBatteryPermil()I

    move-result v0

    iput v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOffUnplugLevelPermil:I

    iput v1, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOnUnplugLevelCoulombCounter:I

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getBatteryCCInfo()I

    move-result v0

    iput v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOffUnplugLevelCoulombCounter:I

    goto :goto_0

    :cond_1
    iput v1, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    iput v1, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    iget v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryLevel:I

    iput v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    iput v1, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOnUnplugLevelPermil:I

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getBatteryPermil()I

    move-result v0

    iput v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOffUnplugLevelPermil:I

    iput v1, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOnUnplugLevelCoulombCounter:I

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getBatteryCCInfo()I

    move-result v0

    iput v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOffUnplugLevelCoulombCounter:I

    :goto_0
    iget-boolean v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsSubScreen:Z

    if-eqz v0, :cond_2

    iget v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenState:I

    invoke-static {v0}, Landroid/view/Display;->isOnState(I)Z

    move-result v0

    if-eqz v0, :cond_2

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getBatteryPermil()I

    move-result v0

    iput v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeSubScreenOnUnplugLevelPermil:I

    iput v1, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeSubScreenOffUnplugLevelPermil:I

    goto :goto_1

    :cond_2
    iput v1, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeSubScreenOnUnplugLevelPermil:I

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getBatteryPermil()I

    move-result v0

    iput v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeSubScreenOffUnplugLevelPermil:I

    :goto_1
    iput v1, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenOn:I

    iput v1, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenOff:I

    iput v1, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenDoze:I

    :cond_3
    invoke-virtual {p0, v11, v12, v7, v8}, Lcom/android/server/power/stats/BatteryStatsImpl;->initActiveHistoryEventsLocked(JJ)V

    return-void
.end method

.method public final resetAllStatsLocked(JJI)V
    .locals 16

    move-object/from16 v0, p0

    move-wide/from16 v1, p3

    iget-object v3, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryResetListener:Lcom/android/server/power/stats/BatteryStatsImpl$BatteryResetListener;

    move/from16 v10, p5

    if-eqz v3, :cond_0

    invoke-interface {v3, v10}, Lcom/android/server/power/stats/BatteryStatsImpl$BatteryResetListener;->prepareForBatteryStatsReset(I)V

    :cond_0
    const-wide/16 v3, 0x3e8

    mul-long v11, p1, v3

    mul-long v13, v1, v3

    const/4 v3, 0x0

    iput v3, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mStartCount:I

    invoke-virtual {v0, v11, v12, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl;->initTimes(JJ)V

    iget-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v3, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->reset(ZJ)Z

    iget-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenDozeTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v3, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->reset(ZJ)Z

    move v4, v3

    :goto_0
    const/4 v5, 0x5

    if-ge v4, v5, :cond_1

    iget-object v5, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v5, v5, v4

    invoke-virtual {v5, v3, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->reset(ZJ)Z

    add-int/lit8 v4, v4, 0x1

    goto :goto_0

    :cond_1
    iget-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPerDisplayBatteryStats:[Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;

    array-length v4, v4

    move v6, v3

    :goto_1
    if-ge v6, v4, :cond_2

    iget-object v7, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPerDisplayBatteryStats:[Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;

    aget-object v7, v7, v6

    invoke-virtual {v7, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;->reset(J)V

    add-int/lit8 v6, v6, 0x1

    goto :goto_1

    :cond_2
    iget-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v3, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->reset(ZJ)Z

    iget-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenDozeTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v3, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->reset(ZJ)Z

    move v4, v3

    :goto_2
    if-ge v4, v5, :cond_3

    iget-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v6, v6, v4

    invoke-virtual {v6, v3, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->reset(ZJ)Z

    add-int/lit8 v4, v4, 0x1

    goto :goto_2

    :cond_3
    move v4, v3

    :goto_3
    if-ge v4, v5, :cond_4

    iget-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenAutoBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v6, v6, v4

    invoke-virtual {v6, v3}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->reset(Z)Z

    add-int/lit8 v4, v4, 0x1

    goto :goto_3

    :cond_4
    move v4, v3

    :goto_4
    if-ge v4, v5, :cond_5

    iget-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenAutoBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v6, v6, v4

    invoke-virtual {v6, v3}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->reset(Z)Z

    add-int/lit8 v4, v4, 0x1

    goto :goto_4

    :cond_5
    iget-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenHighBrightnessTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v3}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->reset(Z)Z

    iget-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenHighBrightnessTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v3}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->reset(Z)Z

    move v4, v3

    :goto_5
    const/4 v15, 0x4

    if-ge v4, v15, :cond_6

    iget-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHighRefreshRateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v6, v6, v4

    invoke-virtual {v6, v3}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->reset(Z)Z

    add-int/lit8 v4, v4, 0x1

    goto :goto_5

    :cond_6
    move v4, v3

    :goto_6
    if-ge v4, v15, :cond_7

    iget-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubHighRefreshRateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v6, v6, v4

    invoke-virtual {v6, v3, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->reset(ZJ)Z

    add-int/lit8 v4, v4, 0x1

    goto :goto_6

    :cond_7
    iget-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDisplayPowerDrainCounter:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v4, v3, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->reset(ZJ)Z

    move v4, v3

    :goto_7
    const/16 v6, 0x10

    if-ge v4, v6, :cond_8

    iget-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSpeakerMediaTimeCounters:[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    aget-object v6, v6, v4

    invoke-virtual {v6, v3, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->reset(ZJ)Z

    iget-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSpeakerCallTimeCounters:[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    aget-object v6, v6, v4

    invoke-virtual {v6, v3, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->reset(ZJ)Z

    add-int/lit8 v4, v4, 0x1

    goto :goto_7

    :cond_8
    iget-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mTxPowerSharingTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v3, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->reset(ZJ)Z

    const-wide/16 v6, 0x0

    iput-wide v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mTxPowerSharingDischargeMah:J

    iget-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileActiveTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v3}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->reset(Z)Z

    iget-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileActive5GTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v3}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->reset(Z)Z

    iget-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenOnGpsTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v3}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->reset(Z)Z

    iget-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    const/4 v8, -0x1

    if-eqz v4, :cond_9

    invoke-virtual {v4}, Lcom/android/internal/os/PowerProfile;->getBatteryCapacity()D

    move-result-wide v5

    double-to-int v4, v5

    iput v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mEstimatedBatteryCapacityMah:I

    goto :goto_8

    :cond_9
    iput v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mEstimatedBatteryCapacityMah:I

    :goto_8
    iput v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastLearnedBatteryCapacityUah:I

    iput v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mMinLearnedBatteryCapacityUah:I

    iput v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mMaxLearnedBatteryCapacityUah:I

    iget-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mInteractiveTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v3, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->reset(ZJ)Z

    iget-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerSaveModeEnabledTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v3, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->reset(ZJ)Z

    iput-wide v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastIdleTimeStartMs:J

    const-wide/16 v1, 0x0

    iput-wide v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLongestLightIdleTimeMs:J

    iput-wide v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLongestFullIdleTimeMs:J

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeviceIdleModeLightTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v3, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->reset(ZJ)Z

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeviceIdleModeFullTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v3, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->reset(ZJ)Z

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeviceLightIdlingTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v3, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->reset(ZJ)Z

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeviceIdlingTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v3, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->reset(ZJ)Z

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v3, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->reset(ZJ)Z

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mAudioOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v3, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->reset(ZJ)Z

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mVideoOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v3, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->reset(ZJ)Z

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v3, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->reset(ZJ)Z

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCameraOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v3, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->reset(ZJ)Z

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBluetoothScanTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v3, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->reset(ZJ)Z

    move v1, v3

    :goto_9
    invoke-static {}, Landroid/telephony/CellSignalStrength;->getNumSignalStrengthLevels()I

    move-result v2

    if-ge v1, v2, :cond_a

    iget-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    invoke-virtual {v2, v3, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->reset(ZJ)Z

    add-int/lit8 v1, v1, 0x1

    goto :goto_9

    :cond_a
    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v3, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->reset(ZJ)Z

    move v1, v3

    :goto_a
    sget v2, Landroid/os/BatteryStats;->NUM_DATA_CONNECTION_TYPES:I

    if-ge v1, v2, :cond_b

    iget-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    invoke-virtual {v2, v3, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->reset(ZJ)Z

    add-int/lit8 v1, v1, 0x1

    goto :goto_a

    :cond_b
    move v1, v3

    :goto_b
    const/16 v2, 0xa

    if-ge v1, v2, :cond_c

    iget-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    aget-object v2, v2, v1

    invoke-virtual {v2, v3, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->reset(ZJ)Z

    iget-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    aget-object v2, v2, v1

    invoke-virtual {v2, v3, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->reset(ZJ)Z

    add-int/lit8 v1, v1, 0x1

    goto :goto_b

    :cond_c
    move v1, v3

    :goto_c
    const/4 v2, 0x3

    if-ge v1, v2, :cond_e

    iget-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPerRatBatteryStats:[Lcom/android/server/power/stats/BatteryStatsImpl$RadioAccessTechnologyBatteryStats;

    aget-object v2, v2, v1

    if-nez v2, :cond_d

    goto :goto_d

    :cond_d
    invoke-virtual {v2, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$RadioAccessTechnologyBatteryStats;->reset(J)V

    :goto_d
    add-int/lit8 v1, v1, 0x1

    goto :goto_c

    :cond_e
    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v3, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->reset(ZJ)Z

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioActivePerAppTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v3, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->reset(ZJ)Z

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioActiveAdjustedTime:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v3, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->reset(ZJ)Z

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioActiveUnknownTime:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v3, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->reset(ZJ)Z

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioActiveUnknownCount:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v3, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->reset(ZJ)Z

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v3, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->reset(ZJ)Z

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mGlobalWifiRunningTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v3, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->reset(ZJ)Z

    move v1, v3

    :goto_e
    const/16 v2, 0x8

    if-ge v1, v2, :cond_f

    iget-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    invoke-virtual {v2, v3, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->reset(ZJ)Z

    add-int/lit8 v1, v1, 0x1

    goto :goto_e

    :cond_f
    move v1, v3

    :goto_f
    const/16 v2, 0xd

    if-ge v1, v2, :cond_10

    iget-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    invoke-virtual {v2, v3, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->reset(ZJ)Z

    add-int/lit8 v1, v1, 0x1

    goto :goto_f

    :cond_10
    move v1, v3

    const/4 v2, 0x5

    :goto_10
    if-ge v1, v2, :cond_11

    iget-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v4, v4, v1

    invoke-virtual {v4, v3, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->reset(ZJ)Z

    add-int/lit8 v1, v1, 0x1

    goto :goto_10

    :cond_11
    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiMulticastWakelockTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v3, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->reset(ZJ)Z

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiActiveTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v3, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->reset(ZJ)Z

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiActivity:Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v1, v3, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;->reset(ZJ)V

    move v1, v3

    :goto_11
    iget-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    array-length v4, v2

    if-ge v1, v4, :cond_12

    aget-object v2, v2, v1

    invoke-virtual {v2, v3, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->reset(ZJ)Z

    add-int/lit8 v1, v1, 0x1

    goto :goto_11

    :cond_12
    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBluetoothActivity:Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v1, v3, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;->reset(ZJ)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mModemActivity:Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v1, v3, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;->reset(ZJ)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNetworkModemActivity:Lcom/android/server/power/stats/BatteryStatsImpl$ModemActivityCounterImpl;

    invoke-virtual {v1, v3}, Lcom/android/server/power/stats/BatteryStatsImpl$ModemActivityCounterImpl;->reset(Z)V

    iput v3, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNumConnectivityChange:I

    move v1, v3

    :goto_12
    iget-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v2}, Landroid/util/SparseArray;->size()I

    move-result v2

    const/4 v9, 0x1

    if-ge v1, v2, :cond_14

    iget-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v2, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    move-object v4, v2

    check-cast v4, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-wide v5, v11

    move-wide v7, v13

    move v2, v9

    move/from16 v9, p5

    invoke-virtual/range {v4 .. v9}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->reset(JJI)Z

    move-result v4

    if-eqz v4, :cond_13

    iget-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v4, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    invoke-virtual {v4}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->detachFromTimeBase()V

    iget-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v4, v1}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v5

    invoke-virtual {v4, v5}, Landroid/util/SparseArray;->remove(I)V

    add-int/lit8 v1, v1, -0x1

    :cond_13
    add-int/2addr v1, v2

    goto :goto_12

    :cond_14
    move v2, v9

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->size()I

    move-result v1

    if-lez v1, :cond_16

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_13
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_15

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/power/stats/BatteryStatsImpl$SamplingTimer;

    iget-object v5, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-virtual {v5, v4}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;->remove(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;)V

    goto :goto_13

    :cond_15
    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->clear()V

    :cond_16
    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->size()I

    move-result v1

    if-lez v1, :cond_18

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_14
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_17

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/power/stats/BatteryStatsImpl$SamplingTimer;

    iget-object v5, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-virtual {v5, v4}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;->remove(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;)V

    goto :goto_14

    :cond_17
    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->clear()V

    :cond_18
    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->size()I

    move-result v1

    if-lez v1, :cond_1a

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_15
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_19

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/power/stats/BatteryStatsImpl$SamplingTimer;

    iget-object v5, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-virtual {v5, v4}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;->remove(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;)V

    goto :goto_15

    :cond_19
    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->clear()V

    :cond_1a
    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v1}, Landroid/util/LongSparseArray;->size()I

    move-result v1

    if-lez v1, :cond_1c

    move v1, v3

    :goto_16
    iget-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v4}, Landroid/util/LongSparseArray;->size()I

    move-result v4

    if-ge v1, v4, :cond_1b

    iget-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    iget-object v5, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v5, v1}, Landroid/util/LongSparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;

    invoke-virtual {v4, v5}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;->remove(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_16

    :cond_1b
    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v1}, Landroid/util/LongSparseArray;->clear()V

    :cond_1c
    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->size()I

    move-result v1

    if-lez v1, :cond_1e

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_17
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_1d

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/power/stats/BatteryStatsImpl$SamplingTimer;

    iget-object v5, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-virtual {v5, v4}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;->remove(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;)V

    goto :goto_17

    :cond_1d
    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->clear()V

    :cond_1e
    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mTmpRailStats:Lcom/android/internal/os/RailStats;

    invoke-virtual {v1}, Lcom/android/internal/os/RailStats;->reset()V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mGlobalEnergyConsumerStats:Lcom/android/internal/power/EnergyConsumerStats;

    invoke-static {v1}, Lcom/android/internal/power/EnergyConsumerStats;->resetIfNotNull(Lcom/android/internal/power/EnergyConsumerStats;)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBinderThreadCpuTimesUs:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;

    invoke-static {v1, v3, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl;->resetIfNotNull(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBaseObs;ZJ)Z

    iput v3, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNumAllUidCpuTimeReads:I

    iput v3, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNumUidsRemoved:I

    invoke-virtual {v0, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl;->initDischarge(J)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    invoke-virtual {v1}, Lcom/android/internal/os/BatteryStatsHistory;->reset()V

    iget v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mProtectBatteryMode:I

    sget v4, Landroid/os/BatteryStats;->NUM_PROTECT_BATTERY_MODE_TYPES:I

    if-ge v1, v4, :cond_1f

    invoke-static {v1, v3}, Ljava/lang/Math;->max(II)I

    move-result v1

    iget-object v3, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    invoke-virtual {v3, v1}, Lcom/android/internal/os/BatteryStatsHistory;->setProtectBatteryState(I)V

    :cond_1f
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->writeSyncLocked()V

    iput-boolean v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIgnoreNextExternalStats:Z

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mExternalSync:Lcom/android/server/power/stats/BatteryStatsImpl$ExternalStatsSync;

    const-string/jumbo v2, "reset"

    const/16 v3, 0xff

    invoke-interface {v1, v2, v3}, Lcom/android/server/power/stats/BatteryStatsImpl$ExternalStatsSync;->scheduleSync(Ljava/lang/String;I)Ljava/util/concurrent/Future;

    iget-object v0, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHandler:Landroid/os/Handler;

    invoke-virtual {v0, v15}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    return-void
.end method

.method public final scheduleNextResetWhilePluggedInCheck()V
    .locals 6

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mAlarmManager:Landroid/app/AlarmManager;

    if-nez v0, :cond_0

    return-void

    :cond_0
    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v0}, Lcom/android/internal/os/Clock;->currentTimeMillis()J

    move-result-wide v0

    iget-object v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mConstants:Lcom/android/server/power/stats/BatteryStatsImpl$Constants;

    iget v2, v2, Lcom/android/server/power/stats/BatteryStatsImpl$Constants;->RESET_WHILE_PLUGGED_IN_MINIMUM_DURATION_HOURS:I

    int-to-long v2, v2

    const-wide/32 v4, 0x36ee80

    mul-long/2addr v2, v4

    add-long/2addr v0, v2

    invoke-static {}, Ljava/util/Calendar;->getInstance()Ljava/util/Calendar;

    move-result-object v2

    invoke-virtual {v2, v0, v1}, Ljava/util/Calendar;->setTimeInMillis(J)V

    const/16 v3, 0xe

    const/4 v4, 0x0

    invoke-virtual {v2, v3, v4}, Ljava/util/Calendar;->set(II)V

    const/16 v3, 0xd

    invoke-virtual {v2, v3, v4}, Ljava/util/Calendar;->set(II)V

    const/16 v3, 0xc

    invoke-virtual {v2, v3, v4}, Ljava/util/Calendar;->set(II)V

    const/16 v3, 0xb

    const/4 v4, 0x2

    invoke-virtual {v2, v3, v4}, Ljava/util/Calendar;->set(II)V

    invoke-virtual {v2}, Ljava/util/Calendar;->getTimeInMillis()J

    move-result-wide v2

    cmp-long v0, v2, v0

    if-gez v0, :cond_1

    const-wide/32 v0, 0x5265c00

    add-long/2addr v2, v0

    :cond_1
    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mAlarmManager:Landroid/app/AlarmManager;

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHandler:Landroid/os/Handler;

    new-instance v4, Lcom/android/server/power/stats/BatteryStatsImpl$$ExternalSyntheticLambda0;

    invoke-direct {v4, p0, v0, v2, v3}, Lcom/android/server/power/stats/BatteryStatsImpl$$ExternalSyntheticLambda0;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl;Landroid/app/AlarmManager;J)V

    invoke-virtual {v1, v4}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    return-void
.end method

.method public scheduleRemoveIsolatedUidLocked(II)V
    .locals 2

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsolatedUids:Landroid/util/SparseIntArray;

    const/4 v1, -0x1

    invoke-virtual {v0, p1, v1}, Landroid/util/SparseIntArray;->get(II)I

    move-result v0

    if-ne v0, p2, :cond_0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mExternalSync:Lcom/android/server/power/stats/BatteryStatsImpl$ExternalStatsSync;

    if-eqz p0, :cond_0

    invoke-interface {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl$ExternalStatsSync;->scheduleCpuSyncDueToRemovedUid(I)Ljava/util/concurrent/Future;

    :cond_0
    return-void
.end method

.method public final scheduleSyncExternalStatsLocked(Ljava/lang/String;I)V
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mExternalSync:Lcom/android/server/power/stats/BatteryStatsImpl$ExternalStatsSync;

    if-eqz p0, :cond_0

    invoke-interface {p0, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$ExternalStatsSync;->scheduleSync(Ljava/lang/String;I)Ljava/util/concurrent/Future;

    :cond_0
    return-void
.end method

.method public final setAudioOnTimeSetMark(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;J)V
    .locals 0

    iget-object p0, p1, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mAudioTurnedOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    if-eqz p0, :cond_0

    invoke-virtual {p0, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->setMark(J)V

    :cond_0
    return-void
.end method

.method public setBatteryResetListener(Lcom/android/server/power/stats/BatteryStatsImpl$BatteryResetListener;)V
    .locals 0

    iput-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryResetListener:Lcom/android/server/power/stats/BatteryStatsImpl$BatteryResetListener;

    return-void
.end method

.method public setBatteryStateLocked(IIIIIIIIJIIIIIJJJ)V
    .locals 37

    move-object/from16 v9, p0

    move/from16 v8, p1

    move/from16 v0, p2

    move/from16 v1, p3

    move/from16 v7, p4

    move/from16 v2, p6

    move/from16 v6, p7

    move/from16 v5, p8

    move/from16 v3, p11

    move/from16 v4, p12

    move/from16 v15, p13

    move/from16 v14, p14

    move/from16 v13, p15

    const/4 v12, 0x0

    move/from16 v10, p5

    invoke-static {v12, v10}, Ljava/lang/Math;->max(II)I

    move-result v11

    invoke-virtual {v9, v8, v1, v7}, Lcom/android/server/power/stats/BatteryStatsImpl;->reportChangesToStatsLog(III)V

    invoke-static {v1, v8}, Lcom/android/server/power/stats/BatteryStatsImpl;->isOnBattery(II)Z

    move-result v10

    iget-boolean v12, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mHaveBatteryLevel:Z

    const/4 v5, 0x1

    if-nez v12, :cond_1

    iput-boolean v5, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mHaveBatteryLevel:Z

    iget-boolean v12, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBattery:Z

    if-ne v10, v12, :cond_0

    iget-object v12, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    xor-int/lit8 v5, v10, 0x1

    invoke-virtual {v12, v5}, Lcom/android/internal/os/BatteryStatsHistory;->setPluggedInState(Z)V

    :cond_0
    iput v8, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryStatus:I

    iput v7, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryLevel:I

    iput v6, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryChargeUah:I

    iget-object v5, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/4 v12, 0x1

    invoke-virtual {v5, v12, v8, v7, v6}, Lcom/android/internal/os/BatteryStatsHistory;->setBatteryState(ZIII)V

    iput v7, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastDischargeStepLevel:I

    iput v7, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastChargeStepLevel:I

    iput v7, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mMinDischargeStepLevel:I

    iput v7, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mMaxChargeStepLevel:I

    goto :goto_1

    :cond_1
    iget v5, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryLevel:I

    if-ne v5, v7, :cond_2

    iget-boolean v5, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBattery:Z

    if-eq v5, v10, :cond_4

    :cond_2
    const/16 v5, 0x64

    if-lt v7, v5, :cond_3

    if-eqz v10, :cond_3

    move-wide/from16 v12, p20

    const/4 v5, 0x1

    goto :goto_0

    :cond_3
    move-wide/from16 v12, p20

    const/4 v5, 0x0

    :goto_0
    invoke-virtual {v9, v5, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl;->recordDailyStatsIfNeededLocked(ZJ)V

    :cond_4
    :goto_1
    iget v5, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryStatus:I

    if-eqz v10, :cond_5

    iput v7, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeCurrentLevel:I

    iget-object v12, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    invoke-virtual {v12}, Lcom/android/internal/os/BatteryStatsHistory;->isRecordingHistory()Z

    move-result v12

    if-nez v12, :cond_6

    iget-object v12, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/16 v22, 0x1

    move-object/from16 v17, v12

    move-wide/from16 v18, p16

    move-wide/from16 v20, p18

    invoke-virtual/range {v17 .. v22}, Lcom/android/internal/os/BatteryStatsHistory;->startRecordingHistory(JJZ)V

    goto :goto_2

    :cond_5
    const/16 v12, 0x60

    if-ge v7, v12, :cond_6

    const/4 v12, 0x1

    if-eq v8, v12, :cond_6

    iget-object v12, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    invoke-virtual {v12}, Lcom/android/internal/os/BatteryStatsHistory;->isRecordingHistory()Z

    move-result v12

    if-nez v12, :cond_6

    iget-object v12, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/16 v22, 0x1

    move-object/from16 v17, v12

    move-wide/from16 v18, p16

    move-wide/from16 v20, p18

    invoke-virtual/range {v17 .. v22}, Lcom/android/internal/os/BatteryStatsHistory;->startRecordingHistory(JJZ)V

    :cond_6
    :goto_2
    iget v12, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargePlugLevel:I

    if-gez v12, :cond_7

    iput v7, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargePlugLevel:I

    :cond_7
    iget-boolean v12, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBattery:Z

    if-eq v10, v12, :cond_c

    iput v7, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryLevel:I

    iput v8, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryStatus:I

    iput v0, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryHealth:I

    iput v1, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryPlugType:I

    iput v11, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryTemperature:I

    iput v2, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryVoltageMv:I

    iput v14, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatterySecTxShareEvent:I

    iput v4, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatterySecOnline:I

    iput v15, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatterySecCurrentEvent:I

    iput v3, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatterySecEvent:I

    move/from16 v12, p15

    iput v12, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mOtgOnline:I

    iget-object v13, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    move/from16 v23, v10

    move-object v10, v13

    move v13, v11

    move/from16 v11, p1

    move/from16 v12, p4

    move/from16 p21, v5

    move/from16 p20, v13

    const/4 v8, 0x2

    move/from16 v5, p15

    move/from16 v13, p2

    move v0, v14

    move/from16 v14, p3

    move v1, v15

    move/from16 v15, p20

    move/from16 v16, p6

    move/from16 v17, p7

    move/from16 v18, p14

    move/from16 v19, p12

    move/from16 v20, p13

    move/from16 v21, p11

    move/from16 v22, p15

    invoke-virtual/range {v10 .. v22}, Lcom/android/internal/os/BatteryStatsHistory;->setBatteryState(IIIIIIIIIIII)V

    iget v0, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryChargeUah:I

    if-ge v6, v0, :cond_a

    int-to-long v0, v0

    int-to-long v2, v6

    sub-long/2addr v0, v2

    iget-object v2, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeCounter:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v2, v0, v1}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    iget-object v2, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOffCounter:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v2, v0, v1}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    iget v2, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenState:I

    invoke-static {v2}, Landroid/view/Display;->isDozeState(I)Z

    move-result v2

    if-eqz v2, :cond_8

    iget-object v2, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenDozeCounter:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v2, v0, v1}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    :cond_8
    iget v2, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeviceIdleMode:I

    const/4 v5, 0x1

    if-ne v2, v5, :cond_9

    iget-object v2, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeLightDozeCounter:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v2, v0, v1}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    goto :goto_3

    :cond_9
    if-ne v2, v8, :cond_b

    iget-object v2, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeDeepDozeCounter:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v2, v0, v1}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    goto :goto_3

    :cond_a
    const/4 v5, 0x1

    :cond_b
    :goto_3
    iput v6, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryChargeUah:I

    move-object/from16 v0, p0

    move-wide/from16 v1, p16

    move-wide/from16 v3, p18

    move/from16 v11, p8

    move/from16 v8, p21

    move v10, v5

    move/from16 v5, v23

    move v12, v6

    move v6, v8

    move/from16 v7, p4

    move/from16 v13, p1

    move/from16 v8, p7

    invoke-virtual/range {v0 .. v8}, Lcom/android/server/power/stats/BatteryStatsImpl;->setOnBatteryLocked(JJZIII)V

    move/from16 v10, p20

    goto/16 :goto_9

    :cond_c
    move/from16 v5, p15

    move v12, v6

    move v13, v8

    move/from16 v23, v10

    move/from16 p20, v11

    move v6, v15

    const/4 v8, 0x2

    const/4 v10, 0x1

    move/from16 v11, p8

    iget v15, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryLevel:I

    if-eq v15, v7, :cond_d

    iput v7, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryLevel:I

    iget-object v15, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mExternalSync:Lcom/android/server/power/stats/BatteryStatsImpl$ExternalStatsSync;

    iget-object v8, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mConstants:Lcom/android/server/power/stats/BatteryStatsImpl$Constants;

    iget-wide v10, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Constants;->BATTERY_LEVEL_COLLECTION_DELAY_MS:J

    invoke-interface {v15, v10, v11}, Lcom/android/server/power/stats/BatteryStatsImpl$ExternalStatsSync;->scheduleSyncDueToBatteryLevelChange(J)Ljava/util/concurrent/Future;

    const/4 v8, 0x1

    goto :goto_4

    :cond_d
    const/4 v8, 0x0

    :goto_4
    iget v10, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryStatus:I

    if-eq v10, v13, :cond_e

    iput v13, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryStatus:I

    const/4 v8, 0x1

    :cond_e
    iget v10, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryHealth:I

    if-eq v10, v0, :cond_f

    iput v0, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryHealth:I

    const/4 v8, 0x1

    :cond_f
    iget v0, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryPlugType:I

    if-eq v0, v1, :cond_10

    iput v1, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryPlugType:I

    const/4 v8, 0x1

    :cond_10
    iget v0, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryTemperature:I

    add-int/lit8 v1, v0, 0xa

    move/from16 v10, p20

    if-ge v10, v1, :cond_11

    add-int/lit8 v0, v0, -0xa

    if-gt v10, v0, :cond_12

    :cond_11
    iput v10, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryTemperature:I

    const/4 v8, 0x1

    :cond_12
    iget v0, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryVoltageMv:I

    add-int/lit8 v1, v0, 0x14

    if-gt v2, v1, :cond_13

    add-int/lit8 v0, v0, -0x14

    if-ge v2, v0, :cond_14

    :cond_13
    iput v2, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryVoltageMv:I

    const/4 v8, 0x1

    :cond_14
    iget v0, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatterySecTxShareEvent:I

    if-eq v0, v14, :cond_15

    iput v14, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatterySecTxShareEvent:I

    const/4 v8, 0x1

    :cond_15
    iget v0, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatterySecOnline:I

    if-eq v0, v4, :cond_16

    iput v4, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatterySecOnline:I

    const/4 v8, 0x1

    :cond_16
    iget v0, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatterySecCurrentEvent:I

    if-eq v0, v6, :cond_17

    iput v6, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatterySecCurrentEvent:I

    const/4 v8, 0x1

    :cond_17
    iget v0, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatterySecEvent:I

    if-eq v0, v3, :cond_18

    iput v3, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatterySecEvent:I

    const/4 v8, 0x1

    :cond_18
    iget v0, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mOtgOnline:I

    if-eq v0, v5, :cond_19

    iput v5, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mOtgOnline:I

    const/4 v5, 0x1

    goto :goto_5

    :cond_19
    move v5, v8

    :goto_5
    iget v0, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryChargeUah:I

    add-int/lit8 v1, v0, 0xa

    if-ge v12, v1, :cond_1a

    add-int/lit8 v1, v0, -0xa

    if-gt v12, v1, :cond_1e

    :cond_1a
    if-ge v12, v0, :cond_1d

    int-to-long v0, v0

    int-to-long v2, v12

    sub-long/2addr v0, v2

    iget-object v2, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeCounter:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v2, v0, v1}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    iget-object v2, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOffCounter:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v2, v0, v1}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    iget v2, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenState:I

    invoke-static {v2}, Landroid/view/Display;->isDozeState(I)Z

    move-result v2

    if-eqz v2, :cond_1b

    iget-object v2, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenDozeCounter:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v2, v0, v1}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    :cond_1b
    iget v2, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeviceIdleMode:I

    const/4 v3, 0x1

    if-ne v2, v3, :cond_1c

    iget-object v2, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeLightDozeCounter:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v2, v0, v1}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    goto :goto_6

    :cond_1c
    const/4 v3, 0x2

    if-ne v2, v3, :cond_1d

    iget-object v2, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeDeepDozeCounter:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v2, v0, v1}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    :cond_1d
    :goto_6
    iput v12, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryChargeUah:I

    const/4 v5, 0x1

    :cond_1e
    iget v0, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mInitStepMode:I

    int-to-long v0, v0

    const/16 v2, 0x30

    shl-long/2addr v0, v2

    iget v2, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mModStepMode:I

    int-to-long v2, v2

    const/16 v4, 0x38

    shl-long/2addr v2, v4

    or-long/2addr v0, v2

    and-int/lit16 v2, v7, 0xff

    int-to-long v2, v2

    const/16 v4, 0x28

    shl-long/2addr v2, v4

    or-long/2addr v0, v2

    if-eqz v23, :cond_1f

    const/4 v2, 0x0

    invoke-virtual {v9, v2}, Lcom/android/server/power/stats/BatteryStatsImpl;->setChargingLocked(Z)Z

    move-result v3

    or-int/2addr v3, v5

    iget v4, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastDischargeStepLevel:I

    if-eq v4, v7, :cond_25

    iget v5, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mMinDischargeStepLevel:I

    if-le v5, v7, :cond_25

    iget-object v14, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    sub-int v15, v4, v7

    move-wide/from16 v16, v0

    move-wide/from16 v18, p16

    invoke-virtual/range {v14 .. v19}, Landroid/os/BatteryStats$LevelStepTracker;->addLevelSteps(IJJ)V

    iget-object v14, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    iget v4, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastDischargeStepLevel:I

    sub-int v15, v4, v7

    invoke-virtual/range {v14 .. v19}, Landroid/os/BatteryStats$LevelStepTracker;->addLevelSteps(IJJ)V

    iput v7, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastDischargeStepLevel:I

    iput v7, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mMinDischargeStepLevel:I

    iget v0, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mCurStepMode:I

    iput v0, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mInitStepMode:I

    iput v2, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mModStepMode:I

    goto :goto_8

    :cond_1f
    const/4 v2, 0x0

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->gatBatteryHistoryResetLevel()I

    move-result v3

    if-lt v7, v3, :cond_20

    const/4 v3, 0x1

    invoke-virtual {v9, v3}, Lcom/android/server/power/stats/BatteryStatsImpl;->setChargingLocked(Z)Z

    move-result v4

    or-int/2addr v5, v4

    goto :goto_7

    :cond_20
    iget-boolean v3, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mCharging:Z

    if-nez v3, :cond_22

    iget v3, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastChargeStepLevel:I

    if-ge v3, v7, :cond_21

    iget-object v3, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mHandler:Landroid/os/Handler;

    iget-object v4, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeferSetCharging:Ljava/lang/Runnable;

    invoke-virtual {v3, v4}, Landroid/os/Handler;->hasCallbacks(Ljava/lang/Runnable;)Z

    move-result v3

    if-nez v3, :cond_23

    iget-object v3, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mHandler:Landroid/os/Handler;

    iget-object v4, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeferSetCharging:Ljava/lang/Runnable;

    iget-object v6, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mConstants:Lcom/android/server/power/stats/BatteryStatsImpl$Constants;

    iget v6, v6, Lcom/android/server/power/stats/BatteryStatsImpl$Constants;->BATTERY_CHARGED_DELAY_MS:I

    int-to-long v11, v6

    invoke-virtual {v3, v4, v11, v12}, Landroid/os/Handler;->postDelayed(Ljava/lang/Runnable;J)Z

    goto :goto_7

    :cond_21
    if-le v3, v7, :cond_23

    iget-object v3, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mHandler:Landroid/os/Handler;

    iget-object v4, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeferSetCharging:Ljava/lang/Runnable;

    invoke-virtual {v3, v4}, Landroid/os/Handler;->removeCallbacks(Ljava/lang/Runnable;)V

    goto :goto_7

    :cond_22
    iget v3, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastChargeStepLevel:I

    if-le v3, v7, :cond_23

    invoke-virtual {v9, v2}, Lcom/android/server/power/stats/BatteryStatsImpl;->setChargingLocked(Z)Z

    move-result v3

    or-int/2addr v5, v3

    :cond_23
    :goto_7
    iget v3, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastChargeStepLevel:I

    if-eq v3, v7, :cond_24

    iget v4, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mMaxChargeStepLevel:I

    if-ge v4, v7, :cond_24

    iget-object v14, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    sub-int v15, v7, v3

    move-wide/from16 v16, v0

    move-wide/from16 v18, p16

    invoke-virtual/range {v14 .. v19}, Landroid/os/BatteryStats$LevelStepTracker;->addLevelSteps(IJJ)V

    iget-object v14, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    iget v3, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastChargeStepLevel:I

    sub-int v15, v7, v3

    invoke-virtual/range {v14 .. v19}, Landroid/os/BatteryStats$LevelStepTracker;->addLevelSteps(IJJ)V

    iput v7, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mMaxChargeStepLevel:I

    iget v0, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mCurStepMode:I

    iput v0, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mInitStepMode:I

    iput v2, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mModStepMode:I

    :cond_24
    iput v7, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastChargeStepLevel:I

    move v3, v5

    :cond_25
    :goto_8
    if-eqz v3, :cond_26

    iget-object v0, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    iget v1, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryStatus:I

    iget v3, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryLevel:I

    iget v4, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryHealth:I

    iget v5, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryPlugType:I

    iget v6, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryTemperature:I

    iget v7, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryVoltageMv:I

    iget v8, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryChargeUah:I

    iget v11, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatterySecTxShareEvent:I

    iget v12, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatterySecOnline:I

    iget v14, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatterySecCurrentEvent:I

    iget v15, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatterySecEvent:I

    iget v2, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mOtgOnline:I

    move-object/from16 v24, v0

    move/from16 v25, v1

    move/from16 v26, v3

    move/from16 v27, v4

    move/from16 v28, v5

    move/from16 v29, v6

    move/from16 v30, v7

    move/from16 v31, v8

    move/from16 v32, v11

    move/from16 v33, v12

    move/from16 v34, v14

    move/from16 v35, v15

    move/from16 v36, v2

    invoke-virtual/range {v24 .. v36}, Lcom/android/internal/os/BatteryStatsHistory;->setBatteryState(IIIIIIIIIIII)V

    iget-object v0, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    move-wide/from16 v1, p16

    move-wide/from16 v3, p18

    invoke-virtual {v0, v1, v2, v3, v4}, Lcom/android/internal/os/BatteryStatsHistory;->writeHistoryItem(JJ)V

    :cond_26
    :goto_9
    if-nez v23, :cond_28

    const/4 v0, 0x5

    if-eq v13, v0, :cond_27

    const/4 v0, 0x1

    if-ne v13, v0, :cond_28

    :cond_27
    iget-object v0, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/4 v1, 0x0

    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsHistory;->setHistoryRecordingEnabled(Z)V

    :cond_28
    const/16 v0, 0x190

    if-le v10, v0, :cond_29

    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v0

    iget-wide v2, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastWriteTimeMs:J

    sub-long/2addr v0, v2

    iget-object v2, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mStatsFile:Landroid/util/AtomicFile;

    if-eqz v2, :cond_29

    const-wide/32 v2, 0xea60

    cmp-long v2, v0, v2

    if-lez v2, :cond_29

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Temperature higher than 40 degrees, writing data to disk, "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0, v1}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string/jumbo v0, "ms have passed"

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "BatteryStatsImpl"

    invoke-static {v1, v0}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->writeAsyncLocked()V

    :cond_29
    move/from16 v0, p8

    iput v0, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastLearnedBatteryCapacityUah:I

    iget v1, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mMinLearnedBatteryCapacityUah:I

    const/4 v2, -0x1

    if-ne v1, v2, :cond_2a

    iput v0, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mMinLearnedBatteryCapacityUah:I

    goto :goto_a

    :cond_2a
    invoke-static {v1, v0}, Ljava/lang/Math;->min(II)I

    move-result v1

    iput v1, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mMinLearnedBatteryCapacityUah:I

    :goto_a
    iget v1, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mMaxLearnedBatteryCapacityUah:I

    invoke-static {v1, v0}, Ljava/lang/Math;->max(II)I

    move-result v0

    iput v0, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mMaxLearnedBatteryCapacityUah:I

    move-wide/from16 v0, p9

    iput-wide v0, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryTimeToFullSeconds:J

    return-void
.end method

.method public setBatteryStatsConfig(Lcom/android/server/power/stats/BatteryStatsImpl$BatteryStatsConfig;)V
    .locals 0

    monitor-enter p0

    :try_start_0
    iput-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryStatsConfig:Lcom/android/server/power/stats/BatteryStatsImpl$BatteryStatsConfig;

    monitor-exit p0

    return-void

    :catchall_0
    move-exception p1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw p1
.end method

.method public setCallback(Lcom/android/server/power/stats/BatteryStatsImpl$BatteryCallback;)V
    .locals 0

    iput-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCallback:Lcom/android/server/power/stats/BatteryStatsImpl$BatteryCallback;

    return-void
.end method

.method public setChargingLocked(Z)Z
    .locals 2

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHandler:Landroid/os/Handler;

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeferSetCharging:Ljava/lang/Runnable;

    invoke-virtual {v0, v1}, Landroid/os/Handler;->removeCallbacks(Ljava/lang/Runnable;)V

    iget-boolean v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCharging:Z

    if-eq v0, p1, :cond_0

    iput-boolean p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCharging:Z

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsHistory;->setChargingState(Z)V

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHandler:Landroid/os/Handler;

    const/4 p1, 0x3

    invoke-virtual {p0, p1}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    const/4 p0, 0x1

    return p0

    :cond_0
    const/4 p0, 0x0

    return p0
.end method

.method public setDisplayCountLocked(I)V
    .locals 5

    new-array v0, p1, [Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;

    iput-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPerDisplayBatteryStats:[Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;

    const/4 v0, 0x0

    :goto_0
    if-ge v0, p1, :cond_0

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPerDisplayBatteryStats:[Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;

    new-instance v2, Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;

    iget-object v3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    iget-object v4, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-direct {v2, v3, v4}, Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    aput-object v2, v1, v0

    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    :cond_0
    return-void
.end method

.method public setExternalStatsSyncLocked(Lcom/android/server/power/stats/BatteryStatsImpl$ExternalStatsSync;)V
    .locals 0

    iput-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mExternalSync:Lcom/android/server/power/stats/BatteryStatsImpl$ExternalStatsSync;

    return-void
.end method

.method public setNoAutoReset(Z)V
    .locals 0

    iput-boolean p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNoAutoReset:Z

    return-void
.end method

.method public setOnBatteryLocked(JJZIII)V
    .locals 19

    move-object/from16 v7, p0

    move-wide/from16 v8, p1

    move/from16 v0, p5

    move/from16 v1, p6

    move/from16 v10, p7

    move/from16 v6, p8

    iget-object v2, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mHandler:Landroid/os/Handler;

    const/4 v3, 0x2

    invoke-virtual {v2, v3}, Landroid/os/Handler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v2

    iput v0, v2, Landroid/os/Message;->arg1:I

    iget-object v3, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mHandler:Landroid/os/Handler;

    invoke-virtual {v3, v2}, Landroid/os/Handler;->sendMessage(Landroid/os/Message;)Z

    const-wide/16 v2, 0x3e8

    mul-long v11, p3, v2

    mul-long v13, v8, v2

    iget v15, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenState:I

    iget v5, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenState:I

    const/4 v3, 0x1

    if-eqz v0, :cond_9

    invoke-virtual {v7, v1, v10}, Lcom/android/server/power/stats/BatteryStatsImpl;->shouldResetOnUnplugLocked(II)Z

    move-result v0

    if-eqz v0, :cond_2

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Resetting battery stats: level="

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, " status="

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " dischargeLevel="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v1, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargePlugLevel:I

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " lowAmount="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getLowDischargeAmountSinceCharge()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " highAmount="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getHighDischargeAmountSinceCharge()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "BatteryStatsImpl"

    invoke-static {v1, v0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->makeBackupData()V

    const-string v0, "batterystats backup finished"

    invoke-static {v1, v0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getLowDischargeAmountSinceCharge()I

    move-result v0

    const/16 v1, 0x14

    if-lt v0, v1, :cond_0

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v0

    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v2

    invoke-virtual {v7, v2, v3}, Lcom/android/server/power/stats/BatteryStatsImpl;->writeSummaryToParcel(Landroid/os/Parcel;Z)V

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v16

    sub-long v0, v16, v0

    invoke-static {}, Lcom/android/internal/os/BackgroundThread;->getHandler()Landroid/os/Handler;

    move-result-object v3

    new-instance v4, Lcom/android/server/power/stats/BatteryStatsImpl$8;

    invoke-direct {v4, v7, v2, v0, v1}, Lcom/android/server/power/stats/BatteryStatsImpl$8;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl;Landroid/os/Parcel;J)V

    invoke-virtual {v3, v4}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    :cond_0
    const/16 v18, 0x3

    move-object/from16 v0, p0

    move-wide/from16 v1, p3

    const/4 v8, 0x1

    const/4 v9, 0x0

    move-wide/from16 v3, p1

    move/from16 v16, v5

    move/from16 v5, v18

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->resetAllStatsLocked(JJI)V

    if-lez v6, :cond_1

    if-lez v10, :cond_1

    div-int/lit16 v0, v6, 0x3e8

    int-to-double v0, v0

    int-to-double v2, v10

    const-wide/high16 v4, 0x4059000000000000L    # 100.0

    div-double/2addr v2, v4

    div-double/2addr v0, v2

    double-to-int v0, v0

    iput v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mEstimatedBatteryCapacityMah:I

    :cond_1
    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v0}, Landroid/os/BatteryStats$LevelStepTracker;->init()V

    move v5, v8

    goto :goto_0

    :cond_2
    move v8, v3

    move/from16 v16, v5

    const/4 v9, 0x0

    move v5, v9

    :goto_0
    move/from16 v17, v5

    iget-boolean v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mCharging:Z

    if-eqz v0, :cond_3

    invoke-virtual {v7, v9}, Lcom/android/server/power/stats/BatteryStatsImpl;->setChargingLocked(Z)Z

    :cond_3
    iput-boolean v8, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryInternal:Z

    iput-boolean v8, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBattery:Z

    iput v10, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastDischargeStepLevel:I

    iput v10, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mMinDischargeStepLevel:I

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v0}, Landroid/os/BatteryStats$LevelStepTracker;->clearTime()V

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v0}, Landroid/os/BatteryStats$LevelStepTracker;->clearTime()V

    iget v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mCurStepMode:I

    iput v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mInitStepMode:I

    iput v9, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mModStepMode:I

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->pullPendingStateUpdatesLocked()V

    if-eqz v5, :cond_4

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    move-wide/from16 v1, p1

    move-wide/from16 v3, p3

    invoke-virtual/range {v0 .. v5}, Lcom/android/internal/os/BatteryStatsHistory;->startRecordingHistory(JJZ)V

    invoke-virtual/range {p0 .. p4}, Lcom/android/server/power/stats/BatteryStatsImpl;->initActiveHistoryEventsLocked(JJ)V

    :cond_4
    iput-boolean v9, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryPluggedIn:Z

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mAlarmManager:Landroid/app/AlarmManager;

    if-eqz v0, :cond_5

    iget-object v1, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mHandler:Landroid/os/Handler;

    new-instance v2, Lcom/android/server/power/stats/BatteryStatsImpl$$ExternalSyntheticLambda9;

    invoke-direct {v2, v7, v0}, Lcom/android/server/power/stats/BatteryStatsImpl$$ExternalSyntheticLambda9;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl;Landroid/app/AlarmManager;)V

    invoke-virtual {v1, v2}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    :cond_5
    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    iget-boolean v6, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryPluggedIn:Z

    move-wide/from16 v1, p1

    move-wide/from16 v3, p3

    move/from16 v5, p7

    invoke-virtual/range {v0 .. v6}, Lcom/android/internal/os/BatteryStatsHistory;->recordBatteryState(JJIZ)V

    iput v10, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeUnplugLevel:I

    iput v10, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeCurrentLevel:I

    invoke-static {v15}, Landroid/view/Display;->isOnState(I)Z

    move-result v0

    if-eqz v0, :cond_6

    iput v10, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    iput v9, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    iput v9, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getBatteryPermil()I

    move-result v0

    iput v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOnUnplugLevelPermil:I

    iput v9, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOffUnplugLevelPermil:I

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getBatteryCCInfo()I

    move-result v0

    iput v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOnUnplugLevelCoulombCounter:I

    iput v9, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOffUnplugLevelCoulombCounter:I

    goto :goto_1

    :cond_6
    invoke-static {v15}, Landroid/view/Display;->isDozeState(I)Z

    move-result v0

    if-eqz v0, :cond_7

    iput v9, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    iput v10, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    iput v9, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    iput v9, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOnUnplugLevelPermil:I

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getBatteryPermil()I

    move-result v0

    iput v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOffUnplugLevelPermil:I

    iput v9, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOnUnplugLevelCoulombCounter:I

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getBatteryCCInfo()I

    move-result v0

    iput v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOffUnplugLevelCoulombCounter:I

    goto :goto_1

    :cond_7
    iput v9, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    iput v9, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    iput v10, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    iput v9, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOnUnplugLevelPermil:I

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getBatteryPermil()I

    move-result v0

    iput v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOffUnplugLevelPermil:I

    iput v9, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOnUnplugLevelCoulombCounter:I

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getBatteryCCInfo()I

    move-result v0

    iput v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOffUnplugLevelCoulombCounter:I

    :goto_1
    iget-boolean v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsSubScreen:Z

    if-eqz v0, :cond_8

    invoke-static/range {v16 .. v16}, Landroid/view/Display;->isOnState(I)Z

    move-result v0

    if-eqz v0, :cond_8

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getBatteryPermil()I

    move-result v0

    iput v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeSubScreenOnUnplugLevelPermil:I

    iput v9, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeSubScreenOffUnplugLevelPermil:I

    goto :goto_2

    :cond_8
    iput v9, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeSubScreenOnUnplugLevelPermil:I

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getBatteryPermil()I

    move-result v0

    iput v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeSubScreenOffUnplugLevelPermil:I

    :goto_2
    iput v9, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenOn:I

    iput v9, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenDoze:I

    iput v9, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenOff:I

    const/4 v1, 0x1

    move-object/from16 v0, p0

    move v2, v15

    move-wide v3, v11

    move-wide v5, v13

    invoke-virtual/range {v0 .. v6}, Lcom/android/server/power/stats/BatteryStatsImpl;->updateTimeBasesLocked(ZIJJ)V

    move/from16 v4, v17

    goto :goto_3

    :cond_9
    move v8, v3

    const/4 v9, 0x0

    iput-boolean v9, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryInternal:Z

    iput-boolean v9, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBattery:Z

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->pullPendingStateUpdatesLocked()V

    const/4 v6, 0x1

    iput-boolean v6, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryPluggedIn:Z

    move-wide/from16 v3, p1

    iput-wide v3, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryPluggedInRealTimeMs:J

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    move-wide/from16 v1, p1

    move-wide/from16 v3, p3

    move/from16 v5, p7

    invoke-virtual/range {v0 .. v6}, Lcom/android/internal/os/BatteryStatsHistory;->recordBatteryState(JJIZ)V

    iput v10, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargePlugLevel:I

    iput v10, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeCurrentLevel:I

    iget v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeUnplugLevel:I

    if-ge v10, v0, :cond_a

    iget v1, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mLowDischargeAmountSinceCharge:I

    sub-int v2, v0, v10

    sub-int/2addr v2, v8

    add-int/2addr v1, v2

    iput v1, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mLowDischargeAmountSinceCharge:I

    iget v1, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mHighDischargeAmountSinceCharge:I

    sub-int/2addr v0, v10

    add-int/2addr v1, v0

    iput v1, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mHighDischargeAmountSinceCharge:I

    :cond_a
    invoke-virtual {v7, v15, v15}, Lcom/android/server/power/stats/BatteryStatsImpl;->updateDischargeScreenLevelsLocked(II)V

    const/4 v1, 0x0

    move-object/from16 v0, p0

    move v2, v15

    move-wide v3, v11

    move-wide v5, v13

    invoke-virtual/range {v0 .. v6}, Lcom/android/server/power/stats/BatteryStatsImpl;->updateTimeBasesLocked(ZIJJ)V

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v0}, Landroid/os/BatteryStats$LevelStepTracker;->init()V

    iput v10, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastChargeStepLevel:I

    iput v10, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mMaxChargeStepLevel:I

    iget v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mCurStepMode:I

    iput v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mInitStepMode:I

    iput v9, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mModStepMode:I

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->scheduleNextResetWhilePluggedInCheck()V

    move v4, v9

    :goto_3
    if-nez v4, :cond_b

    iget-wide v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastWriteTimeMs:J

    const-wide/32 v2, 0xea60

    add-long/2addr v0, v2

    cmp-long v0, v0, p1

    if-gez v0, :cond_c

    :cond_b
    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mStatsFile:Landroid/util/AtomicFile;

    if-eqz v0, :cond_c

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsHistory;->isReadOnly()Z

    move-result v0

    if-nez v0, :cond_c

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->writeAsyncLocked()V

    :cond_c
    return-void
.end method

.method public setPowerProfileLocked(Lcom/android/internal/os/PowerProfile;)V
    .locals 8

    iput-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-virtual {p1}, Lcom/android/internal/os/PowerProfile;->getNumCpuClusters()I

    move-result p1

    new-array v0, p1, [Lcom/android/internal/os/KernelCpuSpeedReader;

    iput-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelCpuSpeedReaders:[Lcom/android/internal/os/KernelCpuSpeedReader;

    const/4 v0, 0x0

    move v1, v0

    move v2, v1

    move v3, v2

    :goto_0
    if-ge v1, p1, :cond_0

    iget-object v4, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-virtual {v4, v1}, Lcom/android/internal/os/PowerProfile;->getNumSpeedStepsInCpuCluster(I)I

    move-result v4

    iget-object v5, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelCpuSpeedReaders:[Lcom/android/internal/os/KernelCpuSpeedReader;

    new-instance v6, Lcom/android/internal/os/KernelCpuSpeedReader;

    invoke-direct {v6, v3, v4}, Lcom/android/internal/os/KernelCpuSpeedReader;-><init>(II)V

    aput-object v6, v5, v1

    iget-object v5, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-virtual {v5, v1}, Lcom/android/internal/os/PowerProfile;->getNumCoresInCpuCluster(I)I

    move-result v5

    add-int/2addr v3, v5

    add-int/2addr v2, v4

    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    :cond_0
    new-array p1, v2, [I

    iput-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuPowerBracketMap:[I

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-virtual {p1}, Lcom/android/internal/os/PowerProfile;->getNumCpuClusters()I

    move-result p1

    move v1, v0

    move v2, v1

    :goto_1
    if-ge v1, p1, :cond_2

    iget-object v3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-virtual {v3, v1}, Lcom/android/internal/os/PowerProfile;->getNumSpeedStepsInCpuCluster(I)I

    move-result v3

    move v4, v0

    :goto_2
    if-ge v4, v3, :cond_1

    iget-object v5, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuPowerBracketMap:[I

    add-int/lit8 v6, v2, 0x1

    iget-object v7, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-virtual {v7, v1, v4}, Lcom/android/internal/os/PowerProfile;->getPowerBracketForCpuCore(II)I

    move-result v7

    aput v7, v5, v2

    add-int/lit8 v4, v4, 0x1

    move v2, v6

    goto :goto_2

    :cond_1
    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    :cond_2
    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-virtual {p1}, Lcom/android/internal/os/PowerProfile;->getCpuPowerBracketCount()I

    move-result p1

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuUsageDetails:Landroid/os/BatteryStats$CpuUsageDetails;

    new-array v2, p1, [Ljava/lang/String;

    iput-object v2, v1, Landroid/os/BatteryStats$CpuUsageDetails;->cpuBracketDescriptions:[Ljava/lang/String;

    new-array v2, p1, [J

    iput-object v2, v1, Landroid/os/BatteryStats$CpuUsageDetails;->cpuUsageMs:[J

    :goto_3
    if-ge v0, p1, :cond_3

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuUsageDetails:Landroid/os/BatteryStats$CpuUsageDetails;

    iget-object v1, v1, Landroid/os/BatteryStats$CpuUsageDetails;->cpuBracketDescriptions:[Ljava/lang/String;

    iget-object v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-virtual {v2, v0}, Lcom/android/internal/os/PowerProfile;->getCpuPowerBracketDescription(I)Ljava/lang/String;

    move-result-object v2

    aput-object v2, v1, v0

    add-int/lit8 v0, v0, 0x1

    goto :goto_3

    :cond_3
    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mEstimatedBatteryCapacityMah:I

    const/4 v0, -0x1

    if-ne p1, v0, :cond_4

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-virtual {p1}, Lcom/android/internal/os/PowerProfile;->getBatteryCapacity()D

    move-result-wide v0

    double-to-int p1, v0

    iput p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mEstimatedBatteryCapacityMah:I

    :cond_4
    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-virtual {p1}, Lcom/android/internal/os/PowerProfile;->getNumDisplays()I

    move-result p1

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->setDisplayCountLocked(I)V

    return-void
.end method

.method public setPretendScreenOff(Z)V
    .locals 11

    iget-boolean v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPretendScreenOff:Z

    if-eq v0, p1, :cond_0

    iput-boolean p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPretendScreenOff:Z

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPerDisplayBatteryStats:[Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;

    const/4 v0, 0x0

    aget-object p1, p1, v0

    iget v2, p1, Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;->screenState:I

    const/4 v1, 0x0

    const/4 v3, 0x0

    const/4 v4, -0x1

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {p1}, Lcom/android/internal/os/Clock;->elapsedRealtime()J

    move-result-wide v5

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {p1}, Lcom/android/internal/os/Clock;->uptimeMillis()J

    move-result-wide v7

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {p1}, Lcom/android/internal/os/Clock;->currentTimeMillis()J

    move-result-wide v9

    move-object v0, p0

    invoke-virtual/range {v0 .. v10}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteScreenStateLocked(IIIIJJJ)V

    :cond_0
    return-void
.end method

.method public final setProcessForegroundTimeSetMark(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;J)V
    .locals 1

    iget-object p0, p1, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mProcessStateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    const/4 v0, 0x0

    aget-object p0, p0, v0

    if-eqz p0, :cond_0

    invoke-virtual {p0, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->setMark(J)V

    :cond_0
    iget-object p0, p1, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mForegroundActivityTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    if-eqz p0, :cond_1

    invoke-virtual {p0, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->setMark(J)V

    :cond_1
    return-void
.end method

.method public setRadioScanningTimeoutLocked(J)V
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    if-eqz p0, :cond_0

    invoke-virtual {p0, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->setTimeout(J)V

    :cond_0
    return-void
.end method

.method public setRecordAllHistoryLocked(Z)V
    .locals 19

    move-object/from16 v0, p0

    move/from16 v1, p1

    iput-boolean v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mRecordAllHistory:Z

    const/4 v2, 0x0

    const/4 v3, 0x1

    if-nez v1, :cond_1

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const/4 v4, 0x5

    invoke-virtual {v1, v4}, Landroid/os/BatteryStats$HistoryEventTracker;->removeEvents(I)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const/16 v4, 0xd

    invoke-virtual {v1, v4}, Landroid/os/BatteryStats$HistoryEventTracker;->removeEvents(I)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    invoke-virtual {v1, v3}, Landroid/os/BatteryStats$HistoryEventTracker;->getStateForEvent(I)Ljava/util/HashMap;

    move-result-object v1

    if-eqz v1, :cond_3

    iget-object v3, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v3}, Lcom/android/internal/os/Clock;->elapsedRealtime()J

    move-result-wide v12

    iget-object v3, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v3}, Lcom/android/internal/os/Clock;->uptimeMillis()J

    move-result-wide v14

    invoke-virtual {v1}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :cond_0
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_3

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/util/Map$Entry;

    invoke-interface {v3}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v4

    move-object v11, v4

    check-cast v11, Landroid/util/SparseIntArray;

    move v10, v2

    :goto_0
    invoke-virtual {v11}, Landroid/util/SparseIntArray;->size()I

    move-result v4

    if-ge v10, v4, :cond_0

    iget-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const/16 v9, 0x4001

    invoke-interface {v3}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v5

    move-object/from16 v16, v5

    check-cast v16, Ljava/lang/String;

    invoke-virtual {v11, v10}, Landroid/util/SparseIntArray;->keyAt(I)I

    move-result v17

    move-wide v5, v12

    move-wide v7, v14

    move/from16 v18, v10

    move-object/from16 v10, v16

    move-object/from16 v16, v11

    move/from16 v11, v17

    invoke-virtual/range {v4 .. v11}, Lcom/android/internal/os/BatteryStatsHistory;->recordEvent(JJILjava/lang/String;I)V

    add-int/lit8 v10, v18, 0x1

    move-object/from16 v11, v16

    goto :goto_0

    :cond_1
    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    invoke-virtual {v1, v3}, Landroid/os/BatteryStats$HistoryEventTracker;->getStateForEvent(I)Ljava/util/HashMap;

    move-result-object v1

    if-eqz v1, :cond_3

    iget-object v3, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v3}, Lcom/android/internal/os/Clock;->elapsedRealtime()J

    move-result-wide v12

    iget-object v3, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v3}, Lcom/android/internal/os/Clock;->uptimeMillis()J

    move-result-wide v14

    invoke-virtual {v1}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :cond_2
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_3

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/util/Map$Entry;

    invoke-interface {v3}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v4

    move-object v11, v4

    check-cast v11, Landroid/util/SparseIntArray;

    move v10, v2

    :goto_1
    invoke-virtual {v11}, Landroid/util/SparseIntArray;->size()I

    move-result v4

    if-ge v10, v4, :cond_2

    iget-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    const v9, 0x8001

    invoke-interface {v3}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v5

    move-object/from16 v16, v5

    check-cast v16, Ljava/lang/String;

    invoke-virtual {v11, v10}, Landroid/util/SparseIntArray;->keyAt(I)I

    move-result v17

    move-wide v5, v12

    move-wide v7, v14

    move/from16 v18, v10

    move-object/from16 v10, v16

    move-object/from16 v16, v11

    move/from16 v11, v17

    invoke-virtual/range {v4 .. v11}, Lcom/android/internal/os/BatteryStatsHistory;->recordEvent(JJILjava/lang/String;I)V

    add-int/lit8 v10, v18, 0x1

    move-object/from16 v11, v16

    goto :goto_1

    :cond_3
    return-void
.end method

.method public setTemperatureNCurrentLocked(IIIIIJJ)V
    .locals 8

    move-object v0, p0

    move v1, p1

    move v2, p2

    move v3, p3

    move v4, p4

    move v5, p5

    iget v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mAp_temp:I

    const/4 v7, 0x1

    if-eq v6, v1, :cond_0

    int-to-byte v1, v1

    iput v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mAp_temp:I

    move v1, v7

    goto :goto_0

    :cond_0
    const/4 v1, 0x0

    :goto_0
    iget v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPa_temp:I

    if-eq v6, v2, :cond_1

    int-to-byte v1, v2

    iput v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPa_temp:I

    move v1, v7

    :cond_1
    iget v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSkin_temp:I

    if-eq v2, v3, :cond_2

    int-to-byte v1, v3

    iput v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSkin_temp:I

    move v1, v7

    :cond_2
    iget-boolean v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsFoldableDevice:Z

    if-eqz v2, :cond_3

    iget v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSub_batt_temp:I

    if-eq v2, v4, :cond_3

    int-to-byte v1, v4

    iput v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSub_batt_temp:I

    move v1, v7

    :cond_3
    iget v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCurrent:I

    if-eq v2, v5, :cond_4

    int-to-short v1, v5

    iput v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCurrent:I

    goto :goto_1

    :cond_4
    move v7, v1

    :goto_1
    if-eqz v7, :cond_5

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    iget v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mAp_temp:I

    iget v3, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPa_temp:I

    iget v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSkin_temp:I

    iget v5, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSub_batt_temp:I

    iget v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCurrent:I

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsHistory;->setTemperatureNCurrent(IIIII)V

    iget-object v0, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    move-wide v1, p6

    move-wide/from16 v3, p8

    invoke-virtual {v0, p6, p7, v3, v4}, Lcom/android/internal/os/BatteryStatsHistory;->writeHistoryItem(JJ)V

    :cond_5
    return-void
.end method

.method public final shouldResetOnUnplugLocked(II)Z
    .locals 3

    iget-boolean v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNoAutoReset:Z

    const/4 v1, 0x0

    if-eqz v0, :cond_0

    return v1

    :cond_0
    iget-boolean v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSystemReady:Z

    if-nez v0, :cond_1

    return v1

    :cond_1
    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsHistory;->isResetEnabled()Z

    move-result v0

    if-nez v0, :cond_2

    return v1

    :cond_2
    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryStatsConfig:Lcom/android/server/power/stats/BatteryStatsImpl$BatteryStatsConfig;

    invoke-virtual {v0}, Lcom/android/server/power/stats/BatteryStatsImpl$BatteryStatsConfig;->shouldResetOnUnplugHighBatteryLevel()Z

    move-result v0

    const/4 v2, 0x1

    if-eqz v0, :cond_4

    const/4 v0, 0x5

    if-ne p1, v0, :cond_3

    return v2

    :cond_3
    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->gatBatteryHistoryResetLevel()I

    move-result p1

    if-lt p2, p1, :cond_4

    return v2

    :cond_4
    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryStatsConfig:Lcom/android/server/power/stats/BatteryStatsImpl$BatteryStatsConfig;

    invoke-virtual {p1}, Lcom/android/server/power/stats/BatteryStatsImpl$BatteryStatsConfig;->shouldResetOnUnplugAfterSignificantCharge()Z

    move-result p1

    if-eqz p1, :cond_5

    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargePlugLevel:I

    const/16 v0, 0x14

    if-ge p1, v0, :cond_5

    const/16 p1, 0x50

    if-lt p2, p1, :cond_5

    return v2

    :cond_5
    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getHighDischargeAmountSinceCharge()I

    move-result p0

    const/16 p1, 0xc8

    if-lt p0, p1, :cond_6

    return v2

    :cond_6
    return v1
.end method

.method public final shouldResetWhilePluggedInLocked(J)Z
    .locals 8

    iget-boolean v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNoAutoReset:Z

    const/4 v1, 0x0

    if-eqz v0, :cond_0

    return v1

    :cond_0
    iget-boolean v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSystemReady:Z

    if-nez v0, :cond_1

    return v1

    :cond_1
    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsHistory;->isResetEnabled()Z

    move-result v0

    if-nez v0, :cond_2

    return v1

    :cond_2
    iget-wide v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryPluggedInRealTimeMs:J

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mConstants:Lcom/android/server/power/stats/BatteryStatsImpl$Constants;

    iget v0, v0, Lcom/android/server/power/stats/BatteryStatsImpl$Constants;->RESET_WHILE_PLUGGED_IN_MINIMUM_DURATION_HOURS:I

    int-to-long v4, v0

    const-wide/32 v6, 0x36ee80

    mul-long/2addr v4, v6

    add-long/2addr v2, v4

    cmp-long v2, p1, v2

    if-ltz v2, :cond_3

    iget-wide v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mRealtimeStartUs:J

    const-wide/16 v4, 0x3e8

    div-long/2addr v2, v4

    int-to-long v4, v0

    mul-long/2addr v4, v6

    add-long/2addr v2, v4

    cmp-long p0, p1, v2

    if-ltz p0, :cond_3

    const/4 p0, 0x1

    return p0

    :cond_3
    return v1
.end method

.method public shutdownLocked()V
    .locals 7

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v1}, Lcom/android/internal/os/Clock;->elapsedRealtime()J

    move-result-wide v1

    iget-object v3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v3}, Lcom/android/internal/os/Clock;->uptimeMillis()J

    move-result-wide v3

    iget-object v5, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v5}, Lcom/android/internal/os/Clock;->currentTimeMillis()J

    move-result-wide v5

    invoke-virtual/range {v0 .. v6}, Lcom/android/internal/os/BatteryStatsHistory;->recordShutdownEvent(JJJ)V

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->writeSyncLocked()V

    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mShuttingDown:Z

    return-void
.end method

.method public final smearModemActivityInfoRxTxConsumptionMah(Lcom/android/server/power/stats/BatteryStatsImpl$RxTxConsumption;JJJJ)D
    .locals 16

    move-object/from16 v0, p1

    move-wide/from16 v1, p2

    move-wide/from16 v3, p6

    move-wide/from16 v5, p8

    const-wide/16 v7, 0x0

    cmp-long v9, v3, v7

    const-wide/16 v10, 0x0

    if-eqz v9, :cond_0

    iget-wide v12, v0, Lcom/android/server/power/stats/BatteryStatsImpl$RxTxConsumption;->rxConsumptionMah:D

    long-to-double v14, v1

    mul-double/2addr v12, v14

    long-to-double v14, v3

    div-double/2addr v12, v14

    add-double/2addr v12, v10

    goto :goto_0

    :cond_0
    move-wide v12, v10

    :goto_0
    cmp-long v7, v5, v7

    if-nez v7, :cond_1

    if-eqz v9, :cond_2

    iget-wide v7, v0, Lcom/android/server/power/stats/BatteryStatsImpl$RxTxConsumption;->txToTotalRatio:D

    cmpl-double v7, v7, v10

    if-eqz v7, :cond_2

    :cond_1
    long-to-double v5, v5

    iget-wide v7, v0, Lcom/android/server/power/stats/BatteryStatsImpl$RxTxConsumption;->txToTotalRatio:D

    long-to-double v3, v3

    mul-double/2addr v3, v7

    add-double/2addr v5, v3

    move-wide/from16 v3, p4

    long-to-double v3, v3

    long-to-double v1, v1

    mul-double/2addr v7, v1

    add-double/2addr v3, v7

    iget-wide v0, v0, Lcom/android/server/power/stats/BatteryStatsImpl$RxTxConsumption;->txConsumptionMah:D

    mul-double/2addr v0, v3

    div-double/2addr v0, v5

    add-double/2addr v12, v0

    :cond_2
    return-wide v12
.end method

.method public startAddingCpuStatsLocked()Z
    .locals 1

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mExternalSync:Lcom/android/server/power/stats/BatteryStatsImpl$ExternalStatsSync;

    invoke-interface {v0}, Lcom/android/server/power/stats/BatteryStatsImpl$ExternalStatsSync;->cancelCpuSyncDueToWakelockChange()V

    iget-boolean p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryInternal:Z

    return p0
.end method

.method public startTrackingSystemServerCpuTime()V
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSystemServerCpuThreadReader:Lcom/android/server/power/stats/SystemServerCpuThreadReader;

    invoke-virtual {p0}, Lcom/android/server/power/stats/SystemServerCpuThreadReader;->startTrackingThreadCpuTime()V

    return-void
.end method

.method public stopAllDisplayHighRefreshRateTimersLocked(IJ)V
    .locals 2

    const/4 v0, 0x0

    :goto_0
    const/4 v1, 0x4

    if-ge v0, v1, :cond_2

    if-ne v0, p1, :cond_0

    goto :goto_2

    :cond_0
    :goto_1
    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHighRefreshRateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v1, v1, v0

    invoke-virtual {v1}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v1

    if-eqz v1, :cond_1

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHighRefreshRateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v1, v1, v0

    invoke-virtual {v1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    goto :goto_1

    :cond_1
    :goto_2
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    :cond_2
    return-void
.end method

.method public stopAllGpsSignalQualityTimersLocked(IJ)V
    .locals 2

    const/4 v0, 0x0

    :goto_0
    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    array-length v1, v1

    if-ge v0, v1, :cond_2

    if-ne v0, p1, :cond_0

    goto :goto_2

    :cond_0
    :goto_1
    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v1, v1, v0

    invoke-virtual {v1}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v1

    if-eqz v1, :cond_1

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v1, v1, v0

    invoke-virtual {v1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    goto :goto_1

    :cond_1
    :goto_2
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    :cond_2
    return-void
.end method

.method public stopAllPhoneSignalStrengthTimersLocked(IJ)V
    .locals 2

    const/4 v0, 0x0

    :goto_0
    invoke-static {}, Landroid/telephony/CellSignalStrength;->getNumSignalStrengthLevels()I

    move-result v1

    if-ge v0, v1, :cond_2

    if-ne v0, p1, :cond_0

    goto :goto_2

    :cond_0
    :goto_1
    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v1, v1, v0

    invoke-virtual {v1}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v1

    if-eqz v1, :cond_1

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v1, v1, v0

    invoke-virtual {v1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    goto :goto_1

    :cond_1
    :goto_2
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    :cond_2
    return-void
.end method

.method public stopAllSubDisplayHighRefreshRateTimersLocked(IJ)V
    .locals 2

    const/4 v0, 0x0

    :goto_0
    const/4 v1, 0x4

    if-ge v0, v1, :cond_2

    if-ne v0, p1, :cond_0

    goto :goto_2

    :cond_0
    :goto_1
    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubHighRefreshRateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v1, v1, v0

    invoke-virtual {v1}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v1

    if-eqz v1, :cond_1

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubHighRefreshRateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v1, v1, v0

    invoke-virtual {v1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    goto :goto_1

    :cond_1
    :goto_2
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    :cond_2
    return-void
.end method

.method public stopAllWifiSignalStrengthTimersLocked(IJ)V
    .locals 2

    const/4 v0, 0x0

    :goto_0
    const/4 v1, 0x5

    if-ge v0, v1, :cond_2

    if-ne v0, p1, :cond_0

    goto :goto_2

    :cond_0
    :goto_1
    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v1, v1, v0

    invoke-virtual {v1}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v1

    if-eqz v1, :cond_1

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v1, v1, v0

    invoke-virtual {v1, p2, p3}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    goto :goto_1

    :cond_1
    :goto_2
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    :cond_2
    return-void
.end method

.method public systemServicesReady(Landroid/content/Context;)V
    .locals 5

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mConstants:Lcom/android/server/power/stats/BatteryStatsImpl$Constants;

    invoke-virtual {p1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v1

    invoke-virtual {v0, v1}, Lcom/android/server/power/stats/BatteryStatsImpl$Constants;->startObserving(Landroid/content/ContentResolver;)V

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->registerUsbStateReceiver(Landroid/content/Context;)V

    monitor-enter p0

    :try_start_0
    const-class v0, Landroid/app/AlarmManager;

    invoke-virtual {p1, v0}, Landroid/content/Context;->getSystemService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/app/AlarmManager;

    iput-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mAlarmManager:Landroid/app/AlarmManager;

    iget-boolean v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryPluggedIn:Z

    if-eqz v0, :cond_0

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->scheduleNextResetWhilePluggedInCheck()V

    :cond_0
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->registerWifiApStateReceiver(Landroid/content/Context;)V

    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSystemServicesReady:Z

    const/4 v1, 0x0

    iput-boolean v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsFold:Z

    iput-boolean v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsFlip:Z

    iput-boolean v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsFoldableDevice:Z

    iput-boolean v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsJdmModel:Z

    invoke-static {}, Lcom/samsung/android/feature/SemFloatingFeature;->getInstance()Lcom/samsung/android/feature/SemFloatingFeature;

    move-result-object v0

    const-string v2, "SEC_FLOATING_FEATURE_BATTERY_SUPPORT_LONGLIFE_FORCE_CUTOFF"

    invoke-virtual {v0, v2}, Lcom/samsung/android/feature/SemFloatingFeature;->getBoolean(Ljava/lang/String;)Z

    move-result v0

    iput-boolean v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsSupportProtectBattery:Z

    iget-boolean v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPendingReportCharging:Z

    if-eqz v0, :cond_1

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHandler:Landroid/os/Handler;

    const/4 v2, 0x3

    invoke-virtual {v0, v2}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    iput-boolean v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPendingReportCharging:Z

    :cond_1
    const-string/jumbo v0, "phone"

    invoke-virtual {p1, v0}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Landroid/telephony/TelephonyManager;

    iput-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mTelephonyManager:Landroid/telephony/TelephonyManager;

    new-instance p1, Lcom/android/server/power/stats/BatteryStatsImpl$CustomTelephonyCallback;

    const/4 v0, 0x0

    invoke-direct {p1, p0, v0}, Lcom/android/server/power/stats/BatteryStatsImpl$CustomTelephonyCallback;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl;Lcom/android/server/power/stats/BatteryStatsImpl$CustomTelephonyCallback-IA;)V

    iput-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCustomTelephonyCallback:Lcom/android/server/power/stats/BatteryStatsImpl$CustomTelephonyCallback;

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mTelephonyManager:Landroid/telephony/TelephonyManager;

    new-instance v0, Landroid/os/HandlerExecutor;

    iget-object v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHandler:Landroid/os/Handler;

    invoke-direct {v0, v2}, Landroid/os/HandlerExecutor;-><init>(Landroid/os/Handler;)V

    iget-object v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCustomTelephonyCallback:Lcom/android/server/power/stats/BatteryStatsImpl$CustomTelephonyCallback;

    invoke-virtual {p1, v0, v2}, Landroid/telephony/TelephonyManager;->registerTelephonyCallback(Ljava/util/concurrent/Executor;Landroid/telephony/TelephonyCallback;)V

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSystemDir:Ljava/io/File;

    if-eqz p1, :cond_3

    invoke-virtual {p1}, Ljava/io/File;->list()[Ljava/lang/String;

    move-result-object p1

    if-eqz p1, :cond_3

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSystemDir:Ljava/io/File;

    invoke-virtual {p1}, Ljava/io/File;->list()[Ljava/lang/String;

    move-result-object p1

    invoke-static {p1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    check-cast p1, [Ljava/lang/String;

    array-length v0, p1

    :goto_0
    if-ge v1, v0, :cond_3

    aget-object v2, p1, v1

    const-string v3, "BCheck"

    invoke-virtual {v2, v3}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v3

    if-eqz v3, :cond_2

    new-instance v3, Ljava/io/File;

    iget-object v4, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSystemDir:Ljava/io/File;

    invoke-direct {v3, v4, v2}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    invoke-virtual {v3}, Ljava/io/File;->delete()Z

    :cond_2
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    :cond_3
    return-void

    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw p1
.end method

.method public final trackPerProcStateCpuTimes()Z
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuUidFreqTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

    invoke-virtual {p0}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;->isFastCpuTimesReader()Z

    move-result p0

    return p0
.end method

.method public unregisterBatteryStatsCallbackLocked(Lcom/android/internal/app/IBatteryStatsCallback;)Z
    .locals 0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryStatsCallbacks:Landroid/os/RemoteCallbackList;

    invoke-virtual {p0, p1}, Landroid/os/RemoteCallbackList;->unregister(Landroid/os/IInterface;)Z

    move-result p0

    return p0
.end method

.method public final updateAllPhoneStateLocked(IIIJJ)V
    .locals 14

    move-object v0, p0

    move v1, p1

    move/from16 v2, p2

    move/from16 v3, p3

    move-wide/from16 v4, p4

    iput v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneServiceStateRaw:I

    iput v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneSimStateRaw:I

    iput v3, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneSignalStrengthBinRaw:I

    const/4 v6, 0x0

    const/4 v7, 0x1

    if-ne v2, v7, :cond_0

    if-ne v1, v7, :cond_0

    if-lez v3, :cond_0

    move v1, v6

    :cond_0
    const/4 v8, 0x3

    const/16 v9, 0x5e

    const/high16 v10, 0x200000

    const/4 v11, -0x1

    if-ne v1, v8, :cond_1

    move v8, v6

    move v12, v8

    move v13, v12

    move v3, v11

    goto :goto_1

    :cond_1
    if-nez v1, :cond_2

    goto :goto_0

    :cond_2
    if-ne v1, v7, :cond_4

    iget-object v3, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v3}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v3

    if-nez v3, :cond_3

    iget-object v3, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v3, v4, v5}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    invoke-static {v9, v1, v2, v6}, Lcom/android/internal/util/FrameworkStatsLog;->write(IIII)V

    move v3, v6

    move v12, v7

    move v13, v12

    move v8, v10

    goto :goto_1

    :cond_3
    move v3, v6

    move v8, v3

    move v13, v8

    move v12, v7

    goto :goto_1

    :cond_4
    :goto_0
    move v8, v6

    move v12, v8

    move v13, v12

    :goto_1
    if-nez v12, :cond_5

    iget-object v12, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v12}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v12

    if-eqz v12, :cond_5

    iget-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v6, v4, v5}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    invoke-static {v9, v1, v2, v3}, Lcom/android/internal/util/FrameworkStatsLog;->write(IIII)V

    move v13, v7

    move v6, v10

    :cond_5
    iget v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneServiceState:I

    if-eq v2, v1, :cond_6

    iput v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneServiceState:I

    move v9, v1

    move v13, v7

    goto :goto_2

    :cond_6
    move v9, v11

    :goto_2
    iget v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneSignalStrengthBin:I

    if-eq v1, v3, :cond_a

    if-ltz v1, :cond_7

    iget-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v1, v2, v1

    invoke-virtual {v1, v4, v5}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    :cond_7
    if-ltz v3, :cond_9

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v1, v1, v3

    invoke-virtual {v1}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v1

    if-nez v1, :cond_8

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v1, v1, v3

    invoke-virtual {v1, v4, v5}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    :cond_8
    const/16 v1, 0x28

    invoke-static {v1, v3}, Lcom/android/internal/util/FrameworkStatsLog;->write(II)V

    move v11, v3

    goto :goto_3

    :cond_9
    invoke-virtual {p0, v11, v4, v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->stopAllPhoneSignalStrengthTimersLocked(IJ)V

    move v7, v13

    :goto_3
    iput v3, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneSignalStrengthBin:I

    move v13, v7

    :cond_a
    if-eqz v13, :cond_b

    iget-object v0, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    move-wide/from16 v1, p4

    move-wide/from16 v3, p6

    move v5, v8

    move v7, v9

    move v8, v11

    invoke-virtual/range {v0 .. v8}, Lcom/android/internal/os/BatteryStatsHistory;->recordPhoneStateChangeEvent(JJIIII)V

    :cond_b
    return-void
.end method

.method public final updateBatteryPropertiesLocked()V
    .locals 0

    :try_start_0
    const-string p0, "batteryproperties"

    invoke-static {p0}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object p0

    invoke-static {p0}, Landroid/os/IBatteryPropertiesRegistrar$Stub;->asInterface(Landroid/os/IBinder;)Landroid/os/IBatteryPropertiesRegistrar;

    move-result-object p0

    if-eqz p0, :cond_0

    invoke-interface {p0}, Landroid/os/IBatteryPropertiesRegistrar;->scheduleUpdate()V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    :catch_0
    :cond_0
    return-void
.end method

.method public updateBluetoothStateLocked(Landroid/bluetooth/BluetoothActivityEnergyInfo;JJJ)V
    .locals 49

    move-object/from16 v9, p0

    move-object/from16 v10, p1

    move-wide/from16 v6, p2

    move-wide/from16 v11, p4

    if-nez v10, :cond_0

    return-void

    :cond_0
    iget-boolean v0, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryInternal:Z

    if-eqz v0, :cond_1e

    iget-boolean v0, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mIgnoreNextExternalStats:Z

    if-eqz v0, :cond_1

    goto/16 :goto_12

    :cond_1
    const/4 v0, 0x1

    iput-boolean v0, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mHasBluetoothReporting:Z

    invoke-virtual/range {p1 .. p1}, Landroid/bluetooth/BluetoothActivityEnergyInfo;->getControllerRxTimeMillis()J

    move-result-wide v1

    iget-object v3, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/server/power/stats/BatteryStatsImpl$BluetoothActivityInfoCache;

    iget-wide v3, v3, Lcom/android/server/power/stats/BatteryStatsImpl$BluetoothActivityInfoCache;->rxTimeMs:J

    cmp-long v1, v1, v3

    if-ltz v1, :cond_2

    invoke-virtual/range {p1 .. p1}, Landroid/bluetooth/BluetoothActivityEnergyInfo;->getControllerTxTimeMillis()J

    move-result-wide v1

    iget-object v3, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/server/power/stats/BatteryStatsImpl$BluetoothActivityInfoCache;

    iget-wide v3, v3, Lcom/android/server/power/stats/BatteryStatsImpl$BluetoothActivityInfoCache;->txTimeMs:J

    cmp-long v1, v1, v3

    if-ltz v1, :cond_2

    invoke-virtual/range {p1 .. p1}, Landroid/bluetooth/BluetoothActivityEnergyInfo;->getControllerIdleTimeMillis()J

    move-result-wide v1

    iget-object v3, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/server/power/stats/BatteryStatsImpl$BluetoothActivityInfoCache;

    iget-wide v3, v3, Lcom/android/server/power/stats/BatteryStatsImpl$BluetoothActivityInfoCache;->idleTimeMs:J

    cmp-long v1, v1, v3

    if-ltz v1, :cond_2

    invoke-virtual/range {p1 .. p1}, Landroid/bluetooth/BluetoothActivityEnergyInfo;->getControllerEnergyUsed()J

    move-result-wide v1

    iget-object v3, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/server/power/stats/BatteryStatsImpl$BluetoothActivityInfoCache;

    iget-wide v3, v3, Lcom/android/server/power/stats/BatteryStatsImpl$BluetoothActivityInfoCache;->energy:J

    cmp-long v1, v1, v3

    if-gez v1, :cond_3

    :cond_2
    iget-object v1, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/server/power/stats/BatteryStatsImpl$BluetoothActivityInfoCache;

    invoke-virtual {v1}, Lcom/android/server/power/stats/BatteryStatsImpl$BluetoothActivityInfoCache;->reset()V

    :cond_3
    invoke-virtual/range {p1 .. p1}, Landroid/bluetooth/BluetoothActivityEnergyInfo;->getControllerRxTimeMillis()J

    move-result-wide v1

    iget-object v3, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/server/power/stats/BatteryStatsImpl$BluetoothActivityInfoCache;

    iget-wide v3, v3, Lcom/android/server/power/stats/BatteryStatsImpl$BluetoothActivityInfoCache;->rxTimeMs:J

    sub-long v14, v1, v3

    invoke-virtual/range {p1 .. p1}, Landroid/bluetooth/BluetoothActivityEnergyInfo;->getControllerTxTimeMillis()J

    move-result-wide v1

    iget-object v3, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/server/power/stats/BatteryStatsImpl$BluetoothActivityInfoCache;

    iget-wide v3, v3, Lcom/android/server/power/stats/BatteryStatsImpl$BluetoothActivityInfoCache;->txTimeMs:J

    sub-long v4, v1, v3

    invoke-virtual/range {p1 .. p1}, Landroid/bluetooth/BluetoothActivityEnergyInfo;->getControllerIdleTimeMillis()J

    move-result-wide v1

    iget-object v3, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/server/power/stats/BatteryStatsImpl$BluetoothActivityInfoCache;

    move-wide/from16 v16, v4

    iget-wide v3, v3, Lcom/android/server/power/stats/BatteryStatsImpl$BluetoothActivityInfoCache;->idleTimeMs:J

    sub-long v4, v1, v3

    iget-object v1, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mGlobalEnergyConsumerStats:Lcom/android/internal/power/EnergyConsumerStats;

    const-wide/16 v18, 0x0

    if-eqz v1, :cond_4

    iget-object v1, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBluetoothPowerCalculator:Lcom/android/server/power/stats/BluetoothPowerCalculator;

    if-eqz v1, :cond_4

    cmp-long v1, v6, v18

    if-lez v1, :cond_4

    new-instance v1, Landroid/util/SparseDoubleArray;

    invoke-direct {v1}, Landroid/util/SparseDoubleArray;-><init>()V

    goto :goto_0

    :cond_4
    const/4 v1, 0x0

    :goto_0
    move-object v8, v1

    iget-object v1, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    move-wide/from16 v20, v18

    const/4 v2, 0x0

    :goto_1
    const-wide/16 v22, 0x3e8

    if-ge v2, v1, :cond_7

    iget-object v3, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v3, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    iget-object v0, v3, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mBluetoothScanTimer:Lcom/android/server/power/stats/BatteryStatsImpl$DualTimer;

    if-eqz v0, :cond_6

    iget-object v0, v3, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mBluetoothDutyScanTimer:Lcom/android/server/power/stats/BatteryStatsImpl$DutyTimer;

    if-nez v0, :cond_5

    goto :goto_2

    :cond_5
    move-wide/from16 v25, v14

    mul-long v13, v11, v22

    invoke-virtual {v0, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTimeSinceMarkLocked(J)J

    move-result-wide v27

    div-long v27, v27, v22

    add-long v20, v20, v27

    iget-object v0, v3, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mBluetoothScanTimer:Lcom/android/server/power/stats/BatteryStatsImpl$DualTimer;

    invoke-virtual {v0, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTimeSinceMarkLocked(J)J

    move-result-wide v13

    div-long v13, v13, v22

    goto :goto_3

    :cond_6
    :goto_2
    move-wide/from16 v25, v14

    :goto_3
    add-int/lit8 v2, v2, 0x1

    move-wide/from16 v14, v25

    const/4 v0, 0x1

    goto :goto_1

    :cond_7
    move-wide/from16 v25, v14

    cmp-long v0, v20, v25

    if-lez v0, :cond_8

    const/4 v0, 0x1

    goto :goto_4

    :cond_8
    const/4 v0, 0x0

    :goto_4
    cmp-long v2, v20, v16

    if-lez v2, :cond_9

    const/16 v24, 0x1

    goto :goto_5

    :cond_9
    const/16 v24, 0x0

    :goto_5
    new-instance v13, Landroid/util/SparseLongArray;

    invoke-direct {v13, v1}, Landroid/util/SparseLongArray;-><init>(I)V

    new-instance v14, Landroid/util/SparseLongArray;

    invoke-direct {v14, v1}, Landroid/util/SparseLongArray;-><init>(I)V

    move-wide/from16 v29, v16

    move-wide/from16 v27, v25

    const/4 v2, 0x0

    :goto_6
    if-ge v2, v1, :cond_10

    iget-object v3, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v3, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    iget-object v15, v3, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mBluetoothScanTimer:Lcom/android/server/power/stats/BatteryStatsImpl$DualTimer;

    if-eqz v15, :cond_f

    iget-object v15, v3, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mBluetoothDutyScanTimer:Lcom/android/server/power/stats/BatteryStatsImpl$DutyTimer;

    if-nez v15, :cond_a

    goto :goto_8

    :cond_a
    move-wide/from16 v31, v4

    mul-long v4, v11, v22

    invoke-virtual {v15, v4, v5}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTimeSinceMarkLocked(J)J

    move-result-wide v4

    div-long v4, v4, v22

    cmp-long v15, v4, v18

    if-lez v15, :cond_e

    iget-object v15, v3, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mBluetoothScanTimer:Lcom/android/server/power/stats/BatteryStatsImpl$DualTimer;

    invoke-virtual {v15, v11, v12}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->setMark(J)V

    iget-object v15, v3, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mBluetoothDutyScanTimer:Lcom/android/server/power/stats/BatteryStatsImpl$DutyTimer;

    invoke-virtual {v15, v11, v12}, Lcom/android/server/power/stats/BatteryStatsImpl$DutyTimer;->setMark(J)V

    if-eqz v0, :cond_b

    mul-long v33, v25, v4

    div-long v33, v33, v20

    move v15, v1

    move-wide/from16 v47, v33

    move/from16 v33, v0

    move-wide/from16 v0, v47

    goto :goto_7

    :cond_b
    move/from16 v33, v0

    move v15, v1

    move-wide v0, v4

    :goto_7
    if-eqz v24, :cond_c

    mul-long v4, v4, v16

    div-long v4, v4, v20

    :cond_c
    move/from16 v34, v15

    invoke-virtual {v3}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->getUid()I

    move-result v15

    invoke-virtual {v13, v15, v0, v1}, Landroid/util/SparseLongArray;->incrementValue(IJ)V

    invoke-virtual {v3}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->getUid()I

    move-result v15

    invoke-virtual {v14, v15, v4, v5}, Landroid/util/SparseLongArray;->incrementValue(IJ)V

    if-eqz v8, :cond_d

    invoke-virtual {v3}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->getUid()I

    move-result v3

    iget-object v15, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBluetoothPowerCalculator:Lcom/android/server/power/stats/BluetoothPowerCalculator;

    const-wide/16 v40, 0x0

    move-object/from16 v35, v15

    move-wide/from16 v36, v0

    move-wide/from16 v38, v4

    invoke-virtual/range {v35 .. v41}, Lcom/android/server/power/stats/BluetoothPowerCalculator;->calculatePowerMah(JJJ)D

    move-result-wide v6

    invoke-virtual {v8, v3, v6, v7}, Landroid/util/SparseDoubleArray;->incrementValue(ID)V

    :cond_d
    sub-long v27, v27, v0

    sub-long v29, v29, v4

    goto :goto_9

    :cond_e
    move/from16 v33, v0

    move/from16 v34, v1

    goto :goto_9

    :cond_f
    :goto_8
    move/from16 v33, v0

    move/from16 v34, v1

    move-wide/from16 v31, v4

    :goto_9
    add-int/lit8 v2, v2, 0x1

    move-wide/from16 v6, p2

    move-wide/from16 v4, v31

    move/from16 v0, v33

    move/from16 v1, v34

    goto/16 :goto_6

    :cond_10
    move-wide/from16 v31, v4

    invoke-virtual/range {p1 .. p1}, Landroid/bluetooth/BluetoothActivityEnergyInfo;->getUidTraffic()Ljava/util/List;

    move-result-object v6

    invoke-interface {v6}, Ljava/util/List;->size()I

    move-result v7

    move-wide/from16 v20, v18

    move-wide/from16 v22, v20

    const/4 v15, 0x0

    :goto_a
    if-ge v15, v7, :cond_11

    invoke-interface {v6, v15}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/bluetooth/UidTraffic;

    invoke-virtual {v0}, Landroid/bluetooth/UidTraffic;->getRxBytes()J

    move-result-wide v1

    iget-object v3, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/server/power/stats/BatteryStatsImpl$BluetoothActivityInfoCache;

    iget-object v3, v3, Lcom/android/server/power/stats/BatteryStatsImpl$BluetoothActivityInfoCache;->uidRxBytes:Landroid/util/SparseLongArray;

    invoke-virtual {v0}, Landroid/bluetooth/UidTraffic;->getUid()I

    move-result v5

    invoke-virtual {v3, v5}, Landroid/util/SparseLongArray;->get(I)J

    move-result-wide v33

    sub-long v2, v1, v33

    invoke-virtual {v0}, Landroid/bluetooth/UidTraffic;->getTxBytes()J

    move-result-wide v33

    iget-object v1, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/server/power/stats/BatteryStatsImpl$BluetoothActivityInfoCache;

    iget-object v1, v1, Lcom/android/server/power/stats/BatteryStatsImpl$BluetoothActivityInfoCache;->uidTxBytes:Landroid/util/SparseLongArray;

    invoke-virtual {v0}, Landroid/bluetooth/UidTraffic;->getUid()I

    move-result v5

    invoke-virtual {v1, v5}, Landroid/util/SparseLongArray;->get(I)J

    move-result-wide v35

    sub-long v4, v33, v35

    iget-object v1, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    const/16 v33, 0x4

    aget-object v1, v1, v33

    invoke-virtual {v1, v2, v3}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    iget-object v1, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    const/16 v24, 0x5

    aget-object v1, v1, v24

    invoke-virtual {v1, v4, v5}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    invoke-virtual {v0}, Landroid/bluetooth/UidTraffic;->getUid()I

    move-result v0

    invoke-virtual {v9, v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v1

    move-object/from16 v0, p0

    move-wide/from16 v33, v2

    move-wide/from16 v2, p4

    move-wide/from16 v43, v16

    move-wide/from16 v45, v31

    move-wide/from16 v16, v4

    move-wide/from16 v4, p6

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object v0

    const/16 v36, 0x4

    const-wide/16 v39, 0x0

    move-object/from16 v35, v0

    move-wide/from16 v37, v33

    invoke-virtual/range {v35 .. v40}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteNetworkActivityLocked(IJJ)V

    const/16 v38, 0x5

    const-wide/16 v41, 0x0

    move-object/from16 v37, v0

    move-wide/from16 v39, v16

    invoke-virtual/range {v37 .. v42}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteNetworkActivityLocked(IJJ)V

    add-long v22, v22, v33

    add-long v20, v20, v16

    add-int/lit8 v15, v15, 0x1

    move-wide/from16 v16, v43

    goto :goto_a

    :cond_11
    move-wide/from16 v43, v16

    move-wide/from16 v45, v31

    const/16 v24, 0x5

    cmp-long v15, v20, v18

    if-nez v15, :cond_13

    cmp-long v0, v22, v18

    if-eqz v0, :cond_12

    goto :goto_b

    :cond_12
    move-object v7, v8

    goto/16 :goto_10

    :cond_13
    :goto_b
    cmp-long v0, v27, v18

    if-nez v0, :cond_14

    cmp-long v0, v29, v18

    if-eqz v0, :cond_12

    :cond_14
    const/4 v4, 0x0

    :goto_c
    if-ge v4, v7, :cond_17

    invoke-interface {v6, v4}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/bluetooth/UidTraffic;

    invoke-virtual {v0}, Landroid/bluetooth/UidTraffic;->getUid()I

    move-result v5

    invoke-virtual {v0}, Landroid/bluetooth/UidTraffic;->getRxBytes()J

    move-result-wide v1

    iget-object v3, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/server/power/stats/BatteryStatsImpl$BluetoothActivityInfoCache;

    iget-object v3, v3, Lcom/android/server/power/stats/BatteryStatsImpl$BluetoothActivityInfoCache;->uidRxBytes:Landroid/util/SparseLongArray;

    invoke-virtual {v3, v5}, Landroid/util/SparseLongArray;->get(I)J

    move-result-wide v16

    sub-long v16, v1, v16

    invoke-virtual {v0}, Landroid/bluetooth/UidTraffic;->getTxBytes()J

    move-result-wide v0

    iget-object v2, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/server/power/stats/BatteryStatsImpl$BluetoothActivityInfoCache;

    iget-object v2, v2, Lcom/android/server/power/stats/BatteryStatsImpl$BluetoothActivityInfoCache;->uidTxBytes:Landroid/util/SparseLongArray;

    invoke-virtual {v2, v5}, Landroid/util/SparseLongArray;->get(I)J

    move-result-wide v2

    sub-long v31, v0, v2

    invoke-virtual {v9, v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v1

    move-object/from16 v0, p0

    move-wide/from16 v2, p4

    move-object/from16 v33, v6

    move/from16 v34, v7

    move/from16 v7, v24

    move/from16 v24, v4

    move v6, v5

    move-wide/from16 v4, p6

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->getOrCreateBluetoothControllerActivityLocked()Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;

    cmp-long v0, v22, v18

    if-lez v0, :cond_15

    cmp-long v0, v16, v18

    if-lez v0, :cond_15

    mul-long v16, v16, v27

    div-long v0, v16, v22

    invoke-virtual {v13, v6, v0, v1}, Landroid/util/SparseLongArray;->incrementValue(IJ)V

    :cond_15
    if-lez v15, :cond_16

    cmp-long v0, v31, v18

    if-lez v0, :cond_16

    mul-long v31, v31, v29

    div-long v0, v31, v20

    invoke-virtual {v14, v6, v0, v1}, Landroid/util/SparseLongArray;->incrementValue(IJ)V

    :cond_16
    add-int/lit8 v4, v24, 0x1

    move/from16 v24, v7

    move-object/from16 v6, v33

    move/from16 v7, v34

    goto :goto_c

    :cond_17
    move/from16 v7, v24

    const/4 v6, 0x0

    :goto_d
    invoke-virtual {v14}, Landroid/util/SparseLongArray;->size()I

    move-result v0

    if-ge v6, v0, :cond_19

    invoke-virtual {v14, v6}, Landroid/util/SparseLongArray;->keyAt(I)I

    move-result v15

    invoke-virtual {v14, v6}, Landroid/util/SparseLongArray;->valueAt(I)J

    move-result-wide v4

    move-object/from16 v0, p0

    move v1, v15

    move-wide/from16 v2, p4

    move-object/from16 v23, v8

    move-wide v7, v4

    move-wide/from16 v4, p6

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->getOrCreateBluetoothControllerActivityLocked()Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;

    move-result-object v0

    invoke-static {v0}, Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;->-$$Nest$mgetOrCreateTxTimeCounters(Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;)[Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;

    move-result-object v0

    const/4 v1, 0x0

    aget-object v0, v0, v1

    move v1, v15

    invoke-static {v0, v7, v8, v11, v12}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;->-$$Nest$mincrement(Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;JJ)V

    if-eqz v23, :cond_18

    iget-object v0, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBluetoothPowerCalculator:Lcom/android/server/power/stats/BluetoothPowerCalculator;

    const-wide/16 v17, 0x0

    const-wide/16 v21, 0x0

    move-object/from16 v16, v0

    move-wide/from16 v19, v7

    invoke-virtual/range {v16 .. v22}, Lcom/android/server/power/stats/BluetoothPowerCalculator;->calculatePowerMah(JJJ)D

    move-result-wide v2

    move-object/from16 v7, v23

    invoke-virtual {v7, v1, v2, v3}, Landroid/util/SparseDoubleArray;->incrementValue(ID)V

    goto :goto_e

    :cond_18
    move-object/from16 v7, v23

    :goto_e
    add-int/lit8 v6, v6, 0x1

    move-object v8, v7

    const/4 v7, 0x5

    goto :goto_d

    :cond_19
    move-object v7, v8

    const/4 v6, 0x0

    :goto_f
    invoke-virtual {v13}, Landroid/util/SparseLongArray;->size()I

    move-result v0

    if-ge v6, v0, :cond_1b

    invoke-virtual {v13, v6}, Landroid/util/SparseLongArray;->keyAt(I)I

    move-result v8

    invoke-virtual {v13, v6}, Landroid/util/SparseLongArray;->valueAt(I)J

    move-result-wide v4

    invoke-virtual {v13, v6}, Landroid/util/SparseLongArray;->keyAt(I)I

    move-result v1

    move-object/from16 v0, p0

    move-wide/from16 v2, p4

    move-object/from16 v23, v13

    move-wide v13, v4

    move-wide/from16 v4, p6

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->getOrCreateBluetoothControllerActivityLocked()Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;

    move-result-object v0

    invoke-static {v0}, Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;->-$$Nest$mgetOrCreateRxTimeCounter(Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;)Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;

    move-result-object v0

    invoke-static {v0, v13, v14, v11, v12}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;->-$$Nest$mincrement(Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;JJ)V

    if-eqz v7, :cond_1a

    iget-object v0, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBluetoothPowerCalculator:Lcom/android/server/power/stats/BluetoothPowerCalculator;

    const-wide/16 v19, 0x0

    const-wide/16 v21, 0x0

    move-object/from16 v16, v0

    move-wide/from16 v17, v13

    invoke-virtual/range {v16 .. v22}, Lcom/android/server/power/stats/BluetoothPowerCalculator;->calculatePowerMah(JJJ)D

    move-result-wide v0

    invoke-virtual {v7, v8, v0, v1}, Landroid/util/SparseDoubleArray;->incrementValue(ID)V

    :cond_1a
    add-int/lit8 v6, v6, 0x1

    move-object/from16 v13, v23

    goto :goto_f

    :cond_1b
    :goto_10
    iget-object v0, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBluetoothActivity:Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-static {v0}, Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;->-$$Nest$mgetOrCreateRxTimeCounter(Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;)Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;

    move-result-object v0

    move-wide/from16 v1, v25

    invoke-static {v0, v1, v2, v11, v12}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;->-$$Nest$mincrement(Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;JJ)V

    iget-object v0, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBluetoothActivity:Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-static {v0}, Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;->-$$Nest$mgetOrCreateTxTimeCounters(Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;)[Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;

    move-result-object v0

    const/4 v3, 0x0

    aget-object v0, v0, v3

    move-wide/from16 v3, v43

    invoke-static {v0, v3, v4, v11, v12}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;->-$$Nest$mincrement(Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;JJ)V

    iget-object v0, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBluetoothActivity:Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-static {v0}, Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;->-$$Nest$mgetOrCreateIdleTimeCounter(Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;)Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;

    move-result-object v0

    move-wide/from16 v5, v45

    invoke-static {v0, v5, v6, v11, v12}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;->-$$Nest$mincrement(Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;JJ)V

    iget-object v0, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    const-string v8, "bluetooth.controller.voltage"

    invoke-virtual {v0, v8}, Lcom/android/internal/os/PowerProfile;->getAveragePower(Ljava/lang/String;)D

    move-result-wide v13

    const-wide v15, 0x408f400000000000L    # 1000.0

    div-double/2addr v13, v15

    const-wide/16 v15, 0x0

    cmpl-double v0, v13, v15

    if-eqz v0, :cond_1c

    invoke-virtual/range {p1 .. p1}, Landroid/bluetooth/BluetoothActivityEnergyInfo;->getControllerEnergyUsed()J

    move-result-wide v15

    iget-object v0, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/server/power/stats/BatteryStatsImpl$BluetoothActivityInfoCache;

    iget-wide v11, v0, Lcom/android/server/power/stats/BatteryStatsImpl$BluetoothActivityInfoCache;->energy:J

    sub-long v11, v15, v11

    long-to-double v11, v11

    div-double/2addr v11, v13

    iget-object v0, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBluetoothActivity:Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v0}, Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;->getPowerCounter()Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v0

    double-to-long v13, v11

    invoke-virtual {v0, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    goto :goto_11

    :cond_1c
    move-wide v11, v15

    :goto_11
    if-eqz v7, :cond_1d

    iget-object v0, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mGlobalEnergyConsumerStats:Lcom/android/internal/power/EnergyConsumerStats;

    move-wide/from16 v14, p2

    const/4 v8, 0x5

    invoke-virtual {v0, v8, v14, v15}, Lcom/android/internal/power/EnergyConsumerStats;->updateStandardBucket(IJ)V

    iget-object v13, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mBluetoothPowerCalculator:Lcom/android/server/power/stats/BluetoothPowerCalculator;

    move-wide v14, v1

    move-wide/from16 v16, v3

    move-wide/from16 v18, v5

    invoke-virtual/range {v13 .. v19}, Lcom/android/server/power/stats/BluetoothPowerCalculator;->calculatePowerMah(JJJ)D

    move-result-wide v0

    const-wide v2, 0x414b774000000000L    # 3600000.0

    div-double/2addr v11, v2

    invoke-static {v0, v1, v11, v12}, Ljava/lang/Math;->max(DD)D

    move-result-wide v5

    const/4 v1, 0x5

    move-object/from16 v0, p0

    move-wide/from16 v2, p2

    move-object v4, v7

    move-wide/from16 v7, p4

    invoke-virtual/range {v0 .. v8}, Lcom/android/server/power/stats/BatteryStatsImpl;->distributeEnergyToUidsLocked(IJLandroid/util/SparseDoubleArray;DJ)V

    :cond_1d
    iget-object v0, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/server/power/stats/BatteryStatsImpl$BluetoothActivityInfoCache;

    invoke-virtual {v0, v10}, Lcom/android/server/power/stats/BatteryStatsImpl$BluetoothActivityInfoCache;->set(Landroid/bluetooth/BluetoothActivityEnergyInfo;)V

    return-void

    :cond_1e
    :goto_12
    iget-object v0, v9, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/server/power/stats/BatteryStatsImpl$BluetoothActivityInfoCache;

    invoke-virtual {v0, v10}, Lcom/android/server/power/stats/BatteryStatsImpl$BluetoothActivityInfoCache;->set(Landroid/bluetooth/BluetoothActivityEnergyInfo;)V

    return-void
.end method

.method public updateCameraEnergyConsumerStatsLocked(JJ)V
    .locals 14

    move-object v0, p0

    move-wide v2, p1

    move-wide/from16 v7, p3

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mGlobalEnergyConsumerStats:Lcom/android/internal/power/EnergyConsumerStats;

    if-nez v1, :cond_0

    return-void

    :cond_0
    iget-boolean v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryInternal:Z

    if-eqz v4, :cond_6

    const-wide/16 v4, 0x0

    cmp-long v6, v2, v4

    if-gtz v6, :cond_1

    goto :goto_3

    :cond_1
    iget-boolean v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIgnoreNextExternalStats:Z

    const/4 v9, 0x0

    if-eqz v6, :cond_3

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    :goto_0
    if-ge v9, v1, :cond_2

    iget-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v2, v9}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    invoke-static {v2, v7, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$mmarkCameraTimeUs(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;J)J

    add-int/lit8 v9, v9, 0x1

    goto :goto_0

    :cond_2
    return-void

    :cond_3
    const/16 v6, 0x8

    invoke-virtual {v1, v6, v2, v3}, Lcom/android/internal/power/EnergyConsumerStats;->updateStandardBucket(IJ)V

    new-instance v6, Landroid/util/SparseDoubleArray;

    invoke-direct {v6}, Landroid/util/SparseDoubleArray;-><init>()V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    :goto_1
    if-ge v9, v1, :cond_5

    iget-object v10, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v10, v9}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    invoke-static {v10, v7, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$mmarkCameraTimeUs(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;J)J

    move-result-wide v11

    cmp-long v13, v11, v4

    if-nez v13, :cond_4

    goto :goto_2

    :cond_4
    invoke-virtual {v10}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->getUid()I

    move-result v10

    long-to-double v11, v11

    invoke-virtual {v6, v10, v11, v12}, Landroid/util/SparseDoubleArray;->put(ID)V

    :goto_2
    add-int/lit8 v9, v9, 0x1

    goto :goto_1

    :cond_5
    const/16 v1, 0x8

    const-wide/16 v9, 0x0

    move-object v0, p0

    move-wide v2, p1

    move-object v4, v6

    move-wide v5, v9

    move-wide/from16 v7, p3

    invoke-virtual/range {v0 .. v8}, Lcom/android/server/power/stats/BatteryStatsImpl;->distributeEnergyToUidsLocked(IJLandroid/util/SparseDoubleArray;DJ)V

    :cond_6
    :goto_3
    return-void
.end method

.method public updateClusterSpeedTimes(Landroid/util/SparseLongArray;ZLcom/android/server/power/stats/BatteryStatsImpl$CpuDeltaPowerAccumulator;)V
    .locals 28

    move-object/from16 v6, p0

    move-object/from16 v7, p1

    iget-object v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelCpuSpeedReaders:[Lcom/android/internal/os/KernelCpuSpeedReader;

    array-length v8, v0

    new-array v9, v8, [[J

    const-wide/16 v0, 0x0

    move-wide v11, v0

    const/4 v2, 0x0

    :goto_0
    iget-object v3, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelCpuSpeedReaders:[Lcom/android/internal/os/KernelCpuSpeedReader;

    array-length v4, v3

    if-ge v2, v4, :cond_1

    aget-object v3, v3, v2

    invoke-virtual {v3}, Lcom/android/internal/os/KernelCpuSpeedReader;->readDelta()[J

    move-result-object v3

    aput-object v3, v9, v2

    if-eqz v3, :cond_0

    array-length v3, v3

    add-int/lit8 v3, v3, -0x1

    :goto_1
    if-ltz v3, :cond_0

    aget-object v4, v9, v2

    aget-wide v4, v4, v3

    add-long/2addr v11, v4

    add-int/lit8 v3, v3, -0x1

    goto :goto_1

    :cond_0
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    :cond_1
    cmp-long v0, v11, v0

    if-eqz v0, :cond_a

    invoke-virtual/range {p1 .. p1}, Landroid/util/SparseLongArray;->size()I

    move-result v13

    iget-object v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v0}, Lcom/android/internal/os/Clock;->elapsedRealtime()J

    move-result-wide v14

    iget-object v0, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v0}, Lcom/android/internal/os/Clock;->uptimeMillis()J

    move-result-wide v16

    const/4 v4, 0x0

    :goto_2
    if-ge v4, v13, :cond_a

    invoke-virtual {v7, v4}, Landroid/util/SparseLongArray;->keyAt(I)I

    move-result v1

    move-object/from16 v0, p0

    move-wide v2, v14

    move v10, v4

    move-wide/from16 v4, v16

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object v0

    invoke-virtual {v7, v10}, Landroid/util/SparseLongArray;->valueAt(I)J

    move-result-wide v1

    iget-object v3, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-virtual {v3}, Lcom/android/internal/os/PowerProfile;->getNumCpuClusters()I

    move-result v3

    iget-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    if-eqz v4, :cond_2

    array-length v4, v4

    if-eq v4, v3, :cond_3

    :cond_2
    new-array v3, v3, [[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    iput-object v3, v0, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    :cond_3
    const/4 v3, 0x0

    :goto_3
    if-ge v3, v8, :cond_9

    aget-object v4, v9, v3

    array-length v4, v4

    iget-object v5, v0, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    aget-object v7, v5, v3

    if-eqz v7, :cond_4

    array-length v7, v7

    if-eq v4, v7, :cond_5

    :cond_4
    new-array v7, v4, [Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    aput-object v7, v5, v3

    :cond_5
    aget-object v5, v5, v3

    const/4 v7, 0x0

    :goto_4
    if-ge v7, v4, :cond_8

    aget-object v18, v5, v7

    move/from16 v24, v4

    if-nez v18, :cond_6

    new-instance v4, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    move/from16 v25, v8

    iget-object v8, v6, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-direct {v4, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    aput-object v4, v5, v7

    goto :goto_5

    :cond_6
    move/from16 v25, v8

    :goto_5
    aget-object v4, v9, v3

    aget-wide v18, v4, v7

    mul-long v18, v18, v1

    move-wide/from16 v26, v1

    div-long v1, v18, v11

    aget-object v4, v5, v7

    move/from16 v8, p2

    invoke-virtual {v4, v1, v2, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(JZ)V

    if-eqz p3, :cond_7

    move-object/from16 v18, p3

    move-object/from16 v19, v0

    move/from16 v20, v3

    move/from16 v21, v7

    move-wide/from16 v22, v1

    invoke-virtual/range {v18 .. v23}, Lcom/android/server/power/stats/BatteryStatsImpl$CpuDeltaPowerAccumulator;->addCpuClusterSpeedDurationsMs(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;IIJ)V

    :cond_7
    add-int/lit8 v7, v7, 0x1

    move/from16 v4, v24

    move/from16 v8, v25

    move-wide/from16 v1, v26

    goto :goto_4

    :cond_8
    move-wide/from16 v26, v1

    move/from16 v25, v8

    move/from16 v8, p2

    add-int/lit8 v3, v3, 0x1

    move-object/from16 v7, p1

    move/from16 v8, v25

    goto :goto_3

    :cond_9
    move/from16 v25, v8

    move/from16 v8, p2

    add-int/lit8 v4, v10, 0x1

    move-object/from16 v7, p1

    move/from16 v8, v25

    goto/16 :goto_2

    :cond_a
    return-void
.end method

.method public final updateCpuEnergyConsumerStatsLocked([JLcom/android/server/power/stats/BatteryStatsImpl$CpuDeltaPowerAccumulator;)V
    .locals 22

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-object/from16 v2, p2

    iget-object v3, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mGlobalEnergyConsumerStats:Lcom/android/internal/power/EnergyConsumerStats;

    if-nez v3, :cond_0

    return-void

    :cond_0
    array-length v3, v1

    const-wide/16 v5, 0x0

    move-wide v10, v5

    const/4 v7, 0x0

    :goto_0
    if-ge v7, v3, :cond_1

    aget-wide v8, v1, v7

    add-long/2addr v10, v8

    add-int/lit8 v7, v7, 0x1

    goto :goto_0

    :cond_1
    cmp-long v7, v10, v5

    if-gtz v7, :cond_2

    return-void

    :cond_2
    iget-object v7, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v7}, Lcom/android/internal/os/Clock;->elapsedRealtime()J

    move-result-wide v18

    iget-object v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mGlobalEnergyConsumerStats:Lcom/android/internal/power/EnergyConsumerStats;

    const/4 v9, 0x3

    move-wide/from16 v12, v18

    invoke-virtual/range {v8 .. v13}, Lcom/android/internal/power/EnergyConsumerStats;->updateStandardBucket(IJJ)V

    new-array v0, v3, [D

    const/4 v7, 0x0

    :goto_1
    if-ge v7, v3, :cond_4

    iget-object v8, v2, Lcom/android/server/power/stats/BatteryStatsImpl$CpuDeltaPowerAccumulator;->totalClusterChargesMah:[D

    aget-wide v8, v8, v7

    const-wide/16 v10, 0x0

    cmpg-double v12, v8, v10

    if-gtz v12, :cond_3

    aput-wide v10, v0, v7

    goto :goto_2

    :cond_3
    aget-wide v10, v1, v7

    long-to-double v10, v10

    div-double/2addr v10, v8

    aput-wide v10, v0, v7

    :goto_2
    add-int/lit8 v7, v7, 0x1

    goto :goto_1

    :cond_4
    iget-object v1, v2, Lcom/android/server/power/stats/BatteryStatsImpl$CpuDeltaPowerAccumulator;->perUidCpuClusterChargesMah:Landroid/util/ArrayMap;

    invoke-virtual {v1}, Landroid/util/ArrayMap;->size()I

    move-result v1

    int-to-long v7, v1

    const/4 v1, 0x0

    :goto_3
    int-to-long v9, v1

    cmp-long v9, v9, v7

    if-gez v9, :cond_7

    iget-object v9, v2, Lcom/android/server/power/stats/BatteryStatsImpl$CpuDeltaPowerAccumulator;->perUidCpuClusterChargesMah:Landroid/util/ArrayMap;

    invoke-virtual {v9, v1}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v9

    move-object v12, v9

    check-cast v12, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    iget-object v9, v2, Lcom/android/server/power/stats/BatteryStatsImpl$CpuDeltaPowerAccumulator;->perUidCpuClusterChargesMah:Landroid/util/ArrayMap;

    invoke-virtual {v9, v1}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, [D

    move-wide v13, v5

    const/4 v10, 0x0

    :goto_4
    if-ge v10, v3, :cond_5

    aget-wide v15, v9, v10

    aget-wide v20, v0, v10

    mul-double v15, v15, v20

    const-wide/high16 v20, 0x3fe0000000000000L    # 0.5

    add-double v4, v15, v20

    double-to-long v4, v4

    add-long/2addr v13, v4

    add-int/lit8 v10, v10, 0x1

    const-wide/16 v5, 0x0

    goto :goto_4

    :cond_5
    move-wide v4, v5

    cmp-long v6, v13, v4

    if-gez v6, :cond_6

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Unexpected proportional EnergyConsumer charge ("

    invoke-virtual {v6, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v13, v14}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v9, ") for uid "

    invoke-virtual {v6, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v9, v12, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mUid:I

    invoke-virtual {v6, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    const-string v9, "BatteryStatsImpl"

    invoke-static {v9, v6}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_5

    :cond_6
    const/4 v15, 0x3

    move-wide/from16 v16, v18

    invoke-static/range {v12 .. v17}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$maddChargeToStandardBucketLocked(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;JIJ)V

    :goto_5
    add-int/lit8 v1, v1, 0x1

    move-wide v5, v4

    goto :goto_3

    :cond_7
    return-void
.end method

.method public updateCpuTimeLocked(ZZ[J)V
    .locals 6

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    if-nez v0, :cond_0

    return-void

    :cond_0
    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuFreqs:[J

    if-nez v1, :cond_1

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuUidFreqTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

    invoke-virtual {v1, v0}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;->readFreqs(Lcom/android/internal/os/PowerProfile;)[J

    move-result-object v0

    iput-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuFreqs:[J

    :cond_1
    const/4 v0, 0x0

    if-eqz p2, :cond_3

    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    iget-object v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    add-int/lit8 v2, v2, -0x1

    :goto_0
    if-ltz v2, :cond_4

    iget-object v3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    iget-boolean v4, v3, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->mInList:Z

    if-eqz v4, :cond_2

    iget-object v4, v3, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->mUid:Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    if-eqz v4, :cond_2

    iget v4, v4, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mUid:I

    const/16 v5, 0x3e8

    if-eq v4, v5, :cond_2

    invoke-virtual {v1, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    :cond_2
    add-int/lit8 v2, v2, -0x1

    goto :goto_0

    :cond_3
    move-object v1, v0

    :cond_4
    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->markPartialTimersAsEligible()V

    if-nez p1, :cond_7

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuUidUserSysTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;

    const/4 p2, 0x0

    invoke-virtual {p1, p2, v0}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidUserSysTimeReader;->readDelta(ZLcom/android/internal/os/KernelCpuUidTimeReader$Callback;)V

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuUidFreqTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

    invoke-virtual {p1, p2, v0}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;->readDelta(ZLcom/android/internal/os/KernelCpuUidTimeReader$Callback;)V

    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNumAllUidCpuTimeReads:I

    add-int/lit8 p1, p1, 0x2

    iput p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNumAllUidCpuTimeReads:I

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mConstants:Lcom/android/server/power/stats/BatteryStatsImpl$Constants;

    iget-boolean p1, p1, Lcom/android/server/power/stats/BatteryStatsImpl$Constants;->TRACK_CPU_ACTIVE_CLUSTER_TIME:Z

    if-eqz p1, :cond_5

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuUidActiveTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;

    invoke-virtual {p1, p2, v0}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidActiveTimeReader;->readDelta(ZLcom/android/internal/os/KernelCpuUidTimeReader$Callback;)V

    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuUidClusterTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;

    invoke-virtual {p1, p2, v0}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidClusterTimeReader;->readDelta(ZLcom/android/internal/os/KernelCpuUidTimeReader$Callback;)V

    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNumAllUidCpuTimeReads:I

    add-int/lit8 p1, p1, 0x2

    iput p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNumAllUidCpuTimeReads:I

    :cond_5
    iget-object p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelCpuSpeedReaders:[Lcom/android/internal/os/KernelCpuSpeedReader;

    array-length p1, p1

    add-int/lit8 p1, p1, -0x1

    :goto_1
    if-ltz p1, :cond_6

    iget-object p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelCpuSpeedReaders:[Lcom/android/internal/os/KernelCpuSpeedReader;

    aget-object p2, p2, p1

    invoke-virtual {p2}, Lcom/android/internal/os/KernelCpuSpeedReader;->readDelta()[J

    add-int/lit8 p1, p1, -0x1

    goto :goto_1

    :cond_6
    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSystemServerCpuThreadReader:Lcom/android/server/power/stats/SystemServerCpuThreadReader;

    invoke-virtual {p0}, Lcom/android/server/power/stats/SystemServerCpuThreadReader;->readDelta()Lcom/android/server/power/stats/SystemServerCpuThreadReader$SystemServiceCpuThreadTimes;

    return-void

    :cond_7
    iget-object v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUserInfoProvider:Lcom/android/server/power/stats/BatteryStatsImpl$UserInfoProvider;

    invoke-virtual {v2}, Lcom/android/server/power/stats/BatteryStatsImpl$UserInfoProvider;->refreshUserIds()V

    iget-object v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuUidFreqTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

    invoke-virtual {v2}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;->perClusterTimesAvailable()Z

    move-result v2

    if-eqz v2, :cond_8

    move-object v2, v0

    goto :goto_2

    :cond_8
    new-instance v2, Landroid/util/SparseLongArray;

    invoke-direct {v2}, Landroid/util/SparseLongArray;-><init>()V

    :goto_2
    iget-object v3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mGlobalEnergyConsumerStats:Lcom/android/internal/power/EnergyConsumerStats;

    if-eqz v3, :cond_a

    const/4 v4, 0x3

    invoke-virtual {v3, v4}, Lcom/android/internal/power/EnergyConsumerStats;->isStandardBucketSupported(I)Z

    move-result v3

    if-eqz v3, :cond_a

    iget-object v3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuPowerCalculator:Lcom/android/server/power/stats/CpuPowerCalculator;

    if-eqz v3, :cond_a

    if-nez p3, :cond_9

    const-string v3, "BatteryStatsImpl"

    const-string v4, "POWER_BUCKET_CPU supported but no EnergyConsumer Cpu Cluster charge reported on updateCpuTimeLocked!"

    invoke-static {v3, v4}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_3

    :cond_9
    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-virtual {v0}, Lcom/android/internal/os/PowerProfile;->getNumCpuClusters()I

    move-result v0

    new-instance v3, Lcom/android/server/power/stats/BatteryStatsImpl$CpuDeltaPowerAccumulator;

    iget-object v4, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuPowerCalculator:Lcom/android/server/power/stats/CpuPowerCalculator;

    invoke-direct {v3, v4, v0}, Lcom/android/server/power/stats/BatteryStatsImpl$CpuDeltaPowerAccumulator;-><init>(Lcom/android/server/power/stats/CpuPowerCalculator;I)V

    move-object v0, v3

    :cond_a
    :goto_3
    invoke-virtual {p0, v1, v2, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->readKernelUidCpuTimesLocked(Ljava/util/ArrayList;Landroid/util/SparseLongArray;Z)V

    if-eqz v2, :cond_b

    invoke-virtual {p0, v2, p1, v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->updateClusterSpeedTimes(Landroid/util/SparseLongArray;ZLcom/android/server/power/stats/BatteryStatsImpl$CpuDeltaPowerAccumulator;)V

    :cond_b
    invoke-virtual {p0, v1, p1, p2, v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->readKernelUidCpuFreqTimesLocked(Ljava/util/ArrayList;ZZLcom/android/server/power/stats/BatteryStatsImpl$CpuDeltaPowerAccumulator;)V

    iget p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNumAllUidCpuTimeReads:I

    add-int/lit8 p2, p2, 0x2

    iput p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNumAllUidCpuTimeReads:I

    iget-object p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mConstants:Lcom/android/server/power/stats/BatteryStatsImpl$Constants;

    iget-boolean p2, p2, Lcom/android/server/power/stats/BatteryStatsImpl$Constants;->TRACK_CPU_ACTIVE_CLUSTER_TIME:Z

    if-eqz p2, :cond_c

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->readKernelUidCpuActiveTimesLocked(Z)V

    invoke-virtual {p0, p1, v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->readKernelUidCpuClusterTimesLocked(ZLcom/android/server/power/stats/BatteryStatsImpl$CpuDeltaPowerAccumulator;)V

    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNumAllUidCpuTimeReads:I

    add-int/lit8 p1, p1, 0x2

    iput p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNumAllUidCpuTimeReads:I

    :cond_c
    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->updateSystemServerThreadStats()V

    if-eqz v0, :cond_d

    invoke-virtual {p0, p3, v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->updateCpuEnergyConsumerStatsLocked([JLcom/android/server/power/stats/BatteryStatsImpl$CpuDeltaPowerAccumulator;)V

    :cond_d
    return-void
.end method

.method public updateCpuTimesForAllUids()V
    .locals 17

    move-object/from16 v8, p0

    monitor-enter p0

    :try_start_0
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->trackPerProcStateCpuTimes()Z

    move-result v0

    if-nez v0, :cond_0

    monitor-exit p0

    return-void

    :cond_0
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->initKernelSingleUidTimeReaderLocked()Z

    move-result v0

    if-nez v0, :cond_1

    monitor-exit p0

    return-void

    :cond_1
    iget-object v0, v8, Lcom/android/server/power/stats/BatteryStatsImpl;->mCpuUidFreqTimeReader:Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;

    invoke-virtual {v0}, Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;->getAllUidCpuFreqTimeMs()Landroid/util/SparseArray;

    move-result-object v0

    invoke-virtual {v0}, Landroid/util/SparseArray;->size()I

    move-result v1

    add-int/lit8 v1, v1, -0x1

    move v9, v1

    :goto_0
    if-ltz v9, :cond_9

    invoke-virtual {v0, v9}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v7

    invoke-virtual {v8, v7}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v10

    invoke-virtual {v8, v10}, Lcom/android/server/power/stats/BatteryStatsImpl;->getAvailableUidStatsLocked(I)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object v1

    if-nez v1, :cond_3

    :cond_2
    :goto_1
    move-object/from16 v16, v0

    goto/16 :goto_4

    :cond_3
    iget v2, v1, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mProcessState:I

    const/4 v3, 0x7

    if-ne v2, v3, :cond_4

    goto :goto_1

    :cond_4
    iget-object v2, v8, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v2}, Lcom/android/internal/os/Clock;->elapsedRealtime()J

    move-result-wide v11

    iget-object v2, v8, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v2}, Lcom/android/internal/os/Clock;->uptimeMillis()J

    move-result-wide v13

    invoke-static {v1, v11, v12}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$mgetProcStateTimeCounter(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;J)Lcom/android/server/power/stats/BatteryStatsImpl$TimeInFreqMultiStateCounter;

    move-result-object v2

    invoke-virtual {v2}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeInFreqMultiStateCounter;->getCounter()Lcom/android/internal/os/LongArrayMultiStateCounter;

    move-result-object v15

    invoke-static {v1, v11, v12}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$mgetProcStateScreenOffTimeCounter(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;J)Lcom/android/server/power/stats/BatteryStatsImpl$TimeInFreqMultiStateCounter;

    move-result-object v2

    invoke-virtual {v2}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeInFreqMultiStateCounter;->getCounter()Lcom/android/internal/os/LongArrayMultiStateCounter;

    move-result-object v6

    if-eq v7, v10, :cond_7

    invoke-static {v7}, Landroid/os/Process;->isSdkSandboxUid(I)Z

    move-result v2

    if-eqz v2, :cond_5

    goto :goto_2

    :cond_5
    invoke-virtual {v1, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->getChildUid(I)Lcom/android/server/power/stats/BatteryStatsImpl$Uid$ChildUid;

    move-result-object v1

    if-eqz v1, :cond_2

    iget-object v3, v1, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$ChildUid;->cpuTimeInFreqCounter:Lcom/android/internal/os/LongArrayMultiStateCounter;

    if-eqz v3, :cond_2

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getCpuTimeInFreqContainer()Lcom/android/internal/os/LongArrayMultiStateCounter$LongArrayContainer;

    move-result-object v10

    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelSingleUidTimeReader:Lcom/android/internal/os/KernelSingleUidTimeReader;

    move v2, v7

    move-wide v4, v11

    move-object/from16 v16, v0

    move-object v0, v6

    move-object v6, v10

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/KernelSingleUidTimeReader;->addDelta(ILcom/android/internal/os/LongArrayMultiStateCounter;JLcom/android/internal/os/LongArrayMultiStateCounter$LongArrayContainer;)V

    invoke-virtual {v15, v10}, Lcom/android/internal/os/LongArrayMultiStateCounter;->addCounts(Lcom/android/internal/os/LongArrayMultiStateCounter$LongArrayContainer;)V

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->isUsageHistoryEnabled()Z

    move-result v1

    if-eqz v1, :cond_6

    move-object/from16 v1, p0

    move v2, v7

    move-object v3, v10

    move-wide v4, v11

    move-wide v6, v13

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/power/stats/BatteryStatsImpl;->recordCpuUsage(ILcom/android/internal/os/LongArrayMultiStateCounter$LongArrayContainer;JJ)V

    :cond_6
    invoke-virtual {v0, v10}, Lcom/android/internal/os/LongArrayMultiStateCounter;->addCounts(Lcom/android/internal/os/LongArrayMultiStateCounter$LongArrayContainer;)V

    goto :goto_4

    :cond_7
    :goto_2
    move-object/from16 v16, v0

    move-object v0, v6

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->isUsageHistoryEnabled()Z

    move-result v1

    if-eqz v1, :cond_8

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getCpuTimeInFreqContainer()Lcom/android/internal/os/LongArrayMultiStateCounter$LongArrayContainer;

    move-result-object v7

    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelSingleUidTimeReader:Lcom/android/internal/os/KernelSingleUidTimeReader;

    move v2, v10

    move-object v3, v15

    move-wide v4, v11

    move-object v6, v7

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/KernelSingleUidTimeReader;->addDelta(ILcom/android/internal/os/LongArrayMultiStateCounter;JLcom/android/internal/os/LongArrayMultiStateCounter$LongArrayContainer;)V

    move-object/from16 v1, p0

    move v2, v10

    move-object v3, v7

    move-wide v4, v11

    move-wide v6, v13

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/power/stats/BatteryStatsImpl;->recordCpuUsage(ILcom/android/internal/os/LongArrayMultiStateCounter$LongArrayContainer;JJ)V

    goto :goto_3

    :cond_8
    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelSingleUidTimeReader:Lcom/android/internal/os/KernelSingleUidTimeReader;

    invoke-virtual {v1, v10, v15, v11, v12}, Lcom/android/internal/os/KernelSingleUidTimeReader;->addDelta(ILcom/android/internal/os/LongArrayMultiStateCounter;J)V

    :goto_3
    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelSingleUidTimeReader:Lcom/android/internal/os/KernelSingleUidTimeReader;

    invoke-virtual {v1, v10, v0, v11, v12}, Lcom/android/internal/os/KernelSingleUidTimeReader;->addDelta(ILcom/android/internal/os/LongArrayMultiStateCounter;J)V

    :goto_4
    add-int/lit8 v9, v9, -0x1

    move-object/from16 v0, v16

    goto/16 :goto_0

    :cond_9
    monitor-exit p0

    return-void

    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public updateCustomEnergyConsumerStatsLocked(IJLandroid/util/SparseLongArray;)V
    .locals 8

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mGlobalEnergyConsumerStats:Lcom/android/internal/power/EnergyConsumerStats;

    if-nez v0, :cond_0

    return-void

    :cond_0
    iget-boolean v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryInternal:Z

    if-eqz v1, :cond_6

    iget-boolean v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIgnoreNextExternalStats:Z

    if-nez v1, :cond_6

    const-wide/16 v6, 0x0

    cmp-long v1, p2, v6

    if-gtz v1, :cond_1

    goto :goto_2

    :cond_1
    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v1}, Lcom/android/internal/os/Clock;->elapsedRealtime()J

    move-result-wide v4

    move v1, p1

    move-wide v2, p2

    invoke-virtual/range {v0 .. v5}, Lcom/android/internal/power/EnergyConsumerStats;->updateCustomBucket(IJJ)V

    if-nez p4, :cond_2

    return-void

    :cond_2
    invoke-virtual {p4}, Landroid/util/SparseLongArray;->size()I

    move-result v0

    const/4 v1, 0x0

    :goto_0
    if-ge v1, v0, :cond_6

    invoke-virtual {p4, v1}, Landroid/util/SparseLongArray;->keyAt(I)I

    move-result v2

    invoke-virtual {p0, v2}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v2

    invoke-virtual {p4, v1}, Landroid/util/SparseLongArray;->valueAt(I)J

    move-result-wide v3

    cmp-long v5, v3, v6

    if-nez v5, :cond_3

    goto :goto_1

    :cond_3
    invoke-virtual {p0, v2}, Lcom/android/server/power/stats/BatteryStatsImpl;->getAvailableUidStatsLocked(I)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object v5

    if-eqz v5, :cond_4

    invoke-static {v5, v3, v4, p1}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$maddChargeToCustomBucketLocked(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;JI)V

    goto :goto_1

    :cond_4
    invoke-static {v2}, Landroid/os/Process;->isIsolated(I)Z

    move-result v3

    if-nez v3, :cond_5

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Received EnergyConsumer charge "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p2, p3}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v4, " for custom bucket "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, " for non-existent uid "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    const-string v3, "BatteryStatsImpl"

    invoke-static {v3, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    :cond_5
    :goto_1
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    :cond_6
    :goto_2
    return-void
.end method

.method public updateDailyDeadlineLocked()V
    .locals 5

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v0}, Lcom/android/internal/os/Clock;->currentTimeMillis()J

    move-result-wide v0

    iput-wide v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDailyStartTimeMs:J

    invoke-static {}, Ljava/util/Calendar;->getInstance()Ljava/util/Calendar;

    move-result-object v2

    invoke-virtual {v2, v0, v1}, Ljava/util/Calendar;->setTimeInMillis(J)V

    const/4 v0, 0x6

    invoke-virtual {v2, v0}, Ljava/util/Calendar;->get(I)I

    move-result v1

    const/4 v3, 0x1

    add-int/2addr v1, v3

    invoke-virtual {v2, v0, v1}, Ljava/util/Calendar;->set(II)V

    const/16 v0, 0xe

    const/4 v1, 0x0

    invoke-virtual {v2, v0, v1}, Ljava/util/Calendar;->set(II)V

    const/16 v0, 0xd

    invoke-virtual {v2, v0, v1}, Ljava/util/Calendar;->set(II)V

    const/16 v0, 0xc

    invoke-virtual {v2, v0, v1}, Ljava/util/Calendar;->set(II)V

    const/16 v0, 0xb

    invoke-virtual {v2, v0, v3}, Ljava/util/Calendar;->set(II)V

    invoke-virtual {v2}, Ljava/util/Calendar;->getTimeInMillis()J

    move-result-wide v3

    iput-wide v3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNextMinDailyDeadlineMs:J

    const/4 v1, 0x3

    invoke-virtual {v2, v0, v1}, Ljava/util/Calendar;->set(II)V

    invoke-virtual {v2}, Ljava/util/Calendar;->getTimeInMillis()J

    move-result-wide v0

    iput-wide v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNextMaxDailyDeadlineMs:J

    return-void
.end method

.method public updateDischargeScreenLevelsLocked(II)V
    .locals 2

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->updateOldDischargeScreenLevelLocked(I)V

    invoke-virtual {p0, p2}, Lcom/android/server/power/stats/BatteryStatsImpl;->updateNewDischargeScreenLevelLocked(I)V

    invoke-static {}, Lcom/android/internal/os/BackgroundThread;->getHandler()Landroid/os/Handler;

    move-result-object v0

    new-instance v1, Lcom/android/server/power/stats/BatteryStatsImpl$6;

    invoke-direct {v1, p0, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$6;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl;II)V

    invoke-virtual {v0, v1}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    return-void
.end method

.method public updateDischargeSubScreenLevelsLocked(II)V
    .locals 2

    invoke-static {}, Lcom/android/internal/os/BackgroundThread;->getHandler()Landroid/os/Handler;

    move-result-object v0

    new-instance v1, Lcom/android/server/power/stats/BatteryStatsImpl$7;

    invoke-direct {v1, p0, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$7;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl;II)V

    invoke-virtual {v0, v1}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    return-void
.end method

.method public updateDisplayEnergyConsumerStatsLocked([J[IJ)V
    .locals 15

    move-object v0, p0

    move-object/from16 v1, p2

    move-wide/from16 v7, p3

    iget-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mGlobalEnergyConsumerStats:Lcom/android/internal/power/EnergyConsumerStats;

    if-nez v2, :cond_0

    return-void

    :cond_0
    iget-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPerDisplayBatteryStats:[Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;

    array-length v2, v2

    array-length v3, v1

    if-ne v2, v3, :cond_1

    array-length v2, v1

    goto :goto_0

    :cond_1
    iget v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDisplayMismatchWtfCount:I

    add-int/lit8 v3, v2, 0x1

    iput v3, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDisplayMismatchWtfCount:I

    rem-int/lit8 v2, v2, 0x64

    if-nez v2, :cond_2

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Mismatch between PowerProfile reported display count ("

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v3, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPerDisplayBatteryStats:[Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;

    array-length v3, v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ") and PowerStatsHal reported display count ("

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    array-length v3, v1

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ")"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    const-string v3, "BatteryStatsImpl"

    invoke-static {v3, v2}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    :cond_2
    iget-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPerDisplayBatteryStats:[Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;

    array-length v3, v2

    array-length v4, v1

    if-ge v3, v4, :cond_3

    array-length v2, v2

    goto :goto_0

    :cond_3
    array-length v2, v1

    :goto_0
    new-array v3, v2, [I

    const/4 v4, 0x0

    move v5, v4

    :goto_1
    if-ge v5, v2, :cond_4

    aget v6, v1, v5

    iget-object v9, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPerDisplayBatteryStats:[Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;

    aget-object v9, v9, v5

    iget v10, v9, Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;->screenStateAtLastEnergyMeasurement:I

    aput v10, v3, v5

    iput v6, v9, Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;->screenStateAtLastEnergyMeasurement:I

    add-int/lit8 v5, v5, 0x1

    goto :goto_1

    :cond_4
    iget-boolean v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryInternal:Z

    if-nez v1, :cond_5

    return-void

    :cond_5
    iget-boolean v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIgnoreNextExternalStats:Z

    if-eqz v1, :cond_7

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    move v2, v4

    :goto_2
    if-ge v2, v1, :cond_6

    iget-object v3, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v3, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    invoke-static {v3, v7, v8, v4}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$mmarkProcessForegroundTimeUs(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;JZ)J

    add-int/lit8 v2, v2, 0x1

    goto :goto_2

    :cond_6
    return-void

    :cond_7
    const-wide/16 v5, 0x0

    move v1, v4

    move-wide v9, v5

    :goto_3
    if-ge v1, v2, :cond_a

    aget-wide v11, p1, v1

    cmp-long v13, v11, v5

    if-gtz v13, :cond_8

    goto :goto_4

    :cond_8
    aget v13, v3, v1

    invoke-static {v13}, Lcom/android/internal/power/EnergyConsumerStats;->getDisplayPowerBucket(I)I

    move-result v13

    iget-object v14, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mGlobalEnergyConsumerStats:Lcom/android/internal/power/EnergyConsumerStats;

    invoke-virtual {v14, v13, v11, v12}, Lcom/android/internal/power/EnergyConsumerStats;->updateStandardBucket(IJ)V

    if-nez v13, :cond_9

    add-long/2addr v9, v11

    :cond_9
    :goto_4
    add-int/lit8 v1, v1, 0x1

    goto :goto_3

    :cond_a
    cmp-long v1, v9, v5

    if-gtz v1, :cond_b

    return-void

    :cond_b
    new-instance v11, Landroid/util/SparseDoubleArray;

    invoke-direct {v11}, Landroid/util/SparseDoubleArray;-><init>()V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    :goto_5
    if-ge v4, v1, :cond_d

    iget-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v2, v4}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    const/4 v3, 0x1

    invoke-static {v2, v7, v8, v3}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$mmarkProcessForegroundTimeUs(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;JZ)J

    move-result-wide v12

    cmp-long v3, v12, v5

    if-nez v3, :cond_c

    goto :goto_6

    :cond_c
    invoke-virtual {v2}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->getUid()I

    move-result v2

    long-to-double v12, v12

    invoke-virtual {v11, v2, v12, v13}, Landroid/util/SparseDoubleArray;->put(ID)V

    :goto_6
    add-int/lit8 v4, v4, 0x1

    goto :goto_5

    :cond_d
    const/4 v1, 0x0

    const-wide/16 v5, 0x0

    move-object v0, p0

    move-wide v2, v9

    move-object v4, v11

    move-wide/from16 v7, p3

    invoke-virtual/range {v0 .. v8}, Lcom/android/server/power/stats/BatteryStatsImpl;->distributeEnergyToUidsLocked(IJLandroid/util/SparseDoubleArray;DJ)V

    return-void
.end method

.method public updateForegroundAppEnergyInfoLocked(Ljava/util/List;)V
    .locals 20

    move-object/from16 v0, p0

    if-nez p1, :cond_0

    return-void

    :cond_0
    new-instance v1, Landroid/util/SparseBooleanArray;

    invoke-direct {v1}, Landroid/util/SparseBooleanArray;-><init>()V

    iget-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v2}, Lcom/android/internal/os/Clock;->elapsedRealtime()J

    move-result-wide v2

    invoke-interface/range {p1 .. p1}, Ljava/util/List;->size()I

    move-result v4

    const/4 v5, 0x1

    if-lez v4, :cond_2

    invoke-interface/range {p1 .. p1}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v4

    const-wide/16 v8, 0x0

    :cond_1
    :goto_0
    invoke-interface {v4}, Ljava/util/Iterator;->hasNext()Z

    move-result v10

    if-eqz v10, :cond_3

    invoke-interface {v4}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Landroid/os/ForegroundAppEnergyInfo;

    invoke-virtual {v10}, Landroid/os/ForegroundAppEnergyInfo;->getUid()I

    move-result v11

    if-eqz v11, :cond_1

    invoke-virtual {v10}, Landroid/os/ForegroundAppEnergyInfo;->getUid()I

    move-result v11

    invoke-virtual {v1, v11, v5}, Landroid/util/SparseBooleanArray;->put(IZ)V

    invoke-virtual {v10}, Landroid/os/ForegroundAppEnergyInfo;->getDisplayPower()I

    move-result v10

    int-to-long v10, v10

    add-long/2addr v8, v10

    goto :goto_0

    :cond_2
    const-wide/16 v8, 0x0

    :cond_3
    iget-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    move-result v4

    const/4 v10, 0x0

    move v11, v10

    const-wide/16 v12, 0x0

    :goto_1
    const-wide/16 v14, 0x3e8

    if-ge v11, v4, :cond_7

    iget-object v5, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v5, v11}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    iget-object v6, v5, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mForegroundActivityTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    if-nez v6, :cond_4

    goto :goto_2

    :cond_4
    iget-object v6, v5, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mProcessStateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v6, v6, v10

    if-nez v6, :cond_5

    goto :goto_2

    :cond_5
    invoke-virtual {v5}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->getUid()I

    move-result v6

    invoke-virtual {v1, v6}, Landroid/util/SparseBooleanArray;->get(I)Z

    move-result v6

    if-nez v6, :cond_6

    goto :goto_2

    :cond_6
    mul-long/2addr v14, v2

    invoke-virtual {v0, v5, v14, v15}, Lcom/android/server/power/stats/BatteryStatsImpl;->getProcessForegroundTimeMsLocked(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;J)J

    move-result-wide v5

    add-long/2addr v12, v5

    :goto_2
    add-int/lit8 v11, v11, 0x1

    const/4 v5, 0x1

    goto :goto_1

    :cond_7
    const-wide/16 v5, 0x0

    cmp-long v7, v12, v5

    if-eqz v7, :cond_e

    cmp-long v7, v8, v5

    if-nez v7, :cond_8

    goto :goto_6

    :cond_8
    const/4 v5, 0x1

    iput-boolean v5, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHasDisplayPowerReporting:Z

    iget-object v5, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDisplayPowerDrainCounter:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v5, v8, v9}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    move v5, v10

    :goto_3
    if-ge v5, v4, :cond_e

    iget-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v6, v5}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    iget-object v7, v6, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mForegroundActivityTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    if-nez v7, :cond_9

    :goto_4
    const-wide/16 v16, 0x0

    goto :goto_5

    :cond_9
    iget-object v7, v6, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mProcessStateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v7, v7, v10

    if-nez v7, :cond_a

    goto :goto_4

    :cond_a
    invoke-virtual {v6}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->getUid()I

    move-result v7

    invoke-virtual {v1, v7}, Landroid/util/SparseBooleanArray;->get(I)Z

    move-result v7

    if-nez v7, :cond_b

    goto :goto_4

    :cond_b
    mul-long v10, v2, v14

    invoke-virtual {v0, v6, v10, v11}, Lcom/android/server/power/stats/BatteryStatsImpl;->getProcessForegroundTimeMsLocked(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;J)J

    move-result-wide v10

    mul-long v18, v10, v8

    div-long v14, v18, v12

    const-wide/16 v16, 0x0

    cmp-long v7, v10, v16

    if-lez v7, :cond_d

    invoke-virtual {v0, v6, v2, v3}, Lcom/android/server/power/stats/BatteryStatsImpl;->setProcessForegroundTimeSetMark(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;J)V

    invoke-static {v6}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$fgetmDisplayTimeMs(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;)Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v7

    if-nez v7, :cond_c

    invoke-virtual {v6}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->initDisplayPowerCounterLocked()V

    :cond_c
    invoke-static {v6}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$fgetmDisplayTimeMs(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;)Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v7

    invoke-virtual {v7, v10, v11}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    invoke-static {v6}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$fgetmDisplayPowerDrainMah(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;)Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v6

    invoke-virtual {v6, v14, v15}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    :cond_d
    :goto_5
    add-int/lit8 v5, v5, 0x1

    const/4 v10, 0x0

    const-wide/16 v14, 0x3e8

    goto :goto_3

    :cond_e
    :goto_6
    return-void
.end method

.method public updateGnssEnergyConsumerStatsLocked(JJ)V
    .locals 14

    move-object v0, p0

    move-wide v2, p1

    move-wide/from16 v7, p3

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mGlobalEnergyConsumerStats:Lcom/android/internal/power/EnergyConsumerStats;

    if-nez v1, :cond_0

    return-void

    :cond_0
    iget-boolean v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryInternal:Z

    if-eqz v4, :cond_6

    const-wide/16 v4, 0x0

    cmp-long v6, v2, v4

    if-gtz v6, :cond_1

    goto :goto_3

    :cond_1
    iget-boolean v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIgnoreNextExternalStats:Z

    const/4 v9, 0x0

    if-eqz v6, :cond_3

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    :goto_0
    if-ge v9, v1, :cond_2

    iget-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v2, v9}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    invoke-static {v2, v7, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$mmarkGnssTimeUs(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;J)J

    add-int/lit8 v9, v9, 0x1

    goto :goto_0

    :cond_2
    return-void

    :cond_3
    const/4 v6, 0x6

    invoke-virtual {v1, v6, v2, v3}, Lcom/android/internal/power/EnergyConsumerStats;->updateStandardBucket(IJ)V

    new-instance v6, Landroid/util/SparseDoubleArray;

    invoke-direct {v6}, Landroid/util/SparseDoubleArray;-><init>()V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    :goto_1
    if-ge v9, v1, :cond_5

    iget-object v10, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v10, v9}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    invoke-static {v10, v7, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$mmarkGnssTimeUs(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;J)J

    move-result-wide v11

    cmp-long v13, v11, v4

    if-nez v13, :cond_4

    goto :goto_2

    :cond_4
    invoke-virtual {v10}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->getUid()I

    move-result v10

    long-to-double v11, v11

    invoke-virtual {v6, v10, v11, v12}, Landroid/util/SparseDoubleArray;->put(ID)V

    :goto_2
    add-int/lit8 v9, v9, 0x1

    goto :goto_1

    :cond_5
    const/4 v1, 0x6

    const-wide/16 v9, 0x0

    move-object v0, p0

    move-wide v2, p1

    move-object v4, v6

    move-wide v5, v9

    move-wide/from16 v7, p3

    invoke-virtual/range {v0 .. v8}, Lcom/android/server/power/stats/BatteryStatsImpl;->distributeEnergyToUidsLocked(IJLandroid/util/SparseDoubleArray;DJ)V

    :cond_6
    :goto_3
    return-void
.end method

.method public updateKernelMemoryBandwidthLocked(J)V
    .locals 13

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelMemoryBandwidthStats:Lcom/android/internal/os/KernelMemoryBandwidthStats;

    invoke-virtual {v0}, Lcom/android/internal/os/KernelMemoryBandwidthStats;->updateStats()V

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelMemoryBandwidthStats:Lcom/android/internal/os/KernelMemoryBandwidthStats;

    invoke-virtual {v0}, Lcom/android/internal/os/KernelMemoryBandwidthStats;->getBandwidthEntries()Landroid/util/LongSparseLongArray;

    move-result-object v0

    invoke-virtual {v0}, Landroid/util/LongSparseLongArray;->size()I

    move-result v1

    const/4 v2, 0x0

    :goto_0
    if-ge v2, v1, :cond_1

    iget-object v3, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v0, v2}, Landroid/util/LongSparseLongArray;->keyAt(I)J

    move-result-wide v4

    invoke-virtual {v3, v4, v5}, Landroid/util/LongSparseArray;->indexOfKey(J)I

    move-result v3

    if-ltz v3, :cond_0

    iget-object v4, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v4, v3}, Landroid/util/LongSparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/power/stats/BatteryStatsImpl$SamplingTimer;

    goto :goto_1

    :cond_0
    new-instance v3, Lcom/android/server/power/stats/BatteryStatsImpl$SamplingTimer;

    iget-object v4, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    iget-object v5, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-direct {v3, v4, v5}, Lcom/android/server/power/stats/BatteryStatsImpl$SamplingTimer;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    iget-object v4, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v0, v2}, Landroid/util/LongSparseLongArray;->keyAt(I)J

    move-result-wide v5

    invoke-virtual {v4, v5, v6, v3}, Landroid/util/LongSparseArray;->put(JLjava/lang/Object;)V

    :goto_1
    move-object v7, v3

    invoke-virtual {v0, v2}, Landroid/util/LongSparseLongArray;->valueAt(I)J

    move-result-wide v8

    const/4 v10, 0x1

    move-wide v11, p1

    invoke-virtual/range {v7 .. v12}, Lcom/android/server/power/stats/BatteryStatsImpl$SamplingTimer;->update(JIJ)V

    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    :cond_1
    return-void
.end method

.method public updateKernelWakelocksLocked(J)V
    .locals 13

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelWakelockReader:Lcom/android/server/power/stats/KernelWakelockReader;

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mTmpWakelockStats:Lcom/android/server/power/stats/KernelWakelockStats;

    invoke-virtual {v0, v1}, Lcom/android/server/power/stats/KernelWakelockReader;->readKernelWakelockStats(Lcom/android/server/power/stats/KernelWakelockStats;)Lcom/android/server/power/stats/KernelWakelockStats;

    move-result-object v0

    const-string v1, "BatteryStatsImpl"

    if-nez v0, :cond_0

    const-string p0, "Couldn\'t get kernel wake lock stats"

    invoke-static {v1, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    return-void

    :cond_0
    invoke-virtual {v0}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v2

    invoke-interface {v2}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v2

    :goto_0
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_3

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/util/Map$Entry;

    invoke-interface {v3}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    invoke-interface {v3}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/power/stats/KernelWakelockStats$Entry;

    iget-object v5, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v5, v4}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/power/stats/BatteryStatsImpl$SamplingTimer;

    if-nez v5, :cond_1

    new-instance v5, Lcom/android/server/power/stats/BatteryStatsImpl$SamplingTimer;

    iget-object v6, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    iget-object v7, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-direct {v5, v6, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$SamplingTimer;-><init>(Lcom/android/internal/os/Clock;Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    iget-object v6, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v6, v4, v5}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    :cond_1
    const-string v6, "PowerManager"

    invoke-virtual {v4, v6}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v6

    if-eqz v6, :cond_2

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "updateKernelWakelocksLocked:: name="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v4, " / totalTime="

    invoke-virtual {v6, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-wide v7, v3, Lcom/android/server/power/stats/KernelWakelockStats$Entry;->mTotalTime:J

    invoke-virtual {v6, v7, v8}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v4, " / mCount="

    invoke-virtual {v6, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v4, v3, Lcom/android/server/power/stats/KernelWakelockStats$Entry;->mCount:I

    invoke-virtual {v6, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, " / version="

    invoke-virtual {v6, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v4, v3, Lcom/android/server/power/stats/KernelWakelockStats$Entry;->mVersion:I

    invoke-virtual {v6, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v1, v4}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    :cond_2
    iget-wide v8, v3, Lcom/android/server/power/stats/KernelWakelockStats$Entry;->mTotalTime:J

    iget v10, v3, Lcom/android/server/power/stats/KernelWakelockStats$Entry;->mCount:I

    move-object v7, v5

    move-wide v11, p1

    invoke-virtual/range {v7 .. v12}, Lcom/android/server/power/stats/BatteryStatsImpl$SamplingTimer;->update(JIJ)V

    iget v3, v3, Lcom/android/server/power/stats/KernelWakelockStats$Entry;->mVersion:I

    invoke-virtual {v5, v3}, Lcom/android/server/power/stats/BatteryStatsImpl$SamplingTimer;->setUpdateVersion(I)V

    goto :goto_0

    :cond_3
    iget-object v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v2}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v2

    invoke-interface {v2}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v2

    const/4 v3, 0x0

    :cond_4
    :goto_1
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_5

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/util/Map$Entry;

    invoke-interface {v4}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/power/stats/BatteryStatsImpl$SamplingTimer;

    invoke-virtual {v4}, Lcom/android/server/power/stats/BatteryStatsImpl$SamplingTimer;->getUpdateVersion()I

    move-result v5

    iget v6, v0, Lcom/android/server/power/stats/KernelWakelockStats;->kernelWakelockVersion:I

    if-eq v5, v6, :cond_4

    invoke-virtual {v4, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$SamplingTimer;->endSample(J)V

    add-int/lit8 v3, v3, 0x1

    goto :goto_1

    :cond_5
    invoke-virtual {v0}, Ljava/util/HashMap;->isEmpty()Z

    move-result p1

    if-eqz p1, :cond_6

    const-string p1, "All kernel wakelocks had time of zero"

    invoke-static {v1, p1}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    :cond_6
    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {p0}, Ljava/util/HashMap;->size()I

    move-result p0

    if-ne v3, p0, :cond_7

    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string p1, "All kernel wakelocks were set stale. new version="

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget p1, v0, Lcom/android/server/power/stats/KernelWakelockStats;->kernelWakelockVersion:I

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-static {v1, p0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    :cond_7
    return-void
.end method

.method public final updateNewDischargeScreenLevelCoulombCounterLocked(II)V
    .locals 2

    invoke-static {p1}, Landroid/view/Display;->isOnState(I)Z

    move-result v0

    const/4 v1, 0x0

    if-eqz v0, :cond_0

    iput p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOnUnplugLevelCoulombCounter:I

    iput v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOffUnplugLevelCoulombCounter:I

    goto :goto_0

    :cond_0
    invoke-static {p1}, Landroid/view/Display;->isDozeState(I)Z

    move-result v0

    if-eqz v0, :cond_1

    iput v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOnUnplugLevelCoulombCounter:I

    iput p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOffUnplugLevelCoulombCounter:I

    goto :goto_0

    :cond_1
    invoke-static {p1}, Landroid/view/Display;->isOffState(I)Z

    move-result p1

    if-eqz p1, :cond_2

    iput v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOnUnplugLevelCoulombCounter:I

    iput p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOffUnplugLevelCoulombCounter:I

    :cond_2
    :goto_0
    return-void
.end method

.method public final updateNewDischargeScreenLevelLocked(I)V
    .locals 2

    invoke-static {p1}, Landroid/view/Display;->isOnState(I)Z

    move-result v0

    const/4 v1, 0x0

    if-eqz v0, :cond_0

    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeCurrentLevel:I

    iput p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    iput v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    iput v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    goto :goto_0

    :cond_0
    invoke-static {p1}, Landroid/view/Display;->isDozeState(I)Z

    move-result v0

    if-eqz v0, :cond_1

    iput v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeCurrentLevel:I

    iput p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    iput v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    goto :goto_0

    :cond_1
    invoke-static {p1}, Landroid/view/Display;->isOffState(I)Z

    move-result p1

    if-eqz p1, :cond_2

    iput v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    iput v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeCurrentLevel:I

    iput p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    :cond_2
    :goto_0
    return-void
.end method

.method public final updateNewDischargeScreenLevelPermilLocked(II)V
    .locals 2

    invoke-static {p1}, Landroid/view/Display;->isOnState(I)Z

    move-result v0

    const/4 v1, 0x0

    if-eqz v0, :cond_0

    iput p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOnUnplugLevelPermil:I

    iput v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOffUnplugLevelPermil:I

    goto :goto_0

    :cond_0
    invoke-static {p1}, Landroid/view/Display;->isDozeState(I)Z

    move-result v0

    if-eqz v0, :cond_1

    iput v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOnUnplugLevelPermil:I

    iput p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOffUnplugLevelPermil:I

    goto :goto_0

    :cond_1
    invoke-static {p1}, Landroid/view/Display;->isOffState(I)Z

    move-result p1

    if-eqz p1, :cond_2

    iput v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOnUnplugLevelPermil:I

    iput p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOffUnplugLevelPermil:I

    :cond_2
    :goto_0
    return-void
.end method

.method public final updateNewDischargeSubScreenLevelPermilLocked(II)V
    .locals 2

    iget-boolean v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsSubScreen:Z

    if-eqz v0, :cond_2

    invoke-static {p1}, Landroid/view/Display;->isOnState(I)Z

    move-result v0

    const/4 v1, 0x0

    if-eqz v0, :cond_0

    iput p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeSubScreenOnUnplugLevelPermil:I

    iput v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeSubScreenOffUnplugLevelPermil:I

    goto :goto_0

    :cond_0
    invoke-static {p1}, Landroid/view/Display;->isDozeState(I)Z

    move-result v0

    if-eqz v0, :cond_1

    iput v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeSubScreenOnUnplugLevelPermil:I

    iput p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeSubScreenOffUnplugLevelPermil:I

    goto :goto_0

    :cond_1
    invoke-static {p1}, Landroid/view/Display;->isOffState(I)Z

    move-result p1

    if-eqz p1, :cond_2

    iput v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeSubScreenOnUnplugLevelPermil:I

    iput p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeSubScreenOffUnplugLevelPermil:I

    :cond_2
    :goto_0
    return-void
.end method

.method public final updateOldDischargeScreenLevelCoulombCounterLocked(II)V
    .locals 1

    invoke-static {p1}, Landroid/view/Display;->isOnState(I)Z

    move-result v0

    if-eqz v0, :cond_0

    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOnUnplugLevelCoulombCounter:I

    sub-int/2addr p1, p2

    if-lez p1, :cond_2

    iget p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenOnSinceChargeCoulombCounter:I

    add-int/2addr p2, p1

    iput p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenOnSinceChargeCoulombCounter:I

    goto :goto_0

    :cond_0
    invoke-static {p1}, Landroid/view/Display;->isDozeState(I)Z

    move-result v0

    if-eqz v0, :cond_1

    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOffUnplugLevelCoulombCounter:I

    sub-int/2addr p1, p2

    if-lez p1, :cond_2

    iget p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenOffSinceChargeCoulombCounter:I

    add-int/2addr p2, p1

    iput p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenOffSinceChargeCoulombCounter:I

    goto :goto_0

    :cond_1
    invoke-static {p1}, Landroid/view/Display;->isOffState(I)Z

    move-result p1

    if-eqz p1, :cond_2

    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOffUnplugLevelCoulombCounter:I

    sub-int/2addr p1, p2

    if-lez p1, :cond_2

    iget p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenOffSinceChargeCoulombCounter:I

    add-int/2addr p2, p1

    iput p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenOffSinceChargeCoulombCounter:I

    :cond_2
    :goto_0
    return-void
.end method

.method public final updateOldDischargeScreenLevelLocked(I)V
    .locals 1

    invoke-static {p1}, Landroid/view/Display;->isOnState(I)Z

    move-result v0

    if-eqz v0, :cond_0

    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeCurrentLevel:I

    sub-int/2addr p1, v0

    if-lez p1, :cond_2

    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenOn:I

    add-int/2addr v0, p1

    iput v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenOn:I

    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenOnSinceCharge:I

    add-int/2addr v0, p1

    iput v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenOnSinceCharge:I

    goto :goto_0

    :cond_0
    invoke-static {p1}, Landroid/view/Display;->isDozeState(I)Z

    move-result v0

    if-eqz v0, :cond_1

    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeCurrentLevel:I

    sub-int/2addr p1, v0

    if-lez p1, :cond_2

    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenDoze:I

    add-int/2addr v0, p1

    iput v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenDoze:I

    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenDozeSinceCharge:I

    add-int/2addr v0, p1

    iput v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenDozeSinceCharge:I

    goto :goto_0

    :cond_1
    invoke-static {p1}, Landroid/view/Display;->isOffState(I)Z

    move-result p1

    if-eqz p1, :cond_2

    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeCurrentLevel:I

    sub-int/2addr p1, v0

    if-lez p1, :cond_2

    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenOff:I

    add-int/2addr v0, p1

    iput v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenOff:I

    iget v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenOffSinceCharge:I

    add-int/2addr v0, p1

    iput v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenOffSinceCharge:I

    :cond_2
    :goto_0
    return-void
.end method

.method public final updateOldDischargeScreenLevelPermilLocked(II)V
    .locals 1

    invoke-static {p1}, Landroid/view/Display;->isOnState(I)Z

    move-result v0

    if-eqz v0, :cond_0

    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOnUnplugLevelPermil:I

    sub-int/2addr p1, p2

    if-lez p1, :cond_2

    iget p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenOnSinceChargePermil:I

    add-int/2addr p2, p1

    iput p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenOnSinceChargePermil:I

    goto :goto_0

    :cond_0
    invoke-static {p1}, Landroid/view/Display;->isDozeState(I)Z

    move-result v0

    if-eqz v0, :cond_1

    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOffUnplugLevelPermil:I

    sub-int/2addr p1, p2

    if-lez p1, :cond_2

    iget p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenOffSinceChargePermil:I

    add-int/2addr p2, p1

    iput p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenOffSinceChargePermil:I

    goto :goto_0

    :cond_1
    invoke-static {p1}, Landroid/view/Display;->isOffState(I)Z

    move-result p1

    if-eqz p1, :cond_2

    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOffUnplugLevelPermil:I

    sub-int/2addr p1, p2

    if-lez p1, :cond_2

    iget p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenOffSinceChargePermil:I

    add-int/2addr p2, p1

    iput p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountScreenOffSinceChargePermil:I

    :cond_2
    :goto_0
    return-void
.end method

.method public final updateOldDischargeSubScreenLevelPermilLocked(II)V
    .locals 1

    iget-boolean v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mIsSubScreen:Z

    if-eqz v0, :cond_2

    invoke-static {p1}, Landroid/view/Display;->isOnState(I)Z

    move-result v0

    if-eqz v0, :cond_0

    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeSubScreenOnUnplugLevelPermil:I

    sub-int/2addr p1, p2

    if-lez p1, :cond_2

    iget p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountSubScreenOnSinceChargePermil:I

    add-int/2addr p2, p1

    iput p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountSubScreenOnSinceChargePermil:I

    goto :goto_0

    :cond_0
    invoke-static {p1}, Landroid/view/Display;->isDozeState(I)Z

    move-result v0

    if-eqz v0, :cond_1

    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeSubScreenOffUnplugLevelPermil:I

    sub-int/2addr p1, p2

    if-lez p1, :cond_2

    iget p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountSubScreenOffSinceChargePermil:I

    add-int/2addr p2, p1

    iput p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountSubScreenOffSinceChargePermil:I

    goto :goto_0

    :cond_1
    invoke-static {p1}, Landroid/view/Display;->isOffState(I)Z

    move-result p1

    if-eqz p1, :cond_2

    iget p1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeSubScreenOffUnplugLevelPermil:I

    sub-int/2addr p1, p2

    if-lez p1, :cond_2

    iget p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountSubScreenOffSinceChargePermil:I

    add-int/2addr p2, p1

    iput p2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeAmountSubScreenOffSinceChargePermil:I

    :cond_2
    :goto_0
    return-void
.end method

.method public updateProcStateCpuTimesLocked(IJJ)V
    .locals 16

    move-object/from16 v7, p0

    move/from16 v8, p1

    move-wide/from16 v9, p2

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->initKernelSingleUidTimeReaderLocked()Z

    move-result v0

    if-nez v0, :cond_0

    return-void

    :cond_0
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object v11

    iget-wide v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mNumSingleUidCpuTimeReads:J

    const-wide/16 v2, 0x1

    add-long/2addr v0, v2

    iput-wide v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mNumSingleUidCpuTimeReads:J

    invoke-static {v11, v9, v10}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$mgetProcStateTimeCounter(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;J)Lcom/android/server/power/stats/BatteryStatsImpl$TimeInFreqMultiStateCounter;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeInFreqMultiStateCounter;->getCounter()Lcom/android/internal/os/LongArrayMultiStateCounter;

    move-result-object v12

    invoke-static {v11, v9, v10}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$mgetProcStateScreenOffTimeCounter(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;J)Lcom/android/server/power/stats/BatteryStatsImpl$TimeInFreqMultiStateCounter;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeInFreqMultiStateCounter;->getCounter()Lcom/android/internal/os/LongArrayMultiStateCounter;

    move-result-object v13

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->isUsageHistoryEnabled()Z

    move-result v0

    if-eqz v0, :cond_1

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getCpuTimeInFreqContainer()Lcom/android/internal/os/LongArrayMultiStateCounter$LongArrayContainer;

    move-result-object v6

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelSingleUidTimeReader:Lcom/android/internal/os/KernelSingleUidTimeReader;

    move/from16 v1, p1

    move-object v2, v12

    move-wide/from16 v3, p2

    move-object v5, v6

    invoke-virtual/range {v0 .. v5}, Lcom/android/internal/os/KernelSingleUidTimeReader;->addDelta(ILcom/android/internal/os/LongArrayMultiStateCounter;JLcom/android/internal/os/LongArrayMultiStateCounter$LongArrayContainer;)V

    move-object/from16 v0, p0

    move-object v2, v6

    move-wide/from16 v5, p4

    invoke-virtual/range {v0 .. v6}, Lcom/android/server/power/stats/BatteryStatsImpl;->recordCpuUsage(ILcom/android/internal/os/LongArrayMultiStateCounter$LongArrayContainer;JJ)V

    goto :goto_0

    :cond_1
    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelSingleUidTimeReader:Lcom/android/internal/os/KernelSingleUidTimeReader;

    invoke-virtual {v0, v8, v12, v9, v10}, Lcom/android/internal/os/KernelSingleUidTimeReader;->addDelta(ILcom/android/internal/os/LongArrayMultiStateCounter;J)V

    :goto_0
    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelSingleUidTimeReader:Lcom/android/internal/os/KernelSingleUidTimeReader;

    invoke-virtual {v0, v8, v13, v9, v10}, Lcom/android/internal/os/KernelSingleUidTimeReader;->addDelta(ILcom/android/internal/os/LongArrayMultiStateCounter;J)V

    iget-object v0, v11, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mChildUids:Landroid/util/SparseArray;

    if-eqz v0, :cond_4

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getCpuTimeInFreqContainer()Lcom/android/internal/os/LongArrayMultiStateCounter$LongArrayContainer;

    move-result-object v14

    iget-object v0, v11, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mChildUids:Landroid/util/SparseArray;

    invoke-virtual {v0}, Landroid/util/SparseArray;->size()I

    move-result v0

    add-int/lit8 v0, v0, -0x1

    move v15, v0

    :goto_1
    if-ltz v15, :cond_4

    iget-object v0, v11, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mChildUids:Landroid/util/SparseArray;

    invoke-virtual {v0, v15}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$ChildUid;

    iget-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$ChildUid;->cpuTimeInFreqCounter:Lcom/android/internal/os/LongArrayMultiStateCounter;

    if-eqz v2, :cond_3

    iget-object v0, v7, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelSingleUidTimeReader:Lcom/android/internal/os/KernelSingleUidTimeReader;

    iget-object v1, v11, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mChildUids:Landroid/util/SparseArray;

    invoke-virtual {v1, v15}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v1

    move-wide/from16 v3, p2

    move-object v5, v14

    invoke-virtual/range {v0 .. v5}, Lcom/android/internal/os/KernelSingleUidTimeReader;->addDelta(ILcom/android/internal/os/LongArrayMultiStateCounter;JLcom/android/internal/os/LongArrayMultiStateCounter$LongArrayContainer;)V

    invoke-virtual {v12, v14}, Lcom/android/internal/os/LongArrayMultiStateCounter;->addCounts(Lcom/android/internal/os/LongArrayMultiStateCounter$LongArrayContainer;)V

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->isUsageHistoryEnabled()Z

    move-result v0

    if-eqz v0, :cond_2

    move-object/from16 v0, p0

    move/from16 v1, p1

    move-object v2, v14

    move-wide/from16 v3, p2

    move-wide/from16 v5, p4

    invoke-virtual/range {v0 .. v6}, Lcom/android/server/power/stats/BatteryStatsImpl;->recordCpuUsage(ILcom/android/internal/os/LongArrayMultiStateCounter$LongArrayContainer;JJ)V

    :cond_2
    invoke-virtual {v13, v14}, Lcom/android/internal/os/LongArrayMultiStateCounter;->addCounts(Lcom/android/internal/os/LongArrayMultiStateCounter$LongArrayContainer;)V

    :cond_3
    add-int/lit8 v15, v15, -0x1

    goto :goto_1

    :cond_4
    return-void
.end method

.method public updateRailStatsLocked()V
    .locals 1

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mEnergyConsumerRetriever:Lcom/android/server/power/stats/BatteryStatsImpl$EnergyStatsRetriever;

    if-eqz v0, :cond_1

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mTmpRailStats:Lcom/android/internal/os/RailStats;

    invoke-virtual {v0}, Lcom/android/internal/os/RailStats;->isRailStatsAvailable()Z

    move-result v0

    if-nez v0, :cond_0

    goto :goto_0

    :cond_0
    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mEnergyConsumerRetriever:Lcom/android/server/power/stats/BatteryStatsImpl$EnergyStatsRetriever;

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mTmpRailStats:Lcom/android/internal/os/RailStats;

    invoke-interface {v0, p0}, Lcom/android/server/power/stats/BatteryStatsImpl$EnergyStatsRetriever;->fillRailDataStats(Lcom/android/internal/os/RailStats;)V

    :cond_1
    :goto_0
    return-void
.end method

.method public updateRpmStatsLocked(J)V
    .locals 17

    move-object/from16 v0, p0

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mTmpRpmStats:Lcom/android/internal/os/RpmStats;

    if-nez v1, :cond_0

    return-void

    :cond_0
    iget-object v1, v1, Lcom/android/internal/os/RpmStats;->mPlatformLowPowerStats:Ljava/util/Map;

    invoke-interface {v1}, Ljava/util/Map;->entrySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :cond_1
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    const-string v3, "."

    const-wide/16 v4, 0x3e8

    if-eqz v2, :cond_2

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/Map$Entry;

    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Ljava/lang/String;

    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/internal/os/RpmStats$PowerStatePlatformSleepState;

    iget-wide v7, v7, Lcom/android/internal/os/RpmStats$PowerStatePlatformSleepState;->mTimeMs:J

    mul-long v10, v7, v4

    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/internal/os/RpmStats$PowerStatePlatformSleepState;

    iget v12, v7, Lcom/android/internal/os/RpmStats$PowerStatePlatformSleepState;->mCount:I

    invoke-virtual {v0, v6}, Lcom/android/server/power/stats/BatteryStatsImpl;->getRpmTimerLocked(Ljava/lang/String;)Lcom/android/server/power/stats/BatteryStatsImpl$SamplingTimer;

    move-result-object v9

    move-wide/from16 v13, p1

    invoke-virtual/range {v9 .. v14}, Lcom/android/server/power/stats/BatteryStatsImpl$SamplingTimer;->update(JIJ)V

    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/internal/os/RpmStats$PowerStatePlatformSleepState;

    iget-object v2, v2, Lcom/android/internal/os/RpmStats$PowerStatePlatformSleepState;->mVoters:Ljava/util/Map;

    invoke-interface {v2}, Ljava/util/Map;->entrySet()Ljava/util/Set;

    move-result-object v2

    invoke-interface {v2}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v2

    :goto_0
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v7

    if-eqz v7, :cond_1

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Ljava/util/Map$Entry;

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v8, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v8, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-interface {v7}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Ljava/lang/String;

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-interface {v7}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/internal/os/RpmStats$PowerStateElement;

    iget-wide v9, v9, Lcom/android/internal/os/RpmStats$PowerStateElement;->mTimeMs:J

    mul-long v12, v9, v4

    invoke-interface {v7}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/internal/os/RpmStats$PowerStateElement;

    iget v14, v7, Lcom/android/internal/os/RpmStats$PowerStateElement;->mCount:I

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl;->getRpmTimerLocked(Ljava/lang/String;)Lcom/android/server/power/stats/BatteryStatsImpl$SamplingTimer;

    move-result-object v11

    move-wide/from16 v15, p1

    invoke-virtual/range {v11 .. v16}, Lcom/android/server/power/stats/BatteryStatsImpl$SamplingTimer;->update(JIJ)V

    goto :goto_0

    :cond_2
    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mTmpRpmStats:Lcom/android/internal/os/RpmStats;

    iget-object v1, v1, Lcom/android/internal/os/RpmStats;->mSubsystemLowPowerStats:Ljava/util/Map;

    invoke-interface {v1}, Ljava/util/Map;->entrySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :cond_3
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_4

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/Map$Entry;

    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Ljava/lang/String;

    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/internal/os/RpmStats$PowerStateSubsystem;

    iget-object v2, v2, Lcom/android/internal/os/RpmStats$PowerStateSubsystem;->mStates:Ljava/util/Map;

    invoke-interface {v2}, Ljava/util/Map;->entrySet()Ljava/util/Set;

    move-result-object v2

    invoke-interface {v2}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v2

    :goto_1
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v7

    if-eqz v7, :cond_3

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Ljava/util/Map$Entry;

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v8, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v8, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-interface {v7}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Ljava/lang/String;

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-interface {v7}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/internal/os/RpmStats$PowerStateElement;

    iget-wide v9, v9, Lcom/android/internal/os/RpmStats$PowerStateElement;->mTimeMs:J

    mul-long v12, v9, v4

    invoke-interface {v7}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/internal/os/RpmStats$PowerStateElement;

    iget v14, v7, Lcom/android/internal/os/RpmStats$PowerStateElement;->mCount:I

    invoke-virtual {v0, v8}, Lcom/android/server/power/stats/BatteryStatsImpl;->getRpmTimerLocked(Ljava/lang/String;)Lcom/android/server/power/stats/BatteryStatsImpl$SamplingTimer;

    move-result-object v11

    move-wide/from16 v15, p1

    invoke-virtual/range {v11 .. v16}, Lcom/android/server/power/stats/BatteryStatsImpl$SamplingTimer;->update(JIJ)V

    goto :goto_1

    :cond_4
    return-void
.end method

.method public updateScreenWakeLocked(Ljava/lang/String;I)V
    .locals 2

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, ""

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p2, ":"

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-virtual {p0, p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->getScreenWakeCounterLocked(Ljava/lang/String;)Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    move-result-object p0

    if-eqz p0, :cond_0

    const-wide/16 p1, 0x1

    invoke-virtual {p0, p1, p2}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    :cond_0
    return-void
.end method

.method public updateSemModemActivityInfoLocked(Landroid/os/SemModemActivityInfo;)V
    .locals 5

    monitor-enter p0

    if-eqz p1, :cond_2

    :try_start_0
    const-string v0, "BatteryStatsImpl"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "updateSemModemActivityInfoLocked:: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Landroid/os/SemModemActivityInfo;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNetworkModemActivity:Lcom/android/server/power/stats/BatteryStatsImpl$ModemActivityCounterImpl;

    invoke-virtual {v0}, Lcom/android/server/power/stats/BatteryStatsImpl$ModemActivityCounterImpl;->getSleepTimeCounter()Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v0

    invoke-virtual {p1}, Landroid/os/SemModemActivityInfo;->getSleepTimeMillis()I

    move-result v1

    int-to-long v1, v1

    invoke-virtual {v0, v1, v2}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNetworkModemActivity:Lcom/android/server/power/stats/BatteryStatsImpl$ModemActivityCounterImpl;

    invoke-virtual {v0}, Lcom/android/server/power/stats/BatteryStatsImpl$ModemActivityCounterImpl;->getIdleTimeCounter()Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v0

    invoke-virtual {p1}, Landroid/os/SemModemActivityInfo;->getIdleTimeMillis()I

    move-result v1

    int-to-long v1, v1

    invoke-virtual {v0, v1, v2}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    const/4 v0, 0x0

    move v1, v0

    :goto_0
    const/4 v2, 0x5

    if-ge v1, v2, :cond_0

    iget-object v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNetworkModemActivity:Lcom/android/server/power/stats/BatteryStatsImpl$ModemActivityCounterImpl;

    invoke-virtual {v2}, Lcom/android/server/power/stats/BatteryStatsImpl$ModemActivityCounterImpl;->getNrModemActivityInfo()Lcom/android/server/power/stats/BatteryStatsImpl$ModemTxRxCounterImpl;

    move-result-object v2

    invoke-virtual {v2}, Lcom/android/server/power/stats/BatteryStatsImpl$ModemTxRxCounterImpl;->getTxTimeCounters()[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v2

    aget-object v2, v2, v1

    invoke-virtual {p1}, Landroid/os/SemModemActivityInfo;->getNrTxTimeMillis()[I

    move-result-object v3

    aget v3, v3, v1

    int-to-long v3, v3

    invoke-virtual {v2, v3, v4}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    :cond_0
    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNetworkModemActivity:Lcom/android/server/power/stats/BatteryStatsImpl$ModemActivityCounterImpl;

    invoke-virtual {v1}, Lcom/android/server/power/stats/BatteryStatsImpl$ModemActivityCounterImpl;->getNrModemActivityInfo()Lcom/android/server/power/stats/BatteryStatsImpl$ModemTxRxCounterImpl;

    move-result-object v1

    invoke-virtual {v1}, Lcom/android/server/power/stats/BatteryStatsImpl$ModemTxRxCounterImpl;->getRxTimeCounter()Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v1

    invoke-virtual {p1}, Landroid/os/SemModemActivityInfo;->getNrRxTimeMillis()I

    move-result v3

    int-to-long v3, v3

    invoke-virtual {v1, v3, v4}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNetworkModemActivity:Lcom/android/server/power/stats/BatteryStatsImpl$ModemActivityCounterImpl;

    invoke-virtual {v1}, Lcom/android/server/power/stats/BatteryStatsImpl$ModemActivityCounterImpl;->getNrModemActivityInfo()Lcom/android/server/power/stats/BatteryStatsImpl$ModemTxRxCounterImpl;

    move-result-object v1

    invoke-virtual {v1}, Lcom/android/server/power/stats/BatteryStatsImpl$ModemTxRxCounterImpl;->getTxByteCounter()Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v1

    invoke-virtual {p1}, Landroid/os/SemModemActivityInfo;->getNrTxBytes()J

    move-result-wide v3

    invoke-virtual {v1, v3, v4}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNetworkModemActivity:Lcom/android/server/power/stats/BatteryStatsImpl$ModemActivityCounterImpl;

    invoke-virtual {v1}, Lcom/android/server/power/stats/BatteryStatsImpl$ModemActivityCounterImpl;->getNrModemActivityInfo()Lcom/android/server/power/stats/BatteryStatsImpl$ModemTxRxCounterImpl;

    move-result-object v1

    invoke-virtual {v1}, Lcom/android/server/power/stats/BatteryStatsImpl$ModemTxRxCounterImpl;->getRxByteCounter()Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v1

    invoke-virtual {p1}, Landroid/os/SemModemActivityInfo;->getNrRxBytes()J

    move-result-wide v3

    invoke-virtual {v1, v3, v4}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    :goto_1
    if-ge v0, v2, :cond_1

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNetworkModemActivity:Lcom/android/server/power/stats/BatteryStatsImpl$ModemActivityCounterImpl;

    invoke-virtual {v1}, Lcom/android/server/power/stats/BatteryStatsImpl$ModemActivityCounterImpl;->getLcModemActivityInfo()Lcom/android/server/power/stats/BatteryStatsImpl$ModemTxRxCounterImpl;

    move-result-object v1

    invoke-virtual {v1}, Lcom/android/server/power/stats/BatteryStatsImpl$ModemTxRxCounterImpl;->getTxTimeCounters()[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v1

    aget-object v1, v1, v0

    invoke-virtual {p1}, Landroid/os/SemModemActivityInfo;->getLcTxTimeMillis()[I

    move-result-object v3

    aget v3, v3, v0

    int-to-long v3, v3

    invoke-virtual {v1, v3, v4}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    add-int/lit8 v0, v0, 0x1

    goto :goto_1

    :cond_1
    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNetworkModemActivity:Lcom/android/server/power/stats/BatteryStatsImpl$ModemActivityCounterImpl;

    invoke-virtual {v0}, Lcom/android/server/power/stats/BatteryStatsImpl$ModemActivityCounterImpl;->getLcModemActivityInfo()Lcom/android/server/power/stats/BatteryStatsImpl$ModemTxRxCounterImpl;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/power/stats/BatteryStatsImpl$ModemTxRxCounterImpl;->getRxTimeCounter()Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v0

    invoke-virtual {p1}, Landroid/os/SemModemActivityInfo;->getLcRxTimeMillis()I

    move-result v1

    int-to-long v1, v1

    invoke-virtual {v0, v1, v2}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNetworkModemActivity:Lcom/android/server/power/stats/BatteryStatsImpl$ModemActivityCounterImpl;

    invoke-virtual {v0}, Lcom/android/server/power/stats/BatteryStatsImpl$ModemActivityCounterImpl;->getLcModemActivityInfo()Lcom/android/server/power/stats/BatteryStatsImpl$ModemTxRxCounterImpl;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/power/stats/BatteryStatsImpl$ModemTxRxCounterImpl;->getTxByteCounter()Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v0

    invoke-virtual {p1}, Landroid/os/SemModemActivityInfo;->getLcTxBytes()J

    move-result-wide v1

    invoke-virtual {v0, v1, v2}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNetworkModemActivity:Lcom/android/server/power/stats/BatteryStatsImpl$ModemActivityCounterImpl;

    invoke-virtual {v0}, Lcom/android/server/power/stats/BatteryStatsImpl$ModemActivityCounterImpl;->getLcModemActivityInfo()Lcom/android/server/power/stats/BatteryStatsImpl$ModemTxRxCounterImpl;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/power/stats/BatteryStatsImpl$ModemTxRxCounterImpl;->getRxByteCounter()Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v0

    invoke-virtual {p1}, Landroid/os/SemModemActivityInfo;->getLcRxBytes()J

    move-result-wide v1

    invoke-virtual {v0, v1, v2}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    :cond_2
    monitor-exit p0

    return-void

    :catchall_0
    move-exception p1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw p1
.end method

.method public updateSpeakerOutEnergyInfoLocked(Landroid/os/SpeakerOutEnergyInfo;JJ)V
    .locals 19

    move-object/from16 v0, p0

    move-wide/from16 v1, p2

    invoke-virtual/range {p0 .. p1}, Lcom/android/server/power/stats/BatteryStatsImpl;->getDeltaAudioEnergyInfo(Landroid/os/SpeakerOutEnergyInfo;)Landroid/os/SpeakerOutEnergyInfo;

    move-result-object v3

    iget-boolean v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryInternal:Z

    if-eqz v4, :cond_d

    if-nez v3, :cond_0

    goto/16 :goto_7

    :cond_0
    const/4 v4, 0x1

    iput-boolean v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHasSpeakerOutReporting:Z

    const/4 v8, 0x0

    const/4 v9, 0x0

    const-wide/16 v10, 0x0

    :goto_0
    const/16 v12, 0x10

    if-ge v8, v12, :cond_2

    invoke-virtual {v3}, Landroid/os/SpeakerOutEnergyInfo;->getSpeakerMediaTimeMillis()[J

    move-result-object v12

    aget-wide v12, v12, v8

    iget-object v14, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSpeakerMediaTimeCounters:[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    aget-object v14, v14, v8

    invoke-virtual {v14, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    iget-object v14, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSpeakerCallTimeCounters:[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    aget-object v14, v14, v8

    invoke-virtual {v3}, Landroid/os/SpeakerOutEnergyInfo;->getSpeakerCallTimeMillis()[J

    move-result-object v15

    aget-wide v4, v15, v8

    invoke-virtual {v14, v4, v5}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    cmp-long v4, v12, v10

    if-lez v4, :cond_1

    move v9, v8

    move-wide v10, v12

    :cond_1
    add-int/lit8 v8, v8, 0x1

    const/4 v4, 0x1

    goto :goto_0

    :cond_2
    const/16 v4, 0xb

    if-le v9, v4, :cond_3

    const/4 v4, 0x1

    goto :goto_1

    :cond_3
    const/4 v4, 0x0

    :goto_1
    iget-object v5, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    invoke-virtual {v5}, Lcom/android/internal/os/BatteryStatsHistory;->getHighSpeakerVolumeState()B

    move-result v5

    if-eq v5, v4, :cond_4

    iget-object v5, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    invoke-virtual {v5, v4}, Lcom/android/internal/os/BatteryStatsHistory;->setHighSpeakerVolumeState(B)V

    iget-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    move-wide/from16 v5, p4

    invoke-virtual {v4, v1, v2, v5, v6}, Lcom/android/internal/os/BatteryStatsHistory;->writeHistoryItem(JJ)V

    :cond_4
    iget-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    move-result v4

    const/4 v5, 0x0

    const-wide/16 v8, 0x0

    :goto_2
    const-wide/16 v10, 0x3e8

    if-ge v5, v4, :cond_6

    iget-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v6, v5}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    iget-object v13, v6, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mAudioTurnedOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    if-nez v13, :cond_5

    goto :goto_3

    :cond_5
    mul-long/2addr v10, v1

    invoke-virtual {v0, v6, v10, v11}, Lcom/android/server/power/stats/BatteryStatsImpl;->getAudioOnTimeMsSinceMarkLocked(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;J)J

    move-result-wide v10

    add-long/2addr v8, v10

    :goto_3
    add-int/lit8 v5, v5, 0x1

    goto :goto_2

    :cond_6
    const-wide/16 v5, 0x0

    cmp-long v13, v8, v5

    if-nez v13, :cond_7

    return-void

    :cond_7
    const/4 v5, 0x0

    :goto_4
    if-ge v5, v4, :cond_d

    iget-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v6, v5}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    iget-object v13, v6, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mAudioTurnedOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    if-nez v13, :cond_8

    const-wide/16 v15, 0x0

    goto :goto_6

    :cond_8
    mul-long v13, v1, v10

    invoke-virtual {v0, v6, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl;->getAudioOnTimeMsSinceMarkLocked(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;J)J

    move-result-wide v13

    const-wide/16 v15, 0x0

    cmp-long v17, v13, v15

    if-lez v17, :cond_c

    const/4 v7, 0x0

    :goto_5
    if-ge v7, v12, :cond_b

    invoke-virtual {v3}, Landroid/os/SpeakerOutEnergyInfo;->getSpeakerMediaTimeMillis()[J

    move-result-object v17

    aget-wide v17, v17, v7

    cmp-long v17, v17, v15

    if-lez v17, :cond_a

    invoke-virtual {v3}, Landroid/os/SpeakerOutEnergyInfo;->getSpeakerMediaTimeMillis()[J

    move-result-object v17

    aget-wide v17, v17, v7

    mul-long v17, v17, v13

    div-long v10, v17, v8

    invoke-static {v6}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$fgetmSpeakerMediaTimeCounters(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;)[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v17

    if-nez v17, :cond_9

    invoke-virtual {v6}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->initSpeakerTimeCounterLocked()V

    :cond_9
    invoke-static {v6}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$fgetmSpeakerMediaTimeCounters(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;)[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v17

    aget-object v12, v17, v7

    invoke-virtual {v12, v10, v11}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    :cond_a
    add-int/lit8 v7, v7, 0x1

    const-wide/16 v10, 0x3e8

    const/16 v12, 0x10

    goto :goto_5

    :cond_b
    invoke-virtual {v0, v6, v1, v2}, Lcom/android/server/power/stats/BatteryStatsImpl;->setAudioOnTimeSetMark(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;J)V

    :cond_c
    :goto_6
    add-int/lit8 v5, v5, 0x1

    const-wide/16 v10, 0x3e8

    const/16 v12, 0x10

    goto :goto_4

    :cond_d
    :goto_7
    return-void
.end method

.method public updateSystemServerThreadStats()V
    .locals 3

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSystemServerCpuThreadReader:Lcom/android/server/power/stats/SystemServerCpuThreadReader;

    invoke-virtual {v0}, Lcom/android/server/power/stats/SystemServerCpuThreadReader;->readDelta()Lcom/android/server/power/stats/SystemServerCpuThreadReader$SystemServiceCpuThreadTimes;

    move-result-object v0

    if-nez v0, :cond_0

    return-void

    :cond_0
    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBinderThreadCpuTimesUs:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;

    if-nez v1, :cond_1

    new-instance v1, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;

    iget-object v2, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;-><init>(Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;)V

    iput-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBinderThreadCpuTimesUs:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;

    :cond_1
    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBinderThreadCpuTimesUs:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;

    iget-object v0, v0, Lcom/android/server/power/stats/SystemServerCpuThreadReader$SystemServiceCpuThreadTimes;->binderThreadCpuTimesUs:[J

    invoke-virtual {p0, v0}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;->addCountLocked([J)V

    return-void
.end method

.method public updateSystemServiceCallStats()V
    .locals 21

    move-object/from16 v0, p0

    const/4 v4, 0x0

    const/4 v5, 0x0

    const-wide/16 v6, 0x0

    :goto_0
    iget-object v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v8}, Landroid/util/SparseArray;->size()I

    move-result v8

    if-ge v4, v8, :cond_1

    iget-object v8, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v8, v4}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    invoke-static {v8}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$fgetmBinderCallStats(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;)Landroid/util/ArraySet;

    move-result-object v8

    invoke-virtual {v8}, Landroid/util/ArraySet;->size()I

    move-result v9

    add-int/lit8 v9, v9, -0x1

    :goto_1
    if-ltz v9, :cond_0

    invoke-virtual {v8, v9}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Lcom/android/server/power/stats/BatteryStatsImpl$BinderCallStats;

    int-to-long v11, v5

    iget-wide v13, v10, Lcom/android/server/power/stats/BatteryStatsImpl$BinderCallStats;->recordedCallCount:J

    add-long/2addr v11, v13

    long-to-int v5, v11

    iget-wide v10, v10, Lcom/android/server/power/stats/BatteryStatsImpl$BinderCallStats;->recordedCpuTimeMicros:J

    add-long/2addr v6, v10

    add-int/lit8 v9, v9, -0x1

    goto :goto_1

    :cond_0
    add-int/lit8 v4, v4, 0x1

    goto :goto_0

    :cond_1
    const/4 v4, 0x0

    const-wide/16 v8, 0x0

    :goto_2
    iget-object v10, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v10}, Landroid/util/SparseArray;->size()I

    move-result v10

    if-ge v4, v10, :cond_6

    iget-object v10, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v10, v4}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    invoke-static {v10}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$fgetmBinderCallStats(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;)Landroid/util/ArraySet;

    move-result-object v11

    invoke-virtual {v11}, Landroid/util/ArraySet;->size()I

    move-result v12

    add-int/lit8 v12, v12, -0x1

    const/4 v13, 0x0

    const-wide/16 v14, 0x0

    :goto_3
    if-ltz v12, :cond_4

    invoke-virtual {v11, v12}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    move-result-object v16

    move-object/from16 v1, v16

    check-cast v1, Lcom/android/server/power/stats/BatteryStatsImpl$BinderCallStats;

    int-to-long v2, v13

    move-wide/from16 v19, v8

    iget-wide v8, v1, Lcom/android/server/power/stats/BatteryStatsImpl$BinderCallStats;->callCount:J

    add-long/2addr v2, v8

    long-to-int v13, v2

    iget-wide v2, v1, Lcom/android/server/power/stats/BatteryStatsImpl$BinderCallStats;->recordedCallCount:J

    const-wide/16 v17, 0x0

    cmp-long v16, v2, v17

    if-lez v16, :cond_2

    iget-wide v0, v1, Lcom/android/server/power/stats/BatteryStatsImpl$BinderCallStats;->recordedCpuTimeMicros:J

    mul-long/2addr v8, v0

    div-long/2addr v8, v2

    :goto_4
    add-long/2addr v14, v8

    goto :goto_5

    :cond_2
    if-lez v5, :cond_3

    mul-long/2addr v8, v6

    int-to-long v0, v5

    div-long/2addr v8, v0

    goto :goto_4

    :cond_3
    :goto_5
    add-int/lit8 v12, v12, -0x1

    move-object/from16 v0, p0

    move-wide/from16 v8, v19

    goto :goto_3

    :cond_4
    move-wide/from16 v19, v8

    int-to-long v0, v13

    invoke-static {v10}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$fgetmBinderCallCount(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;)J

    move-result-wide v2

    cmp-long v2, v0, v2

    if-gez v2, :cond_5

    if-lez v5, :cond_5

    invoke-static {v10}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$fgetmBinderCallCount(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;)J

    move-result-wide v2

    sub-long/2addr v2, v0

    mul-long/2addr v2, v6

    int-to-long v0, v5

    div-long/2addr v2, v0

    add-long/2addr v14, v2

    :cond_5
    invoke-static {v10, v14, v15}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$fputmSystemServiceTimeUs(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;J)V

    add-long v8, v19, v14

    add-int/lit8 v4, v4, 0x1

    move-object/from16 v0, p0

    goto :goto_2

    :cond_6
    move-wide/from16 v19, v8

    const/4 v1, 0x0

    move-object/from16 v0, p0

    :goto_6
    iget-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v2}, Landroid/util/SparseArray;->size()I

    move-result v2

    if-ge v1, v2, :cond_8

    iget-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v2, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    const-wide/16 v3, 0x0

    cmp-long v5, v19, v3

    if-lez v5, :cond_7

    invoke-static {v2}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$fgetmSystemServiceTimeUs(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;)J

    move-result-wide v5

    long-to-double v5, v5

    move-wide/from16 v8, v19

    long-to-double v10, v8

    div-double/2addr v5, v10

    invoke-static {v2, v5, v6}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$fputmProportionalSystemServiceUsage(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;D)V

    goto :goto_7

    :cond_7
    move-wide/from16 v8, v19

    const-wide/16 v5, 0x0

    invoke-static {v2, v5, v6}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$fputmProportionalSystemServiceUsage(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;D)V

    :goto_7
    add-int/lit8 v1, v1, 0x1

    move-wide/from16 v19, v8

    goto :goto_6

    :cond_8
    return-void
.end method

.method public updateTimeBasesLocked(ZIJJ)V
    .locals 17

    move-object/from16 v0, p0

    move/from16 v7, p1

    move-wide/from16 v8, p3

    move-wide/from16 v10, p5

    invoke-static/range {p2 .. p2}, Landroid/view/Display;->isOnState(I)Z

    move-result v1

    const/4 v12, 0x1

    xor-int/lit8 v13, v1, 0x1

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-virtual {v1}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;->isRunning()Z

    move-result v1

    const/4 v14, 0x0

    if-eq v7, v1, :cond_0

    move v15, v12

    goto :goto_0

    :cond_0
    move v15, v14

    :goto_0
    if-eqz v7, :cond_1

    if-eqz v13, :cond_1

    move v1, v12

    goto :goto_1

    :cond_1
    move v1, v14

    :goto_1
    iget-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-virtual {v2}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;->isRunning()Z

    move-result v2

    if-eq v1, v2, :cond_2

    move/from16 v16, v12

    goto :goto_2

    :cond_2
    move/from16 v16, v14

    :goto_2
    if-nez v16, :cond_3

    if-eqz v15, :cond_8

    :cond_3
    if-eqz v16, :cond_4

    invoke-virtual {v0, v10, v11}, Lcom/android/server/power/stats/BatteryStatsImpl;->updateKernelWakelocksLocked(J)V

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->updateBatteryPropertiesLocked()V

    :cond_4
    if-eqz v15, :cond_5

    invoke-virtual {v0, v10, v11}, Lcom/android/server/power/stats/BatteryStatsImpl;->updateRpmStatsLocked(J)V

    :cond_5
    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    move/from16 v2, p1

    move-wide/from16 v3, p3

    move-wide/from16 v5, p5

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;->setRunning(ZJJ)Z

    if-eqz v15, :cond_6

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    sub-int/2addr v1, v12

    :goto_3
    if-ltz v1, :cond_6

    iget-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v2, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    invoke-virtual {v2, v8, v9, v10, v11}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->updateOnBatteryBgTimeBase(JJ)Z

    add-int/lit8 v1, v1, -0x1

    goto :goto_3

    :cond_6
    if-eqz v16, :cond_8

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    if-eqz v7, :cond_7

    if-eqz v13, :cond_7

    move v2, v12

    goto :goto_4

    :cond_7
    move v2, v14

    :goto_4
    move-wide/from16 v3, p3

    move-wide/from16 v5, p5

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;->setRunning(ZJJ)Z

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    sub-int/2addr v1, v12

    :goto_5
    if-ltz v1, :cond_8

    iget-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v2, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    invoke-virtual {v2, v8, v9, v10, v11}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->updateOnBatteryScreenOffBgTimeBase(JJ)Z

    add-int/lit8 v1, v1, -0x1

    goto :goto_5

    :cond_8
    return-void
.end method

.method public updateTxPowerSharing()V
    .locals 1

    monitor-enter p0

    :try_start_0
    iget-boolean v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mTxPowerSharingOn:Z

    if-eqz v0, :cond_0

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteStopTxPowerSharingLocked()V

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->noteStartTxPowerSharingLocked()V

    :cond_0
    monitor-exit p0

    return-void

    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public updateWifiState(Landroid/os/connectivity/WifiActivityEnergyInfo;JJJLandroid/app/usage/NetworkStatsManager;)V
    .locals 51

    move-object/from16 v10, p0

    move-wide/from16 v7, p2

    move-wide/from16 v14, p4

    iget-object v1, v10, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiNetworkLock:Ljava/lang/Object;

    monitor-enter v1

    move-object/from16 v0, p8

    :try_start_0
    invoke-virtual {v10, v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->readWifiNetworkStatsLocked(Landroid/app/usage/NetworkStatsManager;)Landroid/net/NetworkStats;

    move-result-object v0

    const/4 v2, 0x0

    if-eqz v0, :cond_0

    iget-object v3, v10, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastWifiNetworkStats:Landroid/net/NetworkStats;

    invoke-virtual {v0, v3}, Landroid/net/NetworkStats;->subtract(Landroid/net/NetworkStats;)Landroid/net/NetworkStats;

    move-result-object v3

    iput-object v0, v10, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastWifiNetworkStats:Landroid/net/NetworkStats;

    goto :goto_0

    :cond_0
    move-object v3, v2

    :goto_0
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    monitor-enter p0

    if-eqz v3, :cond_1

    :try_start_1
    invoke-virtual {v10, v3}, Lcom/android/server/power/stats/BatteryStatsImpl;->notifyNetworkStatsUpdatedCallbacksLocked(Landroid/net/NetworkStats;)V

    :cond_1
    iget-boolean v0, v10, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryInternal:Z

    if-eqz v0, :cond_23

    iget-boolean v0, v10, Lcom/android/server/power/stats/BatteryStatsImpl;->mIgnoreNextExternalStats:Z

    if-eqz v0, :cond_2

    goto/16 :goto_13

    :cond_2
    iget-object v0, v10, Lcom/android/server/power/stats/BatteryStatsImpl;->mGlobalEnergyConsumerStats:Lcom/android/internal/power/EnergyConsumerStats;

    const-wide/16 v11, 0x0

    if-eqz v0, :cond_3

    iget-object v0, v10, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiPowerCalculator:Lcom/android/server/power/stats/WifiPowerCalculator;

    if-eqz v0, :cond_3

    cmp-long v0, v7, v11

    if-lez v0, :cond_3

    new-instance v0, Landroid/util/SparseDoubleArray;

    invoke-direct {v0}, Landroid/util/SparseDoubleArray;-><init>()V

    goto :goto_1

    :cond_3
    move-object v0, v2

    :goto_1
    new-instance v9, Landroid/util/SparseLongArray;

    invoke-direct {v9}, Landroid/util/SparseLongArray;-><init>()V

    new-instance v13, Landroid/util/SparseLongArray;

    invoke-direct {v13}, Landroid/util/SparseLongArray;-><init>()V

    new-instance v5, Landroid/util/SparseLongArray;

    invoke-direct {v5}, Landroid/util/SparseLongArray;-><init>()V

    new-instance v6, Landroid/util/SparseLongArray;

    invoke-direct {v6}, Landroid/util/SparseLongArray;-><init>()V

    const/16 v16, 0x0

    const-wide/16 v18, 0x3e8

    if-eqz v3, :cond_10

    invoke-virtual {v3}, Landroid/net/NetworkStats;->iterator()Ljava/util/Iterator;

    move-result-object v17

    move-wide/from16 v20, v11

    move-wide/from16 v22, v20

    :goto_2
    invoke-interface/range {v17 .. v17}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_f

    invoke-interface/range {v17 .. v17}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    move-object/from16 v24, v1

    check-cast v24, Landroid/net/NetworkStats$Entry;

    invoke-virtual/range {v24 .. v24}, Landroid/net/NetworkStats$Entry;->getRxBytes()J

    move-result-wide v1

    cmp-long v1, v1, v11

    if-nez v1, :cond_4

    invoke-virtual/range {v24 .. v24}, Landroid/net/NetworkStats$Entry;->getTxBytes()J

    move-result-wide v1

    cmp-long v1, v1, v11

    if-nez v1, :cond_4

    goto :goto_2

    :cond_4
    invoke-virtual/range {v24 .. v24}, Landroid/net/NetworkStats$Entry;->getUid()I

    move-result v1

    invoke-virtual {v10, v1}, Lcom/android/server/power/stats/BatteryStatsImpl;->mapUid(I)I

    move-result v3

    move-object/from16 v1, p0

    move v2, v3

    move/from16 v25, v3

    move-wide/from16 v3, p4

    move-object/from16 v26, v5

    move-object/from16 v27, v6

    move-wide/from16 v5, p6

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object v1

    invoke-virtual/range {v24 .. v24}, Landroid/net/NetworkStats$Entry;->getRxBytes()J

    move-result-wide v2

    cmp-long v2, v2, v11

    if-eqz v2, :cond_6

    const/16 v29, 0x2

    invoke-virtual/range {v24 .. v24}, Landroid/net/NetworkStats$Entry;->getRxBytes()J

    move-result-wide v30

    invoke-virtual/range {v24 .. v24}, Landroid/net/NetworkStats$Entry;->getRxPackets()J

    move-result-wide v32

    move-object/from16 v28, v1

    invoke-virtual/range {v28 .. v33}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteNetworkActivityLocked(IJJ)V

    invoke-virtual/range {v24 .. v24}, Landroid/net/NetworkStats$Entry;->getSet()I

    move-result v2

    if-nez v2, :cond_5

    const/16 v29, 0x8

    invoke-virtual/range {v24 .. v24}, Landroid/net/NetworkStats$Entry;->getRxBytes()J

    move-result-wide v30

    invoke-virtual/range {v24 .. v24}, Landroid/net/NetworkStats$Entry;->getRxPackets()J

    move-result-wide v32

    move-object/from16 v28, v1

    invoke-virtual/range {v28 .. v33}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteNetworkActivityLocked(IJJ)V

    :cond_5
    iget-object v2, v10, Lcom/android/server/power/stats/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    const/4 v3, 0x2

    aget-object v2, v2, v3

    invoke-virtual/range {v24 .. v24}, Landroid/net/NetworkStats$Entry;->getRxBytes()J

    move-result-wide v4

    invoke-virtual {v2, v4, v5}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    iget-object v2, v10, Lcom/android/server/power/stats/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    aget-object v2, v2, v3

    invoke-virtual/range {v24 .. v24}, Landroid/net/NetworkStats$Entry;->getRxPackets()J

    move-result-wide v3

    invoke-virtual {v2, v3, v4}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    invoke-virtual/range {v24 .. v24}, Landroid/net/NetworkStats$Entry;->getRxPackets()J

    move-result-wide v2

    move/from16 v4, v25

    invoke-virtual {v9, v4, v2, v3}, Landroid/util/SparseLongArray;->incrementValue(IJ)V

    invoke-virtual/range {v24 .. v24}, Landroid/net/NetworkStats$Entry;->getRxPackets()J

    move-result-wide v2

    add-long v22, v22, v2

    goto :goto_3

    :cond_6
    move/from16 v4, v25

    :goto_3
    invoke-virtual/range {v24 .. v24}, Landroid/net/NetworkStats$Entry;->getTxBytes()J

    move-result-wide v2

    cmp-long v2, v2, v11

    if-eqz v2, :cond_8

    const/16 v29, 0x3

    invoke-virtual/range {v24 .. v24}, Landroid/net/NetworkStats$Entry;->getTxBytes()J

    move-result-wide v30

    invoke-virtual/range {v24 .. v24}, Landroid/net/NetworkStats$Entry;->getTxPackets()J

    move-result-wide v32

    move-object/from16 v28, v1

    invoke-virtual/range {v28 .. v33}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteNetworkActivityLocked(IJJ)V

    invoke-virtual/range {v24 .. v24}, Landroid/net/NetworkStats$Entry;->getSet()I

    move-result v2

    if-nez v2, :cond_7

    const/16 v29, 0x9

    invoke-virtual/range {v24 .. v24}, Landroid/net/NetworkStats$Entry;->getTxBytes()J

    move-result-wide v30

    invoke-virtual/range {v24 .. v24}, Landroid/net/NetworkStats$Entry;->getTxPackets()J

    move-result-wide v32

    move-object/from16 v28, v1

    invoke-virtual/range {v28 .. v33}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->noteNetworkActivityLocked(IJJ)V

    :cond_7
    iget-object v2, v10, Lcom/android/server/power/stats/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    const/4 v3, 0x3

    aget-object v2, v2, v3

    invoke-virtual/range {v24 .. v24}, Landroid/net/NetworkStats$Entry;->getTxBytes()J

    move-result-wide v5

    invoke-virtual {v2, v5, v6}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    iget-object v2, v10, Lcom/android/server/power/stats/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    aget-object v2, v2, v3

    invoke-virtual/range {v24 .. v24}, Landroid/net/NetworkStats$Entry;->getTxPackets()J

    move-result-wide v5

    invoke-virtual {v2, v5, v6}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    invoke-virtual/range {v24 .. v24}, Landroid/net/NetworkStats$Entry;->getTxPackets()J

    move-result-wide v2

    invoke-virtual {v13, v4, v2, v3}, Landroid/util/SparseLongArray;->incrementValue(IJ)V

    invoke-virtual/range {v24 .. v24}, Landroid/net/NetworkStats$Entry;->getTxPackets()J

    move-result-wide v2

    add-long v20, v20, v2

    :cond_8
    if-eqz v0, :cond_e

    if-nez p1, :cond_e

    iget-boolean v2, v10, Lcom/android/server/power/stats/BatteryStatsImpl;->mHasWifiReporting:Z

    if-nez v2, :cond_e

    iget-object v2, v1, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mWifiRunningTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    mul-long v3, v14, v18

    invoke-virtual {v2, v3, v4}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTimeSinceMarkLocked(J)J

    move-result-wide v5

    div-long v33, v5, v18

    cmp-long v2, v33, v11

    if-lez v2, :cond_9

    iget-object v2, v1, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mWifiRunningTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v2, v14, v15}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->setMark(J)V

    :cond_9
    iget-object v2, v1, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mWifiScanTimer:Lcom/android/server/power/stats/BatteryStatsImpl$DualTimer;

    invoke-virtual {v2, v3, v4}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTimeSinceMarkLocked(J)J

    move-result-wide v5

    div-long v35, v5, v18

    cmp-long v2, v35, v11

    if-lez v2, :cond_a

    iget-object v2, v1, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mWifiScanTimer:Lcom/android/server/power/stats/BatteryStatsImpl$DualTimer;

    invoke-virtual {v2, v14, v15}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->setMark(J)V

    :cond_a
    move-wide/from16 v37, v11

    move/from16 v2, v16

    :goto_4
    const/4 v5, 0x5

    if-ge v2, v5, :cond_d

    iget-object v5, v1, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mWifiBatchedScanTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v5, v5, v2

    if-eqz v5, :cond_c

    invoke-virtual {v5, v3, v4}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTimeSinceMarkLocked(J)J

    move-result-wide v5

    div-long v5, v5, v18

    cmp-long v25, v5, v11

    if-lez v25, :cond_b

    iget-object v11, v1, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mWifiBatchedScanTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v11, v11, v2

    invoke-virtual {v11, v14, v15}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->setMark(J)V

    :cond_b
    add-long v37, v37, v5

    :cond_c
    add-int/lit8 v2, v2, 0x1

    const-wide/16 v11, 0x0

    goto :goto_4

    :cond_d
    invoke-virtual {v1}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->getUid()I

    move-result v1

    iget-object v2, v10, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiPowerCalculator:Lcom/android/server/power/stats/WifiPowerCalculator;

    invoke-virtual/range {v24 .. v24}, Landroid/net/NetworkStats$Entry;->getRxPackets()J

    move-result-wide v29

    invoke-virtual/range {v24 .. v24}, Landroid/net/NetworkStats$Entry;->getTxPackets()J

    move-result-wide v31

    move-object/from16 v28, v2

    invoke-virtual/range {v28 .. v38}, Lcom/android/server/power/stats/WifiPowerCalculator;->calcPowerWithoutControllerDataMah(JJJJJ)D

    move-result-wide v2

    invoke-virtual {v0, v1, v2, v3}, Landroid/util/SparseDoubleArray;->incrementValue(ID)V

    :cond_e
    move-object/from16 v5, v26

    move-object/from16 v6, v27

    const-wide/16 v11, 0x0

    goto/16 :goto_2

    :cond_f
    move-object/from16 v26, v5

    move-object/from16 v27, v6

    goto :goto_5

    :cond_10
    move-object/from16 v26, v5

    move-object/from16 v27, v6

    const-wide/16 v20, 0x0

    const-wide/16 v22, 0x0

    :goto_5
    const-wide/16 v24, 0x0

    if-eqz p1, :cond_1f

    const/4 v1, 0x1

    iput-boolean v1, v10, Lcom/android/server/power/stats/BatteryStatsImpl;->mHasWifiReporting:Z

    invoke-virtual/range {p1 .. p1}, Landroid/os/connectivity/WifiActivityEnergyInfo;->getControllerTxDurationMillis()J

    move-result-wide v31

    invoke-virtual/range {p1 .. p1}, Landroid/os/connectivity/WifiActivityEnergyInfo;->getControllerRxDurationMillis()J

    move-result-wide v29

    invoke-virtual/range {p1 .. p1}, Landroid/os/connectivity/WifiActivityEnergyInfo;->getControllerScanDurationMillis()J

    invoke-virtual/range {p1 .. p1}, Landroid/os/connectivity/WifiActivityEnergyInfo;->getControllerIdleDurationMillis()J

    move-result-wide v33

    iget-object v1, v10, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    move/from16 v2, v16

    const-wide/16 v3, 0x0

    const-wide/16 v5, 0x0

    :goto_6
    if-ge v2, v1, :cond_11

    iget-object v11, v10, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v11, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    iget-object v12, v11, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mWifiScanTimer:Lcom/android/server/power/stats/BatteryStatsImpl$DualTimer;

    mul-long v7, v14, v18

    invoke-virtual {v12, v7, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTimeSinceMarkLocked(J)J

    move-result-wide v35

    div-long v35, v35, v18

    add-long v3, v3, v35

    iget-object v11, v11, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mFullWifiLockTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v11, v7, v8}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTimeSinceMarkLocked(J)J

    move-result-wide v7

    div-long v7, v7, v18

    add-long/2addr v5, v7

    add-int/lit8 v2, v2, 0x1

    move-wide/from16 v7, p2

    goto :goto_6

    :cond_11
    move/from16 v2, v16

    move-wide/from16 v11, v29

    move-wide/from16 v7, v31

    :goto_7
    if-ge v2, v1, :cond_17

    move/from16 p8, v1

    iget-object v1, v10, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-object/from16 v17, v9

    iget-object v9, v1, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mWifiScanTimer:Lcom/android/server/power/stats/BatteryStatsImpl$DualTimer;

    move-wide/from16 v35, v5

    mul-long v5, v14, v18

    invoke-virtual {v9, v5, v6}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTimeSinceMarkLocked(J)J

    move-result-wide v37

    div-long v37, v37, v18
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    const-wide/16 v39, 0x0

    cmp-long v9, v37, v39

    if-lez v9, :cond_14

    :try_start_2
    iget-object v9, v1, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mWifiScanTimer:Lcom/android/server/power/stats/BatteryStatsImpl$DualTimer;

    invoke-virtual {v9, v14, v15}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->setMark(J)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    cmp-long v9, v3, v29

    if-lez v9, :cond_12

    mul-long v41, v29, v37

    :try_start_3
    div-long v41, v41, v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    move-wide/from16 v9, v41

    goto :goto_8

    :cond_12
    move-wide/from16 v9, v37

    :goto_8
    cmp-long v28, v3, v31

    if-lez v28, :cond_13

    mul-long v37, v37, v31

    :try_start_4
    div-long v37, v37, v3

    :cond_13
    move-wide/from16 v41, v3

    move-object/from16 v28, v13

    move-wide/from16 v3, v37

    invoke-virtual {v1}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->getUid()I

    move-result v13

    move/from16 v43, v2

    move-object/from16 v2, v26

    invoke-virtual {v2, v13, v9, v10}, Landroid/util/SparseLongArray;->incrementValue(IJ)V

    invoke-virtual {v1}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->getUid()I

    move-result v13

    move-object/from16 v26, v2

    move-object/from16 v2, v27

    invoke-virtual {v2, v13, v3, v4}, Landroid/util/SparseLongArray;->incrementValue(IJ)V

    sub-long/2addr v11, v9

    sub-long/2addr v7, v3

    move-wide/from16 v47, v3

    move-wide/from16 v45, v9

    goto :goto_9

    :cond_14
    move/from16 v43, v2

    move-wide/from16 v41, v3

    move-object/from16 v28, v13

    move-object/from16 v2, v27

    move-wide/from16 v45, v37

    move-wide/from16 v47, v45

    :goto_9
    iget-object v3, v1, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mFullWifiLockTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v3, v5, v6}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTimeSinceMarkLocked(J)J

    move-result-wide v3

    div-long v3, v3, v18

    const-wide/16 v39, 0x0

    cmp-long v5, v3, v39

    if-lez v5, :cond_15

    iget-object v5, v1, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mFullWifiLockTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v5, v14, v15}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->setMark(J)V

    mul-long v3, v3, v33

    div-long v3, v3, v35

    invoke-virtual {v1}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->getOrCreateWifiControllerActivityLocked()Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;

    move-result-object v5

    invoke-static {v5}, Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;->-$$Nest$mgetOrCreateIdleTimeCounter(Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;)Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;

    move-result-object v5

    invoke-static {v5, v3, v4, v14, v15}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;->-$$Nest$mincrement(Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;JJ)V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    move-wide/from16 v49, v3

    goto :goto_a

    :cond_15
    move-wide/from16 v49, v39

    :goto_a
    if-eqz v0, :cond_16

    move-object/from16 v10, p0

    :try_start_5
    iget-object v3, v10, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiPowerCalculator:Lcom/android/server/power/stats/WifiPowerCalculator;

    move-object/from16 v44, v3

    invoke-virtual/range {v44 .. v50}, Lcom/android/server/power/stats/WifiPowerCalculator;->calcPowerFromControllerDataMah(JJJ)D

    move-result-wide v3

    invoke-virtual {v1}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->getUid()I

    move-result v1

    invoke-virtual {v0, v1, v3, v4}, Landroid/util/SparseDoubleArray;->incrementValue(ID)V

    goto :goto_b

    :cond_16
    move-object/from16 v10, p0

    :goto_b
    add-int/lit8 v1, v43, 0x1

    move-object/from16 v27, v2

    move-object/from16 v9, v17

    move-object/from16 v13, v28

    move-wide/from16 v5, v35

    move-wide/from16 v3, v41

    move v2, v1

    move/from16 v1, p8

    goto/16 :goto_7

    :catchall_0
    move-exception v0

    move-object/from16 v10, p0

    goto/16 :goto_14

    :cond_17
    move-object/from16 v17, v9

    move-object/from16 v28, v13

    move-object/from16 v2, v27

    move/from16 v1, v16

    :goto_c
    invoke-virtual/range {v28 .. v28}, Landroid/util/SparseLongArray;->size()I

    move-result v3

    if-ge v1, v3, :cond_18

    move-object/from16 v3, v28

    invoke-virtual {v3, v1}, Landroid/util/SparseLongArray;->keyAt(I)I

    move-result v4

    invoke-virtual {v3, v1}, Landroid/util/SparseLongArray;->valueAt(I)J

    move-result-wide v5

    mul-long/2addr v5, v7

    div-long v5, v5, v20

    invoke-virtual {v2, v4, v5, v6}, Landroid/util/SparseLongArray;->incrementValue(IJ)V

    add-int/lit8 v1, v1, 0x1

    move-object/from16 v28, v3

    goto :goto_c

    :cond_18
    move/from16 v1, v16

    :goto_d
    invoke-virtual/range {v17 .. v17}, Landroid/util/SparseLongArray;->size()I

    move-result v3

    if-ge v1, v3, :cond_19

    move-object/from16 v3, v17

    invoke-virtual {v3, v1}, Landroid/util/SparseLongArray;->keyAt(I)I

    move-result v4

    invoke-virtual {v3, v1}, Landroid/util/SparseLongArray;->valueAt(I)J

    move-result-wide v5

    mul-long/2addr v5, v11

    div-long v5, v5, v22

    move-object/from16 v7, v26

    invoke-virtual {v7, v4, v5, v6}, Landroid/util/SparseLongArray;->incrementValue(IJ)V

    add-int/lit8 v1, v1, 0x1

    move-object/from16 v17, v3

    move-object/from16 v26, v7

    goto :goto_d

    :cond_19
    move-object/from16 v7, v26

    move/from16 v8, v16

    :goto_e
    invoke-virtual {v2}, Landroid/util/SparseLongArray;->size()I

    move-result v1

    if-ge v8, v1, :cond_1b

    invoke-virtual {v2, v8}, Landroid/util/SparseLongArray;->keyAt(I)I

    move-result v9

    invoke-virtual {v2, v8}, Landroid/util/SparseLongArray;->valueAt(I)J

    move-result-wide v11

    move-object/from16 v1, p0

    move-object v13, v2

    move v2, v9

    move-wide/from16 v3, p4

    move-wide/from16 v5, p6

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object v1

    invoke-virtual {v1}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->getOrCreateWifiControllerActivityLocked()Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;

    move-result-object v1

    invoke-static {v1}, Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;->-$$Nest$mgetOrCreateTxTimeCounters(Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;)[Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;

    move-result-object v1

    aget-object v1, v1, v16

    invoke-static {v1, v11, v12, v14, v15}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;->-$$Nest$mincrement(Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;JJ)V

    if-eqz v0, :cond_1a

    iget-object v1, v10, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiPowerCalculator:Lcom/android/server/power/stats/WifiPowerCalculator;

    const-wide/16 v36, 0x0

    const-wide/16 v40, 0x0

    move-object/from16 v35, v1

    move-wide/from16 v38, v11

    invoke-virtual/range {v35 .. v41}, Lcom/android/server/power/stats/WifiPowerCalculator;->calcPowerFromControllerDataMah(JJJ)D

    move-result-wide v1

    invoke-virtual {v0, v9, v1, v2}, Landroid/util/SparseDoubleArray;->incrementValue(ID)V

    :cond_1a
    add-int/lit8 v8, v8, 0x1

    move-object v2, v13

    goto :goto_e

    :cond_1b
    move/from16 v8, v16

    :goto_f
    invoke-virtual {v7}, Landroid/util/SparseLongArray;->size()I

    move-result v1

    if-ge v8, v1, :cond_1d

    invoke-virtual {v7, v8}, Landroid/util/SparseLongArray;->keyAt(I)I

    move-result v9

    invoke-virtual {v7, v8}, Landroid/util/SparseLongArray;->valueAt(I)J

    move-result-wide v11

    invoke-virtual {v7, v8}, Landroid/util/SparseLongArray;->keyAt(I)I

    move-result v2

    move-object/from16 v1, p0

    move-wide/from16 v3, p4

    move-wide/from16 v5, p6

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/power/stats/BatteryStatsImpl;->getUidStatsLocked(IJJ)Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    move-result-object v1

    invoke-virtual {v1}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->getOrCreateWifiControllerActivityLocked()Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;

    move-result-object v1

    invoke-static {v1}, Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;->-$$Nest$mgetOrCreateRxTimeCounter(Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;)Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;

    move-result-object v1

    invoke-static {v1, v11, v12, v14, v15}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;->-$$Nest$mincrement(Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;JJ)V

    if-eqz v0, :cond_1c

    iget-object v1, v10, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiPowerCalculator:Lcom/android/server/power/stats/WifiPowerCalculator;

    const-wide/16 v38, 0x0

    const-wide/16 v40, 0x0

    move-object/from16 v35, v1

    move-wide/from16 v36, v11

    invoke-virtual/range {v35 .. v41}, Lcom/android/server/power/stats/WifiPowerCalculator;->calcPowerFromControllerDataMah(JJJ)D

    move-result-wide v1

    invoke-virtual {v0, v9, v1, v2}, Landroid/util/SparseDoubleArray;->incrementValue(ID)V

    :cond_1c
    add-int/lit8 v8, v8, 0x1

    goto :goto_f

    :cond_1d
    iget-object v1, v10, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiActivity:Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-static {v1}, Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;->-$$Nest$mgetOrCreateRxTimeCounter(Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;)Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;

    move-result-object v1

    invoke-virtual/range {p1 .. p1}, Landroid/os/connectivity/WifiActivityEnergyInfo;->getControllerRxDurationMillis()J

    move-result-wide v2

    invoke-static {v1, v2, v3, v14, v15}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;->-$$Nest$mincrement(Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;JJ)V

    iget-object v1, v10, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiActivity:Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-static {v1}, Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;->-$$Nest$mgetOrCreateTxTimeCounters(Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;)[Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;

    move-result-object v1

    aget-object v1, v1, v16

    invoke-virtual/range {p1 .. p1}, Landroid/os/connectivity/WifiActivityEnergyInfo;->getControllerTxDurationMillis()J

    move-result-wide v2

    invoke-static {v1, v2, v3, v14, v15}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;->-$$Nest$mincrement(Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;JJ)V

    iget-object v1, v10, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiActivity:Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v1}, Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;->getScanTimeCounter()Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v1

    invoke-virtual/range {p1 .. p1}, Landroid/os/connectivity/WifiActivityEnergyInfo;->getControllerScanDurationMillis()J

    move-result-wide v2

    invoke-virtual {v1, v2, v3}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    iget-object v1, v10, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiActivity:Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-static {v1}, Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;->-$$Nest$mgetOrCreateIdleTimeCounter(Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;)Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;

    move-result-object v1

    invoke-virtual/range {p1 .. p1}, Landroid/os/connectivity/WifiActivityEnergyInfo;->getControllerIdleDurationMillis()J

    move-result-wide v2

    invoke-static {v1, v2, v3, v14, v15}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;->-$$Nest$mincrement(Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;JJ)V

    iget-object v1, v10, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    const-string/jumbo v2, "wifi.controller.voltage"

    invoke-virtual {v1, v2}, Lcom/android/internal/os/PowerProfile;->getAveragePower(Ljava/lang/String;)D

    move-result-wide v1

    const-wide v3, 0x408f400000000000L    # 1000.0

    div-double/2addr v1, v3

    cmpl-double v3, v1, v24

    if-eqz v3, :cond_1e

    invoke-virtual/range {p1 .. p1}, Landroid/os/connectivity/WifiActivityEnergyInfo;->getControllerEnergyUsedMicroJoules()J

    move-result-wide v3

    long-to-double v3, v3

    div-double/2addr v3, v1

    iget-object v5, v10, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiActivity:Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v5}, Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;->getPowerCounter()Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v5

    double-to-long v6, v3

    invoke-virtual {v5, v6, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    goto :goto_10

    :cond_1e
    move-wide/from16 v3, v24

    :goto_10
    iget-object v5, v10, Lcom/android/server/power/stats/BatteryStatsImpl;->mTmpRailStats:Lcom/android/internal/os/RailStats;

    invoke-virtual {v5}, Lcom/android/internal/os/RailStats;->getWifiTotalEnergyUseduWs()J

    move-result-wide v5

    long-to-double v5, v5

    div-double/2addr v5, v1

    double-to-long v1, v5

    iget-object v5, v10, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiActivity:Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v5}, Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;->getMonitoredRailChargeConsumedMaMs()Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v5

    invoke-virtual {v5, v1, v2}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    iget-object v11, v10, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    long-to-double v1, v1

    const-wide v5, 0x414b774000000000L    # 3600000.0

    div-double v16, v1, v5

    move-wide/from16 v12, p4

    move-wide v8, v14

    move-wide/from16 v14, p6

    invoke-virtual/range {v11 .. v17}, Lcom/android/internal/os/BatteryStatsHistory;->recordWifiConsumedCharge(JJD)V

    iget-object v1, v10, Lcom/android/server/power/stats/BatteryStatsImpl;->mTmpRailStats:Lcom/android/internal/os/RailStats;

    invoke-virtual {v1}, Lcom/android/internal/os/RailStats;->resetWifiTotalEnergyUsed()V

    if-eqz v0, :cond_20

    div-double/2addr v3, v5

    iget-object v1, v10, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiPowerCalculator:Lcom/android/server/power/stats/WifiPowerCalculator;

    move-object/from16 v28, v1

    invoke-virtual/range {v28 .. v34}, Lcom/android/server/power/stats/WifiPowerCalculator;->calcPowerFromControllerDataMah(JJJ)D

    move-result-wide v1

    invoke-static {v3, v4, v1, v2}, Ljava/lang/Math;->max(DD)D

    move-result-wide v24

    goto :goto_11

    :cond_1f
    move-wide v8, v14

    :cond_20
    :goto_11
    if-eqz v0, :cond_22

    iget-object v1, v10, Lcom/android/server/power/stats/BatteryStatsImpl;->mGlobalEnergyConsumerStats:Lcom/android/internal/power/EnergyConsumerStats;

    const/4 v2, 0x4

    move-wide/from16 v3, p2

    invoke-virtual {v1, v2, v3, v4}, Lcom/android/internal/power/EnergyConsumerStats;->updateStandardBucket(IJ)V

    iget-boolean v1, v10, Lcom/android/server/power/stats/BatteryStatsImpl;->mHasWifiReporting:Z

    if-nez v1, :cond_21

    iget-object v1, v10, Lcom/android/server/power/stats/BatteryStatsImpl;->mGlobalWifiRunningTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    mul-long v5, v8, v18

    invoke-virtual {v1, v5, v6}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->getTimeSinceMarkLocked(J)J

    move-result-wide v1

    div-long v1, v1, v18

    iget-object v5, v10, Lcom/android/server/power/stats/BatteryStatsImpl;->mGlobalWifiRunningTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v5, v8, v9}, Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;->setMark(J)V

    iget-object v5, v10, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiPowerCalculator:Lcom/android/server/power/stats/WifiPowerCalculator;

    invoke-virtual {v5, v1, v2}, Lcom/android/server/power/stats/WifiPowerCalculator;->calcGlobalPowerWithoutControllerDataMah(J)D

    move-result-wide v1

    move-wide v6, v1

    goto :goto_12

    :cond_21
    move-wide/from16 v6, v24

    :goto_12
    const/4 v2, 0x4

    move-object/from16 v1, p0

    move-wide/from16 v3, p2

    move-object v5, v0

    move-wide/from16 v8, p4

    invoke-virtual/range {v1 .. v9}, Lcom/android/server/power/stats/BatteryStatsImpl;->distributeEnergyToUidsLocked(IJLandroid/util/SparseDoubleArray;DJ)V

    :cond_22
    monitor-exit p0

    return-void

    :cond_23
    :goto_13
    monitor-exit p0

    return-void

    :catchall_1
    move-exception v0

    :goto_14
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    throw v0

    :catchall_2
    move-exception v0

    :try_start_6
    monitor-exit v1
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_2

    throw v0
.end method

.method public writeAsyncLocked()V
    .locals 2

    invoke-static {}, Lcom/android/internal/os/BackgroundThread;->getHandler()Landroid/os/Handler;

    move-result-object v0

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWriteAsyncRunnable:Ljava/lang/Runnable;

    invoke-virtual {v0, v1}, Landroid/os/Handler;->removeCallbacks(Ljava/lang/Runnable;)V

    invoke-static {}, Lcom/android/internal/os/BackgroundThread;->getHandler()Landroid/os/Handler;

    move-result-object v0

    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWriteAsyncRunnable:Ljava/lang/Runnable;

    invoke-virtual {v0, p0}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    return-void
.end method

.method public final writeDailyItemsLocked(Lcom/android/modules/utils/TypedXmlSerializer;)V
    .locals 13

    new-instance v0, Ljava/lang/StringBuilder;

    const/16 v1, 0x40

    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(I)V

    sget-object v1, Ljava/lang/Boolean;->TRUE:Ljava/lang/Boolean;

    const/4 v2, 0x0

    invoke-interface {p1, v2, v1}, Lcom/android/modules/utils/TypedXmlSerializer;->startDocument(Ljava/lang/String;Ljava/lang/Boolean;)V

    const-string v1, "daily-items"

    invoke-interface {p1, v2, v1}, Lcom/android/modules/utils/TypedXmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    const/4 v3, 0x0

    move v4, v3

    :goto_0
    iget-object v5, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v5

    if-ge v4, v5, :cond_3

    iget-object v5, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    invoke-virtual {v5, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Landroid/os/BatteryStats$DailyItem;

    const-string v6, "item"

    invoke-interface {p1, v2, v6}, Lcom/android/modules/utils/TypedXmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    iget-wide v7, v5, Landroid/os/BatteryStats$DailyItem;->mStartTime:J

    const-string/jumbo v9, "start"

    invoke-interface {p1, v2, v9, v7, v8}, Lcom/android/modules/utils/TypedXmlSerializer;->attributeLong(Ljava/lang/String;Ljava/lang/String;J)Lorg/xmlpull/v1/XmlSerializer;

    const-string v7, "end"

    iget-wide v8, v5, Landroid/os/BatteryStats$DailyItem;->mEndTime:J

    invoke-interface {p1, v2, v7, v8, v9}, Lcom/android/modules/utils/TypedXmlSerializer;->attributeLong(Ljava/lang/String;Ljava/lang/String;J)Lorg/xmlpull/v1/XmlSerializer;

    const-string v7, "dis"

    iget-object v8, v5, Landroid/os/BatteryStats$DailyItem;->mDischargeSteps:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {p0, p1, v7, v8, v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->writeDailyLevelSteps(Lcom/android/modules/utils/TypedXmlSerializer;Ljava/lang/String;Landroid/os/BatteryStats$LevelStepTracker;Ljava/lang/StringBuilder;)V

    const-string v7, "chg"

    iget-object v8, v5, Landroid/os/BatteryStats$DailyItem;->mChargeSteps:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {p0, p1, v7, v8, v0}, Lcom/android/server/power/stats/BatteryStatsImpl;->writeDailyLevelSteps(Lcom/android/modules/utils/TypedXmlSerializer;Ljava/lang/String;Landroid/os/BatteryStats$LevelStepTracker;Ljava/lang/StringBuilder;)V

    iget-object v7, v5, Landroid/os/BatteryStats$DailyItem;->mPackageChanges:Ljava/util/ArrayList;

    if-eqz v7, :cond_2

    move v7, v3

    :goto_1
    iget-object v8, v5, Landroid/os/BatteryStats$DailyItem;->mPackageChanges:Ljava/util/ArrayList;

    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    move-result v8

    if-ge v7, v8, :cond_2

    iget-object v8, v5, Landroid/os/BatteryStats$DailyItem;->mPackageChanges:Ljava/util/ArrayList;

    invoke-virtual {v8, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Landroid/os/BatteryStats$PackageChange;

    iget-object v9, v8, Landroid/os/BatteryStats$PackageChange;->mPackageName:Ljava/lang/String;

    if-nez v9, :cond_0

    const-string v9, "BatteryStatsImpl"

    const-string v10, "There was an issue while writing the package name in internal storage."

    invoke-static {v9, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    const-string v9, "NULL"

    iput-object v9, v8, Landroid/os/BatteryStats$PackageChange;->mPackageName:Ljava/lang/String;

    :cond_0
    iget-boolean v9, v8, Landroid/os/BatteryStats$PackageChange;->mUpdate:Z

    const-string/jumbo v10, "pkg"

    if-eqz v9, :cond_1

    const-string/jumbo v9, "upd"

    invoke-interface {p1, v2, v9}, Lcom/android/modules/utils/TypedXmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    iget-object v11, v8, Landroid/os/BatteryStats$PackageChange;->mPackageName:Ljava/lang/String;

    invoke-interface {p1, v2, v10, v11}, Lcom/android/modules/utils/TypedXmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    const-string/jumbo v10, "ver"

    iget-wide v11, v8, Landroid/os/BatteryStats$PackageChange;->mVersionCode:J

    invoke-interface {p1, v2, v10, v11, v12}, Lcom/android/modules/utils/TypedXmlSerializer;->attributeLong(Ljava/lang/String;Ljava/lang/String;J)Lorg/xmlpull/v1/XmlSerializer;

    invoke-interface {p1, v2, v9}, Lcom/android/modules/utils/TypedXmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    goto :goto_2

    :cond_1
    const-string/jumbo v9, "rem"

    invoke-interface {p1, v2, v9}, Lcom/android/modules/utils/TypedXmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    iget-object v8, v8, Landroid/os/BatteryStats$PackageChange;->mPackageName:Ljava/lang/String;

    invoke-interface {p1, v2, v10, v8}, Lcom/android/modules/utils/TypedXmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    invoke-interface {p1, v2, v9}, Lcom/android/modules/utils/TypedXmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    :goto_2
    add-int/lit8 v7, v7, 0x1

    goto :goto_1

    :cond_2
    invoke-interface {p1, v2, v6}, Lcom/android/modules/utils/TypedXmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    add-int/lit8 v4, v4, 0x1

    goto/16 :goto_0

    :cond_3
    invoke-interface {p1, v2, v1}, Lcom/android/modules/utils/TypedXmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    invoke-interface {p1}, Lcom/android/modules/utils/TypedXmlSerializer;->endDocument()V

    return-void
.end method

.method public final writeDailyLevelSteps(Lcom/android/modules/utils/TypedXmlSerializer;Ljava/lang/String;Landroid/os/BatteryStats$LevelStepTracker;Ljava/lang/StringBuilder;)V
    .locals 5

    if-eqz p3, :cond_1

    const/4 p0, 0x0

    invoke-interface {p1, p0, p2}, Lcom/android/modules/utils/TypedXmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    const-string/jumbo v0, "n"

    iget v1, p3, Landroid/os/BatteryStats$LevelStepTracker;->mNumStepDurations:I

    invoke-interface {p1, p0, v0, v1}, Lcom/android/modules/utils/TypedXmlSerializer;->attributeInt(Ljava/lang/String;Ljava/lang/String;I)Lorg/xmlpull/v1/XmlSerializer;

    const/4 v0, 0x0

    move v1, v0

    :goto_0
    iget v2, p3, Landroid/os/BatteryStats$LevelStepTracker;->mNumStepDurations:I

    if-ge v1, v2, :cond_0

    const-string/jumbo v2, "s"

    invoke-interface {p1, p0, v2}, Lcom/android/modules/utils/TypedXmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    invoke-virtual {p4, v0}, Ljava/lang/StringBuilder;->setLength(I)V

    invoke-virtual {p3, v1, p4}, Landroid/os/BatteryStats$LevelStepTracker;->encodeEntryAt(ILjava/lang/StringBuilder;)V

    const-string/jumbo v3, "v"

    invoke-virtual {p4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-interface {p1, p0, v3, v4}, Lcom/android/modules/utils/TypedXmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    invoke-interface {p1, p0, v2}, Lcom/android/modules/utils/TypedXmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    :cond_0
    invoke-interface {p1, p0, p2}, Lcom/android/modules/utils/TypedXmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    :cond_1
    return-void
.end method

.method public final writeHistoryLocked()V
    .locals 1

    iget-boolean v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mShuttingDown:Z

    if-eqz v0, :cond_0

    return-void

    :cond_0
    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsHistory;->writeHistory()V

    return-void
.end method

.method public final writeParcelToFileLocked(Landroid/os/Parcel;Landroid/util/AtomicFile;)V
    .locals 5

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWriteLock:Ljava/util/concurrent/locks/ReentrantLock;

    invoke-virtual {v0}, Ljava/util/concurrent/locks/ReentrantLock;->lock()V

    const/4 v0, 0x0

    :try_start_0
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v1

    invoke-virtual {p2}, Landroid/util/AtomicFile;->startWrite()Ljava/io/FileOutputStream;

    move-result-object v0

    invoke-virtual {p1}, Landroid/os/Parcel;->marshall()[B

    move-result-object p1

    invoke-virtual {v0, p1}, Ljava/io/FileOutputStream;->write([B)V

    invoke-virtual {v0}, Ljava/io/FileOutputStream;->flush()V

    invoke-virtual {p2, v0}, Landroid/util/AtomicFile;->finishWrite(Ljava/io/FileOutputStream;)V

    const-string p1, "batterystats"

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v3

    sub-long/2addr v3, v1

    invoke-static {p1, v3, v4}, Lcom/android/internal/logging/EventLogTags;->writeCommitSysConfigFile(Ljava/lang/String;J)V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    goto :goto_0

    :catchall_0
    move-exception p1

    goto :goto_1

    :catch_0
    move-exception p1

    :try_start_1
    const-string v1, "BatteryStatsImpl"

    const-string v2, "Error writing battery statistics"

    invoke-static {v1, v2, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    invoke-virtual {p2, v0}, Landroid/util/AtomicFile;->failWrite(Ljava/io/FileOutputStream;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :goto_0
    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWriteLock:Ljava/util/concurrent/locks/ReentrantLock;

    invoke-virtual {p0}, Ljava/util/concurrent/locks/ReentrantLock;->unlock()V

    return-void

    :goto_1
    iget-object p0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWriteLock:Ljava/util/concurrent/locks/ReentrantLock;

    invoke-virtual {p0}, Ljava/util/concurrent/locks/ReentrantLock;->unlock()V

    throw p1
.end method

.method public final writeStatsLocked()V
    .locals 3

    iget-object v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mStatsFile:Landroid/util/AtomicFile;

    if-nez v0, :cond_0

    const-string p0, "BatteryStatsImpl"

    const-string/jumbo v0, "writeStatsLocked: no file associated with this instance"

    invoke-static {p0, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    return-void

    :cond_0
    iget-boolean v0, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mShuttingDown:Z

    if-eqz v0, :cond_1

    return-void

    :cond_1
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v0

    :try_start_0
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    const/4 v1, 0x0

    invoke-virtual {p0, v0, v1}, Lcom/android/server/power/stats/BatteryStatsImpl;->writeSummaryToParcel(Landroid/os/Parcel;Z)V

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v1}, Lcom/android/internal/os/Clock;->elapsedRealtime()J

    move-result-wide v1

    iput-wide v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastWriteTimeMs:J

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mStatsFile:Landroid/util/AtomicFile;

    invoke-virtual {p0, v0, v1}, Lcom/android/server/power/stats/BatteryStatsImpl;->writeParcelToFileLocked(Landroid/os/Parcel;Landroid/util/AtomicFile;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V

    return-void

    :catchall_0
    move-exception p0

    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V

    throw p0
.end method

.method public writeSummaryToParcel(Landroid/os/Parcel;Z)V
    .locals 21

    move-object/from16 v0, p0

    move-object/from16 v7, p1

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->pullPendingStateUpdatesLocked()V

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getStartClockTime()J

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v1}, Lcom/android/internal/os/Clock;->uptimeMillis()J

    move-result-wide v1

    const-wide/16 v8, 0x3e8

    mul-long v10, v1, v8

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mClock:Lcom/android/internal/os/Clock;

    invoke-virtual {v1}, Lcom/android/internal/os/Clock;->elapsedRealtime()J

    move-result-wide v1

    mul-long v12, v1, v8

    const v1, 0x1200d4

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHistory:Lcom/android/internal/os/BatteryStatsHistory;

    move/from16 v2, p2

    invoke-virtual {v1, v7, v2}, Lcom/android/internal/os/BatteryStatsHistory;->writeSummaryToParcel(Landroid/os/Parcel;Z)V

    iget v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mStartCount:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    const/4 v14, 0x0

    invoke-virtual {v0, v10, v11, v14}, Lcom/android/server/power/stats/BatteryStatsImpl;->computeUptime(JI)J

    move-result-wide v1

    invoke-virtual {v7, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    invoke-virtual {v0, v12, v13, v14}, Lcom/android/server/power/stats/BatteryStatsImpl;->computeRealtime(JI)J

    move-result-wide v1

    invoke-virtual {v7, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    iget-wide v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mStartClockTimeMs:J

    invoke-virtual {v7, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mStartPlatformVersion:Ljava/lang/String;

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mEndPlatformVersion:Ljava/lang/String;

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    move-object/from16 v2, p1

    move-wide v3, v10

    move-wide v5, v12

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;->writeSummaryToParcel(Landroid/os/Parcel;JJ)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;->writeSummaryToParcel(Landroid/os/Parcel;JJ)V

    iget v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeUnplugLevel:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    iget v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargePlugLevel:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    iget v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeCurrentLevel:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    iget v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryLevel:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    iget v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mEstimatedBatteryCapacityMah:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    iget v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLastLearnedBatteryCapacityUah:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    iget v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mMinLearnedBatteryCapacityUah:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    iget v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mMaxLearnedBatteryCapacityUah:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getLowDischargeAmountSinceCharge()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getHighDischargeAmountSinceCharge()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getDischargeAmountScreenOnSinceCharge()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getDischargeAmountScreenOffSinceCharge()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    iget v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mProtectBatteryMode:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getDischargeAmountScreenOnSinceChargePermil()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getDischargeAmountScreenOffSinceChargePermil()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getDischargeAmountSubScreenOnSinceChargePermil()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getDischargeAmountSubScreenOffSinceChargePermil()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getDischargeAmountScreenOnSinceChargeCoulombCounter()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getDischargeAmountScreenOffSinceChargeCoulombCounter()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->getDischargeAmountScreenDozeSinceCharge()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v1, v7}, Landroid/os/BatteryStats$LevelStepTracker;->writeToParcel(Landroid/os/Parcel;)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v1, v7}, Landroid/os/BatteryStats$LevelStepTracker;->writeToParcel(Landroid/os/Parcel;)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v1, v7}, Landroid/os/BatteryStats$LevelStepTracker;->writeToParcel(Landroid/os/Parcel;)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v1, v7}, Landroid/os/BatteryStats$LevelStepTracker;->writeToParcel(Landroid/os/Parcel;)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeCounter:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenOffCounter:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeScreenDozeCounter:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeLightDozeCounter:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDischargeDeepDozeCounter:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    if-eqz v1, :cond_0

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    move v2, v14

    :goto_0
    if-ge v2, v1, :cond_1

    iget-object v3, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/os/BatteryStats$PackageChange;

    iget-object v4, v3, Landroid/os/BatteryStats$PackageChange;->mPackageName:Ljava/lang/String;

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    iget-boolean v4, v3, Landroid/os/BatteryStats$PackageChange;->mUpdate:Z

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeInt(I)V

    iget-wide v3, v3, Landroid/os/BatteryStats$PackageChange;->mVersionCode:J

    invoke-virtual {v7, v3, v4}, Landroid/os/Parcel;->writeLong(J)V

    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    :cond_0
    invoke-virtual {v7, v14}, Landroid/os/Parcel;->writeInt(I)V

    :cond_1
    iget-wide v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDailyStartTimeMs:J

    invoke-virtual {v7, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    iget-wide v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNextMinDailyDeadlineMs:J

    invoke-virtual {v7, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    iget-wide v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNextMaxDailyDeadlineMs:J

    invoke-virtual {v7, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    iget-wide v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBatteryTimeToFullSeconds:J

    invoke-virtual {v7, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mEnergyConsumerStatsConfig:Lcom/android/internal/power/EnergyConsumerStats$Config;

    invoke-static {v1, v7}, Lcom/android/internal/power/EnergyConsumerStats$Config;->writeToParcel(Lcom/android/internal/power/EnergyConsumerStats$Config;Landroid/os/Parcel;)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mGlobalEnergyConsumerStats:Lcom/android/internal/power/EnergyConsumerStats;

    invoke-static {v1, v7}, Lcom/android/internal/power/EnergyConsumerStats;->writeSummaryToParcel(Lcom/android/internal/power/EnergyConsumerStats;Landroid/os/Parcel;)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenDozeTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    move v1, v14

    :goto_1
    const/4 v15, 0x5

    if-ge v1, v15, :cond_2

    iget-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    :cond_2
    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPerDisplayBatteryStats:[Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;

    array-length v1, v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    move v2, v14

    :goto_2
    if-ge v2, v1, :cond_3

    iget-object v3, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPerDisplayBatteryStats:[Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;

    aget-object v3, v3, v2

    invoke-virtual {v3, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$DisplayBatteryStats;->writeSummaryToParcel(Landroid/os/Parcel;J)V

    add-int/lit8 v2, v2, 0x1

    goto :goto_2

    :cond_3
    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenDozeTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    move v1, v14

    :goto_3
    if-ge v1, v15, :cond_4

    iget-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_3

    :cond_4
    move v1, v14

    :goto_4
    if-ge v1, v15, :cond_5

    iget-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenAutoBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_4

    :cond_5
    move v1, v14

    :goto_5
    if-ge v1, v15, :cond_6

    iget-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenAutoBrightnessTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_5

    :cond_6
    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenHighBrightnessTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubScreenHighBrightnessTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    move v1, v14

    :goto_6
    const/4 v2, 0x4

    if-ge v1, v2, :cond_7

    iget-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHighRefreshRateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_6

    :cond_7
    move v1, v14

    :goto_7
    if-ge v1, v2, :cond_8

    iget-object v3, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSubHighRefreshRateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v3, v3, v1

    invoke-virtual {v3, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_7

    :cond_8
    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDisplayPowerDrainCounter:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    iget-boolean v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHasDisplayPowerReporting:Z

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    move v1, v14

    :goto_8
    const/16 v5, 0x10

    if-ge v1, v5, :cond_9

    iget-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSpeakerMediaTimeCounters:[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    iget-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mSpeakerCallTimeCounters:[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_8

    :cond_9
    iget-boolean v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHasSpeakerOutReporting:Z

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mTxPowerSharingTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    iget-wide v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mTxPowerSharingDischargeMah:J

    invoke-virtual {v7, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileActiveTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileActive5GTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenOnGpsTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mInteractiveTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPowerSaveModeEnabledTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    iget-wide v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLongestLightIdleTimeMs:J

    invoke-virtual {v7, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    iget-wide v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mLongestFullIdleTimeMs:J

    invoke-virtual {v7, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeviceIdleModeLightTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeviceIdleModeFullTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeviceLightIdlingTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mDeviceIdlingTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    move v1, v14

    :goto_9
    invoke-static {}, Landroid/telephony/CellSignalStrength;->getNumSignalStrengthLevels()I

    move-result v2

    if-ge v1, v2, :cond_a

    iget-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_9

    :cond_a
    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    move v1, v14

    :goto_a
    sget v2, Landroid/os/BatteryStats;->NUM_DATA_CONNECTION_TYPES:I

    if-ge v1, v2, :cond_b

    iget-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_a

    :cond_b
    move v1, v14

    :goto_b
    const/16 v6, 0xa

    if-ge v1, v6, :cond_c

    iget-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    iget-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_b

    :cond_c
    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPerRatBatteryStats:[Lcom/android/server/power/stats/BatteryStatsImpl$RadioAccessTechnologyBatteryStats;

    array-length v1, v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    move v2, v14

    :goto_c
    const/4 v3, 0x1

    if-ge v2, v1, :cond_e

    iget-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mPerRatBatteryStats:[Lcom/android/server/power/stats/BatteryStatsImpl$RadioAccessTechnologyBatteryStats;

    aget-object v4, v4, v2

    if-nez v4, :cond_d

    invoke-virtual {v7, v14}, Landroid/os/Parcel;->writeInt(I)V

    goto :goto_d

    :cond_d
    invoke-virtual {v7, v3}, Landroid/os/Parcel;->writeInt(I)V

    invoke-virtual {v4, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$RadioAccessTechnologyBatteryStats;->writeSummaryToParcel(Landroid/os/Parcel;J)V

    :goto_d
    add-int/lit8 v2, v2, 0x1

    goto :goto_c

    :cond_e
    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioActivePerAppTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioActiveAdjustedTime:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioActiveUnknownTime:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mMobileRadioActiveUnknownCount:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiMulticastWakelockTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mGlobalWifiRunningTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    move v1, v14

    :goto_e
    const/16 v2, 0x8

    if-ge v1, v2, :cond_f

    iget-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_e

    :cond_f
    move v1, v14

    :goto_f
    const/16 v2, 0xd

    if-ge v1, v2, :cond_10

    iget-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_f

    :cond_10
    move v1, v14

    :goto_10
    if-ge v1, v15, :cond_11

    iget-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_10

    :cond_11
    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiActiveTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWifiActivity:Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v1, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;->writeSummaryToParcel(Landroid/os/Parcel;)V

    move v1, v14

    :goto_11
    iget-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    array-length v4, v2

    if-ge v1, v4, :cond_12

    aget-object v2, v2, v1

    invoke-virtual {v2, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_11

    :cond_12
    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBluetoothActivity:Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v1, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;->writeSummaryToParcel(Landroid/os/Parcel;)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mModemActivity:Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v1, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$ControllerActivityCounterImpl;->writeSummaryToParcel(Landroid/os/Parcel;)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNetworkModemActivity:Lcom/android/server/power/stats/BatteryStatsImpl$ModemActivityCounterImpl;

    invoke-virtual {v1, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$ModemActivityCounterImpl;->writeSummaryToParcel(Landroid/os/Parcel;)V

    iget-boolean v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHasWifiReporting:Z

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    iget-boolean v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHasBluetoothReporting:Z

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    iget-boolean v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mHasModemReporting:Z

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    iget v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mNumConnectivityChange:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mCameraOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBluetoothScanTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->size()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_12
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_14

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/Map$Entry;

    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;

    if-eqz v4, :cond_13

    invoke-virtual {v7, v3}, Landroid/os/Parcel;->writeInt(I)V

    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/String;

    invoke-virtual {v7, v2}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    invoke-virtual {v4, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_12

    :cond_13
    invoke-virtual {v7, v14}, Landroid/os/Parcel;->writeInt(I)V

    goto :goto_12

    :cond_14
    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->size()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_13
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_16

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/Map$Entry;

    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;

    if-eqz v4, :cond_15

    invoke-virtual {v7, v3}, Landroid/os/Parcel;->writeInt(I)V

    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/String;

    invoke-virtual {v7, v2}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    invoke-virtual {v4, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_13

    :cond_15
    invoke-virtual {v7, v14}, Landroid/os/Parcel;->writeInt(I)V

    goto :goto_13

    :cond_16
    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->size()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_14
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_18

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/Map$Entry;

    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;

    if-eqz v4, :cond_17

    invoke-virtual {v7, v3}, Landroid/os/Parcel;->writeInt(I)V

    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/String;

    invoke-virtual {v7, v2}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    invoke-virtual {v4, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_14

    :cond_17
    invoke-virtual {v7, v14}, Landroid/os/Parcel;->writeInt(I)V

    goto :goto_14

    :cond_18
    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->size()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_15
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_1a

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/Map$Entry;

    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/power/stats/BatteryStatsImpl$SamplingTimer;

    if-eqz v4, :cond_19

    invoke-virtual {v7, v3}, Landroid/os/Parcel;->writeInt(I)V

    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/String;

    invoke-virtual {v7, v2}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    invoke-virtual {v4, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_15

    :cond_19
    invoke-virtual {v7, v14}, Landroid/os/Parcel;->writeInt(I)V

    goto :goto_15

    :cond_1a
    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v1}, Landroid/util/LongSparseArray;->size()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    move v1, v14

    :goto_16
    iget-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v2}, Landroid/util/LongSparseArray;->size()I

    move-result v2

    if-ge v1, v2, :cond_1c

    iget-object v2, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v2, v1}, Landroid/util/LongSparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;

    if-eqz v2, :cond_1b

    invoke-virtual {v7, v3}, Landroid/os/Parcel;->writeInt(I)V

    iget-object v4, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v4, v1}, Landroid/util/LongSparseArray;->keyAt(I)J

    move-result-wide v3

    invoke-virtual {v7, v3, v4}, Landroid/os/Parcel;->writeLong(J)V

    invoke-virtual {v2, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_17

    :cond_1b
    invoke-virtual {v7, v14}, Landroid/os/Parcel;->writeInt(I)V

    :goto_17
    add-int/lit8 v1, v1, 0x1

    const/4 v3, 0x1

    goto :goto_16

    :cond_1c
    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v3

    invoke-virtual {v7, v3}, Landroid/os/Parcel;->writeInt(I)V

    move v4, v14

    :goto_18
    if-ge v4, v3, :cond_56

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1, v4}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    iget-object v1, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1, v4}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v1

    move-object v2, v1

    check-cast v2, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;

    iget-object v1, v2, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mOnBatteryBackgroundTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    move-object v8, v2

    move-object/from16 v2, p1

    move v9, v3

    move/from16 v18, v4

    const/4 v15, 0x1

    move-wide v3, v10

    move-wide v5, v12

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;->writeSummaryToParcel(Landroid/os/Parcel;JJ)V

    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mOnBatteryScreenOffBackgroundTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;->writeSummaryToParcel(Landroid/os/Parcel;JJ)V

    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mWifiRunningTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    if-eqz v1, :cond_1d

    invoke-virtual {v7, v15}, Landroid/os/Parcel;->writeInt(I)V

    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mWifiRunningTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_19

    :cond_1d
    invoke-virtual {v7, v14}, Landroid/os/Parcel;->writeInt(I)V

    :goto_19
    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mFullWifiLockTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    if-eqz v1, :cond_1e

    invoke-virtual {v7, v15}, Landroid/os/Parcel;->writeInt(I)V

    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mFullWifiLockTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_1a

    :cond_1e
    invoke-virtual {v7, v14}, Landroid/os/Parcel;->writeInt(I)V

    :goto_1a
    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mWifiScanTimer:Lcom/android/server/power/stats/BatteryStatsImpl$DualTimer;

    if-eqz v1, :cond_1f

    invoke-virtual {v7, v15}, Landroid/os/Parcel;->writeInt(I)V

    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mWifiScanTimer:Lcom/android/server/power/stats/BatteryStatsImpl$DualTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$DualTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_1b

    :cond_1f
    invoke-virtual {v7, v14}, Landroid/os/Parcel;->writeInt(I)V

    :goto_1b
    move v1, v14

    const/4 v2, 0x5

    :goto_1c
    if-ge v1, v2, :cond_21

    iget-object v3, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mWifiBatchedScanTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v3, v3, v1

    if-eqz v3, :cond_20

    invoke-virtual {v7, v15}, Landroid/os/Parcel;->writeInt(I)V

    iget-object v3, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mWifiBatchedScanTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v3, v3, v1

    invoke-virtual {v3, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_1d

    :cond_20
    invoke-virtual {v7, v14}, Landroid/os/Parcel;->writeInt(I)V

    :goto_1d
    add-int/lit8 v1, v1, 0x1

    goto :goto_1c

    :cond_21
    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mWifiMulticastTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    if-eqz v1, :cond_22

    invoke-virtual {v7, v15}, Landroid/os/Parcel;->writeInt(I)V

    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mWifiMulticastTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_1e

    :cond_22
    invoke-virtual {v7, v14}, Landroid/os/Parcel;->writeInt(I)V

    :goto_1e
    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mAudioTurnedOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    if-eqz v1, :cond_23

    invoke-virtual {v7, v15}, Landroid/os/Parcel;->writeInt(I)V

    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mAudioTurnedOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_1f

    :cond_23
    invoke-virtual {v7, v14}, Landroid/os/Parcel;->writeInt(I)V

    :goto_1f
    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mVideoTurnedOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    if-eqz v1, :cond_24

    invoke-virtual {v7, v15}, Landroid/os/Parcel;->writeInt(I)V

    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mVideoTurnedOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_20

    :cond_24
    invoke-virtual {v7, v14}, Landroid/os/Parcel;->writeInt(I)V

    :goto_20
    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mFlashlightTurnedOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    if-eqz v1, :cond_25

    invoke-virtual {v7, v15}, Landroid/os/Parcel;->writeInt(I)V

    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mFlashlightTurnedOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_21

    :cond_25
    invoke-virtual {v7, v14}, Landroid/os/Parcel;->writeInt(I)V

    :goto_21
    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mCameraTurnedOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    if-eqz v1, :cond_26

    invoke-virtual {v7, v15}, Landroid/os/Parcel;->writeInt(I)V

    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mCameraTurnedOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_22

    :cond_26
    invoke-virtual {v7, v14}, Landroid/os/Parcel;->writeInt(I)V

    :goto_22
    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mForegroundActivityTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    if-eqz v1, :cond_27

    invoke-virtual {v7, v15}, Landroid/os/Parcel;->writeInt(I)V

    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mForegroundActivityTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_23

    :cond_27
    invoke-virtual {v7, v14}, Landroid/os/Parcel;->writeInt(I)V

    :goto_23
    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mForegroundServiceTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    if-eqz v1, :cond_28

    invoke-virtual {v7, v15}, Landroid/os/Parcel;->writeInt(I)V

    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mForegroundServiceTimer:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_24

    :cond_28
    invoke-virtual {v7, v14}, Landroid/os/Parcel;->writeInt(I)V

    :goto_24
    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mAggregatedPartialWakelockTimer:Lcom/android/server/power/stats/BatteryStatsImpl$DualTimer;

    if-eqz v1, :cond_29

    invoke-virtual {v7, v15}, Landroid/os/Parcel;->writeInt(I)V

    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mAggregatedPartialWakelockTimer:Lcom/android/server/power/stats/BatteryStatsImpl$DualTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$DualTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_25

    :cond_29
    invoke-virtual {v7, v14}, Landroid/os/Parcel;->writeInt(I)V

    :goto_25
    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mBluetoothDutyScanTimer:Lcom/android/server/power/stats/BatteryStatsImpl$DutyTimer;

    if-eqz v1, :cond_2a

    invoke-virtual {v7, v15}, Landroid/os/Parcel;->writeInt(I)V

    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mBluetoothDutyScanTimer:Lcom/android/server/power/stats/BatteryStatsImpl$DutyTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$DutyTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_26

    :cond_2a
    invoke-virtual {v7, v14}, Landroid/os/Parcel;->writeInt(I)V

    :goto_26
    invoke-static {v8}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$fgetmDisplayTimeMs(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;)Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v1

    if-eqz v1, :cond_2b

    invoke-virtual {v7, v15}, Landroid/os/Parcel;->writeInt(I)V

    invoke-static {v8}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$fgetmDisplayTimeMs(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;)Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v1

    invoke-virtual {v1, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    invoke-static {v8}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$fgetmDisplayPowerDrainMah(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;)Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v1

    invoke-virtual {v1, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    goto :goto_27

    :cond_2b
    invoke-virtual {v7, v14}, Landroid/os/Parcel;->writeInt(I)V

    :goto_27
    invoke-static {v8}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$fgetmSpeakerMediaTimeCounters(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;)[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v1

    if-nez v1, :cond_2c

    invoke-virtual {v7, v14}, Landroid/os/Parcel;->writeInt(I)V

    const/16 v3, 0x10

    goto :goto_29

    :cond_2c
    invoke-virtual {v7, v15}, Landroid/os/Parcel;->writeInt(I)V

    move v1, v14

    const/16 v3, 0x10

    :goto_28
    if-ge v1, v3, :cond_2d

    invoke-static {v8}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$fgetmSpeakerMediaTimeCounters(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;)[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v4

    aget-object v4, v4, v1

    invoke-virtual {v4, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_28

    :cond_2d
    :goto_29
    invoke-static {v8}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$fgetmPerDisplayTopActivityTimer(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;)[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    move-result-object v1

    if-eqz v1, :cond_2f

    invoke-virtual {v7, v15}, Landroid/os/Parcel;->writeInt(I)V

    invoke-static {v8}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$fgetmPerDisplayTopActivityTimer(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;)[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    move-result-object v1

    array-length v1, v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    invoke-static {v8}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$fgetmPerDisplayTopActivityTimer(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;)[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    move-result-object v1

    array-length v4, v1

    move v5, v14

    :goto_2a
    if-ge v5, v4, :cond_30

    aget-object v6, v1, v5

    if-eqz v6, :cond_2e

    invoke-virtual {v7, v15}, Landroid/os/Parcel;->writeInt(I)V

    invoke-virtual {v6, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_2b

    :cond_2e
    invoke-virtual {v7, v14}, Landroid/os/Parcel;->writeInt(I)V

    :goto_2b
    add-int/lit8 v5, v5, 0x1

    goto :goto_2a

    :cond_2f
    invoke-virtual {v7, v14}, Landroid/os/Parcel;->writeInt(I)V

    :cond_30
    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mBluetoothScanTimer:Lcom/android/server/power/stats/BatteryStatsImpl$DualTimer;

    if-eqz v1, :cond_31

    invoke-virtual {v7, v15}, Landroid/os/Parcel;->writeInt(I)V

    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mBluetoothScanTimer:Lcom/android/server/power/stats/BatteryStatsImpl$DualTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$DualTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_2c

    :cond_31
    invoke-virtual {v7, v14}, Landroid/os/Parcel;->writeInt(I)V

    :goto_2c
    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mBluetoothUnoptimizedScanTimer:Lcom/android/server/power/stats/BatteryStatsImpl$DualTimer;

    if-eqz v1, :cond_32

    invoke-virtual {v7, v15}, Landroid/os/Parcel;->writeInt(I)V

    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mBluetoothUnoptimizedScanTimer:Lcom/android/server/power/stats/BatteryStatsImpl$DualTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$DualTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_2d

    :cond_32
    invoke-virtual {v7, v14}, Landroid/os/Parcel;->writeInt(I)V

    :goto_2d
    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mBluetoothScanResultCounter:Lcom/android/server/power/stats/BatteryStatsImpl$Counter;

    if-eqz v1, :cond_33

    invoke-virtual {v7, v15}, Landroid/os/Parcel;->writeInt(I)V

    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mBluetoothScanResultCounter:Lcom/android/server/power/stats/BatteryStatsImpl$Counter;

    invoke-virtual {v1, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$Counter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    goto :goto_2e

    :cond_33
    invoke-virtual {v7, v14}, Landroid/os/Parcel;->writeInt(I)V

    :goto_2e
    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mBluetoothScanResultBgCounter:Lcom/android/server/power/stats/BatteryStatsImpl$Counter;

    if-eqz v1, :cond_34

    invoke-virtual {v7, v15}, Landroid/os/Parcel;->writeInt(I)V

    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mBluetoothScanResultBgCounter:Lcom/android/server/power/stats/BatteryStatsImpl$Counter;

    invoke-virtual {v1, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$Counter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    goto :goto_2f

    :cond_34
    invoke-virtual {v7, v14}, Landroid/os/Parcel;->writeInt(I)V

    :goto_2f
    move v1, v14

    :goto_30
    const/4 v4, 0x7

    if-ge v1, v4, :cond_36

    iget-object v4, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mProcessStateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v4, v4, v1

    if-eqz v4, :cond_35

    invoke-virtual {v7, v15}, Landroid/os/Parcel;->writeInt(I)V

    iget-object v4, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mProcessStateTimer:[Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    aget-object v4, v4, v1

    invoke-virtual {v4, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_31

    :cond_35
    invoke-virtual {v7, v14}, Landroid/os/Parcel;->writeInt(I)V

    :goto_31
    add-int/lit8 v1, v1, 0x1

    goto :goto_30

    :cond_36
    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mVibratorOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$BatchTimer;

    if-eqz v1, :cond_37

    invoke-virtual {v7, v15}, Landroid/os/Parcel;->writeInt(I)V

    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mVibratorOnTimer:Lcom/android/server/power/stats/BatteryStatsImpl$BatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_32

    :cond_37
    invoke-virtual {v7, v14}, Landroid/os/Parcel;->writeInt(I)V

    :goto_32
    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mUserActivityCounters:[Lcom/android/server/power/stats/BatteryStatsImpl$Counter;

    if-nez v1, :cond_38

    invoke-virtual {v7, v14}, Landroid/os/Parcel;->writeInt(I)V

    goto :goto_34

    :cond_38
    invoke-virtual {v7, v15}, Landroid/os/Parcel;->writeInt(I)V

    move v1, v14

    :goto_33
    sget v4, Landroid/os/BatteryStats$Uid;->NUM_USER_ACTIVITY_TYPES:I

    if-ge v1, v4, :cond_39

    iget-object v4, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mUserActivityCounters:[Lcom/android/server/power/stats/BatteryStatsImpl$Counter;

    aget-object v4, v4, v1

    invoke-virtual {v4, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$Counter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_33

    :cond_39
    :goto_34
    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mNetworkByteActivityCounters:[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    if-nez v1, :cond_3a

    invoke-virtual {v7, v14}, Landroid/os/Parcel;->writeInt(I)V

    const/16 v4, 0xa

    goto :goto_37

    :cond_3a
    invoke-virtual {v7, v15}, Landroid/os/Parcel;->writeInt(I)V

    move v1, v14

    const/16 v4, 0xa

    :goto_35
    if-ge v1, v4, :cond_3b

    iget-object v5, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mNetworkByteActivityCounters:[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    aget-object v5, v5, v1

    invoke-virtual {v5, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    iget-object v5, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mNetworkPacketActivityCounters:[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    aget-object v5, v5, v1

    invoke-virtual {v5, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_35

    :cond_3b
    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mMobileRadioActiveTime:Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;

    if-eqz v1, :cond_3c

    invoke-virtual {v7, v15}, Landroid/os/Parcel;->writeBoolean(Z)V

    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mMobileRadioActiveTime:Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;

    invoke-static {v1, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;->-$$Nest$mwriteToParcel(Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;Landroid/os/Parcel;)V

    goto :goto_36

    :cond_3c
    invoke-virtual {v7, v14}, Landroid/os/Parcel;->writeBoolean(Z)V

    :goto_36
    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mMobileRadioActiveCount:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    :goto_37
    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mUserCpuTime:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mSystemCpuTime:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    if-eqz v1, :cond_40

    invoke-virtual {v7, v15}, Landroid/os/Parcel;->writeInt(I)V

    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    array-length v1, v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    array-length v5, v1

    move v6, v14

    :goto_38
    if-ge v6, v5, :cond_41

    aget-object v2, v1, v6

    if-eqz v2, :cond_3e

    invoke-virtual {v7, v15}, Landroid/os/Parcel;->writeInt(I)V

    array-length v3, v2

    invoke-virtual {v7, v3}, Landroid/os/Parcel;->writeInt(I)V

    array-length v3, v2

    move v4, v14

    :goto_39
    if-ge v4, v3, :cond_3f

    aget-object v14, v2, v4

    if-eqz v14, :cond_3d

    invoke-virtual {v7, v15}, Landroid/os/Parcel;->writeInt(I)V

    invoke-virtual {v14, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    const/4 v14, 0x0

    goto :goto_3a

    :cond_3d
    const/4 v14, 0x0

    invoke-virtual {v7, v14}, Landroid/os/Parcel;->writeInt(I)V

    :goto_3a
    add-int/lit8 v4, v4, 0x1

    goto :goto_39

    :cond_3e
    invoke-virtual {v7, v14}, Landroid/os/Parcel;->writeInt(I)V

    :cond_3f
    add-int/lit8 v6, v6, 0x1

    const/4 v2, 0x5

    const/16 v3, 0x10

    const/16 v4, 0xa

    goto :goto_38

    :cond_40
    invoke-virtual {v7, v14}, Landroid/os/Parcel;->writeInt(I)V

    :cond_41
    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mCpuFreqTimeMs:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;

    invoke-static {v7, v1}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;->writeSummaryToParcelLocked(Landroid/os/Parcel;Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;)V

    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mScreenOffCpuFreqTimeMs:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;

    invoke-static {v7, v1}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;->writeSummaryToParcelLocked(Landroid/os/Parcel;Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;)V

    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mCpuActiveTimeMs:Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;

    if-eqz v1, :cond_42

    invoke-virtual {v1}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;->getStateCount()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mCpuActiveTimeMs:Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;

    invoke-static {v1, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;->-$$Nest$mwriteToParcel(Lcom/android/server/power/stats/BatteryStatsImpl$TimeMultiStateCounter;Landroid/os/Parcel;)V

    const/4 v1, 0x0

    goto :goto_3b

    :cond_42
    const/4 v1, 0x0

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    :goto_3b
    iget-object v2, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mCpuClusterTimesMs:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;

    invoke-static {v2, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;->-$$Nest$mwriteSummaryToParcelLocked(Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;Landroid/os/Parcel;)V

    iget-object v2, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mProcStateTimeMs:Lcom/android/server/power/stats/BatteryStatsImpl$TimeInFreqMultiStateCounter;

    if-eqz v2, :cond_43

    invoke-virtual {v2}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeInFreqMultiStateCounter;->getStateCount()I

    move-result v2

    invoke-virtual {v7, v2}, Landroid/os/Parcel;->writeInt(I)V

    iget-object v2, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mProcStateTimeMs:Lcom/android/server/power/stats/BatteryStatsImpl$TimeInFreqMultiStateCounter;

    invoke-static {v2, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeInFreqMultiStateCounter;->-$$Nest$mwriteToParcel(Lcom/android/server/power/stats/BatteryStatsImpl$TimeInFreqMultiStateCounter;Landroid/os/Parcel;)V

    goto :goto_3c

    :cond_43
    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    :goto_3c
    iget-object v2, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mProcStateScreenOffTimeMs:Lcom/android/server/power/stats/BatteryStatsImpl$TimeInFreqMultiStateCounter;

    if-eqz v2, :cond_44

    invoke-virtual {v2}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeInFreqMultiStateCounter;->getStateCount()I

    move-result v2

    invoke-virtual {v7, v2}, Landroid/os/Parcel;->writeInt(I)V

    iget-object v2, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mProcStateScreenOffTimeMs:Lcom/android/server/power/stats/BatteryStatsImpl$TimeInFreqMultiStateCounter;

    invoke-static {v2, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeInFreqMultiStateCounter;->-$$Nest$mwriteToParcel(Lcom/android/server/power/stats/BatteryStatsImpl$TimeInFreqMultiStateCounter;Landroid/os/Parcel;)V

    goto :goto_3d

    :cond_44
    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    :goto_3d
    invoke-static {v8}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$fgetmMobileRadioApWakeupCount(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;)Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v2

    if-eqz v2, :cond_45

    invoke-virtual {v7, v15}, Landroid/os/Parcel;->writeInt(I)V

    invoke-static {v8}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$fgetmMobileRadioApWakeupCount(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;)Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v2

    invoke-virtual {v2, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    goto :goto_3e

    :cond_45
    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    :goto_3e
    invoke-static {v8}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$fgetmWifiRadioApWakeupCount(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;)Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v2

    if-eqz v2, :cond_46

    invoke-virtual {v7, v15}, Landroid/os/Parcel;->writeInt(I)V

    invoke-static {v8}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$fgetmWifiRadioApWakeupCount(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;)Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v2

    invoke-virtual {v2, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    goto :goto_3f

    :cond_46
    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    :goto_3f
    invoke-static {v8}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->-$$Nest$fgetmUidEnergyConsumerStats(Lcom/android/server/power/stats/BatteryStatsImpl$Uid;)Lcom/android/internal/power/EnergyConsumerStats;

    move-result-object v1

    invoke-static {v1, v7}, Lcom/android/internal/power/EnergyConsumerStats;->writeSummaryToParcel(Lcom/android/internal/power/EnergyConsumerStats;Landroid/os/Parcel;)V

    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mWakelockStats:Lcom/android/server/power/stats/BatteryStatsImpl$OverflowArrayMap;

    invoke-virtual {v1}, Lcom/android/server/power/stats/BatteryStatsImpl$OverflowArrayMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v1

    invoke-virtual {v1}, Landroid/util/ArrayMap;->size()I

    move-result v2

    invoke-virtual {v7, v2}, Landroid/os/Parcel;->writeInt(I)V

    const/4 v3, 0x0

    :goto_40
    if-ge v3, v2, :cond_4b

    invoke-virtual {v1, v3}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    invoke-virtual {v1, v3}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Wakelock;

    iget-object v5, v4, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Wakelock;->mTimerFull:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    if-eqz v5, :cond_47

    invoke-virtual {v7, v15}, Landroid/os/Parcel;->writeInt(I)V

    iget-object v5, v4, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Wakelock;->mTimerFull:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v5, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    const/4 v5, 0x0

    goto :goto_41

    :cond_47
    const/4 v5, 0x0

    invoke-virtual {v7, v5}, Landroid/os/Parcel;->writeInt(I)V

    :goto_41
    iget-object v6, v4, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Wakelock;->mTimerPartial:Lcom/android/server/power/stats/BatteryStatsImpl$DualTimer;

    if-eqz v6, :cond_48

    invoke-virtual {v7, v15}, Landroid/os/Parcel;->writeInt(I)V

    iget-object v6, v4, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Wakelock;->mTimerPartial:Lcom/android/server/power/stats/BatteryStatsImpl$DualTimer;

    invoke-virtual {v6, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$DualTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_42

    :cond_48
    invoke-virtual {v7, v5}, Landroid/os/Parcel;->writeInt(I)V

    :goto_42
    iget-object v6, v4, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Wakelock;->mTimerWindow:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    if-eqz v6, :cond_49

    invoke-virtual {v7, v15}, Landroid/os/Parcel;->writeInt(I)V

    iget-object v6, v4, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Wakelock;->mTimerWindow:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v6, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_43

    :cond_49
    invoke-virtual {v7, v5}, Landroid/os/Parcel;->writeInt(I)V

    :goto_43
    iget-object v6, v4, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Wakelock;->mTimerDraw:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    if-eqz v6, :cond_4a

    invoke-virtual {v7, v15}, Landroid/os/Parcel;->writeInt(I)V

    iget-object v4, v4, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Wakelock;->mTimerDraw:Lcom/android/server/power/stats/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_44

    :cond_4a
    invoke-virtual {v7, v5}, Landroid/os/Parcel;->writeInt(I)V

    :goto_44
    add-int/lit8 v3, v3, 0x1

    goto :goto_40

    :cond_4b
    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mSyncStats:Lcom/android/server/power/stats/BatteryStatsImpl$OverflowArrayMap;

    invoke-virtual {v1}, Lcom/android/server/power/stats/BatteryStatsImpl$OverflowArrayMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v1

    invoke-virtual {v1}, Landroid/util/ArrayMap;->size()I

    move-result v2

    invoke-virtual {v7, v2}, Landroid/os/Parcel;->writeInt(I)V

    const/4 v3, 0x0

    :goto_45
    if-ge v3, v2, :cond_4c

    invoke-virtual {v1, v3}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    invoke-virtual {v1, v3}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/power/stats/BatteryStatsImpl$DualTimer;

    invoke-virtual {v4, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$DualTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    add-int/lit8 v3, v3, 0x1

    goto :goto_45

    :cond_4c
    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mJobStats:Lcom/android/server/power/stats/BatteryStatsImpl$OverflowArrayMap;

    invoke-virtual {v1}, Lcom/android/server/power/stats/BatteryStatsImpl$OverflowArrayMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v1

    invoke-virtual {v1}, Landroid/util/ArrayMap;->size()I

    move-result v2

    invoke-virtual {v7, v2}, Landroid/os/Parcel;->writeInt(I)V

    const/4 v3, 0x0

    :goto_46
    if-ge v3, v2, :cond_4d

    invoke-virtual {v1, v3}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    invoke-virtual {v1, v3}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/power/stats/BatteryStatsImpl$DualTimer;

    invoke-virtual {v4, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$DualTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    add-int/lit8 v3, v3, 0x1

    goto :goto_46

    :cond_4d
    invoke-virtual {v8, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->writeJobCompletionsToParcelLocked(Landroid/os/Parcel;)V

    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mJobsDeferredEventCount:Lcom/android/server/power/stats/BatteryStatsImpl$Counter;

    invoke-virtual {v1, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$Counter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mJobsDeferredCount:Lcom/android/server/power/stats/BatteryStatsImpl$Counter;

    invoke-virtual {v1, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$Counter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mJobsFreshnessTimeMs:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    const/4 v14, 0x0

    :goto_47
    sget-object v1, Landroid/os/BatteryStats;->JOB_FRESHNESS_BUCKETS:[J

    array-length v1, v1

    if-ge v14, v1, :cond_4f

    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mJobsFreshnessBuckets:[Lcom/android/server/power/stats/BatteryStatsImpl$Counter;

    aget-object v1, v1, v14

    if-eqz v1, :cond_4e

    invoke-virtual {v7, v15}, Landroid/os/Parcel;->writeInt(I)V

    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mJobsFreshnessBuckets:[Lcom/android/server/power/stats/BatteryStatsImpl$Counter;

    aget-object v1, v1, v14

    invoke-virtual {v1, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$Counter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    goto :goto_48

    :cond_4e
    const/4 v1, 0x0

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    :goto_48
    add-int/lit8 v14, v14, 0x1

    goto :goto_47

    :cond_4f
    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mSensorStats:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    const/4 v14, 0x0

    :goto_49
    if-ge v14, v1, :cond_51

    iget-object v2, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mSensorStats:Landroid/util/SparseArray;

    invoke-virtual {v2, v14}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v2

    invoke-virtual {v7, v2}, Landroid/os/Parcel;->writeInt(I)V

    iget-object v2, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mSensorStats:Landroid/util/SparseArray;

    invoke-virtual {v2, v14}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Sensor;

    iget-object v3, v2, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Sensor;->mTimer:Lcom/android/server/power/stats/BatteryStatsImpl$DualTimer;

    if-eqz v3, :cond_50

    invoke-virtual {v7, v15}, Landroid/os/Parcel;->writeInt(I)V

    iget-object v2, v2, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Sensor;->mTimer:Lcom/android/server/power/stats/BatteryStatsImpl$DualTimer;

    invoke-virtual {v2, v7, v12, v13}, Lcom/android/server/power/stats/BatteryStatsImpl$DualTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    const/4 v2, 0x0

    goto :goto_4a

    :cond_50
    const/4 v2, 0x0

    invoke-virtual {v7, v2}, Landroid/os/Parcel;->writeInt(I)V

    :goto_4a
    add-int/lit8 v14, v14, 0x1

    goto :goto_49

    :cond_51
    const/4 v2, 0x0

    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mProcessStats:Landroid/util/ArrayMap;

    invoke-virtual {v1}, Landroid/util/ArrayMap;->size()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    move v14, v2

    :goto_4b
    if-ge v14, v1, :cond_52

    iget-object v3, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mProcessStats:Landroid/util/ArrayMap;

    invoke-virtual {v3, v14}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/lang/String;

    invoke-virtual {v7, v3}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    iget-object v3, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mProcessStats:Landroid/util/ArrayMap;

    invoke-virtual {v3, v14}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Proc;

    iget-wide v4, v3, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Proc;->mUserTimeMs:J

    invoke-virtual {v7, v4, v5}, Landroid/os/Parcel;->writeLong(J)V

    iget-wide v4, v3, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Proc;->mSystemTimeMs:J

    invoke-virtual {v7, v4, v5}, Landroid/os/Parcel;->writeLong(J)V

    iget-wide v4, v3, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Proc;->mForegroundTimeMs:J

    invoke-virtual {v7, v4, v5}, Landroid/os/Parcel;->writeLong(J)V

    iget v4, v3, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Proc;->mStarts:I

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeInt(I)V

    iget v4, v3, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Proc;->mNumCrashes:I

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeInt(I)V

    iget v4, v3, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Proc;->mNumAnrs:I

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeInt(I)V

    invoke-virtual {v3, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Proc;->writeExcessivePowerToParcelLocked(Landroid/os/Parcel;)V

    add-int/lit8 v14, v14, 0x1

    goto :goto_4b

    :cond_52
    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mPackageStats:Landroid/util/ArrayMap;

    invoke-virtual {v1}, Landroid/util/ArrayMap;->size()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    if-lez v1, :cond_55

    iget-object v1, v8, Lcom/android/server/power/stats/BatteryStatsImpl$Uid;->mPackageStats:Landroid/util/ArrayMap;

    invoke-virtual {v1}, Landroid/util/ArrayMap;->entrySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_4c
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_55

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/util/Map$Entry;

    invoke-interface {v3}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    invoke-interface {v3}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Pkg;

    iget-object v4, v3, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Pkg;->mWakeupAlarms:Landroid/util/ArrayMap;

    invoke-virtual {v4}, Landroid/util/ArrayMap;->size()I

    move-result v4

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeInt(I)V

    move v14, v2

    :goto_4d
    if-ge v14, v4, :cond_53

    iget-object v5, v3, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Pkg;->mWakeupAlarms:Landroid/util/ArrayMap;

    invoke-virtual {v5, v14}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Ljava/lang/String;

    invoke-virtual {v7, v5}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    iget-object v5, v3, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Pkg;->mWakeupAlarms:Landroid/util/ArrayMap;

    invoke-virtual {v5, v14}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/power/stats/BatteryStatsImpl$Counter;

    invoke-virtual {v5, v7}, Lcom/android/server/power/stats/BatteryStatsImpl$Counter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    add-int/lit8 v14, v14, 0x1

    goto :goto_4d

    :cond_53
    iget-object v4, v3, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Pkg;->mServiceStats:Landroid/util/ArrayMap;

    invoke-virtual {v4}, Landroid/util/ArrayMap;->size()I

    move-result v4

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeInt(I)V

    move v14, v2

    :goto_4e
    if-ge v14, v4, :cond_54

    iget-object v5, v3, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Pkg;->mServiceStats:Landroid/util/ArrayMap;

    invoke-virtual {v5, v14}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Ljava/lang/String;

    invoke-virtual {v7, v5}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    iget-object v5, v3, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Pkg;->mServiceStats:Landroid/util/ArrayMap;

    invoke-virtual {v5, v14}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Pkg$Serv;

    iget-object v6, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;

    invoke-virtual {v6, v10, v11}, Lcom/android/server/power/stats/BatteryStatsImpl$TimeBase;->getUptime(J)J

    move-result-wide v19

    move-object v8, v3

    const-wide/16 v16, 0x3e8

    div-long v2, v19, v16

    invoke-virtual {v5, v2, v3}, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Pkg$Serv;->getStartTimeToNowLocked(J)J

    move-result-wide v2

    invoke-virtual {v7, v2, v3}, Landroid/os/Parcel;->writeLong(J)V

    iget v2, v5, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Pkg$Serv;->mStarts:I

    invoke-virtual {v7, v2}, Landroid/os/Parcel;->writeInt(I)V

    iget v2, v5, Lcom/android/server/power/stats/BatteryStatsImpl$Uid$Pkg$Serv;->mLaunches:I

    invoke-virtual {v7, v2}, Landroid/os/Parcel;->writeInt(I)V

    add-int/lit8 v14, v14, 0x1

    move-object v3, v8

    const/4 v2, 0x0

    goto :goto_4e

    :cond_54
    const-wide/16 v16, 0x3e8

    goto/16 :goto_4c

    :cond_55
    const-wide/16 v16, 0x3e8

    add-int/lit8 v4, v18, 0x1

    move v3, v9

    move-wide/from16 v8, v16

    const/16 v5, 0x10

    const/16 v6, 0xa

    const/4 v14, 0x0

    const/4 v15, 0x5

    goto/16 :goto_18

    :cond_56
    iget-object v0, v0, Lcom/android/server/power/stats/BatteryStatsImpl;->mBinderThreadCpuTimesUs:Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;

    invoke-static {v7, v0}, Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;->writeSummaryToParcelLocked(Landroid/os/Parcel;Lcom/android/server/power/stats/BatteryStatsImpl$LongSamplingCounterArray;)V

    return-void
.end method

.method public writeSyncLocked()V
    .locals 2

    invoke-static {}, Lcom/android/internal/os/BackgroundThread;->getHandler()Landroid/os/Handler;

    move-result-object v0

    iget-object v1, p0, Lcom/android/server/power/stats/BatteryStatsImpl;->mWriteAsyncRunnable:Ljava/lang/Runnable;

    invoke-virtual {v0, v1}, Landroid/os/Handler;->removeCallbacks(Ljava/lang/Runnable;)V

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->writeStatsLocked()V

    invoke-virtual {p0}, Lcom/android/server/power/stats/BatteryStatsImpl;->writeHistoryLocked()V

    return-void
.end method
