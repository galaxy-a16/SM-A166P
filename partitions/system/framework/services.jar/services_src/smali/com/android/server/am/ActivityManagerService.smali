.class public Lcom/android/server/am/ActivityManagerService;
.super Landroid/app/IActivityManager$Stub;
.source "ActivityManagerService.java"

# interfaces
.implements Lcom/android/server/Watchdog$Monitor;
.implements Lcom/android/server/power/stats/BatteryStatsImpl$BatteryCallback;
.implements Lcom/android/server/am/ActivityManagerGlobalLock;


# static fields
.field public static final BROADCAST_BG_TIMEOUT:I

.field public static final BROADCAST_FG_TIMEOUT:I

.field public static final DEBUG_LEVEL:Ljava/lang/String;

.field public static final DEBUG_LEVEL_HIGH:Z

.field public static final DEBUG_LEVEL_LOW:Z

.field public static final DEBUG_LEVEL_MID:Z

.field public static final DUMP_MEM_BUCKETS:[J

.field public static final DUMP_MEM_OOM_ADJ:[I

.field public static final DUMP_MEM_OOM_COMPACT_LABEL:[Ljava/lang/String;

.field public static final DUMP_MEM_OOM_LABEL:[Ljava/lang/String;

.field public static final EMPTY_STRING_ARRAY:[Ljava/lang/String;

.field public static final FAKE_TEMP_ALLOW_LIST_ITEM:Lcom/android/server/am/ActivityManagerService$FgsTempAllowListItem;

.field public static final IS_JDM_PROJECT:Z

.field public static final MY_PID:I

.field public static final PROC_START_TIMEOUT:I

.field public static final SHIP_BUILD:Z

.field public static final USER_BUILD:Z

.field public static final mRecentKillList:Ljava/util/List;

.field public static final sActiveProcessInfoSelfLocked:Landroid/util/SparseArray;

.field public static final sNullHostingRecord:Lcom/android/server/am/HostingRecord;

.field public static sPmmEnabledBySpcm:Z

.field public static sProcThreadPriorityBooster:Lcom/android/server/ThreadPriorityBooster;

.field public static sTheRealBuildSerial:Ljava/lang/String;

.field public static sThreadPriorityBooster:Lcom/android/server/ThreadPriorityBooster;


# instance fields
.field public currentLauncherName:Ljava/lang/String;

.field public isNowAppLaunching:Z

.field public final mAbnormalUsageService:Lcom/android/server/am/AbnormalUsageService;

.field public final mActiveCameraUids:Landroid/util/IntArray;

.field public final mActiveInstrumentation:Ljava/util/ArrayList;

.field public final mActivityLaunchObserver:Lcom/android/server/wm/ActivityMetricsLaunchObserver;

.field public mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

.field public mAllowedAssociations:Landroid/util/ArrayMap;

.field public final mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;

.field public mAlwaysFinishActivities:Z

.field public final mAnrHelper:Lcom/android/server/am/AnrHelper;

.field public mAppBindArgs:Landroid/util/ArrayMap;

.field public final mAppErrors:Lcom/android/server/am/AppErrors;

.field public mAppOpsManager:Landroid/app/AppOpsManager;

.field public final mAppOpsService:Lcom/android/server/appop/AppOpsService;

.field public final mAppProfiler:Lcom/android/server/am/AppProfiler;

.field public final mAppRestrictionController:Lcom/android/server/am/AppRestrictionController;

.field public mApplicationPolicy:Lcom/samsung/android/knox/application/IApplicationPolicy;

.field public final mAssociations:Landroid/util/SparseArray;

.field public mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

.field public mBackgroundAppIdAllowlist:[I

.field public mBackgroundLaunchBroadcasts:Landroid/util/ArraySet;

.field public final mBackupTargets:Landroid/util/SparseArray;

.field public final mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

.field public final mBindServiceEventListeners:Ljava/util/concurrent/CopyOnWriteArrayList;

.field public mBinderStatsService:Lcom/android/server/BinderCallsStatsService$Internal;

.field public volatile mBinderTransactionTrackingEnabled:Z

.field public mBootAnimationComplete:Z

.field public mBootPhase:I

.field public volatile mBooted:Z

.field public volatile mBooting:Z

.field public final mBroadcastEventListeners:Ljava/util/concurrent/CopyOnWriteArrayList;

.field public final mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

.field public mCallFinishBooting:Z

.field public mCfmsManagerInt:Landroid/os/CustomFrequencyManagerInternal;

.field public final mCompanionAppUidsMap:Ljava/util/Map;

.field public final mComponentAliasResolver:Lcom/android/server/am/ComponentAliasResolver;

.field public mConstants:Lcom/android/server/am/ActivityManagerConstants;

.field public volatile mContentCaptureService:Lcom/android/server/contentcapture/ContentCaptureManagerInternal;

.field public final mContext:Landroid/content/Context;

.field public mCoreSettingsObserver:Lcom/android/server/am/CoreSettingsObserver;

.field public final mCpHelper:Lcom/android/server/am/ContentProviderHelper;

.field public mCurBroadcastStats:Lcom/android/server/am/BroadcastStats;

.field public mCurOomAdjObserver:Lcom/android/server/am/ActivityManagerService$OomAdjObserver;

.field public mCurOomAdjUid:I

.field public final mCurResumedAppLock:Ljava/lang/Object;

.field public mCurResumedPackage:Ljava/lang/String;

.field public mCurResumedUid:I

.field public mCurrentPackage:Ljava/lang/String;

.field public mCustomEFKManager:Lcom/android/server/bgslotmanager/CustomEFKManager;

.field public mDebugApp:Ljava/lang/String;

.field public mDebugTransient:Z

.field public final mDeliveryGroupPolicyIgnoredActions:Landroid/util/ArraySet;

.field public volatile mDeterministicUidIdle:Z

.field public mDeviceIdleAllowlist:[I

.field public mDeviceIdleExceptIdleAllowlist:[I

.field public mDeviceIdleTempAllowlist:[I

.field public volatile mDeviceOwnerUid:I

.field public final mDropboxRateLimiter:Lcom/android/server/am/DropboxRateLimiter;

.field public mDssController:Lcom/android/server/DssController;

.field public mDvfsMgr:Lcom/samsung/android/os/SemDvfsManager;

.field public mDynamicHiddenApp:Lcom/android/server/am/DynamicHiddenApp;

.field public final mEnableModernQueue:Z

.field public final mEnableOffloadQueue:Z

.field public mExt:Lcom/android/server/am/ActivityManagerServiceExt;

.field public final mFactoryTest:I

.field public final mFgsStartTempAllowList:Lcom/android/server/am/FgsTempAllowList;

.field public final mFgsWhileInUseTempAllowList:Lcom/android/server/am/FgsTempAllowList;

.field public mForceBackgroundCheck:Z

.field public final mForegroundPackages:Lcom/android/internal/app/ProcessMap;

.field public final mForegroundServiceStateListeners:Ljava/util/ArrayList;

.field public final mGetBackgroundStartPrivilegesFunctor:Lcom/android/server/am/ActivityManagerService$GetBackgroundStartPrivilegesFunctor;

.field public final mGlobalLock:Lcom/android/server/am/ActivityManagerGlobalLock;

.field public final mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

.field public final mHandlerThread:Lcom/android/server/ServiceThread;

.field public final mHiddenApiBlacklist:Lcom/android/server/am/ActivityManagerService$HiddenApiSettings;

.field public final mImportantProcesses:Landroid/util/SparseArray;

.field public final mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

.field public mInstaller:Lcom/android/server/pm/Installer;

.field public final mInstrumentationReporter:Lcom/android/server/am/InstrumentationReporter;

.field public final mIntentFirewall:Lcom/android/server/firewall/IntentFirewall;

.field public final mInternal:Landroid/app/ActivityManagerInternal;

.field public mIsolatedAppBindArgs:Landroid/util/ArrayMap;

.field public mKillPolicyManager:Lcom/android/server/am/KillPolicyManager;

.field public mLastBinderHeavyHitterAutoSamplerStart:J

.field public mLastBroadcastStats:Lcom/android/server/am/BroadcastStats;

.field public mLastIdleTime:J

.field public mLastPowerCheckUptime:J

.field public mLifeMonitorFds:[Landroid/os/ParcelFileDescriptor;

.field public mLocalDeviceIdleController:Lcom/android/server/DeviceIdleInternal;

.field public mLocalPowerManager:Landroid/os/PowerManagerInternal;

.field public final mMediaProjectionTokenMap:Landroid/util/SparseArray;

.field public mNativeDebuggingApp:Ljava/lang/String;

.field public volatile mNetworkPolicyUidObserver:Landroid/app/IUidObserver;

.field public volatile mOnBattery:Z

.field public final mOomAdjObserverLock:Ljava/lang/Object;

.field public mOomAdjProfiler:Lcom/android/server/am/OomAdjProfiler;

.field public mOomAdjuster:Lcom/android/server/am/OomAdjuster;

.field public mOrigDebugApp:Ljava/lang/String;

.field public mOrigWaitForDebugger:Z

.field public mPackageManagerInt:Landroid/content/pm/PackageManagerInternal;

.field public final mPackageWatchdog:Lcom/android/server/PackageWatchdog;

.field public final mPendingCmdBR:Ljava/util/ArrayList;

.field public final mPendingIntentController:Lcom/android/server/am/PendingIntentController;

.field public final mPendingSches:Ljava/util/Map;

.field public final mPendingStartActivityUids:Lcom/android/server/am/PendingStartActivityUids;

.field public final mPendingTempAllowlist:Lcom/android/server/am/PendingTempAllowlists;

.field public mPermissionManagerInt:Lcom/android/server/pm/permission/PermissionManagerServiceInternal;

.field public final mPersistentStartingProcesses:Ljava/util/ArrayList;

.field public final mPhantomProcessList:Lcom/android/server/am/PhantomProcessList;

.field public final mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

.field public final mPlatformCompat:Lcom/android/server/compat/PlatformCompat;

.field public mPreviousPackage:Ljava/lang/String;

.field public mPreviousUserId:I

.field public final mPriorityDumper:Lcom/android/server/utils/PriorityDump$PriorityDumper;

.field public final mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

.field public final mProcStartHandler:Lcom/android/server/am/ProcessList$ProcStartHandler;

.field public final mProcStartHandlerThread:Lcom/android/server/ServiceThread;

.field public final mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

.field public mProcessCpusetController:Lcom/android/server/am/ProcessCpusetController;

.field public final mProcessList:Lcom/android/server/am/ProcessList;

.field public final mProcessStats:Lcom/android/server/am/ProcessStatsService;

.field public final mProcessesOnHold:Ljava/util/ArrayList;

.field public volatile mProcessesReady:Z

.field public mProfileOwnerUids:Landroid/util/ArraySet;

.field public final mReceiverResolver:Lcom/android/server/IntentResolver;

.field public final mRegisteredReceivers:Ljava/util/HashMap;

.field public mRestrictionPolicy:Lcom/samsung/android/knox/restriction/RestrictionPolicy;

.field public mSafeMode:Z

.field public mScreenChangeObserver:Lcom/android/server/am/ActivityManagerService$ScreenChangeObserver;

.field public final mServices:Lcom/android/server/am/ActiveServices;

.field public final mStickyBroadcasts:Landroid/util/SparseArray;

.field public final mStrictModeCallbacks:Landroid/util/SparseArray;

.field public mSuspendUponWait:Z

.field public volatile mSystemReady:Z

.field public mSystemServiceManager:Lcom/android/server/SystemServiceManager;

.field public final mSystemThread:Landroid/app/ActivityThread;

.field public mTestUtilityService:Landroid/content/pm/TestUtilityService;

.field public mTraceErrorLogger:Lcom/android/server/am/TraceErrorLogger;

.field public mTrackAllocationApp:Ljava/lang/String;

.field public mTrackingAssociations:Z

.field public mTransitionPlayerPid:I

.field public mUgmInternal:Lcom/android/server/uri/UriGrantsManagerInternal;

.field public final mUiContext:Landroid/content/Context;

.field public final mUiHandler:Landroid/os/Handler;

.field public final mUidFrozenStateChangedCallbackList:Landroid/os/RemoteCallbackList;

.field public final mUidNetworkBlockedReasons:Landroid/util/SparseIntArray;

.field public final mUidObserverController:Lcom/android/server/am/UidObserverController;

.field public volatile mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

.field public final mUseFifoUiScheduling:Z

.field public final mUserController:Lcom/android/server/am/UserController;

.field public volatile mUserIsMonkey:Z

.field public volatile mVoiceInteractionManagerProvider:Landroid/app/ActivityManagerInternal$VoiceInteractionManagerProvider;

.field public mWaitForDebugger:Z

.field public mWakefulness:Ljava/util/concurrent/atomic/AtomicInteger;

.field public mWindowManager:Lcom/android/server/wm/WindowManagerService;

.field public mWmInternal:Lcom/android/server/wm/WindowManagerInternal;


# direct methods
.method public static synthetic $r8$lambda$0Ile53Z-MeB1Q_3J3Py5S6OrFC4(Lcom/android/server/am/ActivityManagerService;)V
    .locals 0

    .line 0
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->lambda$systemReady$14()V

    return-void
.end method

.method public static synthetic $r8$lambda$1FmPbBGcDGK3fxGLMPQ_dQ8hHUs(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;JJ)V
    .locals 0

    .line 0
    invoke-direct/range {p0 .. p5}, Lcom/android/server/am/ActivityManagerService;->lambda$performIdleMaintenance$10(Lcom/android/server/am/ProcessRecord;JJ)V

    return-void
.end method

.method public static synthetic $r8$lambda$2WweV4ZlzWdWugjgv4Qek4UBmVU(Lcom/android/server/am/ProcessRecord;Landroid/os/Debug$MemoryInfo;JLcom/android/server/am/ProcessProfileRecord;Lcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;)V
    .locals 0

    .line 0
    invoke-static/range {p0 .. p5}, Lcom/android/server/am/ActivityManagerService;->lambda$getProcessMemoryInfo$2(Lcom/android/server/am/ProcessRecord;Landroid/os/Debug$MemoryInfo;JLcom/android/server/am/ProcessProfileRecord;Lcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;)V

    return-void
.end method

.method public static synthetic $r8$lambda$3_0K24jkGuSFOaIJKTnxelQQS70(Lcom/android/server/am/ActivityManagerService;)V
    .locals 0

    .line 0
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->lambda$finishBooting$5()V

    return-void
.end method

.method public static synthetic $r8$lambda$4uhG0wemPpFDdHgy_wcgUsFSADI(Lcom/android/server/am/ActivityManagerService;JJZZLcom/android/server/am/ProcessRecord;)V
    .locals 0

    .line 0
    invoke-direct/range {p0 .. p7}, Lcom/android/server/am/ActivityManagerService;->lambda$checkExcessivePowerUsage$29(JJZZLcom/android/server/am/ProcessRecord;)V

    return-void
.end method

.method public static synthetic $r8$lambda$6YLdkqjpMv2tGuEIrSOaqf6HxGA(Lcom/android/server/am/ProcessRecord;JJJIJJLcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;)V
    .locals 0

    .line 0
    invoke-static/range {p0 .. p12}, Lcom/android/server/am/ActivityManagerService;->lambda$dumpApplicationMemoryUsage$22(Lcom/android/server/am/ProcessRecord;JJJIJJLcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;)V

    return-void
.end method

.method public static synthetic $r8$lambda$6pNXGWrPhFQTji8jijjJHTxeXYY(Lcom/android/server/am/ActivityManagerService;I)V
    .locals 0

    .line 0
    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->lambda$systemReady$13(I)V

    return-void
.end method

.method public static synthetic $r8$lambda$7R7Ogm46QdH9c1qH4XTNM_sFD-A(Ljava/lang/StringBuilder;Landroid/content/pm/IPackageManager;ILjava/lang/String;)V
    .locals 0

    .line 0
    invoke-static {p0, p1, p2, p3}, Lcom/android/server/am/ActivityManagerService;->lambda$appendDropBoxProcessHeaders$18(Ljava/lang/StringBuilder;Landroid/content/pm/IPackageManager;ILjava/lang/String;)V

    return-void
.end method

.method public static synthetic $r8$lambda$8mM8iNLeT_PMWcVMnVuDVnm8Ps0(ILcom/android/server/am/ProcessRecord;)V
    .locals 0

    .line 0
    invoke-static {p0, p1}, Lcom/android/server/am/ActivityManagerService;->lambda$signalPersistentProcesses$34(ILcom/android/server/am/ProcessRecord;)V

    return-void
.end method

.method public static synthetic $r8$lambda$AkckeFDCJZdvz0CKMctgnZVm4Wo(Lcom/android/server/am/ActivityManagerService;JZLcom/android/server/am/ProcessRecord;IJLcom/android/server/am/PhantomProcessRecord;)Ljava/lang/Boolean;
    .locals 0

    .line 0
    invoke-direct/range {p0 .. p8}, Lcom/android/server/am/ActivityManagerService;->lambda$updatePhantomProcessCpuTimeLPr$32(JZLcom/android/server/am/ProcessRecord;IJLcom/android/server/am/PhantomProcessRecord;)Ljava/lang/Boolean;

    move-result-object p0

    return-object p0
.end method

.method public static synthetic $r8$lambda$BSPNxwQnd8j3fjfyEg24cdXW1RI(Lcom/android/server/am/ActivityManagerService;Ljava/io/PrintWriter;Landroid/os/ParcelFileDescriptor;Lcom/android/server/am/ProcessRecord;)V
    .locals 0

    .line 0
    invoke-direct {p0, p1, p2, p3}, Lcom/android/server/am/ActivityManagerService;->lambda$stopBinderTrackingAndDump$36(Ljava/io/PrintWriter;Landroid/os/ParcelFileDescriptor;Lcom/android/server/am/ProcessRecord;)V

    return-void
.end method

.method public static synthetic $r8$lambda$BwM6HAmdTtb4ZLvG5mDyFT2fUvs(Lcom/android/server/am/ActivityManagerService;Ljava/util/List;IFJ)V
    .locals 0

    .line 0
    invoke-direct/range {p0 .. p5}, Lcom/android/server/am/ActivityManagerService;->lambda$scheduleUpdateBinderHeavyHitterWatcherConfig$38(Ljava/util/List;IFJ)V

    return-void
.end method

.method public static synthetic $r8$lambda$CQCmi0-rPXtSlXJ-5Cyg_g5MP3g(Lcom/android/server/am/ActivityManagerService;)V
    .locals 0

    .line 0
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->lambda$systemReady$15()V

    return-void
.end method

.method public static synthetic $r8$lambda$CqK3_2AAbXTJG1RhkbuLZF6H6pY(Landroid/util/SparseArray;[J[Ljava/util/ArrayList;Lcom/android/internal/os/ProcessCpuTracker$Stats;)V
    .locals 0

    .line 0
    invoke-static {p0, p1, p2, p3}, Lcom/android/server/am/ActivityManagerService;->lambda$dumpProcessListForPPN$7(Landroid/util/SparseArray;[J[Ljava/util/ArrayList;Lcom/android/internal/os/ProcessCpuTracker$Stats;)V

    return-void
.end method

.method public static synthetic $r8$lambda$DrQYasWymnA2dl1Tk7OzPQK63lA(Landroid/util/SparseArray;[Landroid/os/Debug$MemoryInfo;ZLcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;[J[JLjava/util/ArrayList;[J[J[J[J[J[J[J[J[Ljava/util/ArrayList;[JLcom/android/internal/os/ProcessCpuTracker$Stats;)V
    .locals 0

    .line 0
    invoke-static/range {p0 .. p17}, Lcom/android/server/am/ActivityManagerService;->lambda$dumpApplicationMemoryUsage$27(Landroid/util/SparseArray;[Landroid/os/Debug$MemoryInfo;ZLcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;[J[JLjava/util/ArrayList;[J[J[J[J[J[J[J[J[Ljava/util/ArrayList;[JLcom/android/internal/os/ProcessCpuTracker$Stats;)V

    return-void
.end method

.method public static synthetic $r8$lambda$DxmZRMWjM5gUJXhB339RuDpZZUE(Lcom/android/server/am/ActivityManagerService;Ljava/util/List;IFJ)V
    .locals 0

    .line 0
    invoke-direct/range {p0 .. p5}, Lcom/android/server/am/ActivityManagerService;->lambda$scheduleBinderHeavyHitterAutoSampler$44(Ljava/util/List;IFJ)V

    return-void
.end method

.method public static synthetic $r8$lambda$F2BeEompWkH3kVJ885Ge8ZWpI00(Landroid/util/SparseArray;[Landroid/os/Debug$MemoryInfo;ZLcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;[J[J[JLjava/util/ArrayList;[J[J[J[J[J[J[J[J[Ljava/util/ArrayList;[JLcom/android/internal/os/ProcessCpuTracker$Stats;)V
    .locals 0

    .line 0
    invoke-static/range {p0 .. p18}, Lcom/android/server/am/ActivityManagerService;->lambda$dumpApplicationMemoryUsage$23(Landroid/util/SparseArray;[Landroid/os/Debug$MemoryInfo;ZLcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;[J[J[JLjava/util/ArrayList;[J[J[J[J[J[J[J[J[Ljava/util/ArrayList;[JLcom/android/internal/os/ProcessCpuTracker$Stats;)V

    return-void
.end method

.method public static synthetic $r8$lambda$HfAqFg9TsnTAgz3ZUbZSWbzNiNU(Lcom/android/server/am/ActivityManagerService;)V
    .locals 0

    .line 0
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->lambda$scheduleUpdateBinderHeavyHitterWatcherConfig$42()V

    return-void
.end method

.method public static synthetic $r8$lambda$HfNt8LqLrMK6P5fCjBpfZn9o820(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;)V
    .locals 0

    .line 0
    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->lambda$handleAppDiedLocked$1(Lcom/android/server/am/ProcessRecord;)V

    return-void
.end method

.method public static synthetic $r8$lambda$L4eH47Z8BMeSLMH_HY6Houp2fSs(ZIZI[Ljava/util/List;Lcom/android/server/am/ProcessRecord;)V
    .locals 0

    .line 0
    invoke-static/range {p0 .. p5}, Lcom/android/server/am/ActivityManagerService;->lambda$getProcessesInErrorState$19(ZIZI[Ljava/util/List;Lcom/android/server/am/ProcessRecord;)V

    return-void
.end method

.method public static synthetic $r8$lambda$LN5BRbUblrbVuLLxPsIJEZjN6As(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;JJJI)V
    .locals 0

    .line 0
    invoke-direct/range {p0 .. p8}, Lcom/android/server/am/ActivityManagerService;->lambda$updateAppProcessCpuTimeLPr$30(Lcom/android/server/am/ProcessRecord;JJJI)V

    return-void
.end method

.method public static synthetic $r8$lambda$MpNu6pM5Tx22QIpS9CVxSXBgwrU(I[Ljava/lang/String;Ljava/util/ArrayList;Lcom/android/internal/os/ProcessCpuTracker$Stats;)V
    .locals 0

    .line 0
    invoke-static {p0, p1, p2, p3}, Lcom/android/server/am/ActivityManagerService;->lambda$dumpApplicationMemoryUsage$25(I[Ljava/lang/String;Ljava/util/ArrayList;Lcom/android/internal/os/ProcessCpuTracker$Stats;)V

    return-void
.end method

.method public static synthetic $r8$lambda$OXl8LFlQF7fxJiNtiJM2AJp_WH0(Lcom/android/server/am/ProcessRecord;J[JJLcom/android/server/am/ProcessProfileRecord;Lcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;)V
    .locals 0

    .line 0
    invoke-static/range {p0 .. p7}, Lcom/android/server/am/ActivityManagerService;->lambda$getProcessPss$3(Lcom/android/server/am/ProcessRecord;J[JJLcom/android/server/am/ProcessProfileRecord;Lcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;)V

    return-void
.end method

.method public static synthetic $r8$lambda$P56u_me2qj_EeGf9WKQsmLynrS8(Landroid/os/DropBoxManager;Ljava/lang/String;Ljava/lang/String;)V
    .locals 0

    .line 0
    invoke-static {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->lambda$logStrictModeViolationToDropBox$16(Landroid/os/DropBoxManager;Ljava/lang/String;Ljava/lang/String;)V

    return-void
.end method

.method public static synthetic $r8$lambda$PQrUgZPB0kH23sXfspUrgo2QrR4(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/PhantomProcessRecord;JJJI)V
    .locals 0

    .line 0
    invoke-direct/range {p0 .. p9}, Lcom/android/server/am/ActivityManagerService;->lambda$updatePhantomProcessCpuTimeLPr$31(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/PhantomProcessRecord;JJJI)V

    return-void
.end method

.method public static synthetic $r8$lambda$QWwwdnhKKl2vTg5eVnc8cyHr0uU(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Lcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;)V
    .locals 0

    .line 0
    invoke-static {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->lambda$checkExcessivePowerUsageLPr$33(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Lcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;)V

    return-void
.end method

.method public static synthetic $r8$lambda$RPM5jzSGzSTitgQRfbp1_rCDEh4(Lcom/android/server/am/ActivityManagerService;Ljava/util/LinkedList;)V
    .locals 0

    .line 0
    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->lambda$schedulePendingSystemServerWtfs$17(Ljava/util/LinkedList;)V

    return-void
.end method

.method public static synthetic $r8$lambda$Sntkyj1GAZBhhWBEZqHzNDnyCBU(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;)V
    .locals 0

    .line 0
    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->lambda$startBinderTracking$35(Lcom/android/server/am/ProcessRecord;)V

    return-void
.end method

.method public static synthetic $r8$lambda$Tr7sK57x1lZKwW_DH_BWH5Rlmj0(Lcom/android/server/am/ActivityManagerService;ZJJJJLcom/android/server/am/ProcessRecord;)V
    .locals 0

    .line 0
    invoke-direct/range {p0 .. p10}, Lcom/android/server/am/ActivityManagerService;->lambda$performIdleMaintenance$11(ZJJJJLcom/android/server/am/ProcessRecord;)V

    return-void
.end method

.method public static synthetic $r8$lambda$V-N4DyrcNsgt_XieDnaRmGArgJ8(Ljava/util/ArrayList;Lcom/android/internal/os/ProcessCpuTracker$Stats;)V
    .locals 0

    .line 0
    invoke-static {p0, p1}, Lcom/android/server/am/ActivityManagerService;->lambda$getDumpMemoryInfo$8(Ljava/util/ArrayList;Lcom/android/internal/os/ProcessCpuTracker$Stats;)V

    return-void
.end method

.method public static synthetic $r8$lambda$WFSlo3gqKExW6yVHn4OfTpG0tH4(I[Ljava/lang/String;Ljava/util/ArrayList;Lcom/android/internal/os/ProcessCpuTracker$Stats;)V
    .locals 0

    .line 0
    invoke-static {p0, p1, p2, p3}, Lcom/android/server/am/ActivityManagerService;->lambda$dumpApplicationMemoryUsage$21(I[Ljava/lang/String;Ljava/util/ArrayList;Lcom/android/internal/os/ProcessCpuTracker$Stats;)V

    return-void
.end method

.method public static synthetic $r8$lambda$Wo2zv761y3gDxS055qxETFO9Pkw(Lcom/android/server/am/ActivityManagerService;Ljava/util/ArrayList;Ljava/lang/String;)V
    .locals 0

    .line 0
    invoke-direct {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->lambda$killPids$9(Ljava/util/ArrayList;Ljava/lang/String;)V

    return-void
.end method

.method public static synthetic $r8$lambda$YTfw2zpDfJNP5urxMmV4fdYZiUU(Ljava/util/concurrent/atomic/AtomicInteger;Ljava/util/concurrent/atomic/AtomicInteger;Ljava/util/concurrent/CountDownLatch;Landroid/os/Bundle;)V
    .locals 0

    .line 0
    invoke-static {p0, p1, p2, p3}, Lcom/android/server/am/ActivityManagerService;->lambda$waitForApplicationBarrier$37(Ljava/util/concurrent/atomic/AtomicInteger;Ljava/util/concurrent/atomic/AtomicInteger;Ljava/util/concurrent/CountDownLatch;Landroid/os/Bundle;)V

    return-void
.end method

.method public static synthetic $r8$lambda$b03y3ueKvv9YCa0DjsGd0FfIMrk(Lcom/android/server/am/ActivityManagerService;Landroid/os/PowerSaveState;)V
    .locals 0

    .line 0
    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->lambda$systemReady$12(Landroid/os/PowerSaveState;)V

    return-void
.end method

.method public static synthetic $r8$lambda$dhx2BGRLrIyZ0jreIMaQCfcbBTY(Lcom/android/server/am/ProcessRecord;JJJIJJLcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;)V
    .locals 0

    .line 0
    invoke-static/range {p0 .. p12}, Lcom/android/server/am/ActivityManagerService;->lambda$dumpApplicationMemoryUsage$26(Lcom/android/server/am/ProcessRecord;JJJIJJLcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;)V

    return-void
.end method

.method public static synthetic $r8$lambda$dufV_yQok6Yw00FH6zp4fQASPJE(Lcom/android/server/am/ActivityManagerService;Ljava/util/List;IFJ)V
    .locals 0

    .line 0
    invoke-direct/range {p0 .. p5}, Lcom/android/server/am/ActivityManagerService;->lambda$scheduleBinderHeavyHitterAutoSampler$43(Ljava/util/List;IFJ)V

    return-void
.end method

.method public static synthetic $r8$lambda$eF9wU-CBz-KTAFxe-srRTAru8JU(Ljava/io/PrintWriter;JJLjava/lang/Integer;Landroid/util/Pair;)V
    .locals 0

    .line 0
    invoke-static/range {p0 .. p6}, Lcom/android/server/am/ActivityManagerService;->lambda$dumpOtherProcessesInfoLSP$20(Ljava/io/PrintWriter;JJLjava/lang/Integer;Landroid/util/Pair;)V

    return-void
.end method

.method public static synthetic $r8$lambda$hiHIXX69W7GNoPsrlPvBpz5afF8(Lcom/android/server/am/ActivityManagerService;Ljava/util/List;IFJ)V
    .locals 0

    .line 0
    invoke-direct/range {p0 .. p5}, Lcom/android/server/am/ActivityManagerService;->lambda$scheduleUpdateBinderHeavyHitterWatcherConfig$41(Ljava/util/List;IFJ)V

    return-void
.end method

.method public static synthetic $r8$lambda$kQdGuYAs_tFliod8cPGKKyI5M40(Lcom/android/server/am/ActivityManagerService;)V
    .locals 0

    .line 0
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->lambda$finishBooting$6()V

    return-void
.end method

.method public static synthetic $r8$lambda$mLSgj0_-2qvr-t2-xE8C-lAuaIg([ILjava/lang/String;Lcom/android/server/am/ProcessRecord;)V
    .locals 0

    .line 0
    invoke-static {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->lambda$getPackageProcessState$0([ILjava/lang/String;Lcom/android/server/am/ProcessRecord;)V

    return-void
.end method

.method public static synthetic $r8$lambda$olA2NkU7D-gfFmcfH_tAB41LKnk(Lcom/android/server/am/ActivityManagerService;)V
    .locals 0

    .line 0
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->lambda$scheduleBinderHeavyHitterAutoSampler$45()V

    return-void
.end method

.method public static synthetic $r8$lambda$s1jFEWzjlyoTErvSHaXGPh4-f5w(Lcom/android/server/am/ActivityManagerService;Ljava/util/List;IFJ)V
    .locals 0

    .line 0
    invoke-direct/range {p0 .. p5}, Lcom/android/server/am/ActivityManagerService;->lambda$scheduleUpdateBinderHeavyHitterWatcherConfig$39(Ljava/util/List;IFJ)V

    return-void
.end method

.method public static synthetic $r8$lambda$s2wHfxGoarkIflvsv1mz6BxjGno(Ljava/util/Set;Ljava/util/ArrayList;Lcom/android/internal/os/ProcessCpuTracker$Stats;)V
    .locals 0

    .line 0
    invoke-static {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->lambda$getNativeProcesses$24(Ljava/util/Set;Ljava/util/ArrayList;Lcom/android/internal/os/ProcessCpuTracker$Stats;)V

    return-void
.end method

.method public static synthetic $r8$lambda$sJ91_8knYIgBp2gAoesLfs-FSNE(Lcom/android/server/am/ActivityManagerService;Ljava/util/List;IFJ)V
    .locals 0

    .line 0
    invoke-direct/range {p0 .. p5}, Lcom/android/server/am/ActivityManagerService;->lambda$scheduleUpdateBinderHeavyHitterWatcherConfig$40(Ljava/util/List;IFJ)V

    return-void
.end method

.method public static synthetic $r8$lambda$svfzkZUA916GTz5lWJDmadM2DAo(Lcom/android/server/am/ActivityManagerService;Ljava/lang/String;I)V
    .locals 0

    .line 0
    invoke-direct {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->lambda$finishAttachApplicationInner$4(Ljava/lang/String;I)V

    return-void
.end method

.method public static synthetic $r8$lambda$t5fcMXrci4D72e_a4SWFN06PLU0(Lcom/android/server/am/ActivityManagerService;Landroid/app/IUnsafeIntentStrictModeCallback;Landroid/content/Intent;I)V
    .locals 0

    .line 0
    invoke-direct {p0, p1, p2, p3}, Lcom/android/server/am/ActivityManagerService;->lambda$filterNonExportedComponents$28(Landroid/app/IUnsafeIntentStrictModeCallback;Landroid/content/Intent;I)V

    return-void
.end method

.method public static bridge synthetic -$$Nest$fgetmCompanionAppUidsMap(Lcom/android/server/am/ActivityManagerService;)Ljava/util/Map;
    .locals 0

    .line 0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mCompanionAppUidsMap:Ljava/util/Map;

    return-object p0
.end method

.method public static bridge synthetic -$$Nest$fgetmDeviceOwnerUid(Lcom/android/server/am/ActivityManagerService;)I
    .locals 0

    .line 0
    iget p0, p0, Lcom/android/server/am/ActivityManagerService;->mDeviceOwnerUid:I

    return p0
.end method

.method public static bridge synthetic -$$Nest$fgetmDynamicHiddenApp(Lcom/android/server/am/ActivityManagerService;)Lcom/android/server/am/DynamicHiddenApp;
    .locals 0

    .line 0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mDynamicHiddenApp:Lcom/android/server/am/DynamicHiddenApp;

    return-object p0
.end method

.method public static bridge synthetic -$$Nest$fgetmFgsWhileInUseTempAllowList(Lcom/android/server/am/ActivityManagerService;)Lcom/android/server/am/FgsTempAllowList;
    .locals 0

    .line 0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mFgsWhileInUseTempAllowList:Lcom/android/server/am/FgsTempAllowList;

    return-object p0
.end method

.method public static bridge synthetic -$$Nest$fgetmNetworkPolicyUidObserver(Lcom/android/server/am/ActivityManagerService;)Landroid/app/IUidObserver;
    .locals 0

    .line 0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mNetworkPolicyUidObserver:Landroid/app/IUidObserver;

    return-object p0
.end method

.method public static bridge synthetic -$$Nest$fgetmPendingStartActivityUids(Lcom/android/server/am/ActivityManagerService;)Lcom/android/server/am/PendingStartActivityUids;
    .locals 0

    .line 0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingStartActivityUids:Lcom/android/server/am/PendingStartActivityUids;

    return-object p0
.end method

.method public static bridge synthetic -$$Nest$fgetmProfileOwnerUids(Lcom/android/server/am/ActivityManagerService;)Landroid/util/ArraySet;
    .locals 0

    .line 0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mProfileOwnerUids:Landroid/util/ArraySet;

    return-object p0
.end method

.method public static bridge synthetic -$$Nest$fgetmStrictModeCallbacks(Lcom/android/server/am/ActivityManagerService;)Landroid/util/SparseArray;
    .locals 0

    .line 0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mStrictModeCallbacks:Landroid/util/SparseArray;

    return-object p0
.end method

.method public static bridge synthetic -$$Nest$fgetmUidNetworkBlockedReasons(Lcom/android/server/am/ActivityManagerService;)Landroid/util/SparseIntArray;
    .locals 0

    .line 0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mUidNetworkBlockedReasons:Landroid/util/SparseIntArray;

    return-object p0
.end method

.method public static bridge synthetic -$$Nest$fputmDeviceOwnerUid(Lcom/android/server/am/ActivityManagerService;I)V
    .locals 0

    .line 0
    iput p1, p0, Lcom/android/server/am/ActivityManagerService;->mDeviceOwnerUid:I

    return-void
.end method

.method public static bridge synthetic -$$Nest$fputmNetworkPolicyUidObserver(Lcom/android/server/am/ActivityManagerService;Landroid/app/IUidObserver;)V
    .locals 0

    .line 0
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mNetworkPolicyUidObserver:Landroid/app/IUidObserver;

    return-void
.end method

.method public static bridge synthetic -$$Nest$fputmProfileOwnerUids(Lcom/android/server/am/ActivityManagerService;Landroid/util/ArraySet;)V
    .locals 0

    .line 0
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mProfileOwnerUids:Landroid/util/ArraySet;

    return-void
.end method

.method public static bridge synthetic -$$Nest$fputmUserIsMonkey(Lcom/android/server/am/ActivityManagerService;Z)V
    .locals 0

    .line 0
    iput-boolean p1, p0, Lcom/android/server/am/ActivityManagerService;->mUserIsMonkey:Z

    return-void
.end method

.method public static bridge synthetic -$$Nest$mappNotResponding(Lcom/android/server/am/ActivityManagerService;Ljava/lang/String;ILcom/android/internal/os/TimeoutRecord;)V
    .locals 0

    .line 0
    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/am/ActivityManagerService;->appNotResponding(Ljava/lang/String;ILcom/android/internal/os/TimeoutRecord;)V

    return-void
.end method

.method public static bridge synthetic -$$Nest$mbindServiceInstance(Lcom/android/server/am/ActivityManagerService;Landroid/app/IApplicationThread;Landroid/os/IBinder;Landroid/content/Intent;Ljava/lang/String;Landroid/app/IServiceConnection;JLjava/lang/String;ZILjava/lang/String;Landroid/app/IApplicationThread;Ljava/lang/String;I)I
    .locals 0

    .line 0
    invoke-virtual/range {p0 .. p14}, Lcom/android/server/am/ActivityManagerService;->bindServiceInstance(Landroid/app/IApplicationThread;Landroid/os/IBinder;Landroid/content/Intent;Ljava/lang/String;Landroid/app/IServiceConnection;JLjava/lang/String;ZILjava/lang/String;Landroid/app/IApplicationThread;Ljava/lang/String;I)I

    move-result p0

    return p0
.end method

.method public static bridge synthetic -$$Nest$mcheckExcessivePowerUsage(Lcom/android/server/am/ActivityManagerService;)V
    .locals 0

    .line 0
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->checkExcessivePowerUsage()V

    return-void
.end method

.method public static bridge synthetic -$$Nest$mclearPendingBackup(Lcom/android/server/am/ActivityManagerService;I)V
    .locals 0

    .line 0
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->clearPendingBackup(I)V

    return-void
.end method

.method public static bridge synthetic -$$Nest$mdoDump(Lcom/android/server/am/ActivityManagerService;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;Z)V
    .locals 0

    .line 0
    invoke-virtual {p0, p1, p2, p3, p4}, Lcom/android/server/am/ActivityManagerService;->doDump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;Z)V

    return-void
.end method

.method public static bridge synthetic -$$Nest$mfinishForceStopPackageLocked(Lcom/android/server/am/ActivityManagerService;Ljava/lang/String;I)V
    .locals 0

    .line 0
    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->finishForceStopPackageLocked(Ljava/lang/String;I)V

    return-void
.end method

.method public static bridge synthetic -$$Nest$mgetBackgroundStartPrivileges(Lcom/android/server/am/ActivityManagerService;I)Landroid/app/BackgroundStartPrivileges;
    .locals 0

    .line 0
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getBackgroundStartPrivileges(I)Landroid/app/BackgroundStartPrivileges;

    move-result-object p0

    return-object p0
.end method

.method public static bridge synthetic -$$Nest$mhandleBinderHeavyHitterAutoSamplerTimeOut(Lcom/android/server/am/ActivityManagerService;)V
    .locals 0

    .line 0
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->handleBinderHeavyHitterAutoSamplerTimeOut()V

    return-void
.end method

.method public static bridge synthetic -$$Nest$misAppBad(Lcom/android/server/am/ActivityManagerService;Ljava/lang/String;I)Z
    .locals 0

    .line 0
    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->isAppBad(Ljava/lang/String;I)Z

    move-result p0

    return p0
.end method

.method public static bridge synthetic -$$Nest$misAppForeground(Lcom/android/server/am/ActivityManagerService;I)Z
    .locals 0

    .line 0
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->isAppForeground(I)Z

    move-result p0

    return p0
.end method

.method public static bridge synthetic -$$Nest$misDeviceProvisioned(Lcom/android/server/am/ActivityManagerService;Landroid/content/Context;)Z
    .locals 0

    .line 0
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->isDeviceProvisioned(Landroid/content/Context;)Z

    move-result p0

    return p0
.end method

.method public static bridge synthetic -$$Nest$mnotifyMediaProjectionEvent(Lcom/android/server/am/ActivityManagerService;ILandroid/os/IBinder;I)V
    .locals 0

    .line 0
    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/am/ActivityManagerService;->notifyMediaProjectionEvent(ILandroid/os/IBinder;I)V

    return-void
.end method

.method public static bridge synthetic -$$Nest$mreportDiedAppPid(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;I)V
    .locals 0

    .line 0
    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->reportDiedAppPid(Lcom/android/server/am/ProcessRecord;I)V

    return-void
.end method

.method public static bridge synthetic -$$Nest$msetAppLaunchFlag(Lcom/android/server/am/ActivityManagerService;Z)V
    .locals 0

    .line 0
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->setAppLaunchFlag(Z)V

    return-void
.end method

.method public static bridge synthetic -$$Nest$msetDebugApp(Lcom/android/server/am/ActivityManagerService;Ljava/lang/String;ZZZ)V
    .locals 0

    .line 0
    invoke-virtual {p0, p1, p2, p3, p4}, Lcom/android/server/am/ActivityManagerService;->setDebugApp(Ljava/lang/String;ZZZ)V

    return-void
.end method

.method public static bridge synthetic -$$Nest$msetVoiceInteractionManagerProvider(Lcom/android/server/am/ActivityManagerService;Landroid/app/ActivityManagerInternal$VoiceInteractionManagerProvider;)V
    .locals 0

    .line 0
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->setVoiceInteractionManagerProvider(Landroid/app/ActivityManagerInternal$VoiceInteractionManagerProvider;)V

    return-void
.end method

.method public static bridge synthetic -$$Nest$mstart(Lcom/android/server/am/ActivityManagerService;)V
    .locals 0

    .line 0
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->start()V

    return-void
.end method

.method public static bridge synthetic -$$Nest$mstartBroadcastObservers(Lcom/android/server/am/ActivityManagerService;)V
    .locals 0

    .line 0
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->startBroadcastObservers()V

    return-void
.end method

.method public static bridge synthetic -$$Nest$mstartImsService(Lcom/android/server/am/ActivityManagerService;Ljava/lang/String;)V
    .locals 0

    .line 0
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->startImsService(Ljava/lang/String;)V

    return-void
.end method

.method public static bridge synthetic -$$Nest$mstartService(Lcom/android/server/am/ActivityManagerService;Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;ZLjava/lang/String;Ljava/lang/String;IZILjava/lang/String;Ljava/lang/String;)Landroid/content/ComponentName;
    .locals 0

    .line 0
    invoke-virtual/range {p0 .. p11}, Lcom/android/server/am/ActivityManagerService;->startService(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;ZLjava/lang/String;Ljava/lang/String;IZILjava/lang/String;Ljava/lang/String;)Landroid/content/ComponentName;

    move-result-object p0

    return-object p0
.end method

.method public static bridge synthetic -$$Nest$mstopService(Lcom/android/server/am/ActivityManagerService;Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;IZILjava/lang/String;Ljava/lang/String;)I
    .locals 0

    .line 0
    invoke-virtual/range {p0 .. p8}, Lcom/android/server/am/ActivityManagerService;->stopService(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;IZILjava/lang/String;Ljava/lang/String;)I

    move-result p0

    return p0
.end method

.method public static bridge synthetic -$$Nest$mtrimApplications(Lcom/android/server/am/ActivityManagerService;ZI)V
    .locals 0

    .line 0
    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->trimApplications(ZI)V

    return-void
.end method

.method public static bridge synthetic -$$Nest$mupdateExtraFreeKbytes(Lcom/android/server/am/ActivityManagerService;)V
    .locals 0

    .line 0
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateExtraFreeKbytes()V

    return-void
.end method

.method public static bridge synthetic -$$Nest$sfgetmRecentKillList()Ljava/util/List;
    .locals 1

    .line 0
    sget-object v0, Lcom/android/server/am/ActivityManagerService;->mRecentKillList:Ljava/util/List;

    return-object v0
.end method

.method public static constructor <clinit>()V
    .locals 18

    .line 717
    sget v0, Landroid/os/Build;->HW_TIMEOUT_MULTIPLIER:I

    mul-int/lit16 v1, v0, 0x2710

    sput v1, Lcom/android/server/am/ActivityManagerService;->PROC_START_TIMEOUT:I

    mul-int/lit16 v1, v0, 0x2710

    .line 729
    sput v1, Lcom/android/server/am/ActivityManagerService;->BROADCAST_FG_TIMEOUT:I

    const v1, 0xea60

    mul-int/2addr v0, v1

    .line 730
    sput v0, Lcom/android/server/am/ActivityManagerService;->BROADCAST_BG_TIMEOUT:I

    .line 732
    invoke-static {}, Landroid/os/Process;->myPid()I

    move-result v0

    sput v0, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    const/4 v0, 0x0

    new-array v0, v0, [Ljava/lang/String;

    .line 734
    sput-object v0, Lcom/android/server/am/ActivityManagerService;->EMPTY_STRING_ARRAY:[Ljava/lang/String;

    const-string/jumbo v0, "user"

    .line 917
    sget-object v1, Landroid/os/Build;->TYPE:Ljava/lang/String;

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    sput-boolean v0, Lcom/android/server/am/ActivityManagerService;->USER_BUILD:Z

    const-string/jumbo v0, "ro.product_ship"

    const-string v1, "false"

    .line 918
    invoke-static {v0, v1}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    const-string/jumbo v1, "true"

    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    sput-boolean v0, Lcom/android/server/am/ActivityManagerService;->SHIP_BUILD:Z

    const/4 v0, 0x1

    .line 920
    sput-boolean v0, Lcom/android/server/am/ActivityManagerService;->IS_JDM_PROJECT:Z

    const-string/jumbo v0, "ro.boot.debug_level"

    const-string v2, "Unknown"

    .line 925
    invoke-static {v0, v2}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->DEBUG_LEVEL:Ljava/lang/String;

    const-string v2, "0x4f4c"

    .line 926
    invoke-virtual {v2, v0}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    move-result v2

    sput-boolean v2, Lcom/android/server/am/ActivityManagerService;->DEBUG_LEVEL_LOW:Z

    const-string v2, "0x494d"

    .line 927
    invoke-virtual {v2, v0}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    move-result v2

    sput-boolean v2, Lcom/android/server/am/ActivityManagerService;->DEBUG_LEVEL_MID:Z

    const-string v2, "0x4948"

    .line 928
    invoke-virtual {v2, v0}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    move-result v0

    sput-boolean v0, Lcom/android/server/am/ActivityManagerService;->DEBUG_LEVEL_HIGH:Z

    const-string/jumbo v0, "persist.sys.kpm_onoff"

    .line 967
    invoke-static {v0, v1}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Ljava/lang/Boolean;->parseBoolean(Ljava/lang/String;)Z

    move-result v0

    sput-boolean v0, Lcom/android/server/am/ActivityManagerService;->sPmmEnabledBySpcm:Z

    .line 1080
    new-instance v0, Lcom/android/server/ThreadPriorityBooster;

    const/4 v1, 0x7

    const/4 v2, -0x2

    invoke-direct {v0, v2, v1}, Lcom/android/server/ThreadPriorityBooster;-><init>(II)V

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->sThreadPriorityBooster:Lcom/android/server/ThreadPriorityBooster;

    .line 1091
    new-instance v0, Lcom/android/server/ThreadPriorityBooster;

    const/4 v1, 0x6

    invoke-direct {v0, v2, v1}, Lcom/android/server/ThreadPriorityBooster;-><init>(II)V

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->sProcThreadPriorityBooster:Lcom/android/server/ThreadPriorityBooster;

    .line 1199
    new-instance v0, Landroid/util/SparseArray;

    invoke-direct {v0}, Landroid/util/SparseArray;-><init>()V

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->sActiveProcessInfoSelfLocked:Landroid/util/SparseArray;

    .line 1666
    new-instance v0, Lcom/android/server/am/ActivityManagerService$FgsTempAllowListItem;

    const-wide v2, 0x7fffffffffffffffL

    const/16 v4, 0x12c

    const-string v5, ""

    const/4 v6, -0x1

    move-object v1, v0

    invoke-direct/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService$FgsTempAllowListItem;-><init>(JILjava/lang/String;I)V

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->FAKE_TEMP_ALLOW_LIST_ITEM:Lcom/android/server/am/ActivityManagerService$FgsTempAllowListItem;

    const-string/jumbo v0, "unknown"

    .line 1983
    sput-object v0, Lcom/android/server/am/ActivityManagerService;->sTheRealBuildSerial:Ljava/lang/String;

    .line 1988
    new-instance v0, Lcom/android/server/am/HostingRecord;

    const-string v1, ""

    invoke-direct {v0, v1}, Lcom/android/server/am/HostingRecord;-><init>(Ljava/lang/String;)V

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->sNullHostingRecord:Lcom/android/server/am/HostingRecord;

    .line 8190
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->mRecentKillList:Ljava/util/List;

    const/16 v0, 0x17

    new-array v0, v0, [J

    .line 14011
    fill-array-data v0, :array_0

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_BUCKETS:[J

    const/16 v0, 0x11

    new-array v0, v0, [I

    .line 14038
    fill-array-data v0, :array_1

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_ADJ:[I

    const-string v1, "Native"

    const-string v2, "System"

    const-string v3, "Persistent"

    const-string v4, "Persistent Service"

    const-string v5, "Foreground"

    const-string v6, "Visible"

    const-string v7, "Perceptible"

    const-string v8, "Perceptible Low"

    const-string v9, "Perceptible Medium"

    const-string v10, "Backup"

    const-string v11, "Heavy Weight"

    const-string v12, "A Services"

    const-string v13, "Home"

    const-string v14, "Previous"

    const-string v15, "B Services"

    const-string v16, "Picked"

    const-string v17, "Cached"

    .line 14050
    filled-new-array/range {v1 .. v17}, [Ljava/lang/String;

    move-result-object v0

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_LABEL:[Ljava/lang/String;

    const-string/jumbo v1, "native"

    const-string/jumbo v2, "sys"

    const-string/jumbo v3, "pers"

    const-string/jumbo v4, "persvc"

    const-string v5, "fore"

    const-string/jumbo v6, "vis"

    const-string/jumbo v7, "percept"

    const-string/jumbo v8, "perceptl"

    const-string/jumbo v9, "perceptm"

    const-string v10, "backup"

    const-string v11, "heavy"

    const-string/jumbo v12, "servicea"

    const-string v13, "home"

    const-string/jumbo v14, "prev"

    const-string/jumbo v15, "serviceb"

    const-string/jumbo v16, "picked"

    const-string v17, "cached"

    .line 14059
    filled-new-array/range {v1 .. v17}, [Ljava/lang/String;

    move-result-object v0

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_COMPACT_LABEL:[Ljava/lang/String;

    return-void

    nop

    :array_0
    .array-data 8
        0x1400
        0x1c00
        0x2800
        0x3c00
        0x5000
        0x7800
        0xa000
        0x14000
        0x1e000
        0x28000
        0x32000
        0x3e800
        0x4b000
        0x57800
        0x64000
        0x7d000
        0x96000
        0xc8000
        0x100000
        0x200000
        0x500000
        0xa00000
        0x1400000
    .end array-data

    :array_1
    .array-data 4
        -0x3e8
        -0x384
        -0x320
        -0x2bc
        0x0
        0x64
        0xc8
        0xfa
        0xe1
        0x12c
        0x190
        0x1f4
        0x258
        0x2bc
        0x320
        0x352
        0x384
    .end array-data
.end method

.method public constructor <init>(Landroid/content/Context;Lcom/android/server/wm/ActivityTaskManagerService;)V
    .locals 25

    move-object/from16 v7, p0

    move-object/from16 v8, p1

    move-object/from16 v9, p2

    .line 2797
    invoke-direct/range {p0 .. p0}, Landroid/app/IActivityManager$Stub;-><init>()V

    const/4 v10, 0x0

    .line 787
    iput-boolean v10, v7, Lcom/android/server/am/ActivityManagerService;->isNowAppLaunching:Z

    .line 828
    new-instance v0, Lcom/android/server/am/InstrumentationReporter;

    invoke-direct {v0}, Lcom/android/server/am/InstrumentationReporter;-><init>()V

    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mInstrumentationReporter:Lcom/android/server/am/InstrumentationReporter;

    .line 830
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mActiveInstrumentation:Ljava/util/ArrayList;

    .line 835
    new-instance v0, Lcom/android/server/am/OomAdjProfiler;

    invoke-direct {v0}, Lcom/android/server/am/OomAdjProfiler;-><init>()V

    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mOomAdjProfiler:Lcom/android/server/am/OomAdjProfiler;

    .line 844
    iput-object v7, v7, Lcom/android/server/am/ActivityManagerService;->mGlobalLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    .line 880
    new-instance v0, Lcom/android/server/am/ActivityManagerProcLock;

    invoke-direct {v0}, Lcom/android/server/am/ActivityManagerProcLock;-><init>()V

    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    .line 902
    new-instance v0, Landroid/util/SparseArray;

    invoke-direct {v0}, Landroid/util/SparseArray;-><init>()V

    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mStrictModeCallbacks:Landroid/util/SparseArray;

    const/4 v0, 0x0

    .line 932
    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mApplicationPolicy:Lcom/samsung/android/knox/application/IApplicationPolicy;

    .line 933
    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mRestrictionPolicy:Lcom/samsung/android/knox/restriction/RestrictionPolicy;

    const-string v1, ""

    .line 934
    iput-object v1, v7, Lcom/android/server/am/ActivityManagerService;->mPreviousPackage:Ljava/lang/String;

    .line 935
    iput-object v1, v7, Lcom/android/server/am/ActivityManagerService;->mCurrentPackage:Ljava/lang/String;

    .line 936
    iput v10, v7, Lcom/android/server/am/ActivityManagerService;->mPreviousUserId:I

    .line 942
    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mProcessCpusetController:Lcom/android/server/am/ProcessCpusetController;

    .line 976
    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mKillPolicyManager:Lcom/android/server/am/KillPolicyManager;

    .line 977
    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->currentLauncherName:Ljava/lang/String;

    .line 978
    new-instance v1, Lcom/android/internal/os/ProcessCpuTracker;

    invoke-direct {v1, v10}, Lcom/android/internal/os/ProcessCpuTracker;-><init>(Z)V

    iput-object v1, v7, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    const/4 v1, -0x1

    .line 1019
    iput v1, v7, Lcom/android/server/am/ActivityManagerService;->mDeviceOwnerUid:I

    .line 1024
    new-instance v2, Landroid/util/ArrayMap;

    invoke-direct {v2}, Landroid/util/ArrayMap;-><init>()V

    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mCompanionAppUidsMap:Ljava/util/Map;

    .line 1029
    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mProfileOwnerUids:Landroid/util/ArraySet;

    .line 1038
    new-instance v2, Landroid/util/ArraySet;

    invoke-direct {v2}, Landroid/util/ArraySet;-><init>()V

    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mDeliveryGroupPolicyIgnoredActions:Landroid/util/ArraySet;

    .line 1046
    new-instance v2, Landroid/util/IntArray;

    const/4 v3, 0x4

    invoke-direct {v2, v3}, Landroid/util/IntArray;-><init>(I)V

    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mActiveCameraUids:Landroid/util/IntArray;

    .line 1060
    new-instance v2, Lcom/android/server/am/ActivityManagerService$1;

    invoke-direct {v2, v7}, Lcom/android/server/am/ActivityManagerService$1;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mPriorityDumper:Lcom/android/server/utils/PriorityDump$PriorityDumper;

    .line 1111
    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mDvfsMgr:Lcom/samsung/android/os/SemDvfsManager;

    const/16 v2, 0x3ea

    .line 1134
    filled-new-array {v2}, [I

    move-result-object v2

    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mBackgroundAppIdAllowlist:[I

    .line 1207
    new-instance v2, Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-direct {v2}, Lcom/android/server/am/ActivityManagerService$PidMap;-><init>()V

    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    .line 1331
    new-instance v2, Landroid/util/SparseArray;

    invoke-direct {v2}, Landroid/util/SparseArray;-><init>()V

    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mImportantProcesses:Landroid/util/SparseArray;

    .line 1339
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    .line 1346
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    .line 1360
    new-instance v2, Lcom/android/server/am/ActivityManagerService$2;

    invoke-direct {v2, v7}, Lcom/android/server/am/ActivityManagerService$2;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mActivityLaunchObserver:Lcom/android/server/wm/ActivityMetricsLaunchObserver;

    .line 1385
    iput-boolean v10, v7, Lcom/android/server/am/ActivityManagerService;->mBinderTransactionTrackingEnabled:Z

    .line 1393
    new-instance v2, Ljava/util/HashSet;

    invoke-direct {v2}, Ljava/util/HashSet;-><init>()V

    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;

    .line 1401
    new-instance v2, Ljava/util/HashMap;

    invoke-direct {v2}, Ljava/util/HashMap;-><init>()V

    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    .line 1408
    new-instance v2, Lcom/android/server/am/ActivityManagerService$3;

    invoke-direct {v2, v7}, Lcom/android/server/am/ActivityManagerService$3;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mReceiverResolver:Lcom/android/server/IntentResolver;

    .line 1455
    new-instance v2, Landroid/util/SparseArray;

    invoke-direct {v2}, Landroid/util/SparseArray;-><init>()V

    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    .line 1521
    new-instance v2, Landroid/util/SparseArray;

    invoke-direct {v2}, Landroid/util/SparseArray;-><init>()V

    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    .line 1529
    new-instance v2, Landroid/util/SparseArray;

    invoke-direct {v2}, Landroid/util/SparseArray;-><init>()V

    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mBackupTargets:Landroid/util/SparseArray;

    new-array v2, v10, [I

    .line 1581
    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mDeviceIdleAllowlist:[I

    new-array v2, v10, [I

    .line 1587
    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mDeviceIdleExceptIdleAllowlist:[I

    new-array v2, v10, [I

    .line 1593
    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mDeviceIdleTempAllowlist:[I

    .line 1634
    new-instance v2, Lcom/android/server/am/PendingTempAllowlists;

    invoke-direct {v2, v7}, Lcom/android/server/am/PendingTempAllowlists;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mPendingTempAllowlist:Lcom/android/server/am/PendingTempAllowlists;

    .line 1662
    new-instance v2, Lcom/android/server/am/FgsTempAllowList;

    invoke-direct {v2}, Lcom/android/server/am/FgsTempAllowList;-><init>()V

    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mFgsStartTempAllowList:Lcom/android/server/am/FgsTempAllowList;

    .line 1673
    new-instance v2, Lcom/android/server/am/FgsTempAllowList;

    invoke-direct {v2}, Lcom/android/server/am/FgsTempAllowList;-><init>()V

    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mFgsWhileInUseTempAllowList:Lcom/android/server/am/FgsTempAllowList;

    .line 1689
    iput-boolean v10, v7, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    .line 1690
    iput-boolean v10, v7, Lcom/android/server/am/ActivityManagerService;->mSystemReady:Z

    .line 1691
    iput-boolean v10, v7, Lcom/android/server/am/ActivityManagerService;->mOnBattery:Z

    .line 1693
    iput-boolean v10, v7, Lcom/android/server/am/ActivityManagerService;->mBooting:Z

    .line 1695
    iput-boolean v10, v7, Lcom/android/server/am/ActivityManagerService;->mCallFinishBooting:Z

    .line 1696
    iput-boolean v10, v7, Lcom/android/server/am/ActivityManagerService;->mBootAnimationComplete:Z

    .line 1720
    new-instance v2, Ljava/util/concurrent/atomic/AtomicInteger;

    const/4 v11, 0x1

    invoke-direct {v2, v11}, Ljava/util/concurrent/atomic/AtomicInteger;-><init>(I)V

    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mWakefulness:Ljava/util/concurrent/atomic/AtomicInteger;

    .line 1726
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v4

    iput-wide v4, v7, Lcom/android/server/am/ActivityManagerService;->mLastIdleTime:J

    .line 1734
    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mCurResumedPackage:Ljava/lang/String;

    .line 1737
    iput v1, v7, Lcom/android/server/am/ActivityManagerService;->mCurResumedUid:I

    .line 1743
    new-instance v2, Ljava/lang/Object;

    invoke-direct {v2}, Ljava/lang/Object;-><init>()V

    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mCurResumedAppLock:Ljava/lang/Object;

    .line 1750
    new-instance v2, Lcom/android/internal/app/ProcessMap;

    invoke-direct {v2}, Lcom/android/internal/app/ProcessMap;-><init>()V

    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mForegroundPackages:Lcom/android/internal/app/ProcessMap;

    .line 1757
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mForegroundServiceStateListeners:Ljava/util/ArrayList;

    .line 1764
    new-instance v2, Ljava/util/concurrent/CopyOnWriteArrayList;

    invoke-direct {v2}, Ljava/util/concurrent/CopyOnWriteArrayList;-><init>()V

    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mBroadcastEventListeners:Ljava/util/concurrent/CopyOnWriteArrayList;

    .line 1770
    new-instance v2, Ljava/util/concurrent/CopyOnWriteArrayList;

    invoke-direct {v2}, Ljava/util/concurrent/CopyOnWriteArrayList;-><init>()V

    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mBindServiceEventListeners:Ljava/util/concurrent/CopyOnWriteArrayList;

    .line 1779
    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    .line 1782
    iput-boolean v10, v7, Lcom/android/server/am/ActivityManagerService;->mWaitForDebugger:Z

    .line 1785
    iput-boolean v10, v7, Lcom/android/server/am/ActivityManagerService;->mSuspendUponWait:Z

    .line 1788
    iput-boolean v10, v7, Lcom/android/server/am/ActivityManagerService;->mDebugTransient:Z

    .line 1791
    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    .line 1794
    iput-boolean v10, v7, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z

    .line 1797
    iput-boolean v10, v7, Lcom/android/server/am/ActivityManagerService;->mAlwaysFinishActivities:Z

    .line 1800
    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mTrackAllocationApp:Ljava/lang/String;

    .line 1803
    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mNativeDebuggingApp:Ljava/lang/String;

    .line 1828
    new-instance v2, Ljava/lang/Object;

    invoke-direct {v2}, Ljava/lang/Object;-><init>()V

    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mOomAdjObserverLock:Ljava/lang/Object;

    .line 1834
    new-instance v2, Lcom/android/server/am/AnrHelper;

    invoke-direct {v2, v7}, Lcom/android/server/am/AnrHelper;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mAnrHelper:Lcom/android/server/am/AnrHelper;

    .line 1837
    iput-boolean v10, v7, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    .line 1844
    iput-boolean v10, v7, Lcom/android/server/am/ActivityManagerService;->mDeterministicUidIdle:Z

    .line 1861
    new-instance v2, Landroid/util/SparseIntArray;

    invoke-direct {v2}, Landroid/util/SparseIntArray;-><init>()V

    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mUidNetworkBlockedReasons:Landroid/util/SparseIntArray;

    .line 1874
    new-instance v2, Landroid/util/SparseArray;

    invoke-direct {v2}, Landroid/util/SparseArray;-><init>()V

    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mMediaProjectionTokenMap:Landroid/util/SparseArray;

    .line 1979
    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mDynamicHiddenApp:Lcom/android/server/am/DynamicHiddenApp;

    .line 1980
    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mCustomEFKManager:Lcom/android/server/bgslotmanager/CustomEFKManager;

    const-wide/16 v4, 0x0

    .line 2008
    iput-wide v4, v7, Lcom/android/server/am/ActivityManagerService;->mLastBinderHeavyHitterAutoSamplerStart:J

    .line 3908
    new-instance v2, Ljava/util/HashMap;

    invoke-direct {v2}, Ljava/util/HashMap;-><init>()V

    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mPendingSches:Ljava/util/Map;

    .line 7733
    new-instance v2, Lcom/android/server/am/ActivityManagerService$GetBackgroundStartPrivilegesFunctor;

    invoke-direct {v2, v0}, Lcom/android/server/am/ActivityManagerService$GetBackgroundStartPrivilegesFunctor;-><init>(Lcom/android/server/am/ActivityManagerService$GetBackgroundStartPrivilegesFunctor-IA;)V

    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mGetBackgroundStartPrivilegesFunctor:Lcom/android/server/am/ActivityManagerService$GetBackgroundStartPrivilegesFunctor;

    .line 9688
    new-instance v0, Landroid/os/RemoteCallbackList;

    invoke-direct {v0}, Landroid/os/RemoteCallbackList;-><init>()V

    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mUidFrozenStateChangedCallbackList:Landroid/os/RemoteCallbackList;

    .line 9993
    iput v1, v7, Lcom/android/server/am/ActivityManagerService;->mTransitionPlayerPid:I

    .line 11488
    new-instance v0, Lcom/android/server/am/DropboxRateLimiter;

    invoke-direct {v0}, Lcom/android/server/am/DropboxRateLimiter;-><init>()V

    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mDropboxRateLimiter:Lcom/android/server/am/DropboxRateLimiter;

    .line 11967
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mPendingCmdBR:Ljava/util/ArrayList;

    const/4 v0, 0x7

    .line 2798
    invoke-static {v7, v0}, Lcom/android/server/LockGuard;->installLock(Ljava/lang/Object;I)Ljava/lang/Object;

    .line 2799
    new-instance v12, Lcom/android/server/am/ActivityManagerService$Injector;

    invoke-direct {v12, v8}, Lcom/android/server/am/ActivityManagerService$Injector;-><init>(Landroid/content/Context;)V

    iput-object v12, v7, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    .line 2800
    iput-object v8, v7, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    .line 2802
    invoke-static {}, Landroid/os/FactoryTest;->getMode()I

    move-result v0

    iput v0, v7, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    .line 2803
    invoke-static {}, Landroid/app/ActivityThread;->currentActivityThread()Landroid/app/ActivityThread;

    move-result-object v0

    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mSystemThread:Landroid/app/ActivityThread;

    .line 2804
    invoke-virtual {v0}, Landroid/app/ActivityThread;->getSystemUiContext()Landroid/app/ContextImpl;

    move-result-object v13

    iput-object v13, v7, Lcom/android/server/am/ActivityManagerService;->mUiContext:Landroid/content/Context;

    .line 2806
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Memory class: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Landroid/app/ActivityManager;->staticGetMemoryClass()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v14, "ActivityManager"

    invoke-static {v14, v0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 2808
    new-instance v15, Lcom/android/server/ServiceThread;

    const/4 v0, -0x2

    invoke-direct {v15, v14, v0, v10}, Lcom/android/server/ServiceThread;-><init>(Ljava/lang/String;IZ)V

    iput-object v15, v7, Lcom/android/server/am/ActivityManagerService;->mHandlerThread:Lcom/android/server/ServiceThread;

    .line 2810
    invoke-virtual {v15}, Landroid/os/HandlerThread;->start()V

    .line 2812
    sget-boolean v1, Lcom/samsung/android/rune/CoreRune;->SYSPERF_BOOST_OPT:Z

    const/16 v2, 0xa

    if-eqz v1, :cond_0

    .line 2813
    invoke-virtual {v15}, Landroid/os/HandlerThread;->getThreadId()I

    move-result v1

    invoke-static {v1, v2}, Landroid/os/Process;->setThreadGroup(II)V

    .line 2816
    :cond_0
    new-instance v6, Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v15}, Landroid/os/HandlerThread;->getLooper()Landroid/os/Looper;

    move-result-object v1

    invoke-direct {v6, v7, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/os/Looper;)V

    iput-object v6, v7, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    .line 2817
    invoke-virtual {v12, v7}, Lcom/android/server/am/ActivityManagerService$Injector;->getUiHandler(Lcom/android/server/am/ActivityManagerService;)Landroid/os/Handler;

    move-result-object v5

    iput-object v5, v7, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Landroid/os/Handler;

    .line 2819
    new-instance v1, Lcom/android/server/ServiceThread;

    const-string v4, "ActivityManager:procStart"

    invoke-direct {v1, v4, v0, v10}, Lcom/android/server/ServiceThread;-><init>(Ljava/lang/String;IZ)V

    iput-object v1, v7, Lcom/android/server/am/ActivityManagerService;->mProcStartHandlerThread:Lcom/android/server/ServiceThread;

    .line 2821
    invoke-virtual {v1}, Landroid/os/HandlerThread;->start()V

    .line 2822
    new-instance v0, Lcom/android/server/am/ProcessList$ProcStartHandler;

    invoke-virtual {v1}, Landroid/os/HandlerThread;->getLooper()Landroid/os/Looper;

    move-result-object v4

    invoke-direct {v0, v7, v4}, Lcom/android/server/am/ProcessList$ProcStartHandler;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/os/Looper;)V

    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mProcStartHandler:Lcom/android/server/am/ProcessList$ProcStartHandler;

    .line 2824
    sget-boolean v4, Lcom/samsung/android/rune/CoreRune;->SYSPERF_BOOST_OPT:Z

    if-eqz v4, :cond_1

    .line 2825
    invoke-virtual {v1}, Landroid/os/HandlerThread;->getThreadId()I

    move-result v1

    invoke-static {v1, v2}, Landroid/os/Process;->setThreadGroup(II)V

    .line 2831
    :cond_1
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object v1

    invoke-virtual {v1, v0}, Lcom/android/server/Watchdog;->addThread(Landroid/os/Handler;)V

    .line 2835
    new-instance v0, Lcom/android/server/am/ActivityManagerConstants;

    invoke-direct {v0, v8, v7, v6}, Lcom/android/server/am/ActivityManagerConstants;-><init>(Landroid/content/Context;Lcom/android/server/am/ActivityManagerService;Landroid/os/Handler;)V

    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 2836
    new-instance v0, Lcom/android/server/am/ActiveUids;

    invoke-direct {v0, v7, v11}, Lcom/android/server/am/ActiveUids;-><init>(Lcom/android/server/am/ActivityManagerService;Z)V

    const-string/jumbo v1, "platform_compat"

    .line 2837
    invoke-static {v1}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v1

    check-cast v1, Lcom/android/server/compat/PlatformCompat;

    iput-object v1, v7, Lcom/android/server/am/ActivityManagerService;->mPlatformCompat:Lcom/android/server/compat/PlatformCompat;

    .line 2839
    invoke-virtual {v12, v7}, Lcom/android/server/am/ActivityManagerService$Injector;->getProcessList(Lcom/android/server/am/ActivityManagerService;)Lcom/android/server/am/ProcessList;

    move-result-object v4

    iput-object v4, v7, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 2840
    invoke-virtual {v4, v7, v0, v1}, Lcom/android/server/am/ProcessList;->init(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ActiveUids;Lcom/android/server/compat/PlatformCompat;)V

    .line 2841
    new-instance v1, Lcom/android/server/am/AppProfiler;

    invoke-static {}, Lcom/android/internal/os/BackgroundThread;->getHandler()Landroid/os/Handler;

    move-result-object v2

    invoke-virtual {v2}, Landroid/os/Handler;->getLooper()Landroid/os/Looper;

    move-result-object v2

    new-instance v3, Lcom/android/server/am/LowMemDetector;

    invoke-direct {v3, v7}, Lcom/android/server/am/LowMemDetector;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-direct {v1, v7, v2, v3}, Lcom/android/server/am/AppProfiler;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/os/Looper;Lcom/android/server/am/LowMemDetector;)V

    iput-object v1, v7, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    .line 2843
    new-instance v1, Lcom/android/server/am/PhantomProcessList;

    invoke-direct {v1, v7}, Lcom/android/server/am/PhantomProcessList;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v1, v7, Lcom/android/server/am/ActivityManagerService;->mPhantomProcessList:Lcom/android/server/am/PhantomProcessList;

    .line 2844
    new-instance v1, Lcom/android/server/am/OomAdjuster;

    invoke-direct {v1, v7, v4, v0}, Lcom/android/server/am/OomAdjuster;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessList;Lcom/android/server/am/ActiveUids;)V

    iput-object v1, v7, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    .line 2847
    new-instance v3, Lcom/android/server/am/BroadcastConstants;

    const-string v0, "bcast_fg_constants"

    invoke-direct {v3, v0}, Lcom/android/server/am/BroadcastConstants;-><init>(Ljava/lang/String;)V

    .line 2849
    sget v0, Lcom/android/server/am/ActivityManagerService;->BROADCAST_FG_TIMEOUT:I

    int-to-long v0, v0

    iput-wide v0, v3, Lcom/android/server/am/BroadcastConstants;->TIMEOUT:J

    .line 2851
    new-instance v2, Lcom/android/server/am/BroadcastConstants;

    const-string v0, "bcast_bg_constants"

    invoke-direct {v2, v0}, Lcom/android/server/am/BroadcastConstants;-><init>(Ljava/lang/String;)V

    .line 2853
    sget v0, Lcom/android/server/am/ActivityManagerService;->BROADCAST_BG_TIMEOUT:I

    int-to-long v10, v0

    iput-wide v10, v2, Lcom/android/server/am/BroadcastConstants;->TIMEOUT:J

    .line 2855
    new-instance v10, Lcom/android/server/am/BroadcastConstants;

    const-string v1, "bcast_offload_constants"

    invoke-direct {v10, v1}, Lcom/android/server/am/BroadcastConstants;-><init>(Ljava/lang/String;)V

    int-to-long v0, v0

    .line 2857
    iput-wide v0, v10, Lcom/android/server/am/BroadcastConstants;->TIMEOUT:J

    const-wide/32 v0, 0x7fffffff

    .line 2859
    iput-wide v0, v10, Lcom/android/server/am/BroadcastConstants;->SLOW_TIME:J

    const-string/jumbo v0, "persist.device_config.activity_manager_native_boot.offload_queue_enabled"

    const/4 v1, 0x1

    .line 2861
    invoke-static {v0, v1}, Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z

    move-result v0

    iput-boolean v0, v7, Lcom/android/server/am/ActivityManagerService;->mEnableOffloadQueue:Z

    .line 2863
    iget-boolean v0, v3, Lcom/android/server/am/BroadcastConstants;->MODERN_QUEUE_ENABLED:Z

    iput-boolean v0, v7, Lcom/android/server/am/ActivityManagerService;->mEnableModernQueue:Z

    const/4 v11, 0x2

    if-eqz v0, :cond_2

    new-array v0, v1, [Lcom/android/server/am/BroadcastQueue;

    .line 2866
    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    .line 2867
    new-instance v1, Lcom/android/server/am/BroadcastQueueModernImpl;

    invoke-direct {v1, v7, v6, v3, v2}, Lcom/android/server/am/BroadcastQueueModernImpl;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/os/Handler;Lcom/android/server/am/BroadcastConstants;Lcom/android/server/am/BroadcastConstants;)V

    const/4 v2, 0x0

    aput-object v1, v0, v2

    move-object/from16 v23, v4

    move-object/from16 v24, v5

    move-object/from16 v17, v6

    goto :goto_0

    :cond_2
    const/4 v0, 0x4

    new-array v1, v0, [Lcom/android/server/am/BroadcastQueue;

    .line 2870
    iput-object v1, v7, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    .line 2871
    new-instance v16, Lcom/android/server/am/BroadcastQueueImpl;

    const-string v17, "foreground"

    const/16 v18, 0x0

    const/16 v19, 0x2

    move-object/from16 v0, v16

    move-object/from16 v20, v1

    move-object/from16 v1, p0

    move-object/from16 v21, v2

    move-object v2, v6

    move-object/from16 v22, v3

    move-object/from16 v3, v17

    move-object/from16 v23, v4

    move-object/from16 v4, v22

    move-object/from16 v24, v5

    move/from16 v5, v18

    move-object/from16 v17, v6

    move/from16 v6, v19

    invoke-direct/range {v0 .. v6}, Lcom/android/server/am/BroadcastQueueImpl;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/os/Handler;Ljava/lang/String;Lcom/android/server/am/BroadcastConstants;ZI)V

    const/4 v0, 0x0

    aput-object v16, v20, v0

    .line 2873
    new-instance v16, Lcom/android/server/am/BroadcastQueueImpl;

    const-string v3, "background"

    const/4 v5, 0x1

    const/4 v6, 0x0

    move-object/from16 v0, v16

    move-object/from16 v2, v17

    move-object/from16 v4, v21

    invoke-direct/range {v0 .. v6}, Lcom/android/server/am/BroadcastQueueImpl;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/os/Handler;Ljava/lang/String;Lcom/android/server/am/BroadcastConstants;ZI)V

    const/4 v0, 0x1

    aput-object v16, v20, v0

    .line 2875
    new-instance v16, Lcom/android/server/am/BroadcastQueueImpl;

    const-string/jumbo v3, "offload_bg"

    move-object/from16 v0, v16

    move-object v4, v10

    invoke-direct/range {v0 .. v6}, Lcom/android/server/am/BroadcastQueueImpl;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/os/Handler;Ljava/lang/String;Lcom/android/server/am/BroadcastConstants;ZI)V

    aput-object v16, v20, v11

    .line 2877
    new-instance v10, Lcom/android/server/am/BroadcastQueueImpl;

    const-string/jumbo v3, "offload_fg"

    move-object v0, v10

    move-object/from16 v4, v22

    invoke-direct/range {v0 .. v6}, Lcom/android/server/am/BroadcastQueueImpl;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/os/Handler;Ljava/lang/String;Lcom/android/server/am/BroadcastConstants;ZI)V

    const/4 v0, 0x3

    aput-object v10, v20, v0

    .line 2881
    :goto_0
    new-instance v0, Lcom/android/server/am/ActiveServices;

    invoke-direct {v0, v7}, Lcom/android/server/am/ActiveServices;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    .line 2882
    new-instance v0, Lcom/android/server/am/ContentProviderHelper;

    const/4 v1, 0x1

    invoke-direct {v0, v7, v1}, Lcom/android/server/am/ContentProviderHelper;-><init>(Lcom/android/server/am/ActivityManagerService;Z)V

    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    .line 2883
    invoke-static {v13}, Lcom/android/server/PackageWatchdog;->getInstance(Landroid/content/Context;)Lcom/android/server/PackageWatchdog;

    move-result-object v0

    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mPackageWatchdog:Lcom/android/server/PackageWatchdog;

    .line 2884
    new-instance v2, Lcom/android/server/am/AppErrors;

    invoke-direct {v2, v13, v7, v0}, Lcom/android/server/am/AppErrors;-><init>(Landroid/content/Context;Lcom/android/server/am/ActivityManagerService;Lcom/android/server/PackageWatchdog;)V

    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mAppErrors:Lcom/android/server/am/AppErrors;

    .line 2885
    new-instance v0, Lcom/android/server/am/UidObserverController;

    move-object/from16 v2, v24

    invoke-direct {v0, v2}, Lcom/android/server/am/UidObserverController;-><init>(Landroid/os/Handler;)V

    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mUidObserverController:Lcom/android/server/am/UidObserverController;

    .line 2887
    invoke-static {}, Lcom/android/server/SystemServiceManager;->ensureSystemDir()Ljava/io/File;

    move-result-object v0

    .line 2891
    invoke-static {}, Lcom/android/server/DssController;->getService()Lcom/android/server/DssController;

    move-result-object v2

    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mDssController:Lcom/android/server/DssController;

    .line 2896
    new-instance v2, Lcom/android/server/am/AbnormalUsageService;

    invoke-direct {v2, v7}, Lcom/android/server/am/AbnormalUsageService;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mAbnormalUsageService:Lcom/android/server/am/AbnormalUsageService;

    .line 2901
    invoke-static {}, Lcom/android/internal/os/BackgroundThread;->getHandler()Landroid/os/Handler;

    move-result-object v2

    .line 2900
    invoke-static {v8, v0, v2, v7}, Lcom/android/server/am/BatteryStatsService;->create(Landroid/content/Context;Ljava/io/File;Landroid/os/Handler;Lcom/android/server/power/stats/BatteryStatsImpl$BatteryCallback;)Lcom/android/server/am/BatteryStatsService;

    move-result-object v2

    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    .line 2903
    invoke-virtual {v2}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/server/power/stats/BatteryStatsImpl;

    move-result-object v2

    invoke-virtual {v2}, Lcom/android/server/power/stats/BatteryStatsImpl;->getIsOnBattery()Z

    move-result v2

    iput-boolean v2, v7, Lcom/android/server/am/ActivityManagerService;->mOnBattery:Z

    .line 2904
    iget-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mOomAdjProfiler:Lcom/android/server/am/OomAdjProfiler;

    iget-boolean v3, v7, Lcom/android/server/am/ActivityManagerService;->mOnBattery:Z

    invoke-virtual {v2, v3}, Lcom/android/server/am/OomAdjProfiler;->batteryPowerChanged(Z)V

    .line 2906
    new-instance v2, Lcom/android/server/am/ProcessStatsService;

    new-instance v3, Ljava/io/File;

    const-string/jumbo v4, "procstats"

    invoke-direct {v3, v0, v4}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    invoke-direct {v2, v7, v3}, Lcom/android/server/am/ProcessStatsService;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/io/File;)V

    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    .line 2908
    new-instance v2, Ljava/io/File;

    const-string v3, "appops_accesses.xml"

    invoke-direct {v2, v0, v3}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    new-instance v3, Ljava/io/File;

    const-string v4, "appops.xml"

    invoke-direct {v3, v0, v4}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    move-object/from16 v0, v17

    invoke-virtual {v12, v2, v3, v0}, Lcom/android/server/am/ActivityManagerService$Injector;->getAppOpsService(Ljava/io/File;Ljava/io/File;Landroid/os/Handler;)Lcom/android/server/appop/AppOpsService;

    move-result-object v2

    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    .line 2911
    const-class v2, Lcom/android/server/uri/UriGrantsManagerInternal;

    invoke-static {v2}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/uri/UriGrantsManagerInternal;

    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mUgmInternal:Lcom/android/server/uri/UriGrantsManagerInternal;

    .line 2913
    new-instance v2, Lcom/android/server/am/UserController;

    invoke-direct {v2, v7}, Lcom/android/server/am/UserController;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    .line 2914
    invoke-static {v12, v2}, Lcom/android/server/am/ActivityManagerService$Injector;->-$$Nest$fputmUserController(Lcom/android/server/am/ActivityManagerService$Injector;Lcom/android/server/am/UserController;)V

    .line 2916
    new-instance v3, Lcom/android/server/am/PendingIntentController;

    .line 2917
    invoke-virtual {v15}, Landroid/os/HandlerThread;->getLooper()Landroid/os/Looper;

    move-result-object v4

    iget-object v5, v7, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    invoke-direct {v3, v4, v2, v5}, Lcom/android/server/am/PendingIntentController;-><init>(Landroid/os/Looper;Lcom/android/server/am/UserController;Lcom/android/server/am/ActivityManagerConstants;)V

    iput-object v3, v7, Lcom/android/server/am/ActivityManagerService;->mPendingIntentController:Lcom/android/server/am/PendingIntentController;

    .line 2919
    new-instance v2, Lcom/android/server/am/AppRestrictionController;

    invoke-direct {v2, v8, v7}, Lcom/android/server/am/AppRestrictionController;-><init>(Landroid/content/Context;Lcom/android/server/am/ActivityManagerService;)V

    iput-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mAppRestrictionController:Lcom/android/server/am/AppRestrictionController;

    const-string/jumbo v2, "sys.use_fifo_ui"

    const/4 v4, 0x0

    .line 2921
    invoke-static {v2, v4}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    move-result v2

    if-eqz v2, :cond_3

    move v10, v1

    goto :goto_1

    :cond_3
    move v10, v4

    :goto_1
    iput-boolean v10, v7, Lcom/android/server/am/ActivityManagerService;->mUseFifoUiScheduling:Z

    const-string v1, "debug.track-associations"

    .line 2923
    invoke-static {v1}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    const-string v2, "1"

    invoke-virtual {v2, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    iput-boolean v1, v7, Lcom/android/server/am/ActivityManagerService;->mTrackingAssociations:Z

    .line 2924
    new-instance v1, Lcom/android/server/firewall/IntentFirewall;

    new-instance v2, Lcom/android/server/am/ActivityManagerService$IntentFirewallInterface;

    invoke-direct {v2, v7}, Lcom/android/server/am/ActivityManagerService$IntentFirewallInterface;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-direct {v1, v2, v0}, Lcom/android/server/firewall/IntentFirewall;-><init>(Lcom/android/server/firewall/IntentFirewall$AMSInterface;Landroid/os/Handler;)V

    iput-object v1, v7, Lcom/android/server/am/ActivityManagerService;->mIntentFirewall:Lcom/android/server/firewall/IntentFirewall;

    .line 2926
    iput-object v9, v7, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 2928
    invoke-static {}, Lcom/android/server/DisplayThread;->get()Lcom/android/server/DisplayThread;

    move-result-object v2

    invoke-virtual {v2}, Landroid/os/HandlerThread;->getLooper()Landroid/os/Looper;

    move-result-object v2

    .line 2927
    invoke-virtual {v9, v1, v3, v2}, Lcom/android/server/wm/ActivityTaskManagerService;->initialize(Lcom/android/server/firewall/IntentFirewall;Lcom/android/server/am/PendingIntentController;Landroid/os/Looper;)V

    .line 2929
    const-class v1, Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-static {v1}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/ActivityTaskManagerInternal;

    iput-object v1, v7, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    .line 2931
    new-instance v1, Lcom/android/server/am/ActivityManagerService$HiddenApiSettings;

    invoke-direct {v1, v0, v8}, Lcom/android/server/am/ActivityManagerService$HiddenApiSettings;-><init>(Landroid/os/Handler;Landroid/content/Context;)V

    iput-object v1, v7, Lcom/android/server/am/ActivityManagerService;->mHiddenApiBlacklist:Lcom/android/server/am/ActivityManagerService$HiddenApiSettings;

    .line 2933
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object v1

    invoke-virtual {v1, v7}, Lcom/android/server/Watchdog;->addMonitor(Lcom/android/server/Watchdog$Monitor;)V

    .line 2934
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object v1

    invoke-virtual {v1, v0}, Lcom/android/server/Watchdog;->addThread(Landroid/os/Handler;)V

    .line 2938
    invoke-static {}, Lcom/android/server/am/MARsPolicyManager;->getInstance()Lcom/android/server/am/MARsPolicyManager;

    move-result-object v0

    invoke-virtual {v0, v7, v8}, Lcom/android/server/am/MARsPolicyManager;->init(Lcom/android/server/am/ActivityManagerService;Landroid/content/Context;)V

    .line 2939
    invoke-static {}, Lcom/android/server/am/BaseRestrictionMgr;->getInstance()Lcom/android/server/am/BaseRestrictionMgr;

    move-result-object v0

    invoke-virtual {v0, v8}, Lcom/android/server/am/BaseRestrictionMgr;->init(Landroid/content/Context;)V

    .line 2943
    invoke-static {}, Lcom/android/server/am/DynamicHiddenApp;->getInstance()Lcom/android/server/am/DynamicHiddenApp;

    move-result-object v0

    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mDynamicHiddenApp:Lcom/android/server/am/DynamicHiddenApp;

    .line 2944
    iget-object v1, v7, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    move-object/from16 v2, v23

    invoke-virtual {v0, v7, v2, v1}, Lcom/android/server/am/DynamicHiddenApp;->initDynamicHiddenApp(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessList;Lcom/android/server/am/ActivityManagerConstants;)V

    .line 2945
    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mDynamicHiddenApp:Lcom/android/server/am/DynamicHiddenApp;

    invoke-virtual {v0}, Lcom/android/server/am/DynamicHiddenApp;->getCustomEFKManagerInstance()Lcom/android/server/bgslotmanager/CustomEFKManager;

    move-result-object v0

    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mCustomEFKManager:Lcom/android/server/bgslotmanager/CustomEFKManager;

    const/16 v0, 0xe

    .line 2951
    invoke-virtual {v7, v0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(I)V

    .line 2953
    :try_start_0
    invoke-static {}, Lcom/android/internal/os/BackgroundThread;->get()Lcom/android/internal/os/BackgroundThread;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/internal/os/BackgroundThread;->getThreadId()I

    move-result v0

    invoke-static {v0, v11}, Landroid/os/Process;->setThreadGroupAndCpuset(II)V

    .line 2955
    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    iget-object v0, v0, Lcom/android/server/am/OomAdjuster;->mCachedAppOptimizer:Lcom/android/server/am/CachedAppOptimizer;

    iget-object v0, v0, Lcom/android/server/am/CachedAppOptimizer;->mCachedAppOptimizerThread:Lcom/android/server/ServiceThread;

    .line 2956
    invoke-virtual {v0}, Landroid/os/HandlerThread;->getThreadId()I

    move-result v0

    .line 2955
    invoke-static {v0, v11}, Landroid/os/Process;->setThreadGroupAndCpuset(II)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_2

    :catch_0
    const-string v0, "Setting background thread cpuset failed"

    .line 2959
    invoke-static {v14, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 2962
    :goto_2
    new-instance v0, Lcom/android/server/am/ActivityManagerService$LocalService;

    invoke-direct {v0, v7}, Lcom/android/server/am/ActivityManagerService$LocalService;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mInternal:Landroid/app/ActivityManagerInternal;

    .line 2963
    new-instance v0, Lcom/android/server/am/PendingStartActivityUids;

    invoke-direct {v0}, Lcom/android/server/am/PendingStartActivityUids;-><init>()V

    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mPendingStartActivityUids:Lcom/android/server/am/PendingStartActivityUids;

    .line 2964
    new-instance v0, Lcom/android/server/am/TraceErrorLogger;

    invoke-direct {v0}, Lcom/android/server/am/TraceErrorLogger;-><init>()V

    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mTraceErrorLogger:Lcom/android/server/am/TraceErrorLogger;

    .line 2965
    new-instance v0, Lcom/android/server/am/ComponentAliasResolver;

    invoke-direct {v0, v7}, Lcom/android/server/am/ComponentAliasResolver;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mComponentAliasResolver:Lcom/android/server/am/ComponentAliasResolver;

    .line 2967
    new-instance v0, Lcom/android/server/am/ActivityManagerServiceExt;

    iget-object v1, v7, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-direct {v0, v1, v7}, Lcom/android/server/am/ActivityManagerServiceExt;-><init>(Landroid/content/Context;Lcom/android/server/am/ActivityManagerService;)V

    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mExt:Lcom/android/server/am/ActivityManagerServiceExt;

    .line 2968
    iget-object v1, v7, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerServiceExt;->setAtmService(Lcom/android/server/wm/ActivityTaskManagerService;)V

    const-string v0, "com.sec.android.app.launcher"

    .line 2972
    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->currentLauncherName:Ljava/lang/String;

    .line 2973
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Current Launcher: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v1, v7, Lcom/android/server/am/ActivityManagerService;->currentLauncherName:Ljava/lang/String;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "ActivityManager_kpm"

    invoke-static {v1, v0}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 2974
    invoke-static {}, Lcom/android/server/am/KillPolicyManager;->getInstance()Lcom/android/server/am/KillPolicyManager;

    move-result-object v0

    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mKillPolicyManager:Lcom/android/server/am/KillPolicyManager;

    .line 2975
    iget-object v1, v7, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    iget-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    invoke-virtual {v0, v7, v1, v2}, Lcom/android/server/am/KillPolicyManager;->initKillPolicyManager(Lcom/android/server/am/ActivityManagerService;Landroid/content/Context;Lcom/android/server/am/ActivityManagerConstants;)V

    return-void
.end method

.method public constructor <init>(Lcom/android/server/am/ActivityManagerService$Injector;Lcom/android/server/ServiceThread;)V
    .locals 1

    const/4 v0, 0x0

    .line 2731
    invoke-direct {p0, p1, p2, v0}, Lcom/android/server/am/ActivityManagerService;-><init>(Lcom/android/server/am/ActivityManagerService$Injector;Lcom/android/server/ServiceThread;Lcom/android/server/am/UserController;)V

    return-void
.end method

.method public constructor <init>(Lcom/android/server/am/ActivityManagerService$Injector;Lcom/android/server/ServiceThread;Lcom/android/server/am/UserController;)V
    .locals 7

    .line 2737
    invoke-direct {p0}, Landroid/app/IActivityManager$Stub;-><init>()V

    const/4 v0, 0x0

    .line 787
    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->isNowAppLaunching:Z

    .line 828
    new-instance v1, Lcom/android/server/am/InstrumentationReporter;

    invoke-direct {v1}, Lcom/android/server/am/InstrumentationReporter;-><init>()V

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mInstrumentationReporter:Lcom/android/server/am/InstrumentationReporter;

    .line 830
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mActiveInstrumentation:Ljava/util/ArrayList;

    .line 835
    new-instance v1, Lcom/android/server/am/OomAdjProfiler;

    invoke-direct {v1}, Lcom/android/server/am/OomAdjProfiler;-><init>()V

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjProfiler:Lcom/android/server/am/OomAdjProfiler;

    .line 844
    iput-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mGlobalLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    .line 880
    new-instance v1, Lcom/android/server/am/ActivityManagerProcLock;

    invoke-direct {v1}, Lcom/android/server/am/ActivityManagerProcLock;-><init>()V

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    .line 902
    new-instance v1, Landroid/util/SparseArray;

    invoke-direct {v1}, Landroid/util/SparseArray;-><init>()V

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStrictModeCallbacks:Landroid/util/SparseArray;

    const/4 v1, 0x0

    .line 932
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mApplicationPolicy:Lcom/samsung/android/knox/application/IApplicationPolicy;

    .line 933
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mRestrictionPolicy:Lcom/samsung/android/knox/restriction/RestrictionPolicy;

    const-string v2, ""

    .line 934
    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPreviousPackage:Ljava/lang/String;

    .line 935
    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentPackage:Ljava/lang/String;

    .line 936
    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mPreviousUserId:I

    .line 942
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCpusetController:Lcom/android/server/am/ProcessCpusetController;

    .line 976
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mKillPolicyManager:Lcom/android/server/am/KillPolicyManager;

    .line 977
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->currentLauncherName:Ljava/lang/String;

    .line 978
    new-instance v2, Lcom/android/internal/os/ProcessCpuTracker;

    invoke-direct {v2, v0}, Lcom/android/internal/os/ProcessCpuTracker;-><init>(Z)V

    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    const/4 v2, -0x1

    .line 1019
    iput v2, p0, Lcom/android/server/am/ActivityManagerService;->mDeviceOwnerUid:I

    .line 1024
    new-instance v3, Landroid/util/ArrayMap;

    invoke-direct {v3}, Landroid/util/ArrayMap;-><init>()V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mCompanionAppUidsMap:Ljava/util/Map;

    .line 1029
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProfileOwnerUids:Landroid/util/ArraySet;

    .line 1038
    new-instance v3, Landroid/util/ArraySet;

    invoke-direct {v3}, Landroid/util/ArraySet;-><init>()V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mDeliveryGroupPolicyIgnoredActions:Landroid/util/ArraySet;

    .line 1046
    new-instance v3, Landroid/util/IntArray;

    const/4 v4, 0x4

    invoke-direct {v3, v4}, Landroid/util/IntArray;-><init>(I)V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mActiveCameraUids:Landroid/util/IntArray;

    .line 1060
    new-instance v3, Lcom/android/server/am/ActivityManagerService$1;

    invoke-direct {v3, p0}, Lcom/android/server/am/ActivityManagerService$1;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPriorityDumper:Lcom/android/server/utils/PriorityDump$PriorityDumper;

    .line 1111
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mDvfsMgr:Lcom/samsung/android/os/SemDvfsManager;

    const/16 v3, 0x3ea

    .line 1134
    filled-new-array {v3}, [I

    move-result-object v3

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mBackgroundAppIdAllowlist:[I

    .line 1207
    new-instance v3, Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-direct {v3}, Lcom/android/server/am/ActivityManagerService$PidMap;-><init>()V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    .line 1331
    new-instance v3, Landroid/util/SparseArray;

    invoke-direct {v3}, Landroid/util/SparseArray;-><init>()V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mImportantProcesses:Landroid/util/SparseArray;

    .line 1339
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    .line 1346
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    .line 1360
    new-instance v3, Lcom/android/server/am/ActivityManagerService$2;

    invoke-direct {v3, p0}, Lcom/android/server/am/ActivityManagerService$2;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mActivityLaunchObserver:Lcom/android/server/wm/ActivityMetricsLaunchObserver;

    .line 1385
    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mBinderTransactionTrackingEnabled:Z

    .line 1393
    new-instance v3, Ljava/util/HashSet;

    invoke-direct {v3}, Ljava/util/HashSet;-><init>()V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;

    .line 1401
    new-instance v3, Ljava/util/HashMap;

    invoke-direct {v3}, Ljava/util/HashMap;-><init>()V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    .line 1408
    new-instance v3, Lcom/android/server/am/ActivityManagerService$3;

    invoke-direct {v3, p0}, Lcom/android/server/am/ActivityManagerService$3;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mReceiverResolver:Lcom/android/server/IntentResolver;

    .line 1455
    new-instance v3, Landroid/util/SparseArray;

    invoke-direct {v3}, Landroid/util/SparseArray;-><init>()V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    .line 1521
    new-instance v3, Landroid/util/SparseArray;

    invoke-direct {v3}, Landroid/util/SparseArray;-><init>()V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    .line 1529
    new-instance v3, Landroid/util/SparseArray;

    invoke-direct {v3}, Landroid/util/SparseArray;-><init>()V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTargets:Landroid/util/SparseArray;

    new-array v3, v0, [I

    .line 1581
    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mDeviceIdleAllowlist:[I

    new-array v3, v0, [I

    .line 1587
    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mDeviceIdleExceptIdleAllowlist:[I

    new-array v3, v0, [I

    .line 1593
    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mDeviceIdleTempAllowlist:[I

    .line 1634
    new-instance v3, Lcom/android/server/am/PendingTempAllowlists;

    invoke-direct {v3, p0}, Lcom/android/server/am/PendingTempAllowlists;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPendingTempAllowlist:Lcom/android/server/am/PendingTempAllowlists;

    .line 1662
    new-instance v3, Lcom/android/server/am/FgsTempAllowList;

    invoke-direct {v3}, Lcom/android/server/am/FgsTempAllowList;-><init>()V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mFgsStartTempAllowList:Lcom/android/server/am/FgsTempAllowList;

    .line 1673
    new-instance v3, Lcom/android/server/am/FgsTempAllowList;

    invoke-direct {v3}, Lcom/android/server/am/FgsTempAllowList;-><init>()V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mFgsWhileInUseTempAllowList:Lcom/android/server/am/FgsTempAllowList;

    .line 1689
    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    .line 1690
    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mSystemReady:Z

    .line 1691
    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mOnBattery:Z

    .line 1693
    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mBooting:Z

    .line 1695
    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mCallFinishBooting:Z

    .line 1696
    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mBootAnimationComplete:Z

    .line 1720
    new-instance v3, Ljava/util/concurrent/atomic/AtomicInteger;

    const/4 v4, 0x1

    invoke-direct {v3, v4}, Ljava/util/concurrent/atomic/AtomicInteger;-><init>(I)V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mWakefulness:Ljava/util/concurrent/atomic/AtomicInteger;

    .line 1726
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v3

    iput-wide v3, p0, Lcom/android/server/am/ActivityManagerService;->mLastIdleTime:J

    .line 1734
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedPackage:Ljava/lang/String;

    .line 1737
    iput v2, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedUid:I

    .line 1743
    new-instance v3, Ljava/lang/Object;

    invoke-direct {v3}, Ljava/lang/Object;-><init>()V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedAppLock:Ljava/lang/Object;

    .line 1750
    new-instance v3, Lcom/android/internal/app/ProcessMap;

    invoke-direct {v3}, Lcom/android/internal/app/ProcessMap;-><init>()V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundPackages:Lcom/android/internal/app/ProcessMap;

    .line 1757
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundServiceStateListeners:Ljava/util/ArrayList;

    .line 1764
    new-instance v3, Ljava/util/concurrent/CopyOnWriteArrayList;

    invoke-direct {v3}, Ljava/util/concurrent/CopyOnWriteArrayList;-><init>()V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastEventListeners:Ljava/util/concurrent/CopyOnWriteArrayList;

    .line 1770
    new-instance v3, Ljava/util/concurrent/CopyOnWriteArrayList;

    invoke-direct {v3}, Ljava/util/concurrent/CopyOnWriteArrayList;-><init>()V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mBindServiceEventListeners:Ljava/util/concurrent/CopyOnWriteArrayList;

    .line 1779
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    .line 1782
    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mWaitForDebugger:Z

    .line 1785
    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mSuspendUponWait:Z

    .line 1788
    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mDebugTransient:Z

    .line 1791
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    .line 1794
    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z

    .line 1797
    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mAlwaysFinishActivities:Z

    .line 1800
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mTrackAllocationApp:Ljava/lang/String;

    .line 1803
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mNativeDebuggingApp:Ljava/lang/String;

    .line 1828
    new-instance v3, Ljava/lang/Object;

    invoke-direct {v3}, Ljava/lang/Object;-><init>()V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjObserverLock:Ljava/lang/Object;

    .line 1834
    new-instance v3, Lcom/android/server/am/AnrHelper;

    invoke-direct {v3, p0}, Lcom/android/server/am/AnrHelper;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mAnrHelper:Lcom/android/server/am/AnrHelper;

    .line 1837
    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    .line 1844
    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mDeterministicUidIdle:Z

    .line 1861
    new-instance v3, Landroid/util/SparseIntArray;

    invoke-direct {v3}, Landroid/util/SparseIntArray;-><init>()V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mUidNetworkBlockedReasons:Landroid/util/SparseIntArray;

    .line 1874
    new-instance v3, Landroid/util/SparseArray;

    invoke-direct {v3}, Landroid/util/SparseArray;-><init>()V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mMediaProjectionTokenMap:Landroid/util/SparseArray;

    .line 1979
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mDynamicHiddenApp:Lcom/android/server/am/DynamicHiddenApp;

    .line 1980
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mCustomEFKManager:Lcom/android/server/bgslotmanager/CustomEFKManager;

    const-wide/16 v3, 0x0

    .line 2008
    iput-wide v3, p0, Lcom/android/server/am/ActivityManagerService;->mLastBinderHeavyHitterAutoSamplerStart:J

    .line 3908
    new-instance v3, Ljava/util/HashMap;

    invoke-direct {v3}, Ljava/util/HashMap;-><init>()V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPendingSches:Ljava/util/Map;

    .line 7733
    new-instance v3, Lcom/android/server/am/ActivityManagerService$GetBackgroundStartPrivilegesFunctor;

    invoke-direct {v3, v1}, Lcom/android/server/am/ActivityManagerService$GetBackgroundStartPrivilegesFunctor;-><init>(Lcom/android/server/am/ActivityManagerService$GetBackgroundStartPrivilegesFunctor-IA;)V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mGetBackgroundStartPrivilegesFunctor:Lcom/android/server/am/ActivityManagerService$GetBackgroundStartPrivilegesFunctor;

    .line 9688
    new-instance v3, Landroid/os/RemoteCallbackList;

    invoke-direct {v3}, Landroid/os/RemoteCallbackList;-><init>()V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mUidFrozenStateChangedCallbackList:Landroid/os/RemoteCallbackList;

    .line 9993
    iput v2, p0, Lcom/android/server/am/ActivityManagerService;->mTransitionPlayerPid:I

    .line 11488
    new-instance v2, Lcom/android/server/am/DropboxRateLimiter;

    invoke-direct {v2}, Lcom/android/server/am/DropboxRateLimiter;-><init>()V

    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mDropboxRateLimiter:Lcom/android/server/am/DropboxRateLimiter;

    .line 11967
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPendingCmdBR:Ljava/util/ArrayList;

    .line 2738
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    .line 2739
    invoke-virtual {p1}, Lcom/android/server/am/ActivityManagerService$Injector;->getContext()Landroid/content/Context;

    move-result-object v2

    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    .line 2740
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUiContext:Landroid/content/Context;

    .line 2741
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAppErrors:Lcom/android/server/am/AppErrors;

    .line 2742
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPackageWatchdog:Lcom/android/server/PackageWatchdog;

    .line 2743
    invoke-virtual {p1, v1, v1, v1}, Lcom/android/server/am/ActivityManagerService$Injector;->getAppOpsService(Ljava/io/File;Ljava/io/File;Landroid/os/Handler;)Lcom/android/server/appop/AppOpsService;

    move-result-object v3

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    .line 2745
    invoke-virtual {p1}, Lcom/android/server/am/ActivityManagerService$Injector;->getBatteryStatsService()Lcom/android/server/am/BatteryStatsService;

    move-result-object v3

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    .line 2746
    new-instance v3, Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {p2}, Landroid/os/HandlerThread;->getLooper()Landroid/os/Looper;

    move-result-object v4

    invoke-direct {v3, p0, v4}, Lcom/android/server/am/ActivityManagerService$MainHandler;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/os/Looper;)V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    .line 2747
    iput-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mHandlerThread:Lcom/android/server/ServiceThread;

    .line 2748
    new-instance v4, Lcom/android/server/am/ActivityManagerConstants;

    invoke-direct {v4, v2, p0, v3}, Lcom/android/server/am/ActivityManagerConstants;-><init>(Landroid/content/Context;Lcom/android/server/am/ActivityManagerService;Landroid/os/Handler;)V

    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 2749
    new-instance v3, Lcom/android/server/am/ActiveUids;

    invoke-direct {v3, p0, v0}, Lcom/android/server/am/ActiveUids;-><init>(Lcom/android/server/am/ActivityManagerService;Z)V

    .line 2750
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPlatformCompat:Lcom/android/server/compat/PlatformCompat;

    .line 2751
    invoke-virtual {p1, p0}, Lcom/android/server/am/ActivityManagerService$Injector;->getProcessList(Lcom/android/server/am/ActivityManagerService;)Lcom/android/server/am/ProcessList;

    move-result-object v4

    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 2752
    invoke-virtual {v4, p0, v3, v1}, Lcom/android/server/am/ProcessList;->init(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ActiveUids;Lcom/android/server/compat/PlatformCompat;)V

    .line 2753
    new-instance v5, Lcom/android/server/am/AppProfiler;

    invoke-static {}, Lcom/android/internal/os/BackgroundThread;->getHandler()Landroid/os/Handler;

    move-result-object v6

    invoke-virtual {v6}, Landroid/os/Handler;->getLooper()Landroid/os/Looper;

    move-result-object v6

    invoke-direct {v5, p0, v6, v1}, Lcom/android/server/am/AppProfiler;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/os/Looper;Lcom/android/server/am/LowMemDetector;)V

    iput-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    .line 2754
    new-instance v5, Lcom/android/server/am/PhantomProcessList;

    invoke-direct {v5, p0}, Lcom/android/server/am/PhantomProcessList;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mPhantomProcessList:Lcom/android/server/am/PhantomProcessList;

    .line 2755
    new-instance v5, Lcom/android/server/am/OomAdjuster;

    invoke-direct {v5, p0, v4, v3, p2}, Lcom/android/server/am/OomAdjuster;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessList;Lcom/android/server/am/ActiveUids;Lcom/android/server/ServiceThread;)V

    iput-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    .line 2757
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mIntentFirewall:Lcom/android/server/firewall/IntentFirewall;

    .line 2758
    new-instance v3, Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {v2}, Landroid/content/Context;->getCacheDir()Ljava/io/File;

    move-result-object v4

    invoke-direct {v3, p0, v4}, Lcom/android/server/am/ProcessStatsService;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/io/File;)V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    .line 2759
    new-instance v3, Lcom/android/server/am/ContentProviderHelper;

    invoke-direct {v3, p0, v0}, Lcom/android/server/am/ContentProviderHelper;-><init>(Lcom/android/server/am/ActivityManagerService;Z)V

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    .line 2760
    invoke-virtual {p1, p0}, Lcom/android/server/am/ActivityManagerService$Injector;->getActiveServices(Lcom/android/server/am/ActivityManagerService;)Lcom/android/server/am/ActiveServices;

    move-result-object v3

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    .line 2761
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mSystemThread:Landroid/app/ActivityThread;

    .line 2762
    invoke-virtual {p1, v1}, Lcom/android/server/am/ActivityManagerService$Injector;->getUiHandler(Lcom/android/server/am/ActivityManagerService;)Landroid/os/Handler;

    move-result-object v3

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Landroid/os/Handler;

    .line 2763
    new-instance v4, Lcom/android/server/am/UidObserverController;

    invoke-direct {v4, v3}, Lcom/android/server/am/UidObserverController;-><init>(Landroid/os/Handler;)V

    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mUidObserverController:Lcom/android/server/am/UidObserverController;

    if-nez p3, :cond_0

    .line 2764
    new-instance p3, Lcom/android/server/am/UserController;

    invoke-direct {p3, p0}, Lcom/android/server/am/UserController;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    :cond_0
    iput-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    .line 2765
    invoke-static {p1, p3}, Lcom/android/server/am/ActivityManagerService$Injector;->-$$Nest$fputmUserController(Lcom/android/server/am/ActivityManagerService$Injector;Lcom/android/server/am/UserController;)V

    .line 2766
    new-instance p1, Lcom/android/server/am/PendingIntentController;

    .line 2767
    invoke-virtual {p2}, Landroid/os/HandlerThread;->getLooper()Landroid/os/Looper;

    move-result-object p2

    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    invoke-direct {p1, p2, p3, v3}, Lcom/android/server/am/PendingIntentController;-><init>(Landroid/os/Looper;Lcom/android/server/am/UserController;Lcom/android/server/am/ActivityManagerConstants;)V

    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mPendingIntentController:Lcom/android/server/am/PendingIntentController;

    .line 2768
    new-instance p1, Lcom/android/server/am/AppRestrictionController;

    invoke-direct {p1, v2, p0}, Lcom/android/server/am/AppRestrictionController;-><init>(Landroid/content/Context;Lcom/android/server/am/ActivityManagerService;)V

    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppRestrictionController:Lcom/android/server/am/AppRestrictionController;

    .line 2769
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcStartHandlerThread:Lcom/android/server/ServiceThread;

    .line 2770
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcStartHandler:Lcom/android/server/am/ProcessList$ProcStartHandler;

    .line 2771
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHiddenApiBlacklist:Lcom/android/server/am/ActivityManagerService$HiddenApiSettings;

    .line 2772
    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    .line 2773
    const-class p1, Lcom/android/server/uri/UriGrantsManagerInternal;

    invoke-static {p1}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/android/server/uri/UriGrantsManagerInternal;

    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mUgmInternal:Lcom/android/server/uri/UriGrantsManagerInternal;

    .line 2774
    new-instance p1, Lcom/android/server/am/ActivityManagerService$LocalService;

    invoke-direct {p1, p0}, Lcom/android/server/am/ActivityManagerService$LocalService;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mInternal:Landroid/app/ActivityManagerInternal;

    .line 2775
    new-instance p1, Lcom/android/server/am/PendingStartActivityUids;

    invoke-direct {p1}, Lcom/android/server/am/PendingStartActivityUids;-><init>()V

    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mPendingStartActivityUids:Lcom/android/server/am/PendingStartActivityUids;

    .line 2776
    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mUseFifoUiScheduling:Z

    .line 2777
    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mEnableOffloadQueue:Z

    .line 2778
    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mEnableModernQueue:Z

    new-array p1, v0, [Lcom/android/server/am/BroadcastQueue;

    .line 2779
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    .line 2780
    new-instance p1, Lcom/android/server/am/ComponentAliasResolver;

    invoke-direct {p1, p0}, Lcom/android/server/am/ComponentAliasResolver;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mComponentAliasResolver:Lcom/android/server/am/ComponentAliasResolver;

    .line 2783
    new-instance p1, Lcom/android/server/am/ActivityManagerServiceExt;

    invoke-direct {p1, v2, p0}, Lcom/android/server/am/ActivityManagerServiceExt;-><init>(Landroid/content/Context;Lcom/android/server/am/ActivityManagerService;)V

    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mExt:Lcom/android/server/am/ActivityManagerServiceExt;

    .line 2787
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mDssController:Lcom/android/server/DssController;

    .line 2791
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAbnormalUsageService:Lcom/android/server/am/AbnormalUsageService;

    return-void
.end method

.method public static addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V
    .locals 1

    .line 3324
    invoke-static {p1}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v0

    if-eqz v0, :cond_0

    .line 3326
    invoke-virtual {p0, p1, v0}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    :cond_0
    return-void
.end method

.method public static appendBasicMemEntry(Ljava/lang/StringBuilder;IIJJLjava/lang/String;)V
    .locals 1

    const-string v0, "  "

    .line 15510
    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/4 v0, 0x0

    .line 15511
    invoke-static {p1, v0}, Lcom/android/server/am/ProcessList;->makeOomAdjString(IZ)Ljava/lang/String;

    move-result-object p1

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/16 p1, 0x20

    .line 15512
    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 15513
    invoke-static {p2}, Lcom/android/server/am/ProcessList;->makeProcStateString(I)Ljava/lang/String;

    move-result-object p2

    invoke-virtual {p0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15514
    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 15515
    invoke-static {p0, p3, p4}, Lcom/android/server/am/ProcessList;->appendRamKb(Ljava/lang/StringBuilder;J)V

    const-string p1, ": "

    .line 15516
    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15517
    invoke-virtual {p0, p7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-wide/16 p1, 0x0

    cmp-long p1, p5, p1

    if-lez p1, :cond_0

    const-string p1, " ("

    .line 15519
    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15520
    invoke-static {p5, p6}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object p1

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, " memtrack)"

    .line 15521
    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    :cond_0
    return-void
.end method

.method public static final appendMemBucket(Ljava/lang/StringBuilder;JLjava/lang/String;Z)V
    .locals 10

    const/16 v0, 0x2e

    .line 14020
    invoke-virtual {p3, v0}, Ljava/lang/String;->lastIndexOf(I)I

    move-result v0

    const/4 v1, 0x0

    if-ltz v0, :cond_0

    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    :cond_0
    move v0, v1

    .line 14023
    :goto_0
    invoke-virtual {p3}, Ljava/lang/String;->length()I

    move-result v2

    .line 14024
    :goto_1
    sget-object v3, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_BUCKETS:[J

    array-length v4, v3

    const-string v5, "MB."

    const-string v6, "MB "

    const-wide/16 v7, 0x400

    if-ge v1, v4, :cond_3

    .line 14025
    aget-wide v3, v3, v1

    cmp-long v9, v3, p1

    if-ltz v9, :cond_2

    .line 14026
    div-long/2addr v3, v7

    .line 14027
    invoke-virtual {p0, v3, v4}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    if-eqz p4, :cond_1

    goto :goto_2

    :cond_1
    move-object v5, v6

    .line 14028
    :goto_2
    invoke-virtual {p0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 14029
    invoke-virtual {p0, p3, v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;

    return-void

    :cond_2
    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    .line 14033
    :cond_3
    div-long/2addr p1, v7

    invoke-virtual {p0, p1, p2}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    if-eqz p4, :cond_4

    goto :goto_3

    :cond_4
    move-object v5, v6

    .line 14034
    :goto_3
    invoke-virtual {p0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 14035
    invoke-virtual {p0, p3, v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;

    return-void
.end method

.method public static appendMemInfo(Ljava/lang/StringBuilder;Lcom/android/server/am/ProcessMemInfo;)V
    .locals 8

    .line 15526
    iget v1, p1, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    iget v2, p1, Lcom/android/server/am/ProcessMemInfo;->procState:I

    iget-wide v3, p1, Lcom/android/server/am/ProcessMemInfo;->pss:J

    iget-wide v5, p1, Lcom/android/server/am/ProcessMemInfo;->memtrack:J

    iget-object v7, p1, Lcom/android/server/am/ProcessMemInfo;->name:Ljava/lang/String;

    move-object v0, p0

    invoke-static/range {v0 .. v7}, Lcom/android/server/am/ActivityManagerService;->appendBasicMemEntry(Ljava/lang/StringBuilder;IIJJLjava/lang/String;)V

    const-string v0, " (pid "

    .line 15527
    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15528
    iget v0, p1, Lcom/android/server/am/ProcessMemInfo;->pid:I

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v0, ") "

    .line 15529
    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15530
    iget-object v0, p1, Lcom/android/server/am/ProcessMemInfo;->adjType:Ljava/lang/String;

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/16 v0, 0xa

    .line 15531
    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 15532
    iget-object v1, p1, Lcom/android/server/am/ProcessMemInfo;->adjReason:Ljava/lang/String;

    if-eqz v1, :cond_0

    const-string v1, "                      "

    .line 15533
    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15534
    iget-object p1, p1, Lcom/android/server/am/ProcessMemInfo;->adjReason:Ljava/lang/String;

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15535
    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    :cond_0
    return-void
.end method

.method public static boostPriorityForLockedSection()V
    .locals 1

    .line 1084
    sget-object v0, Lcom/android/server/am/ActivityManagerService;->sThreadPriorityBooster:Lcom/android/server/ThreadPriorityBooster;

    invoke-virtual {v0}, Lcom/android/server/ThreadPriorityBooster;->boost()V

    return-void
.end method

.method public static boostPriorityForProcLockedSection()V
    .locals 1

    .line 1096
    sget-object v0, Lcom/android/server/am/ActivityManagerService;->sProcThreadPriorityBooster:Lcom/android/server/ThreadPriorityBooster;

    invoke-virtual {v0}, Lcom/android/server/ThreadPriorityBooster;->boost()V

    return-void
.end method

.method public static checkComponentPermission(Ljava/lang/String;IIIZ)I
    .locals 4

    .line 7337
    sget v0, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-ne p1, v0, :cond_0

    const/4 p0, 0x0

    return p0

    .line 7343
    :cond_0
    invoke-static {p1}, Landroid/content/pm/ASKSManager;->getPackageNameFromPid(I)Ljava/lang/String;

    move-result-object v0

    const/4 v1, -0x1

    if-eqz v0, :cond_2

    const-string v2, "REVOKE"

    .line 7345
    invoke-static {v0, v2}, Landroid/content/pm/ASKSManager;->isRestrictedTarget(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_2

    .line 7347
    :try_start_0
    invoke-static {}, Landroid/content/pm/ASKSManager;->getASKSManager()Landroid/content/pm/IASKSManager;

    move-result-object v2

    if-eqz v2, :cond_1

    .line 7348
    invoke-static {}, Landroid/content/pm/ASKSManager;->getASKSManager()Landroid/content/pm/IASKSManager;

    move-result-object v2

    invoke-interface {v2, v0, p0}, Landroid/content/pm/IASKSManager;->checkRestrictedPermission(Ljava/lang/String;Ljava/lang/String;)I

    move-result v0

    const/4 v2, 0x4

    if-ne v0, v2, :cond_2

    const-string v0, "AASA_ActivityManager"

    .line 7351
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "denied ="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, " "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v0, v2}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    return v1

    :cond_1
    const-string v0, "AASA_ActivityManager"

    const-string v2, "ASKSManager is null."

    .line 7355
    invoke-static {v0, v2}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    :catch_0
    :cond_2
    if-eqz p0, :cond_4

    .line 7370
    sget-object v0, Lcom/android/server/am/ActivityManagerService;->sActiveProcessInfoSelfLocked:Landroid/util/SparseArray;

    monitor-enter v0

    .line 7371
    :try_start_1
    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Landroid/content/pm/ProcessInfo;

    if-eqz p1, :cond_3

    .line 7372
    iget-object p1, p1, Landroid/content/pm/ProcessInfo;->deniedPermissions:Landroid/util/ArraySet;

    if-eqz p1, :cond_3

    .line 7373
    invoke-virtual {p1, p0}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    move-result p1

    if-eqz p1, :cond_3

    .line 7374
    monitor-exit v0

    return v1

    .line 7376
    :cond_3
    monitor-exit v0

    goto :goto_0

    :catchall_0
    move-exception p0

    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw p0

    .line 7378
    :cond_4
    :goto_0
    invoke-static {p0, p2, p3, p4}, Landroid/app/ActivityManager;->checkComponentPermission(Ljava/lang/String;IIZ)I

    move-result p0

    return p0
.end method

.method public static doesReasonCodeAllowSchedulingUserInitiatedJobs(I)Z
    .locals 1

    .line 0
    const/16 v0, 0x32

    if-eq p0, v0, :cond_0

    const/16 v0, 0x33

    if-eq p0, v0, :cond_0

    const/16 v0, 0x35

    if-eq p0, v0, :cond_0

    const/16 v0, 0x3c

    if-eq p0, v0, :cond_0

    const/16 v0, 0x3e

    if-eq p0, v0, :cond_0

    const/16 v0, 0x43

    if-eq p0, v0, :cond_0

    const/16 v0, 0x39

    if-eq p0, v0, :cond_0

    const/16 v0, 0x3a

    if-eq p0, v0, :cond_0

    packed-switch p0, :pswitch_data_0

    const/4 p0, 0x0

    return p0

    :cond_0
    :pswitch_0
    const/4 p0, 0x1

    return p0

    nop

    :pswitch_data_0
    .packed-switch 0xa
        :pswitch_0
        :pswitch_0
        :pswitch_0
        :pswitch_0
    .end packed-switch
.end method

.method public static final dumpMemItems(Landroid/util/proto/ProtoOutputStream;JLjava/lang/String;Ljava/util/ArrayList;ZZZ)V
    .locals 15

    move-object v8, p0

    move-object/from16 v9, p4

    move/from16 v10, p6

    if-eqz p5, :cond_0

    .line 13985
    invoke-static {v9, v10}, Lcom/android/server/am/ActivityManagerService;->sortMemItems(Ljava/util/List;Z)V

    :cond_0
    const/4 v0, 0x0

    move v11, v0

    .line 13988
    :goto_0
    invoke-virtual/range {p4 .. p4}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-ge v11, v0, :cond_3

    .line 13989
    invoke-virtual {v9, v11}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ActivityManagerService$MemItem;

    .line 13990
    invoke-virtual/range {p0 .. p2}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    move-result-wide v12

    const-wide v1, 0x10900000001L

    move-object/from16 v14, p3

    .line 13992
    invoke-virtual {p0, v1, v2, v14}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    .line 13993
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->shortLabel:Ljava/lang/String;

    const-wide v2, 0x10900000002L

    invoke-virtual {p0, v2, v3, v1}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    const-wide v1, 0x10800000004L

    .line 13994
    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->isProc:Z

    invoke-virtual {p0, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    const-wide v1, 0x10500000003L

    .line 13995
    iget v3, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->id:I

    invoke-virtual {p0, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    const-wide v1, 0x10800000005L

    .line 13996
    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->hasActivities:Z

    invoke-virtual {p0, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    const-wide v1, 0x10300000006L

    .line 13997
    iget-wide v3, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->pss:J

    invoke-virtual {p0, v1, v2, v3, v4}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    const-wide v1, 0x10300000009L

    .line 13998
    iget-wide v3, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->mRss:J

    invoke-virtual {p0, v1, v2, v3, v4}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    if-eqz p7, :cond_1

    const-wide v1, 0x10300000007L

    .line 14000
    iget-wide v3, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->swapPss:J

    invoke-virtual {p0, v1, v2, v3, v4}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 14002
    :cond_1
    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->subitems:Ljava/util/ArrayList;

    if-eqz v4, :cond_2

    const-wide v1, 0x20b00000008L

    .line 14003
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->shortLabel:Ljava/lang/String;

    const/4 v5, 0x1

    move-object v0, p0

    move/from16 v6, p6

    move/from16 v7, p7

    invoke-static/range {v0 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Landroid/util/proto/ProtoOutputStream;JLjava/lang/String;Ljava/util/ArrayList;ZZZ)V

    .line 14006
    :cond_2
    invoke-virtual {p0, v12, v13}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    add-int/lit8 v11, v11, 0x1

    goto :goto_0

    :cond_3
    return-void
.end method

.method public static final dumpMemItems(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;ZZZZ)V
    .locals 15

    move-object v8, p0

    move-object/from16 v9, p1

    move-object/from16 v10, p2

    move-object/from16 v11, p3

    move/from16 v12, p6

    if-eqz p4, :cond_0

    if-nez p5, :cond_0

    .line 13950
    invoke-static {v11, v12}, Lcom/android/server/am/ActivityManagerService;->sortMemItems(Ljava/util/List;Z)V

    :cond_0
    const/4 v13, 0x0

    move v14, v13

    .line 13953
    :goto_0
    invoke-virtual/range {p3 .. p3}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-ge v14, v0, :cond_c

    .line 13954
    invoke-virtual {v11, v14}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ActivityManagerService$MemItem;

    if-nez p5, :cond_4

    if-eqz v12, :cond_1

    if-eqz p7, :cond_1

    .line 13957
    iget-wide v1, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->pss:J

    invoke-static {v1, v2}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v1

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->label:Ljava/lang/String;

    iget-wide v3, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->swapPss:J

    .line 13958
    invoke-static {v3, v4}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v3

    filled-new-array {v9, v1, v2, v3}, [Ljava/lang/Object;

    move-result-object v1

    const-string v2, "%s%s: %-60s (%s in swap)\n"

    .line 13957
    invoke-virtual {p0, v2, v1}, Ljava/io/PrintWriter;->printf(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintWriter;

    goto/16 :goto_6

    :cond_1
    const/4 v1, 0x4

    new-array v1, v1, [Ljava/lang/Object;

    aput-object v9, v1, v13

    if-eqz v12, :cond_2

    .line 13960
    iget-wide v2, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->pss:J

    goto :goto_1

    :cond_2
    iget-wide v2, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->mRss:J

    :goto_1
    invoke-static {v2, v3}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v2

    const/4 v3, 0x1

    aput-object v2, v1, v3

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->label:Ljava/lang/String;

    const/4 v3, 0x2

    aput-object v2, v1, v3

    .line 13962
    iget v2, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->userId:I

    if-eqz v2, :cond_3

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, " (user "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v3, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->userId:I

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ")"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    goto :goto_2

    :cond_3
    const-string v2, ""

    :goto_2
    const/4 v3, 0x3

    aput-object v2, v1, v3

    const-string v2, "%s%s: %s%s\n"

    .line 13960
    invoke-virtual {p0, v2, v1}, Ljava/io/PrintWriter;->printf(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintWriter;

    goto :goto_6

    .line 13964
    :cond_4
    iget-boolean v1, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->isProc:Z

    const-string v2, "N/A"

    const-string v3, ","

    if-eqz v1, :cond_8

    const-string/jumbo v1, "proc,"

    .line 13965
    invoke-virtual {p0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p0, v10}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p0, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->shortLabel:Ljava/lang/String;

    invoke-virtual {p0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13966
    invoke-virtual {p0, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v1, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->id:I

    invoke-virtual {p0, v1}, Ljava/io/PrintWriter;->print(I)V

    invoke-virtual {p0, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    if-eqz v12, :cond_5

    .line 13967
    iget-wide v4, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->pss:J

    goto :goto_3

    :cond_5
    iget-wide v4, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->mRss:J

    :goto_3
    invoke-virtual {p0, v4, v5}, Ljava/io/PrintWriter;->print(J)V

    invoke-virtual {p0, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    if-eqz p7, :cond_6

    .line 13968
    iget-wide v1, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->swapPss:J

    invoke-static {v1, v2}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v2

    :cond_6
    invoke-virtual {p0, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 13969
    iget-boolean v1, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->hasActivities:Z

    if-eqz v1, :cond_7

    const-string v1, ",a"

    goto :goto_4

    :cond_7
    const-string v1, ",e"

    :goto_4
    invoke-virtual {p0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_6

    .line 13971
    :cond_8
    invoke-virtual {p0, v10}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p0, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->shortLabel:Ljava/lang/String;

    invoke-virtual {p0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p0, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    if-eqz v12, :cond_9

    .line 13972
    iget-wide v4, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->pss:J

    goto :goto_5

    :cond_9
    iget-wide v4, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->mRss:J

    :goto_5
    invoke-virtual {p0, v4, v5}, Ljava/io/PrintWriter;->print(J)V

    invoke-virtual {p0, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    if-eqz p7, :cond_a

    .line 13973
    iget-wide v1, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->swapPss:J

    invoke-static {v1, v2}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v2

    :cond_a
    invoke-virtual {p0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 13975
    :goto_6
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->subitems:Ljava/util/ArrayList;

    if-eqz v1, :cond_b

    .line 13976
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v1, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "    "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->shortLabel:Ljava/lang/String;

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->subitems:Ljava/util/ArrayList;

    const/4 v4, 0x1

    move-object v0, p0

    move/from16 v5, p5

    move/from16 v6, p6

    move/from16 v7, p7

    invoke-static/range {v0 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;ZZZZ)V

    :cond_b
    add-int/lit8 v14, v14, 0x1

    goto/16 :goto_0

    :cond_c
    return-void
.end method

.method public static dumpProcessList(Ljava/io/PrintWriter;Lcom/android/server/am/ActivityManagerService;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I
    .locals 7

    .line 13755
    invoke-interface {p2}, Ljava/util/List;->size()I

    move-result p1

    const/4 v0, 0x1

    sub-int/2addr p1, v0

    const/4 v1, 0x0

    move v2, v1

    :goto_0
    if-ltz p1, :cond_3

    .line 13756
    invoke-interface {p2, p1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ProcessRecord;

    if-eqz p6, :cond_0

    .line 13757
    iget-object v4, v3, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v4, v4, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {p6, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_0

    goto :goto_2

    :cond_0
    const/4 v4, 0x4

    new-array v4, v4, [Ljava/lang/Object;

    aput-object p3, v4, v1

    .line 13761
    invoke-virtual {v3}, Lcom/android/server/am/ProcessRecord;->isPersistent()Z

    move-result v5

    if-eqz v5, :cond_1

    move-object v5, p5

    goto :goto_1

    :cond_1
    move-object v5, p4

    :goto_1
    aput-object v5, v4, v0

    const/4 v5, 0x2

    .line 13762
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v6

    aput-object v6, v4, v5

    const/4 v5, 0x3

    invoke-virtual {v3}, Lcom/android/server/am/ProcessRecord;->toString()Ljava/lang/String;

    move-result-object v6

    aput-object v6, v4, v5

    const-string v5, "%s%s #%2d: %s"

    .line 13760
    invoke-static {v5, v4}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {p0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13763
    invoke-virtual {v3}, Lcom/android/server/am/ProcessRecord;->isPersistent()Z

    move-result v4

    if-eqz v4, :cond_2

    add-int/lit8 v2, v2, 0x1

    const-string v4, "    "

    .line 13767
    invoke-virtual {v3, p0, v4}, Lcom/android/server/am/ProcessRecord;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    :cond_2
    :goto_2
    add-int/lit8 p1, p1, -0x1

    goto :goto_0

    :cond_3
    return v2
.end method

.method public static getIntArg(Ljava/io/PrintWriter;[Ljava/lang/String;II)I
    .locals 1

    .line 23685
    array-length v0, p1

    if-le p2, v0, :cond_0

    const-string p1, "Missing argument"

    .line 23686
    invoke-virtual {p0, p1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    return p3

    .line 23689
    :cond_0
    aget-object p1, p1, p2

    .line 23691
    :try_start_0
    invoke-static {p1}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result p0
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    return p0

    .line 23693
    :catch_0
    invoke-static {p2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object p2

    filled-new-array {p2, p1}, [Ljava/lang/Object;

    move-result-object p1

    const-string p2, "Non-numeric argument at index %d: %s\n"

    invoke-virtual {p0, p2, p1}, Ljava/io/PrintWriter;->printf(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintWriter;

    return p3
.end method

.method public static final getKsmInfo()[J
    .locals 14

    const/4 v0, 0x4

    new-array v0, v0, [J

    const/16 v1, 0x2020

    .line 14090
    filled-new-array {v1}, [I

    move-result-object v1

    const/4 v2, 0x1

    new-array v3, v2, [J

    const-string v4, "/sys/kernel/mm/ksm/pages_shared"

    const/4 v5, 0x0

    .line 14094
    invoke-static {v4, v1, v5, v3, v5}, Landroid/os/Process;->readProcFile(Ljava/lang/String;[I[Ljava/lang/String;[J[F)Z

    const/4 v4, 0x0

    aget-wide v6, v3, v4

    const-wide/16 v8, 0x1000

    mul-long/2addr v6, v8

    const-wide/16 v10, 0x400

    .line 14096
    div-long/2addr v6, v10

    aput-wide v6, v0, v4

    const-wide/16 v6, 0x0

    aput-wide v6, v3, v4

    const-string v12, "/sys/kernel/mm/ksm/pages_sharing"

    .line 14098
    invoke-static {v12, v1, v5, v3, v5}, Landroid/os/Process;->readProcFile(Ljava/lang/String;[I[Ljava/lang/String;[J[F)Z

    aget-wide v12, v3, v4

    mul-long/2addr v12, v8

    .line 14100
    div-long/2addr v12, v10

    aput-wide v12, v0, v2

    aput-wide v6, v3, v4

    const-string v2, "/sys/kernel/mm/ksm/pages_unshared"

    .line 14102
    invoke-static {v2, v1, v5, v3, v5}, Landroid/os/Process;->readProcFile(Ljava/lang/String;[I[Ljava/lang/String;[J[F)Z

    aget-wide v12, v3, v4

    mul-long/2addr v12, v8

    .line 14104
    div-long/2addr v12, v10

    const/4 v2, 0x2

    aput-wide v12, v0, v2

    aput-wide v6, v3, v4

    const-string v2, "/sys/kernel/mm/ksm/pages_volatile"

    .line 14106
    invoke-static {v2, v1, v5, v3, v5}, Landroid/os/Process;->readProcFile(Ljava/lang/String;[I[Ljava/lang/String;[J[F)Z

    aget-wide v1, v3, v4

    mul-long/2addr v1, v8

    .line 14108
    div-long/2addr v1, v10

    const/4 v3, 0x3

    aput-wide v1, v0, v3

    return-object v0
.end method

.method public static getShortAction(Ljava/lang/String;)Ljava/lang/String;
    .locals 2

    if-eqz p0, :cond_0

    const/16 v0, 0x2e

    .line 5968
    invoke-virtual {p0, v0}, Ljava/lang/String;->lastIndexOf(I)I

    move-result v0

    const/4 v1, -0x1

    if-eq v0, v1, :cond_0

    .line 5969
    invoke-virtual {p0}, Ljava/lang/String;->length()I

    move-result v1

    add-int/lit8 v1, v1, -0x1

    if-eq v0, v1, :cond_0

    add-int/lit8 v0, v0, 0x1

    .line 5970
    invoke-virtual {p0, v0}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    move-result-object p0

    :cond_0
    return-object p0
.end method

.method public static isPmmEnabled()Z
    .locals 1

    .line 8435
    sget-boolean v0, Lcom/android/server/am/ActivityManagerService;->sPmmEnabledBySpcm:Z

    return v0
.end method

.method public static synthetic lambda$appendDropBoxProcessHeaders$18(Ljava/lang/StringBuilder;Landroid/content/pm/IPackageManager;ILjava/lang/String;)V
    .locals 2

    const-string v0, "Package: "

    .line 11411
    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-wide/16 v0, 0x0

    .line 11413
    :try_start_0
    invoke-interface {p1, p3, v0, v1, p2}, Landroid/content/pm/IPackageManager;->getPackageInfo(Ljava/lang/String;JI)Landroid/content/pm/PackageInfo;

    move-result-object p1

    if-eqz p1, :cond_0

    const-string p2, " v"

    .line 11415
    invoke-virtual {p0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Landroid/content/pm/PackageInfo;->getLongVersionCode()J

    move-result-wide v0

    invoke-virtual {p0, v0, v1}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 11416
    iget-object p2, p1, Landroid/content/pm/PackageInfo;->versionName:Ljava/lang/String;

    if-eqz p2, :cond_0

    const-string p2, " ("

    .line 11417
    invoke-virtual {p0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object p1, p1, Landroid/content/pm/PackageInfo;->versionName:Ljava/lang/String;

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, ")"

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    :catch_0
    move-exception p1

    .line 11421
    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "Error getting package info: "

    invoke-virtual {p2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    const-string p3, "ActivityManager"

    invoke-static {p3, p2, p1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    :cond_0
    :goto_0
    const-string p1, "\n"

    .line 11423
    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    return-void
.end method

.method private synthetic lambda$checkExcessivePowerUsage$29(JJZZLcom/android/server/am/ProcessRecord;)V
    .locals 13

    move-object v8, p0

    move-object/from16 v9, p7

    .line 19219
    invoke-virtual/range {p7 .. p7}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v0

    if-nez v0, :cond_0

    return-void

    .line 19222
    :cond_0
    iget-object v0, v9, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {v0}, Lcom/android/server/am/ProcessStateRecord;->getSetProcState()I

    move-result v0

    const/16 v1, 0xe

    if-lt v0, v1, :cond_5

    .line 19224
    iget-object v0, v9, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {v0}, Lcom/android/server/am/ProcessStateRecord;->getWhenUnimportant()J

    move-result-wide v2

    sub-long v10, p1, v2

    .line 19225
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget-wide v2, v0, Lcom/android/server/am/ActivityManagerConstants;->POWER_CHECK_INTERVAL:J

    cmp-long v4, v10, v2

    if-gtz v4, :cond_1

    .line 19226
    iget v0, v0, Lcom/android/server/am/ActivityManagerConstants;->POWER_CHECK_MAX_CPU_1:I

    :goto_0
    move v12, v0

    goto :goto_2

    :cond_1
    const-wide/16 v4, 0x2

    mul-long/2addr v2, v4

    cmp-long v0, v10, v2

    if-lez v0, :cond_4

    .line 19227
    iget-object v0, v9, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    .line 19228
    invoke-virtual {v0}, Lcom/android/server/am/ProcessStateRecord;->getSetProcState()I

    move-result v0

    if-gt v0, v1, :cond_2

    goto :goto_1

    .line 19230
    :cond_2
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget-wide v1, v0, Lcom/android/server/am/ActivityManagerConstants;->POWER_CHECK_INTERVAL:J

    const-wide/16 v3, 0x3

    mul-long/2addr v1, v3

    cmp-long v1, v10, v1

    if-gtz v1, :cond_3

    .line 19231
    iget v0, v0, Lcom/android/server/am/ActivityManagerConstants;->POWER_CHECK_MAX_CPU_3:I

    goto :goto_0

    .line 19233
    :cond_3
    iget v0, v0, Lcom/android/server/am/ActivityManagerConstants;->POWER_CHECK_MAX_CPU_4:I

    goto :goto_0

    .line 19229
    :cond_4
    :goto_1
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget v0, v0, Lcom/android/server/am/ActivityManagerConstants;->POWER_CHECK_MAX_CPU_2:I

    goto :goto_0

    :goto_2
    move-object v0, p0

    move-wide/from16 v1, p3

    move/from16 v3, p5

    move-wide v4, v10

    move v6, v12

    move-object/from16 v7, p7

    .line 19236
    invoke-virtual/range {v0 .. v7}, Lcom/android/server/am/ActivityManagerService;->updateAppProcessCpuTimeLPr(JZJILcom/android/server/am/ProcessRecord;)V

    if-eqz p6, :cond_5

    move-object v0, p0

    move-wide/from16 v1, p3

    move/from16 v3, p5

    move-wide v4, v10

    move v6, v12

    move-object/from16 v7, p7

    .line 19240
    invoke-virtual/range {v0 .. v7}, Lcom/android/server/am/ActivityManagerService;->updatePhantomProcessCpuTimeLPr(JZJILcom/android/server/am/ProcessRecord;)V

    :cond_5
    return-void
.end method

.method public static synthetic lambda$checkExcessivePowerUsageLPr$33(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Lcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;)V
    .locals 7

    .line 19333
    iget-object v0, p2, Lcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;->state:Lcom/android/internal/app/procstats/ProcessState;

    const/16 v1, 0x10

    .line 19334
    iget-object v2, p0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    if-eqz v0, :cond_0

    .line 19338
    invoke-virtual {v0}, Lcom/android/internal/app/procstats/ProcessState;->getPackage()Ljava/lang/String;

    move-result-object p0

    goto :goto_0

    :cond_0
    iget-object p0, p0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object p0, p0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    :goto_0
    move-object v4, p0

    iget-wide v5, p2, Lcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;->appVersion:J

    move-object v3, p1

    .line 19334
    invoke-static/range {v1 .. v6}, Lcom/android/internal/util/FrameworkStatsLog;->write(IILjava/lang/String;Ljava/lang/String;J)V

    return-void
.end method

.method public static synthetic lambda$dumpApplicationMemoryUsage$21(I[Ljava/lang/String;Ljava/util/ArrayList;Lcom/android/internal/os/ProcessCpuTracker$Stats;)V
    .locals 1

    .line 14343
    iget v0, p3, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    if-eq v0, p0, :cond_0

    iget-object p0, p3, Lcom/android/internal/os/ProcessCpuTracker$Stats;->baseName:Ljava/lang/String;

    if-eqz p0, :cond_1

    const/4 v0, 0x0

    aget-object p1, p1, v0

    .line 14344
    invoke-virtual {p0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p0

    if-eqz p0, :cond_1

    .line 14345
    :cond_0
    invoke-virtual {p2, p3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    :cond_1
    return-void
.end method

.method public static synthetic lambda$dumpApplicationMemoryUsage$22(Lcom/android/server/am/ProcessRecord;JJJIJJLcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;)V
    .locals 19

    move-object/from16 v0, p0

    move-object/from16 v1, p12

    move-wide/from16 v6, p1

    move-wide/from16 v8, p3

    move-wide/from16 v10, p5

    move/from16 v12, p7

    const/16 v2, 0x12

    .line 14542
    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v3, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    iget-object v4, v1, Lcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;->state:Lcom/android/internal/app/procstats/ProcessState;

    .line 14544
    invoke-virtual {v4}, Lcom/android/internal/app/procstats/ProcessState;->getName()Ljava/lang/String;

    move-result-object v4

    iget-object v5, v1, Lcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;->state:Lcom/android/internal/app/procstats/ProcessState;

    .line 14545
    invoke-virtual {v5}, Lcom/android/internal/app/procstats/ProcessState;->getPackage()Ljava/lang/String;

    move-result-object v5

    sub-long v13, p8, p10

    move/from16 p2, v3

    iget-wide v2, v1, Lcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;->appVersion:J

    move-wide v15, v2

    iget-object v1, v0, Lcom/android/server/am/ProcessRecord;->mProfile:Lcom/android/server/am/ProcessProfileRecord;

    .line 14549
    invoke-virtual {v1}, Lcom/android/server/am/ProcessProfileRecord;->getCurrentHostingComponentTypes()I

    move-result v17

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->mProfile:Lcom/android/server/am/ProcessProfileRecord;

    .line 14550
    invoke-virtual {v0}, Lcom/android/server/am/ProcessProfileRecord;->getHistoricalHostingComponentTypes()I

    move-result v18

    move/from16 v3, p2

    const/16 v2, 0x12

    .line 14542
    invoke-static/range {v2 .. v18}, Lcom/android/internal/util/FrameworkStatsLog;->write(IILjava/lang/String;Ljava/lang/String;JJJIJJII)V

    return-void
.end method

.method public static synthetic lambda$dumpApplicationMemoryUsage$23(Landroid/util/SparseArray;[Landroid/os/Debug$MemoryInfo;ZLcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;[J[J[JLjava/util/ArrayList;[J[J[J[J[J[J[J[J[Ljava/util/ArrayList;[JLcom/android/internal/os/ProcessCpuTracker$Stats;)V
    .locals 30

    move-object/from16 v0, p4

    move-object/from16 v1, p5

    move-object/from16 v2, p8

    move-object/from16 v3, p18

    .line 14623
    iget-wide v4, v3, Lcom/android/internal/os/ProcessCpuTracker$Stats;->vsize:J

    const-wide/16 v6, 0x0

    cmp-long v4, v4, v6

    if-lez v4, :cond_7

    iget v4, v3, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    move-object/from16 v5, p0

    invoke-virtual {v5, v4}, Landroid/util/SparseArray;->indexOfKey(I)I

    move-result v4

    if-gez v4, :cond_7

    const/4 v4, 0x0

    .line 14626
    aget-object v5, p1, v4

    if-nez v5, :cond_0

    .line 14627
    new-instance v5, Landroid/os/Debug$MemoryInfo;

    invoke-direct {v5}, Landroid/os/Debug$MemoryInfo;-><init>()V

    aput-object v5, p1, v4

    .line 14629
    :cond_0
    aget-object v5, p1, v4

    const/16 v8, 0xe

    const/4 v9, 0x2

    const/4 v10, 0x1

    if-nez p2, :cond_2

    move-object/from16 v11, p3

    .line 14630
    iget-boolean v11, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->oomOnly:Z

    if-nez v11, :cond_2

    .line 14631
    iget v0, v3, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    invoke-static {v0, v5}, Landroid/os/Debug;->getMemoryInfo(ILandroid/os/Debug$MemoryInfo;)Z

    move-result v0

    if-nez v0, :cond_1

    return-void

    .line 14634
    :cond_1
    invoke-virtual {v5, v8}, Landroid/os/Debug$MemoryInfo;->getOtherPrivate(I)I

    move-result v0

    int-to-long v0, v0

    const/16 v6, 0xf

    .line 14635
    invoke-virtual {v5, v6}, Landroid/os/Debug$MemoryInfo;->getOtherPrivate(I)I

    move-result v6

    int-to-long v6, v6

    goto :goto_0

    .line 14637
    :cond_2
    iget v11, v3, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    invoke-static {v11, v0, v1}, Landroid/os/Debug;->getPss(I[J[J)J

    move-result-wide v11

    cmp-long v6, v11, v6

    if-nez v6, :cond_3

    return-void

    :cond_3
    long-to-int v6, v11

    .line 14641
    iput v6, v5, Landroid/os/Debug$MemoryInfo;->nativePss:I

    .line 14642
    aget-wide v6, v0, v4

    long-to-int v6, v6

    iput v6, v5, Landroid/os/Debug$MemoryInfo;->nativePrivateDirty:I

    .line 14643
    aget-wide v6, v0, v9

    long-to-int v0, v6

    iput v0, v5, Landroid/os/Debug$MemoryInfo;->nativeRss:I

    .line 14644
    aget-wide v6, v1, v10

    .line 14645
    aget-wide v0, v1, v9

    move-wide/from16 v28, v0

    move-wide v0, v6

    move-wide/from16 v6, v28

    .line 14648
    :goto_0
    invoke-virtual {v5}, Landroid/os/Debug$MemoryInfo;->getTotalPss()I

    move-result v11

    int-to-long v14, v11

    .line 14649
    invoke-virtual {v5}, Landroid/os/Debug$MemoryInfo;->getTotalSwappedOutPss()I

    move-result v11

    int-to-long v11, v11

    .line 14650
    invoke-virtual {v5}, Landroid/os/Debug$MemoryInfo;->getTotalRss()I

    move-result v13

    int-to-long v9, v13

    const/16 v13, 0x9

    .line 14651
    aget-wide v16, p6, v13

    add-long v16, v16, v14

    aput-wide v16, p6, v13

    const/16 v13, 0xa

    .line 14652
    aget-wide v16, p6, v13

    add-long v16, v16, v11

    aput-wide v16, p6, v13

    const/16 v13, 0xb

    .line 14653
    aget-wide v16, p6, v13

    add-long v16, v16, v9

    aput-wide v16, p6, v13

    const/16 v13, 0xc

    .line 14654
    aget-wide v16, p6, v13

    add-long v16, v16, v14

    aput-wide v16, p6, v13

    const/16 v13, 0xd

    .line 14655
    aget-wide v16, p6, v13

    add-long v16, v16, v0

    aput-wide v16, p6, v13

    .line 14656
    aget-wide v0, p6, v8

    add-long/2addr v0, v6

    aput-wide v0, p6, v8

    .line 14658
    new-instance v0, Lcom/android/server/am/ActivityManagerService$MemItem;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    iget-object v6, v3, Lcom/android/internal/os/ProcessCpuTracker$Stats;->name:Ljava/lang/String;

    invoke-virtual {v1, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v6, " (pid "

    invoke-virtual {v1, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v6, v3, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    invoke-virtual {v1, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v6, ")"

    invoke-virtual {v1, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v13

    iget-object v1, v3, Lcom/android/internal/os/ProcessCpuTracker$Stats;->name:Ljava/lang/String;

    .line 14659
    invoke-virtual {v5}, Landroid/os/Debug$MemoryInfo;->getSummaryTotalSwapPss()I

    move-result v6

    int-to-long v6, v6

    iget v8, v3, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    iget v3, v3, Lcom/android/internal/os/ProcessCpuTracker$Stats;->uid:I

    .line 14660
    invoke-static {v3}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v22

    const/16 v23, 0x0

    move-wide/from16 v24, v11

    move-object v12, v0

    move-wide/from16 v26, v14

    move-object v14, v1

    move-wide/from16 v15, v26

    move-wide/from16 v17, v6

    move-wide/from16 v19, v9

    move/from16 v21, v8

    invoke-direct/range {v12 .. v23}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJJIIZ)V

    move-object/from16 v1, p7

    .line 14661
    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 14663
    aget-wide v6, p6, v4

    iget v1, v5, Landroid/os/Debug$MemoryInfo;->nativePss:I

    int-to-long v11, v1

    add-long/2addr v6, v11

    aput-wide v6, p6, v4

    const/4 v1, 0x1

    .line 14664
    aget-wide v6, p6, v1

    iget v3, v5, Landroid/os/Debug$MemoryInfo;->nativeSwappedOutPss:I

    int-to-long v11, v3

    add-long/2addr v6, v11

    aput-wide v6, p6, v1

    const/4 v1, 0x2

    .line 14665
    aget-wide v6, p6, v1

    iget v3, v5, Landroid/os/Debug$MemoryInfo;->nativeRss:I

    int-to-long v11, v3

    add-long/2addr v6, v11

    aput-wide v6, p6, v1

    const/4 v1, 0x3

    .line 14666
    aget-wide v6, p6, v1

    iget v3, v5, Landroid/os/Debug$MemoryInfo;->dalvikPss:I

    int-to-long v11, v3

    add-long/2addr v6, v11

    aput-wide v6, p6, v1

    const/4 v1, 0x4

    .line 14667
    aget-wide v6, p6, v1

    iget v3, v5, Landroid/os/Debug$MemoryInfo;->dalvikSwappedOutPss:I

    int-to-long v11, v3

    add-long/2addr v6, v11

    aput-wide v6, p6, v1

    const/4 v1, 0x5

    .line 14668
    aget-wide v6, p6, v1

    iget v3, v5, Landroid/os/Debug$MemoryInfo;->dalvikRss:I

    int-to-long v11, v3

    add-long/2addr v6, v11

    aput-wide v6, p6, v1

    move v1, v4

    .line 14669
    :goto_1
    array-length v3, v2

    if-ge v1, v3, :cond_4

    .line 14670
    aget-wide v6, v2, v1

    add-int/lit8 v3, v1, 0x11

    invoke-virtual {v5, v3}, Landroid/os/Debug$MemoryInfo;->getOtherPss(I)I

    move-result v8

    int-to-long v11, v8

    add-long/2addr v6, v11

    aput-wide v6, v2, v1

    .line 14672
    aget-wide v6, p9, v1

    .line 14673
    invoke-virtual {v5, v3}, Landroid/os/Debug$MemoryInfo;->getOtherSwappedOutPss(I)I

    move-result v8

    int-to-long v11, v8

    add-long/2addr v6, v11

    aput-wide v6, p9, v1

    .line 14674
    aget-wide v6, p10, v1

    invoke-virtual {v5, v3}, Landroid/os/Debug$MemoryInfo;->getOtherRss(I)I

    move-result v3

    int-to-long v11, v3

    add-long/2addr v6, v11

    aput-wide v6, p10, v1

    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    :cond_4
    const/4 v1, 0x6

    .line 14677
    aget-wide v2, p6, v1

    iget v6, v5, Landroid/os/Debug$MemoryInfo;->otherPss:I

    int-to-long v6, v6

    add-long/2addr v2, v6

    aput-wide v2, p6, v1

    const/4 v2, 0x7

    .line 14678
    aget-wide v6, p6, v2

    iget v3, v5, Landroid/os/Debug$MemoryInfo;->otherSwappedOutPss:I

    int-to-long v11, v3

    add-long/2addr v6, v11

    aput-wide v6, p6, v2

    const/16 v3, 0x8

    .line 14679
    aget-wide v6, p6, v3

    iget v8, v5, Landroid/os/Debug$MemoryInfo;->otherRss:I

    int-to-long v11, v8

    add-long/2addr v6, v11

    aput-wide v6, p6, v3

    move v6, v4

    :goto_2
    const/16 v7, 0x11

    if-ge v6, v7, :cond_5

    .line 14681
    invoke-virtual {v5, v6}, Landroid/os/Debug$MemoryInfo;->getOtherPss(I)I

    move-result v7

    int-to-long v7, v7

    .line 14682
    aget-wide v11, p11, v6

    add-long/2addr v11, v7

    aput-wide v11, p11, v6

    .line 14683
    aget-wide v11, p6, v1

    sub-long/2addr v11, v7

    aput-wide v11, p6, v1

    .line 14684
    invoke-virtual {v5, v6}, Landroid/os/Debug$MemoryInfo;->getOtherSwappedOutPss(I)I

    move-result v7

    int-to-long v7, v7

    .line 14685
    aget-wide v11, p12, v6

    add-long/2addr v11, v7

    aput-wide v11, p12, v6

    .line 14686
    aget-wide v11, p6, v2

    sub-long/2addr v11, v7

    aput-wide v11, p6, v2

    .line 14687
    invoke-virtual {v5, v6}, Landroid/os/Debug$MemoryInfo;->getOtherRss(I)I

    move-result v7

    int-to-long v7, v7

    .line 14688
    aget-wide v11, p13, v6

    add-long/2addr v11, v7

    aput-wide v11, p13, v6

    .line 14689
    aget-wide v11, p6, v3

    sub-long/2addr v11, v7

    aput-wide v11, p6, v3

    add-int/lit8 v6, v6, 0x1

    goto :goto_2

    .line 14691
    :cond_5
    aget-wide v1, p14, v4

    add-long v1, v1, v26

    aput-wide v1, p14, v4

    .line 14692
    aget-wide v1, p15, v4

    add-long v1, v1, v24

    aput-wide v1, p15, v4

    .line 14693
    aget-object v1, p16, v4

    if-nez v1, :cond_6

    .line 14694
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    aput-object v1, p16, v4

    .line 14696
    :cond_6
    aget-object v1, p16, v4

    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 14697
    aget-wide v0, p17, v4

    add-long/2addr v0, v9

    aput-wide v0, p17, v4

    :cond_7
    return-void
.end method

.method public static synthetic lambda$dumpApplicationMemoryUsage$25(I[Ljava/lang/String;Ljava/util/ArrayList;Lcom/android/internal/os/ProcessCpuTracker$Stats;)V
    .locals 1

    .line 15036
    iget v0, p3, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    if-eq v0, p0, :cond_0

    iget-object p0, p3, Lcom/android/internal/os/ProcessCpuTracker$Stats;->baseName:Ljava/lang/String;

    if-eqz p0, :cond_1

    const/4 v0, 0x0

    aget-object p1, p1, v0

    .line 15037
    invoke-virtual {p0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p0

    if-eqz p0, :cond_1

    .line 15038
    :cond_0
    invoke-virtual {p2, p3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    :cond_1
    return-void
.end method

.method public static synthetic lambda$dumpApplicationMemoryUsage$26(Lcom/android/server/am/ProcessRecord;JJJIJJLcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;)V
    .locals 19

    move-object/from16 v0, p0

    move-object/from16 v1, p12

    move-wide/from16 v6, p1

    move-wide/from16 v8, p3

    move-wide/from16 v10, p5

    move/from16 v12, p7

    const/16 v2, 0x12

    .line 15229
    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v3, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    iget-object v4, v1, Lcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;->state:Lcom/android/internal/app/procstats/ProcessState;

    .line 15231
    invoke-virtual {v4}, Lcom/android/internal/app/procstats/ProcessState;->getName()Ljava/lang/String;

    move-result-object v4

    iget-object v5, v1, Lcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;->state:Lcom/android/internal/app/procstats/ProcessState;

    .line 15232
    invoke-virtual {v5}, Lcom/android/internal/app/procstats/ProcessState;->getPackage()Ljava/lang/String;

    move-result-object v5

    sub-long v13, p8, p10

    move/from16 p2, v3

    iget-wide v2, v1, Lcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;->appVersion:J

    move-wide v15, v2

    iget-object v1, v0, Lcom/android/server/am/ProcessRecord;->mProfile:Lcom/android/server/am/ProcessProfileRecord;

    .line 15235
    invoke-virtual {v1}, Lcom/android/server/am/ProcessProfileRecord;->getCurrentHostingComponentTypes()I

    move-result v17

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->mProfile:Lcom/android/server/am/ProcessProfileRecord;

    .line 15236
    invoke-virtual {v0}, Lcom/android/server/am/ProcessProfileRecord;->getHistoricalHostingComponentTypes()I

    move-result v18

    move/from16 v3, p2

    const/16 v2, 0x12

    .line 15229
    invoke-static/range {v2 .. v18}, Lcom/android/internal/util/FrameworkStatsLog;->write(IILjava/lang/String;Ljava/lang/String;JJJIJJII)V

    return-void
.end method

.method public static synthetic lambda$dumpApplicationMemoryUsage$27(Landroid/util/SparseArray;[Landroid/os/Debug$MemoryInfo;ZLcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;[J[JLjava/util/ArrayList;[J[J[J[J[J[J[J[J[Ljava/util/ArrayList;[JLcom/android/internal/os/ProcessCpuTracker$Stats;)V
    .locals 24

    move-object/from16 v0, p4

    move-object/from16 v1, p7

    move-object/from16 v2, p17

    .line 15306
    iget-wide v3, v2, Lcom/android/internal/os/ProcessCpuTracker$Stats;->vsize:J

    const-wide/16 v5, 0x0

    cmp-long v3, v3, v5

    if-lez v3, :cond_7

    iget v3, v2, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    move-object/from16 v4, p0

    invoke-virtual {v4, v3}, Landroid/util/SparseArray;->indexOfKey(I)I

    move-result v3

    if-gez v3, :cond_7

    const/4 v3, 0x0

    .line 15307
    aget-object v4, p1, v3

    if-nez v4, :cond_0

    .line 15308
    new-instance v4, Landroid/os/Debug$MemoryInfo;

    invoke-direct {v4}, Landroid/os/Debug$MemoryInfo;-><init>()V

    aput-object v4, p1, v3

    .line 15310
    :cond_0
    aget-object v4, p1, v3

    const/4 v7, 0x2

    if-nez p2, :cond_1

    move-object/from16 v8, p3

    .line 15311
    iget-boolean v8, v8, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->oomOnly:Z

    if-nez v8, :cond_1

    .line 15312
    iget v0, v2, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    invoke-static {v0, v4}, Landroid/os/Debug;->getMemoryInfo(ILandroid/os/Debug$MemoryInfo;)Z

    move-result v0

    if-nez v0, :cond_3

    return-void

    .line 15316
    :cond_1
    iget v8, v2, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    const/4 v9, 0x0

    invoke-static {v8, v0, v9}, Landroid/os/Debug;->getPss(I[J[J)J

    move-result-wide v8

    cmp-long v5, v8, v5

    if-nez v5, :cond_2

    return-void

    :cond_2
    long-to-int v5, v8

    .line 15320
    iput v5, v4, Landroid/os/Debug$MemoryInfo;->nativePss:I

    .line 15321
    aget-wide v5, v0, v3

    long-to-int v5, v5

    iput v5, v4, Landroid/os/Debug$MemoryInfo;->nativePrivateDirty:I

    .line 15322
    aget-wide v5, v0, v7

    long-to-int v0, v5

    iput v0, v4, Landroid/os/Debug$MemoryInfo;->nativeRss:I

    .line 15325
    :cond_3
    invoke-virtual {v4}, Landroid/os/Debug$MemoryInfo;->getTotalPss()I

    move-result v0

    int-to-long v5, v0

    .line 15326
    invoke-virtual {v4}, Landroid/os/Debug$MemoryInfo;->getTotalSwappedOutPss()I

    move-result v0

    int-to-long v13, v0

    .line 15327
    invoke-virtual {v4}, Landroid/os/Debug$MemoryInfo;->getTotalRss()I

    move-result v0

    int-to-long v11, v0

    const/16 v0, 0x9

    .line 15328
    aget-wide v8, p5, v0

    add-long/2addr v8, v5

    aput-wide v8, p5, v0

    const/16 v0, 0xa

    .line 15329
    aget-wide v8, p5, v0

    add-long/2addr v8, v13

    aput-wide v8, p5, v0

    const/16 v0, 0xb

    .line 15330
    aget-wide v8, p5, v0

    add-long/2addr v8, v11

    aput-wide v8, p5, v0

    const/16 v0, 0xc

    .line 15331
    aget-wide v8, p5, v0

    add-long/2addr v8, v5

    aput-wide v8, p5, v0

    .line 15333
    new-instance v0, Lcom/android/server/am/ActivityManagerService$MemItem;

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    iget-object v9, v2, Lcom/android/internal/os/ProcessCpuTracker$Stats;->name:Ljava/lang/String;

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v9, " (pid "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v9, v2, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v9, ")"

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    iget-object v10, v2, Lcom/android/internal/os/ProcessCpuTracker$Stats;->name:Ljava/lang/String;

    .line 15334
    invoke-virtual {v4}, Landroid/os/Debug$MemoryInfo;->getSummaryTotalSwapPss()I

    move-result v8

    move-object/from16 p1, v4

    int-to-long v3, v8

    iget v15, v2, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    iget v2, v2, Lcom/android/internal/os/ProcessCpuTracker$Stats;->uid:I

    .line 15335
    invoke-static {v2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v18

    const/16 v19, 0x0

    move-object v8, v0

    move-wide/from16 v20, v11

    move-wide v11, v5

    move-wide/from16 v22, v13

    move-wide v13, v3

    move v2, v15

    move-wide/from16 v15, v20

    move/from16 v17, v2

    invoke-direct/range {v8 .. v19}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJJIIZ)V

    move-object/from16 v2, p6

    .line 15336
    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    const/4 v2, 0x0

    .line 15338
    aget-wide v3, p5, v2

    move-object/from16 v8, p1

    iget v9, v8, Landroid/os/Debug$MemoryInfo;->nativePss:I

    int-to-long v9, v9

    add-long/2addr v3, v9

    aput-wide v3, p5, v2

    const/4 v2, 0x1

    .line 15339
    aget-wide v3, p5, v2

    iget v9, v8, Landroid/os/Debug$MemoryInfo;->nativeSwappedOutPss:I

    int-to-long v9, v9

    add-long/2addr v3, v9

    aput-wide v3, p5, v2

    .line 15340
    aget-wide v2, p5, v7

    iget v4, v8, Landroid/os/Debug$MemoryInfo;->nativeRss:I

    int-to-long v9, v4

    add-long/2addr v2, v9

    aput-wide v2, p5, v7

    const/4 v2, 0x3

    .line 15341
    aget-wide v3, p5, v2

    iget v7, v8, Landroid/os/Debug$MemoryInfo;->dalvikPss:I

    int-to-long v9, v7

    add-long/2addr v3, v9

    aput-wide v3, p5, v2

    const/4 v2, 0x4

    .line 15342
    aget-wide v3, p5, v2

    iget v7, v8, Landroid/os/Debug$MemoryInfo;->dalvikSwappedOutPss:I

    int-to-long v9, v7

    add-long/2addr v3, v9

    aput-wide v3, p5, v2

    const/4 v2, 0x5

    .line 15343
    aget-wide v3, p5, v2

    iget v7, v8, Landroid/os/Debug$MemoryInfo;->dalvikRss:I

    int-to-long v9, v7

    add-long/2addr v3, v9

    aput-wide v3, p5, v2

    const/4 v2, 0x0

    .line 15344
    :goto_0
    array-length v3, v1

    if-ge v2, v3, :cond_4

    .line 15345
    aget-wide v3, v1, v2

    add-int/lit8 v7, v2, 0x11

    invoke-virtual {v8, v7}, Landroid/os/Debug$MemoryInfo;->getOtherPss(I)I

    move-result v9

    int-to-long v9, v9

    add-long/2addr v3, v9

    aput-wide v3, v1, v2

    .line 15347
    aget-wide v3, p8, v2

    .line 15348
    invoke-virtual {v8, v7}, Landroid/os/Debug$MemoryInfo;->getOtherSwappedOutPss(I)I

    move-result v9

    int-to-long v9, v9

    add-long/2addr v3, v9

    aput-wide v3, p8, v2

    .line 15349
    aget-wide v3, p9, v2

    invoke-virtual {v8, v7}, Landroid/os/Debug$MemoryInfo;->getOtherRss(I)I

    move-result v7

    int-to-long v9, v7

    add-long/2addr v3, v9

    aput-wide v3, p9, v2

    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    :cond_4
    const/4 v1, 0x6

    .line 15352
    aget-wide v2, p5, v1

    iget v4, v8, Landroid/os/Debug$MemoryInfo;->otherPss:I

    int-to-long v9, v4

    add-long/2addr v2, v9

    aput-wide v2, p5, v1

    const/4 v2, 0x7

    .line 15353
    aget-wide v3, p5, v2

    iget v7, v8, Landroid/os/Debug$MemoryInfo;->otherSwappedOutPss:I

    int-to-long v9, v7

    add-long/2addr v3, v9

    aput-wide v3, p5, v2

    const/16 v3, 0x8

    .line 15354
    aget-wide v9, p5, v3

    iget v4, v8, Landroid/os/Debug$MemoryInfo;->otherRss:I

    int-to-long v11, v4

    add-long/2addr v9, v11

    aput-wide v9, p5, v3

    const/4 v4, 0x0

    :goto_1
    const/16 v7, 0x11

    if-ge v4, v7, :cond_5

    .line 15356
    invoke-virtual {v8, v4}, Landroid/os/Debug$MemoryInfo;->getOtherPss(I)I

    move-result v7

    int-to-long v9, v7

    .line 15357
    aget-wide v11, p10, v4

    add-long/2addr v11, v9

    aput-wide v11, p10, v4

    .line 15358
    aget-wide v11, p5, v1

    sub-long/2addr v11, v9

    aput-wide v11, p5, v1

    .line 15359
    invoke-virtual {v8, v4}, Landroid/os/Debug$MemoryInfo;->getOtherSwappedOutPss(I)I

    move-result v7

    int-to-long v9, v7

    .line 15360
    aget-wide v11, p11, v4

    add-long/2addr v11, v9

    aput-wide v11, p11, v4

    .line 15361
    aget-wide v11, p5, v2

    sub-long/2addr v11, v9

    aput-wide v11, p5, v2

    .line 15362
    invoke-virtual {v8, v4}, Landroid/os/Debug$MemoryInfo;->getOtherRss(I)I

    move-result v7

    int-to-long v9, v7

    .line 15363
    aget-wide v11, p12, v4

    add-long/2addr v11, v9

    aput-wide v11, p12, v4

    .line 15364
    aget-wide v11, p5, v3

    sub-long/2addr v11, v9

    aput-wide v11, p5, v3

    add-int/lit8 v4, v4, 0x1

    goto :goto_1

    :cond_5
    const/4 v4, 0x0

    .line 15366
    aget-wide v1, p13, v4

    add-long/2addr v1, v5

    aput-wide v1, p13, v4

    .line 15367
    aget-wide v1, p14, v4

    add-long v1, v1, v22

    aput-wide v1, p14, v4

    .line 15368
    aget-object v1, p15, v4

    if-nez v1, :cond_6

    .line 15369
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    aput-object v1, p15, v4

    .line 15371
    :cond_6
    aget-object v1, p15, v4

    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 15372
    aget-wide v0, p16, v4

    add-long v0, v0, v20

    aput-wide v0, p16, v4

    :cond_7
    return-void
.end method

.method public static synthetic lambda$dumpOtherProcessesInfoLSP$20(Ljava/io/PrintWriter;JJLjava/lang/Integer;Landroid/util/Pair;)V
    .locals 2

    .line 13081
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "    "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p5}, Ljava/lang/Integer;->intValue()I

    move-result p5

    invoke-static {p5}, Landroid/os/UserHandle;->formatUid(I)Ljava/lang/String;

    move-result-object p5

    invoke-virtual {v0, p5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p5, ": "

    invoke-virtual {v0, p5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p5

    invoke-virtual {p0, p5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13082
    iget-object p5, p6, Landroid/util/Pair;->second:Ljava/lang/Object;

    check-cast p5, Lcom/android/server/am/ActivityManagerService$FgsTempAllowListItem;

    invoke-virtual {p5, p0}, Lcom/android/server/am/ActivityManagerService$FgsTempAllowListItem;->dump(Ljava/io/PrintWriter;)V

    const-string p5, " expiration="

    .line 13083
    invoke-virtual {p0, p5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    sub-long p3, p1, p3

    .line 13086
    iget-object p5, p6, Landroid/util/Pair;->first:Ljava/lang/Object;

    check-cast p5, Ljava/lang/Long;

    .line 13087
    invoke-virtual {p5}, Ljava/lang/Long;->longValue()J

    move-result-wide p5

    add-long/2addr p3, p5

    .line 13088
    invoke-static {p0, p3, p4, p1, p2}, Landroid/util/TimeUtils;->dumpTimeWithDelta(Ljava/io/PrintWriter;JJ)V

    .line 13089
    invoke-virtual {p0}, Ljava/io/PrintWriter;->println()V

    return-void
.end method

.method public static synthetic lambda$dumpProcessListForPPN$7(Landroid/util/SparseArray;[J[Ljava/util/ArrayList;Lcom/android/internal/os/ProcessCpuTracker$Stats;)V
    .locals 11

    .line 8287
    iget-wide v0, p3, Lcom/android/internal/os/ProcessCpuTracker$Stats;->vsize:J

    const-wide/16 v2, 0x0

    cmp-long v0, v0, v2

    if-lez v0, :cond_2

    iget v0, p3, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    invoke-virtual {p0, v0}, Landroid/util/SparseArray;->indexOfKey(I)I

    move-result p0

    if-gez p0, :cond_2

    .line 8288
    iget p0, p3, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    invoke-static {p0}, Lcom/android/server/chimera/PerProcessNandswap;->getWritebackSizePid(I)[J

    move-result-object p0

    if-nez p0, :cond_0

    return-void

    .line 8293
    :cond_0
    new-instance v9, Lcom/android/server/chimera/PerProcessNandswap$MemoryItem;

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    iget-object v1, p3, Lcom/android/internal/os/ProcessCpuTracker$Stats;->name:Ljava/lang/String;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " (pid "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget p3, p3, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    invoke-virtual {v0, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p3, ")"

    invoke-virtual {v0, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    const/4 p3, 0x0

    aget-wide v2, p0, p3

    const/4 v10, 0x1

    aget-wide v4, p0, v10

    const/4 v6, 0x0

    const-wide/16 v7, -0x1

    move-object v0, v9

    invoke-direct/range {v0 .. v8}, Lcom/android/server/chimera/PerProcessNandswap$MemoryItem;-><init>(Ljava/lang/String;JJIJ)V

    .line 8296
    aget-wide v0, p1, p3

    aget-wide v2, p0, v10

    add-long/2addr v0, v2

    aput-wide v0, p1, p3

    .line 8297
    aget-object p0, p2, p3

    if-nez p0, :cond_1

    .line 8298
    new-instance p0, Ljava/util/ArrayList;

    invoke-direct {p0}, Ljava/util/ArrayList;-><init>()V

    aput-object p0, p2, p3

    .line 8300
    :cond_1
    aget-object p0, p2, p3

    invoke-virtual {p0, v9}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    :cond_2
    return-void
.end method

.method private synthetic lambda$filterNonExportedComponents$28(Landroid/app/IUnsafeIntentStrictModeCallback;Landroid/content/Intent;I)V
    .locals 0

    .line 15595
    :try_start_0
    invoke-virtual {p2}, Landroid/content/Intent;->cloneFilter()Landroid/content/Intent;

    move-result-object p2

    invoke-interface {p1, p2}, Landroid/app/IUnsafeIntentStrictModeCallback;->onImplicitIntentMatchedInternalComponent(Landroid/content/Intent;)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    .line 15597
    :catch_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mStrictModeCallbacks:Landroid/util/SparseArray;

    invoke-virtual {p0, p3}, Landroid/util/SparseArray;->remove(I)V

    :goto_0
    return-void
.end method

.method private synthetic lambda$finishAttachApplicationInner$4(Ljava/lang/String;I)V
    .locals 2

    .line 5910
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 5911
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/am/ProcessList;->getProcessRecordLocked(Ljava/lang/String;I)Lcom/android/server/am/ProcessRecord;

    move-result-object p1

    if-eqz p1, :cond_0

    .line 5913
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    iget v0, p1, Lcom/android/server/am/ProcessRecord;->userId:I

    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {p2, v0, v1}, Lcom/android/server/wm/ActivityTaskManagerService;->isDedicatedProcess(ILjava/lang/String;)Z

    move-result p2

    if-eqz p2, :cond_0

    .line 5915
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mExt:Lcom/android/server/am/ActivityManagerServiceExt;

    invoke-virtual {p2, p1}, Lcom/android/server/am/ActivityManagerServiceExt;->promoteAsDedicatedLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 5917
    :cond_0
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method private synthetic lambda$finishBooting$5()V
    .locals 2

    .line 6295
    invoke-static {}, Lcom/samsung/android/server/pm/mm/MaintenanceModeManager;->isInMaintenanceMode()Z

    move-result v0

    if-eqz v0, :cond_0

    const-string v0, "ActivityManager"

    const-string v1, "Switch to Maintenance mode"

    .line 6296
    invoke-static {v0, v1}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 6297
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    const/16 v0, 0x4d

    invoke-virtual {p0, v0}, Lcom/android/server/am/UserController;->switchUser(I)Z

    :cond_0
    return-void
.end method

.method private synthetic lambda$finishBooting$6()V
    .locals 2

    .line 6305
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-static {v1, p0}, Lcom/android/internal/app/AppLockPolicy;->getInstance(Landroid/content/Context;Landroid/os/Handler;)Lcom/android/internal/app/AppLockPolicy;

    move-result-object p0

    iput-object p0, v0, Lcom/android/server/wm/ActivityTaskManagerService;->mAppLockPolicy:Lcom/android/internal/app/AppLockPolicy;

    return-void
.end method

.method public static synthetic lambda$getDumpMemoryInfo$8(Ljava/util/ArrayList;Lcom/android/internal/os/ProcessCpuTracker$Stats;)V
    .locals 0

    .line 8510
    invoke-virtual {p0, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    return-void
.end method

.method public static synthetic lambda$getNativeProcesses$24(Ljava/util/Set;Ljava/util/ArrayList;Lcom/android/internal/os/ProcessCpuTracker$Stats;)V
    .locals 4

    .line 15005
    iget-wide v0, p2, Lcom/android/internal/os/ProcessCpuTracker$Stats;->vsize:J

    const-wide/16 v2, 0x0

    cmp-long v0, v0, v2

    if-lez v0, :cond_0

    iget v0, p2, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v0

    invoke-interface {p0, v0}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result p0

    if-nez p0, :cond_0

    .line 15006
    invoke-virtual {p1, p2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    :cond_0
    return-void
.end method

.method public static synthetic lambda$getPackageProcessState$0([ILjava/lang/String;Lcom/android/server/am/ProcessRecord;)V
    .locals 3

    const/4 v0, 0x0

    .line 3699
    aget v1, p0, v0

    iget-object v2, p2, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {v2}, Lcom/android/server/am/ProcessStateRecord;->getSetProcState()I

    move-result v2

    if-le v1, v2, :cond_1

    .line 3700
    invoke-virtual {p2}, Lcom/android/server/am/ProcessRecord;->getPkgList()Lcom/android/server/am/PackageList;

    move-result-object v1

    invoke-virtual {v1, p1}, Lcom/android/server/am/PackageList;->containsKey(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_0

    invoke-virtual {p2}, Lcom/android/server/am/ProcessRecord;->getPkgDeps()Landroid/util/ArraySet;

    move-result-object v1

    if-eqz v1, :cond_1

    .line 3701
    invoke-virtual {p2}, Lcom/android/server/am/ProcessRecord;->getPkgDeps()Landroid/util/ArraySet;

    move-result-object v1

    invoke-virtual {v1, p1}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    move-result p1

    if-eqz p1, :cond_1

    .line 3702
    :cond_0
    iget-object p1, p2, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {p1}, Lcom/android/server/am/ProcessStateRecord;->getSetProcState()I

    move-result p1

    aput p1, p0, v0

    :cond_1
    return-void
.end method

.method public static synthetic lambda$getProcessMemoryInfo$2(Lcom/android/server/am/ProcessRecord;Landroid/os/Debug$MemoryInfo;JLcom/android/server/am/ProcessProfileRecord;Lcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;)V
    .locals 20

    move-object/from16 v0, p0

    move-object/from16 v1, p5

    .line 4852
    iget-object v2, v1, Lcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;->state:Lcom/android/internal/app/procstats/ProcessState;

    const/16 v3, 0x12

    .line 4853
    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    if-eqz v2, :cond_0

    .line 4855
    invoke-virtual {v2}, Lcom/android/internal/app/procstats/ProcessState;->getName()Ljava/lang/String;

    move-result-object v5

    goto :goto_0

    :cond_0
    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    :goto_0
    if-eqz v2, :cond_1

    .line 4856
    invoke-virtual {v2}, Lcom/android/internal/app/procstats/ProcessState;->getPackage()Ljava/lang/String;

    move-result-object v0

    goto :goto_1

    :cond_1
    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v0, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    :goto_1
    move-object v6, v0

    .line 4857
    invoke-virtual/range {p1 .. p1}, Landroid/os/Debug$MemoryInfo;->getTotalPss()I

    move-result v0

    int-to-long v7, v0

    .line 4858
    invoke-virtual/range {p1 .. p1}, Landroid/os/Debug$MemoryInfo;->getTotalUss()I

    move-result v0

    int-to-long v9, v0

    .line 4859
    invoke-virtual/range {p1 .. p1}, Landroid/os/Debug$MemoryInfo;->getTotalRss()I

    move-result v0

    int-to-long v11, v0

    const/4 v13, 0x4

    iget-wide v0, v1, Lcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;->appVersion:J

    move-wide/from16 v16, v0

    .line 4863
    invoke-virtual/range {p4 .. p4}, Lcom/android/server/am/ProcessProfileRecord;->getCurrentHostingComponentTypes()I

    move-result v18

    .line 4864
    invoke-virtual/range {p4 .. p4}, Lcom/android/server/am/ProcessProfileRecord;->getHistoricalHostingComponentTypes()I

    move-result v19

    move-wide/from16 v14, p2

    .line 4853
    invoke-static/range {v3 .. v19}, Lcom/android/internal/util/FrameworkStatsLog;->write(IILjava/lang/String;Ljava/lang/String;JJJIJJII)V

    return-void
.end method

.method public static synthetic lambda$getProcessPss$3(Lcom/android/server/am/ProcessRecord;J[JJLcom/android/server/am/ProcessProfileRecord;Lcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;)V
    .locals 18

    move-object/from16 v0, p7

    move-wide/from16 v5, p1

    move-wide/from16 v12, p4

    const/16 v1, 0x12

    move-object/from16 v2, p0

    .line 4913
    iget-object v2, v2, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    iget-object v3, v0, Lcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;->state:Lcom/android/internal/app/procstats/ProcessState;

    .line 4915
    invoke-virtual {v3}, Lcom/android/internal/app/procstats/ProcessState;->getName()Ljava/lang/String;

    move-result-object v3

    iget-object v4, v0, Lcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;->state:Lcom/android/internal/app/procstats/ProcessState;

    .line 4916
    invoke-virtual {v4}, Lcom/android/internal/app/procstats/ProcessState;->getPackage()Ljava/lang/String;

    move-result-object v4

    const/4 v7, 0x0

    aget-wide v7, p3, v7

    const/4 v9, 0x2

    aget-wide v9, p3, v9

    const/4 v11, 0x3

    iget-wide v14, v0, Lcom/android/internal/app/procstats/ProcessStats$ProcessStateHolder;->appVersion:J

    .line 4923
    invoke-virtual/range {p6 .. p6}, Lcom/android/server/am/ProcessProfileRecord;->getCurrentHostingComponentTypes()I

    move-result v16

    .line 4924
    invoke-virtual/range {p6 .. p6}, Lcom/android/server/am/ProcessProfileRecord;->getHistoricalHostingComponentTypes()I

    move-result v17

    .line 4913
    invoke-static/range {v1 .. v17}, Lcom/android/internal/util/FrameworkStatsLog;->write(IILjava/lang/String;Ljava/lang/String;JJJIJJII)V

    return-void
.end method

.method public static synthetic lambda$getProcessesInErrorState$19(ZIZI[Ljava/util/List;Lcom/android/server/am/ProcessRecord;)V
    .locals 0

    if-nez p0, :cond_0

    .line 11703
    iget p0, p5, Lcom/android/server/am/ProcessRecord;->userId:I

    if-eq p0, p1, :cond_0

    return-void

    :cond_0
    if-nez p2, :cond_1

    .line 11706
    iget-object p0, p5, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget p0, p0, Landroid/content/pm/ApplicationInfo;->uid:I

    if-eq p0, p3, :cond_1

    return-void

    .line 11709
    :cond_1
    iget-object p0, p5, Lcom/android/server/am/ProcessRecord;->mErrorState:Lcom/android/server/am/ProcessErrorStateRecord;

    .line 11710
    invoke-virtual {p0}, Lcom/android/server/am/ProcessErrorStateRecord;->isCrashing()Z

    move-result p1

    .line 11711
    invoke-virtual {p0}, Lcom/android/server/am/ProcessErrorStateRecord;->isNotResponding()Z

    move-result p2

    .line 11712
    invoke-virtual {p5}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object p3

    if-eqz p3, :cond_7

    if-nez p1, :cond_2

    if-eqz p2, :cond_7

    :cond_2
    if-eqz p1, :cond_3

    .line 11717
    invoke-virtual {p0}, Lcom/android/server/am/ProcessErrorStateRecord;->getCrashingReport()Landroid/app/ActivityManager$ProcessErrorStateInfo;

    move-result-object p0

    goto :goto_0

    :cond_3
    if-eqz p2, :cond_4

    .line 11719
    invoke-virtual {p0}, Lcom/android/server/am/ProcessErrorStateRecord;->getNotRespondingReport()Landroid/app/ActivityManager$ProcessErrorStateInfo;

    move-result-object p0

    goto :goto_0

    :cond_4
    const/4 p0, 0x0

    :goto_0
    if-eqz p0, :cond_6

    const/4 p1, 0x0

    .line 11723
    aget-object p2, p4, p1

    if-nez p2, :cond_5

    .line 11724
    new-instance p2, Ljava/util/ArrayList;

    const/4 p3, 0x1

    invoke-direct {p2, p3}, Ljava/util/ArrayList;-><init>(I)V

    aput-object p2, p4, p1

    .line 11726
    :cond_5
    aget-object p1, p4, p1

    invoke-interface {p1, p0}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    goto :goto_1

    .line 11728
    :cond_6
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string p3, "Missing app error report, app = "

    invoke-virtual {p0, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object p3, p5, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {p0, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p3, " crashing = "

    invoke-virtual {p0, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    const-string p1, " notResponding = "

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    const-string p1, "ActivityManager"

    invoke-static {p1, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    :cond_7
    :goto_1
    return-void
.end method

.method private synthetic lambda$handleAppDiedLocked$1(Lcom/android/server/am/ProcessRecord;)V
    .locals 3

    .line 3983
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Crash of app "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " running instrumentation "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3984
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getActiveInstrumentation()Lcom/android/server/am/ActiveInstrumentation;

    move-result-object v1

    iget-object v1, v1, Lcom/android/server/am/ActiveInstrumentation;->mClass:Landroid/content/ComponentName;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "ActivityManager"

    .line 3983
    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 3985
    new-instance v0, Landroid/os/Bundle;

    invoke-direct {v0}, Landroid/os/Bundle;-><init>()V

    const-string/jumbo v1, "shortMsg"

    const-string v2, "Process crashed."

    .line 3986
    invoke-virtual {v0, v1, v2}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    const/4 v1, 0x0

    .line 3987
    invoke-virtual {p0, p1, v1, v0}, Lcom/android/server/am/ActivityManagerService;->finishInstrumentationLocked(Lcom/android/server/am/ProcessRecord;ILandroid/os/Bundle;)V

    return-void
.end method

.method private synthetic lambda$killPids$9(Ljava/util/ArrayList;Ljava/lang/String;)V
    .locals 6

    .line 10212
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 10213
    :try_start_0
    invoke-virtual {p1}, Ljava/util/ArrayList;->size()I

    move-result v0

    const/4 v1, 0x0

    :goto_0
    if-ge v1, v0, :cond_0

    .line 10214
    invoke-virtual {p1, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    const/16 v3, 0xd

    const/16 v4, 0xc

    const/4 v5, 0x1

    invoke-virtual {v2, p2, v3, v4, v5}, Lcom/android/server/am/ProcessRecord;->killLocked(Ljava/lang/String;IIZ)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 10218
    :cond_0
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public static synthetic lambda$logStrictModeViolationToDropBox$16(Landroid/os/DropBoxManager;Ljava/lang/String;Ljava/lang/String;)V
    .locals 0

    .line 11257
    invoke-virtual {p0, p1, p2}, Landroid/os/DropBoxManager;->addText(Ljava/lang/String;Ljava/lang/String;)V

    return-void
.end method

.method private synthetic lambda$performIdleMaintenance$10(Lcom/android/server/am/ProcessRecord;JJ)V
    .locals 2

    .line 10464
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 10465
    :try_start_0
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "idle maint (pss "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p2, p3}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string p2, " from "

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p4, p5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string p2, ")"

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    const/4 p3, 0x6

    const/4 p4, 0x1

    const/16 p5, 0xd

    invoke-virtual {p1, p2, p5, p3, p4}, Lcom/android/server/am/ProcessRecord;->killLocked(Ljava/lang/String;IIZ)V

    .line 10470
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method private synthetic lambda$performIdleMaintenance$11(ZJJJJLcom/android/server/am/ProcessRecord;)V
    .locals 12

    move-object v0, p0

    move-object/from16 v1, p10

    .line 10431
    invoke-virtual/range {p10 .. p10}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v2

    if-nez v2, :cond_0

    return-void

    .line 10434
    :cond_0
    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->mProfile:Lcom/android/server/am/ProcessProfileRecord;

    .line 10435
    iget-object v3, v1, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    .line 10436
    invoke-virtual {v3}, Lcom/android/server/am/ProcessStateRecord;->getSetProcState()I

    move-result v4

    .line 10437
    invoke-virtual {v3}, Lcom/android/server/am/ProcessStateRecord;->isNotCachedSinceIdle()Z

    move-result v5

    const-wide/16 v6, 0x0

    if-eqz v5, :cond_1

    const/4 v3, 0x5

    if-lt v4, v3, :cond_2

    const/16 v3, 0xa

    if-gt v4, v3, :cond_2

    .line 10441
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    iget-object v3, v3, Lcom/android/server/am/AppProfiler;->mProfilerLock:Ljava/lang/Object;

    monitor-enter v3

    .line 10442
    :try_start_0
    invoke-virtual {v2}, Lcom/android/server/am/ProcessProfileRecord;->getInitialIdlePss()J

    move-result-wide v4

    .line 10443
    invoke-virtual {v2}, Lcom/android/server/am/ProcessProfileRecord;->getLastPss()J

    move-result-wide v8

    .line 10444
    invoke-virtual {v2}, Lcom/android/server/am/ProcessProfileRecord;->getLastSwapPss()J

    move-result-wide v10

    .line 10445
    monitor-exit v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-eqz p1, :cond_2

    cmp-long v2, v4, v6

    if-eqz v2, :cond_2

    const-wide/16 v2, 0x3

    mul-long/2addr v2, v4

    const-wide/16 v6, 0x2

    .line 10446
    div-long/2addr v2, v6

    cmp-long v2, v8, v2

    if-lez v2, :cond_2

    add-long v2, v4, p2

    cmp-long v2, v8, v2

    if-lez v2, :cond_2

    .line 10449
    new-instance v2, Ljava/lang/StringBuilder;

    const/16 v3, 0x80

    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(I)V

    const-string v3, "Kill"

    .line 10450
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 10451
    iget-object v3, v1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, " in idle maint: pss="

    .line 10452
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 10453
    invoke-virtual {v2, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v3, ", swapPss="

    .line 10454
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 10455
    invoke-virtual {v2, v10, v11}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v3, ", initialPss="

    .line 10456
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 10457
    invoke-virtual {v2, v4, v5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v3, ", period="

    .line 10458
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-wide/from16 v6, p4

    .line 10459
    invoke-static {v6, v7, v2}, Landroid/util/TimeUtils;->formatDuration(JLjava/lang/StringBuilder;)V

    const-string v3, ", lowRamPeriod="

    .line 10460
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-wide/from16 v6, p6

    .line 10461
    invoke-static {v6, v7, v2}, Landroid/util/TimeUtils;->formatDuration(JLjava/lang/StringBuilder;)V

    const-string v3, "ActivityManager"

    .line 10462
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v3, v2}, Landroid/util/Slog;->wtfQuiet(Ljava/lang/String;Ljava/lang/String;)V

    .line 10463
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v3, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda19;

    move-object p1, v3

    move-object p2, p0

    move-object/from16 p3, p10

    move-wide/from16 p4, v8

    move-wide/from16 p6, v4

    invoke-direct/range {p1 .. p7}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda19;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;JJ)V

    invoke-virtual {v2, v3}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    goto :goto_0

    :catchall_0
    move-exception v0

    .line 10445
    :try_start_1
    monitor-exit v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v0

    :cond_1
    const/16 v5, 0xe

    if-ge v4, v5, :cond_2

    if-ltz v4, :cond_2

    const/4 v4, 0x1

    .line 10476
    invoke-virtual {v3, v4}, Lcom/android/server/am/ProcessStateRecord;->setNotCachedSinceIdle(Z)V

    .line 10477
    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    iget-object v4, v4, Lcom/android/server/am/AppProfiler;->mProfilerLock:Ljava/lang/Object;

    monitor-enter v4

    .line 10478
    :try_start_2
    invoke-virtual {v2, v6, v7}, Lcom/android/server/am/ProcessProfileRecord;->setInitialIdlePss(J)V

    .line 10479
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    .line 10480
    invoke-virtual {v3}, Lcom/android/server/am/ProcessStateRecord;->getSetProcState()I

    move-result v2

    iget-object v1, v1, Lcom/android/server/am/ProcessRecord;->mProfile:Lcom/android/server/am/ProcessProfileRecord;

    const/4 v3, 0x1

    move-object p0, v0

    move p1, v2

    move-object p2, v1

    move-wide/from16 p3, p8

    move/from16 p5, v3

    .line 10479
    invoke-virtual/range {p0 .. p5}, Lcom/android/server/am/AppProfiler;->updateNextPssTimeLPf(ILcom/android/server/am/ProcessProfileRecord;JZ)V

    .line 10481
    monitor-exit v4

    goto :goto_0

    :catchall_1
    move-exception v0

    monitor-exit v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    throw v0

    :cond_2
    :goto_0
    return-void
.end method

.method private synthetic lambda$scheduleBinderHeavyHitterAutoSampler$43(Ljava/util/List;IFJ)V
    .locals 0

    .line 23002
    invoke-virtual/range {p0 .. p5}, Lcom/android/server/am/ActivityManagerService;->handleBinderHeavyHitters(Ljava/util/List;IFJ)V

    return-void
.end method

.method private synthetic lambda$scheduleBinderHeavyHitterAutoSampler$44(Ljava/util/List;IFJ)V
    .locals 9

    .line 23002
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v8, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda42;

    move-object v1, v8

    move-object v2, p0

    move-object v3, p1

    move v4, p2

    move v5, p3

    move-wide v6, p4

    invoke-direct/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda42;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/util/List;IFJ)V

    invoke-virtual {v0, v8}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    return-void
.end method

.method private synthetic lambda$scheduleBinderHeavyHitterAutoSampler$45()V
    .locals 7

    .line 22980
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v0

    .line 22981
    :try_start_0
    sget-boolean v1, Lcom/android/server/am/ActivityManagerConstants;->BINDER_HEAVY_HITTER_AUTO_SAMPLER_ENABLED:Z

    if-nez v1, :cond_0

    .line 22983
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return-void

    .line 22985
    :cond_0
    :try_start_1
    sget-boolean v1, Lcom/android/server/am/ActivityManagerConstants;->BINDER_HEAVY_HITTER_WATCHER_ENABLED:Z

    if-eqz v1, :cond_1

    .line 22987
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return-void

    .line 22989
    :cond_1
    :try_start_2
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v1

    .line 22990
    iget-wide v3, p0, Lcom/android/server/am/ActivityManagerService;->mLastBinderHeavyHitterAutoSamplerStart:J

    const-wide/32 v5, 0x36ee80

    add-long/2addr v3, v5

    cmp-long v3, v3, v1

    if-lez v3, :cond_2

    .line 22993
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return-void

    .line 22995
    :cond_2
    :try_start_3
    sget v3, Lcom/android/server/am/ActivityManagerConstants;->BINDER_HEAVY_HITTER_AUTO_SAMPLER_BATCHSIZE:I

    .line 22996
    sget v4, Lcom/android/server/am/ActivityManagerConstants;->BINDER_HEAVY_HITTER_AUTO_SAMPLER_THRESHOLD:F

    .line 22997
    monitor-exit v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 22999
    iput-wide v1, p0, Lcom/android/server/am/ActivityManagerService;->mLastBinderHeavyHitterAutoSamplerStart:J

    .line 23001
    new-instance v0, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda33;

    invoke-direct {v0, p0}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda33;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    const/4 v1, 0x1

    invoke-static {v1, v3, v4, v0}, Landroid/os/Binder;->setHeavyHitterWatcherConfig(ZIFLcom/android/internal/os/BinderCallHeavyHitterWatcher$BinderCallHeavyHitterListener;)V

    .line 23004
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v0, 0x48

    invoke-virtual {p0, v0}, Landroid/os/Handler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v0

    const-wide/32 v1, 0x493e0

    invoke-virtual {p0, v0, v1, v2}, Landroid/os/Handler;->sendMessageDelayed(Landroid/os/Message;J)Z

    return-void

    :catchall_0
    move-exception p0

    .line 22997
    :try_start_4
    monitor-exit v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p0
.end method

.method private synthetic lambda$schedulePendingSystemServerWtfs$17(Ljava/util/LinkedList;)V
    .locals 0

    .line 11347
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->handlePendingSystemServerWtfs(Ljava/util/LinkedList;)V

    return-void
.end method

.method private synthetic lambda$scheduleUpdateBinderHeavyHitterWatcherConfig$38(Ljava/util/List;IFJ)V
    .locals 0

    .line 22952
    invoke-virtual/range {p0 .. p5}, Lcom/android/server/am/ActivityManagerService;->handleBinderHeavyHitters(Ljava/util/List;IFJ)V

    return-void
.end method

.method private synthetic lambda$scheduleUpdateBinderHeavyHitterWatcherConfig$39(Ljava/util/List;IFJ)V
    .locals 9

    .line 22951
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v8, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda46;

    move-object v1, v8

    move-object v2, p0

    move-object v3, p1

    move v4, p2

    move v5, p3

    move-wide v6, p4

    invoke-direct/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda46;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/util/List;IFJ)V

    invoke-virtual {v0, v8}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    return-void
.end method

.method private synthetic lambda$scheduleUpdateBinderHeavyHitterWatcherConfig$40(Ljava/util/List;IFJ)V
    .locals 0

    .line 22959
    invoke-virtual/range {p0 .. p5}, Lcom/android/server/am/ActivityManagerService;->handleBinderHeavyHitters(Ljava/util/List;IFJ)V

    return-void
.end method

.method private synthetic lambda$scheduleUpdateBinderHeavyHitterWatcherConfig$41(Ljava/util/List;IFJ)V
    .locals 9

    .line 22958
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v8, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda47;

    move-object v1, v8

    move-object v2, p0

    move-object v3, p1

    move v4, p2

    move v5, p3

    move-wide v6, p4

    invoke-direct/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda47;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/util/List;IFJ)V

    invoke-virtual {v0, v8}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    return-void
.end method

.method private synthetic lambda$scheduleUpdateBinderHeavyHitterWatcherConfig$42()V
    .locals 5

    .line 22943
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v0

    .line 22944
    :try_start_0
    sget-boolean v1, Lcom/android/server/am/ActivityManagerConstants;->BINDER_HEAVY_HITTER_WATCHER_ENABLED:Z

    const/16 v2, 0x48

    if-eqz v1, :cond_0

    .line 22946
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v1, v2}, Landroid/os/Handler;->removeMessages(I)V

    .line 22949
    sget v1, Lcom/android/server/am/ActivityManagerConstants;->BINDER_HEAVY_HITTER_WATCHER_BATCHSIZE:I

    .line 22950
    sget v2, Lcom/android/server/am/ActivityManagerConstants;->BINDER_HEAVY_HITTER_WATCHER_THRESHOLD:F

    .line 22951
    new-instance v3, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda37;

    invoke-direct {v3, p0}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda37;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    const/4 p0, 0x1

    goto :goto_0

    .line 22953
    :cond_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v1, v2}, Landroid/os/Handler;->hasMessages(I)Z

    move-result v1

    if-eqz v1, :cond_1

    .line 22955
    sget-boolean v1, Lcom/android/server/am/ActivityManagerConstants;->BINDER_HEAVY_HITTER_AUTO_SAMPLER_ENABLED:Z

    .line 22956
    sget v2, Lcom/android/server/am/ActivityManagerConstants;->BINDER_HEAVY_HITTER_AUTO_SAMPLER_BATCHSIZE:I

    .line 22957
    sget v3, Lcom/android/server/am/ActivityManagerConstants;->BINDER_HEAVY_HITTER_AUTO_SAMPLER_THRESHOLD:F

    .line 22958
    new-instance v4, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda38;

    invoke-direct {v4, p0}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda38;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    move p0, v1

    move v1, v2

    move v2, v3

    move-object v3, v4

    goto :goto_0

    :cond_1
    const/4 v1, 0x0

    const/4 v2, 0x0

    const/4 v3, 0x0

    move p0, v1

    .line 22967
    :goto_0
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 22968
    invoke-static {p0, v1, v2, v3}, Landroid/os/Binder;->setHeavyHitterWatcherConfig(ZIFLcom/android/internal/os/BinderCallHeavyHitterWatcher$BinderCallHeavyHitterListener;)V

    return-void

    :catchall_0
    move-exception p0

    .line 22967
    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p0
.end method

.method public static synthetic lambda$signalPersistentProcesses$34(ILcom/android/server/am/ProcessRecord;)V
    .locals 1

    .line 19883
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v0

    if-eqz v0, :cond_0

    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->isPersistent()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 19884
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result p1

    invoke-static {p1, p0}, Landroid/os/Process;->sendSignal(II)V

    :cond_0
    return-void
.end method

.method private synthetic lambda$startBinderTracking$35(Lcom/android/server/am/ProcessRecord;)V
    .locals 1

    .line 20368
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v0

    .line 20369
    invoke-virtual {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->processSanityChecksLPr(Lcom/android/server/am/ProcessRecord;Landroid/app/IApplicationThread;)Z

    move-result p0

    if-nez p0, :cond_0

    return-void

    .line 20373
    :cond_0
    :try_start_0
    invoke-interface {v0}, Landroid/app/IApplicationThread;->startBinderTracking()V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    :catch_0
    const-string p0, "ActivityManager"

    const-string p1, "Process disappared"

    .line 20375
    invoke-static {p0, p1}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    :goto_0
    return-void
.end method

.method private synthetic lambda$stopBinderTrackingAndDump$36(Ljava/io/PrintWriter;Landroid/os/ParcelFileDescriptor;Lcom/android/server/am/ProcessRecord;)V
    .locals 7

    const-string v0, ".  Exception: "

    .line 20411
    invoke-virtual {p3}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v1

    .line 20412
    invoke-virtual {p0, p3, v1}, Lcom/android/server/am/ActivityManagerService;->processSanityChecksLPr(Lcom/android/server/am/ProcessRecord;Landroid/app/IApplicationThread;)Z

    move-result v2

    if-nez v2, :cond_0

    return-void

    .line 20416
    :cond_0
    invoke-static {}, Lcom/android/server/am/CachedAppOptimizer;->isFreezerSupported()Z

    move-result v2

    if-eqz v2, :cond_1

    .line 20417
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    iget-object p0, p0, Lcom/android/server/am/OomAdjuster;->mCachedAppOptimizer:Lcom/android/server/am/CachedAppOptimizer;

    const/16 v2, 0x17

    invoke-virtual {p0, p3, v2}, Lcom/android/server/am/CachedAppOptimizer;->unfreezeAppLSP(Lcom/android/server/am/ProcessRecord;I)V

    .line 20420
    :cond_1
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Traces for process: "

    invoke-virtual {p0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, p3, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {p0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-virtual {p1, p0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20421
    invoke-virtual {p1}, Ljava/io/PrintWriter;->flush()V

    .line 20423
    :try_start_0
    new-instance p0, Lcom/android/internal/os/TransferPipe;

    invoke-direct {p0}, Lcom/android/internal/os/TransferPipe;-><init>()V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_1
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 20426
    :try_start_1
    sget-boolean v2, Landroid/os/Binder;->isSystemServerBinderTrackerEnabled:Z

    if-eqz v2, :cond_2

    .line 20428
    invoke-virtual {p0}, Lcom/android/internal/os/TransferPipe;->getWriteFd()Landroid/os/ParcelFileDescriptor;

    move-result-object v2

    iget-object v3, p3, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    .line 20429
    invoke-virtual {p3}, Lcom/android/server/am/ProcessRecord;->getPkgList()Lcom/android/server/am/PackageList;

    move-result-object v4

    invoke-virtual {v4}, Lcom/android/server/am/PackageList;->getPackageList()[Ljava/lang/String;

    move-result-object v4

    const/4 v5, 0x0

    aget-object v4, v4, v5

    iget v5, p3, Lcom/android/server/am/ProcessRecord;->mPid:I

    iget v6, p3, Lcom/android/server/am/ProcessRecord;->uid:I

    .line 20427
    invoke-interface/range {v1 .. v6}, Landroid/app/IApplicationThread;->stopBinderTrackingAndDumpSystemServer(Landroid/os/ParcelFileDescriptor;Ljava/lang/String;Ljava/lang/String;II)V

    .line 20430
    invoke-virtual {p2}, Landroid/os/ParcelFileDescriptor;->getFileDescriptor()Ljava/io/FileDescriptor;

    move-result-object p2

    const-wide/16 v1, 0x2710

    invoke-virtual {p0, p2, v1, v2}, Lcom/android/internal/os/TransferPipe;->go(Ljava/io/FileDescriptor;J)V

    goto :goto_0

    .line 20432
    :cond_2
    invoke-virtual {p0}, Lcom/android/internal/os/TransferPipe;->getWriteFd()Landroid/os/ParcelFileDescriptor;

    move-result-object v2

    invoke-interface {v1, v2}, Landroid/app/IApplicationThread;->stopBinderTrackingAndDump(Landroid/os/ParcelFileDescriptor;)V

    .line 20433
    invoke-virtual {p2}, Landroid/os/ParcelFileDescriptor;->getFileDescriptor()Ljava/io/FileDescriptor;

    move-result-object p2

    invoke-virtual {p0, p2}, Lcom/android/internal/os/TransferPipe;->go(Ljava/io/FileDescriptor;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 20437
    :goto_0
    :try_start_2
    invoke-virtual {p0}, Lcom/android/internal/os/TransferPipe;->kill()V

    goto :goto_1

    :catchall_0
    move-exception p2

    invoke-virtual {p0}, Lcom/android/internal/os/TransferPipe;->kill()V

    .line 20438
    throw p2
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_1
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0

    :catch_0
    move-exception p0

    .line 20444
    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Got a RemoteException while dumping IPC traces from "

    invoke-virtual {p2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-virtual {p1, p0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20446
    invoke-virtual {p1}, Ljava/io/PrintWriter;->flush()V

    goto :goto_1

    :catch_1
    move-exception p0

    .line 20440
    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Failure while dumping IPC traces from "

    invoke-virtual {p2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-virtual {p1, p0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20442
    invoke-virtual {p1}, Ljava/io/PrintWriter;->flush()V

    :goto_1
    return-void
.end method

.method private synthetic lambda$systemReady$12(Landroid/os/PowerSaveState;)V
    .locals 0

    .line 10658
    iget-boolean p1, p1, Landroid/os/PowerSaveState;->batterySaverEnabled:Z

    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->updateForceBackgroundCheck(Z)V

    return-void
.end method

.method private synthetic lambda$systemReady$13(I)V
    .locals 2

    .line 10821
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Uid "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " sent too many Binders to uid "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 10822
    invoke-static {}, Landroid/os/Process;->myUid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "ActivityManager"

    .line 10821
    invoke-static {v1, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 10823
    invoke-static {}, Landroid/os/BinderProxy;->dumpProxyDebugInfo()V

    const/16 v0, 0x3e8

    if-ne p1, v0, :cond_0

    const-string p0, "Skipping kill (uid is SYSTEM)"

    .line 10825
    invoke-static {v1, p0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    .line 10827
    :cond_0
    invoke-static {p1}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v0

    invoke-static {p1}, Landroid/os/UserHandle;->getUserId(I)I

    move-result p1

    const-string v1, "Too many Binders sent to SYSTEM"

    invoke-virtual {p0, v0, p1, v1}, Lcom/android/server/am/ActivityManagerService;->killUid(IILjava/lang/String;)V

    .line 10839
    invoke-static {}, Ldalvik/system/VMRuntime;->getRuntime()Ldalvik/system/VMRuntime;

    move-result-object p0

    invoke-virtual {p0}, Ldalvik/system/VMRuntime;->requestConcurrentGC()V

    :goto_0
    return-void
.end method

.method private synthetic lambda$systemReady$14()V
    .locals 1

    .line 10855
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 10856
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mExt:Lcom/android/server/am/ActivityManagerServiceExt;

    invoke-virtual {v0}, Lcom/android/server/am/ActivityManagerServiceExt;->initLongLivePackageLocked()V

    .line 10857
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method private synthetic lambda$systemReady$15()V
    .locals 1

    .line 10862
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 10863
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mExt:Lcom/android/server/am/ActivityManagerServiceExt;

    invoke-virtual {v0}, Lcom/android/server/am/ActivityManagerServiceExt;->initTmoForceStopPolicy()V

    .line 10864
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method private synthetic lambda$updateAppProcessCpuTimeLPr$30(Lcom/android/server/am/ProcessRecord;JJJI)V
    .locals 2

    .line 19260
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 19261
    :try_start_0
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v0

    if-eqz v0, :cond_1

    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    .line 19262
    invoke-virtual {v0}, Lcom/android/server/am/ProcessStateRecord;->getSetProcState()I

    move-result v0

    const/16 v1, 0xe

    if-ge v0, v1, :cond_0

    goto :goto_0

    .line 19265
    :cond_0
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "excessive cpu "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p2, p3}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string p2, " during "

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p4, p5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string p2, " dur="

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p6, p7}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string p2, " limit="

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    const/4 p3, 0x7

    const/4 p4, 0x1

    const/16 p5, 0x9

    invoke-virtual {p1, p2, p5, p3, p4}, Lcom/android/server/am/ProcessRecord;->killLocked(Ljava/lang/String;IIZ)V

    .line 19270
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 19263
    :cond_1
    :goto_0
    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :catchall_0
    move-exception p1

    .line 19270
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method private synthetic lambda$updatePhantomProcessCpuTimeLPr$31(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/PhantomProcessRecord;JJJI)V
    .locals 5

    .line 19289
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 19290
    :try_start_0
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v0

    if-eqz v0, :cond_1

    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    .line 19291
    invoke-virtual {v0}, Lcom/android/server/am/ProcessStateRecord;->getSetProcState()I

    move-result v0

    const/16 v1, 0xe

    if-ge v0, v1, :cond_0

    goto :goto_0

    .line 19294
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPhantomProcessList:Lcom/android/server/am/PhantomProcessList;

    const/16 v1, 0x9

    const/4 v2, 0x7

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "excessive cpu "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p3, p4}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string p3, " during "

    invoke-virtual {v3, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p5, p6}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string p3, " dur="

    invoke-virtual {v3, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p7, p8}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string p3, " limit="

    invoke-virtual {v3, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p8

    move-object p3, v0

    move-object p4, p1

    move-object p5, p2

    move p6, v1

    move p7, v2

    invoke-virtual/range {p3 .. p8}, Lcom/android/server/am/PhantomProcessList;->killPhantomProcessGroupLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/PhantomProcessRecord;IILjava/lang/String;)V

    .line 19299
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 19292
    :cond_1
    :goto_0
    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :catchall_0
    move-exception p1

    .line 19299
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method private synthetic lambda$updatePhantomProcessCpuTimeLPr$32(JZLcom/android/server/am/ProcessRecord;IJLcom/android/server/am/PhantomProcessRecord;)Ljava/lang/Boolean;
    .locals 16

    move-object/from16 v3, p8

    .line 19284
    iget-wide v0, v3, Lcom/android/server/am/PhantomProcessRecord;->mLastCputime:J

    const-wide/16 v4, 0x0

    cmp-long v2, v0, v4

    if-lez v2, :cond_0

    .line 19285
    iget-wide v4, v3, Lcom/android/server/am/PhantomProcessRecord;->mCurrentCputime:J

    sub-long/2addr v4, v0

    move-object/from16 v2, p4

    .line 19286
    iget-object v12, v2, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    .line 19287
    invoke-virtual/range {p8 .. p8}, Lcom/android/server/am/PhantomProcessRecord;->toString()Ljava/lang/String;

    move-result-object v13

    move-object/from16 v6, p0

    move-wide/from16 v7, p1

    move/from16 v9, p3

    move-wide v10, v4

    move/from16 v14, p5

    move-object/from16 v15, p4

    .line 19286
    invoke-virtual/range {v6 .. v15}, Lcom/android/server/am/ActivityManagerService;->checkExcessivePowerUsageLPr(JZJLjava/lang/String;Ljava/lang/String;ILcom/android/server/am/ProcessRecord;)Z

    move-result v0

    if-eqz v0, :cond_0

    move-object/from16 v1, p0

    .line 19288
    iget-object v11, v1, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v12, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda43;

    move-object v0, v12

    move-object/from16 v2, p4

    move-object/from16 v3, p8

    move-wide/from16 v6, p1

    move-wide/from16 v8, p6

    move/from16 v10, p5

    invoke-direct/range {v0 .. v10}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda43;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/PhantomProcessRecord;JJJI)V

    invoke-virtual {v11, v12}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 19301
    sget-object v0, Ljava/lang/Boolean;->FALSE:Ljava/lang/Boolean;

    return-object v0

    .line 19304
    :cond_0
    iget-wide v0, v3, Lcom/android/server/am/PhantomProcessRecord;->mCurrentCputime:J

    iput-wide v0, v3, Lcom/android/server/am/PhantomProcessRecord;->mLastCputime:J

    .line 19305
    sget-object v0, Ljava/lang/Boolean;->TRUE:Ljava/lang/Boolean;

    return-object v0
.end method

.method public static synthetic lambda$waitForApplicationBarrier$37(Ljava/util/concurrent/atomic/AtomicInteger;Ljava/util/concurrent/atomic/AtomicInteger;Ljava/util/concurrent/CountDownLatch;Landroid/os/Bundle;)V
    .locals 0

    .line 22535
    invoke-virtual {p0}, Ljava/util/concurrent/atomic/AtomicInteger;->incrementAndGet()I

    move-result p0

    invoke-virtual {p1}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    move-result p1

    if-ne p0, p1, :cond_0

    .line 22536
    invoke-virtual {p2}, Ljava/util/concurrent/CountDownLatch;->countDown()V

    :cond_0
    return-void
.end method

.method public static processClass(Lcom/android/server/am/ProcessRecord;)Ljava/lang/String;
    .locals 2

    if-eqz p0, :cond_3

    .line 11479
    invoke-virtual {p0}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v0

    sget v1, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-ne v0, v1, :cond_0

    goto :goto_1

    .line 11481
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    invoke-virtual {v0}, Landroid/content/pm/ApplicationInfo;->isSystemApp()Z

    move-result v0

    if-nez v0, :cond_2

    iget-object p0, p0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    invoke-virtual {p0}, Landroid/content/pm/ApplicationInfo;->isSystemExt()Z

    move-result p0

    if-eqz p0, :cond_1

    goto :goto_0

    :cond_1
    const-string p0, "data_app"

    return-object p0

    :cond_2
    :goto_0
    const-string/jumbo p0, "system_app"

    return-object p0

    :cond_3
    :goto_1
    const-string/jumbo p0, "system_server"

    return-object p0
.end method

.method public static resetPriorityAfterLockedSection()V
    .locals 1

    .line 1088
    sget-object v0, Lcom/android/server/am/ActivityManagerService;->sThreadPriorityBooster:Lcom/android/server/ThreadPriorityBooster;

    invoke-virtual {v0}, Lcom/android/server/ThreadPriorityBooster;->reset()V

    return-void
.end method

.method public static resetPriorityAfterProcLockedSection()V
    .locals 1

    .line 1104
    sget-object v0, Lcom/android/server/am/ActivityManagerService;->sProcThreadPriorityBooster:Lcom/android/server/ThreadPriorityBooster;

    invoke-virtual {v0}, Lcom/android/server/ThreadPriorityBooster;->reset()V

    return-void
.end method

.method public static scheduleAsFifoPriority(IZ)Z
    .locals 3

    const-string v0, "ActivityManager"

    const v1, 0x40000001    # 2.0000002f

    const/4 v2, 0x1

    .line 9830
    :try_start_0
    invoke-static {p0, v1, v2}, Landroid/os/Process;->setThreadScheduler(III)V
    :try_end_0
    .catch Ljava/lang/IllegalArgumentException; {:try_start_0 .. :try_end_0} :catch_1
    .catch Ljava/lang/SecurityException; {:try_start_0 .. :try_end_0} :catch_0

    return v2

    :catch_0
    move-exception p0

    if-nez p1, :cond_0

    .line 9838
    new-instance p1, Ljava/lang/StringBuilder;

    invoke-direct {p1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Failed to set scheduling policy, not allowed:\n"

    invoke-virtual {p1, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-static {v0, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    :catch_1
    move-exception p0

    if-nez p1, :cond_0

    .line 9834
    new-instance p1, Ljava/lang/StringBuilder;

    invoke-direct {p1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Failed to set scheduling policy, thread does not exist:\n"

    invoke-virtual {p1, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-static {v0, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    :cond_0
    :goto_0
    const/4 p0, 0x0

    return p0
.end method

.method public static scheduleAsRegularPriority(IZ)Z
    .locals 3

    const-string v0, "ActivityManager"

    const/4 v1, 0x0

    .line 9806
    :try_start_0
    invoke-static {p0, v1, v1}, Landroid/os/Process;->setThreadScheduler(III)V
    :try_end_0
    .catch Ljava/lang/IllegalArgumentException; {:try_start_0 .. :try_end_0} :catch_1
    .catch Ljava/lang/SecurityException; {:try_start_0 .. :try_end_0} :catch_0

    const/4 p0, 0x1

    return p0

    :catch_0
    move-exception p0

    if-nez p1, :cond_0

    .line 9814
    new-instance p1, Ljava/lang/StringBuilder;

    invoke-direct {p1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Failed to set scheduling policy, not allowed:\n"

    invoke-virtual {p1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-static {v0, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    :catch_1
    move-exception p0

    if-nez p1, :cond_0

    .line 9810
    new-instance p1, Ljava/lang/StringBuilder;

    invoke-direct {p1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Failed to set scheduling policy, thread does not exist:\n"

    invoke-virtual {p1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-static {v0, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    :cond_0
    :goto_0
    return v1
.end method

.method public static sortMemItems(Ljava/util/List;Z)V
    .locals 1

    .line 13931
    new-instance v0, Lcom/android/server/am/ActivityManagerService$22;

    invoke-direct {v0, p1}, Lcom/android/server/am/ActivityManagerService$22;-><init>(Z)V

    invoke-static {p0, v0}, Ljava/util/Collections;->sort(Ljava/util/List;Ljava/util/Comparator;)V

    return-void
.end method

.method public static stringifyKBSize(J)Ljava/lang/String;
    .locals 2

    const-wide/16 v0, 0x400

    mul-long/2addr p0, v0

    const/16 v0, 0x400

    .line 14129
    invoke-static {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->stringifySize(JI)Ljava/lang/String;

    move-result-object p0

    return-object p0
.end method

.method public static stringifySize(JI)Ljava/lang/String;
    .locals 4

    .line 14113
    sget-object v0, Ljava/util/Locale;->US:Ljava/util/Locale;

    const/4 v1, 0x1

    if-eq p2, v1, :cond_3

    const/16 v1, 0x400

    const-wide/16 v2, 0x400

    if-eq p2, v1, :cond_2

    const/high16 v1, 0x100000

    if-eq p2, v1, :cond_1

    const/high16 v1, 0x40000000    # 2.0f

    if-ne p2, v1, :cond_0

    .line 14122
    div-long/2addr p0, v2

    div-long/2addr p0, v2

    div-long/2addr p0, v2

    invoke-static {p0, p1}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object p0

    filled-new-array {p0}, [Ljava/lang/Object;

    move-result-object p0

    const-string p1, "%,1dG"

    invoke-static {v0, p1, p0}, Ljava/lang/String;->format(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p0

    return-object p0

    .line 14124
    :cond_0
    new-instance p0, Ljava/lang/IllegalArgumentException;

    const-string p1, "Invalid size order"

    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 14120
    :cond_1
    div-long/2addr p0, v2

    div-long/2addr p0, v2

    invoke-static {p0, p1}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object p0

    filled-new-array {p0}, [Ljava/lang/Object;

    move-result-object p0

    const-string p1, "%,5dM"

    invoke-static {v0, p1, p0}, Ljava/lang/String;->format(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p0

    return-object p0

    .line 14118
    :cond_2
    div-long/2addr p0, v2

    invoke-static {p0, p1}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object p0

    filled-new-array {p0}, [Ljava/lang/Object;

    move-result-object p0

    const-string p1, "%,9dK"

    invoke-static {v0, p1, p0}, Ljava/lang/String;->format(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p0

    return-object p0

    .line 14116
    :cond_3
    invoke-static {p0, p1}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object p0

    filled-new-array {p0}, [Ljava/lang/Object;

    move-result-object p0

    const-string p1, "%,13d"

    invoke-static {v0, p1, p0}, Ljava/lang/String;->format(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p0

    return-object p0
.end method

.method public static traceBegin(JLjava/lang/String;Ljava/lang/String;)V
    .locals 1

    .line 23673
    invoke-static {p0, p1}, Landroid/os/Trace;->isTagEnabled(J)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 23674
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-static {p0, p1, p2}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    :cond_0
    return-void
.end method


# virtual methods
.method public final addAppLocked(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;ZLjava/lang/String;I)Lcom/android/server/am/ProcessRecord;
    .locals 7

    const/4 v4, 0x0

    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move v3, p3

    move-object v5, p4

    move v6, p5

    .line 8864
    invoke-virtual/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->addAppLocked(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;ZZLjava/lang/String;I)Lcom/android/server/am/ProcessRecord;

    move-result-object p0

    return-object p0
.end method

.method public final addAppLocked(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;ZZILjava/lang/String;ZZLjava/lang/String;I)Lcom/android/server/am/ProcessRecord;
    .locals 14

    move-object v1, p0

    move-object v11, p1

    const/4 v0, 0x0

    if-nez p3, :cond_1

    if-eqz p2, :cond_0

    move-object/from16 v2, p2

    goto :goto_0

    .line 8906
    :cond_0
    iget-object v2, v11, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    :goto_0
    iget v3, v11, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {p0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->getProcessRecordLocked(Ljava/lang/String;I)Lcom/android/server/am/ProcessRecord;

    move-result-object v2

    goto :goto_1

    :cond_1
    move-object v2, v0

    :goto_1
    const/4 v12, 0x0

    const-string v13, "added application"

    if-nez v2, :cond_3

    .line 8913
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/4 v6, 0x0

    new-instance v10, Lcom/android/server/am/HostingRecord;

    if-eqz p2, :cond_2

    move-object/from16 v3, p2

    goto :goto_2

    .line 8922
    :cond_2
    iget-object v3, v11, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    :goto_2
    invoke-direct {v10, v13, v3}, Lcom/android/server/am/HostingRecord;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    move-object v3, p1

    move-object/from16 v4, p2

    move/from16 v5, p3

    move/from16 v7, p4

    move/from16 v8, p5

    move-object/from16 v9, p6

    .line 8913
    invoke-virtual/range {v2 .. v10}, Lcom/android/server/am/ProcessList;->newProcessRecordLocked(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;ZIZILjava/lang/String;Lcom/android/server/am/HostingRecord;)Lcom/android/server/am/ProcessRecord;

    move-result-object v2

    .line 8923
    invoke-virtual {p0, v2, v12, v0}, Lcom/android/server/am/ActivityManagerService;->updateLruProcessLocked(Lcom/android/server/am/ProcessRecord;ZLcom/android/server/am/ProcessRecord;)V

    const/16 v0, 0xb

    .line 8924
    invoke-virtual {p0, v2, v0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;I)Z

    .line 8928
    :cond_3
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    iget-object v3, v11, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget v4, v2, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v4}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v4

    const/16 v5, 0x1f

    invoke-virtual {v0, v3, v4, v5}, Landroid/app/usage/UsageStatsManagerInternal;->reportEvent(Ljava/lang/String;II)V

    if-nez p4, :cond_4

    .line 8935
    :try_start_0
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mPackageManagerInt:Landroid/content/pm/PackageManagerInternal;

    iget-object v3, v11, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget v4, v2, Lcom/android/server/am/ProcessRecord;->uid:I

    .line 8936
    invoke-static {v4}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v4

    .line 8935
    invoke-virtual {v0, v3, v12, v4}, Landroid/content/pm/PackageManagerInternal;->setPackageStoppedState(Ljava/lang/String;ZI)V
    :try_end_0
    .catch Ljava/lang/IllegalArgumentException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_3

    :catch_0
    move-exception v0

    .line 8938
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Failed trying to unstop package "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v4, v11, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v4, ": "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v3, "ActivityManager"

    invoke-static {v3, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 8943
    :cond_4
    :goto_3
    iget v0, v11, Landroid/content/pm/ApplicationInfo;->flags:I

    const/16 v3, 0x9

    and-int/2addr v0, v3

    if-ne v0, v3, :cond_5

    const/4 v0, 0x1

    .line 8944
    invoke-virtual {v2, v0}, Lcom/android/server/am/ProcessRecord;->setPersistent(Z)V

    .line 8945
    iget-object v0, v2, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    const/16 v3, -0x320

    invoke-virtual {v0, v3}, Lcom/android/server/am/ProcessStateRecord;->setMaxAdj(I)V

    .line 8947
    :cond_5
    invoke-virtual {v2}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v0

    if-nez v0, :cond_7

    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0, v2}, Ljava/util/ArrayList;->indexOf(Ljava/lang/Object;)I

    move-result v0

    if-gez v0, :cond_7

    .line 8948
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 8949
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    new-instance v1, Lcom/android/server/am/HostingRecord;

    if-eqz p2, :cond_6

    move-object/from16 v3, p2

    goto :goto_4

    .line 8951
    :cond_6
    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    :goto_4
    invoke-direct {v1, v13, v3}, Lcom/android/server/am/HostingRecord;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    move-object p0, v0

    move-object p1, v2

    move-object/from16 p2, v1

    move/from16 p3, p10

    move/from16 p4, p7

    move/from16 p5, p8

    move-object/from16 p6, p9

    .line 8949
    invoke-virtual/range {p0 .. p6}, Lcom/android/server/am/ProcessList;->startProcessLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/HostingRecord;IZZLjava/lang/String;)Z

    :cond_7
    return-object v2
.end method

.method public final addAppLocked(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;ZZLjava/lang/String;I)Lcom/android/server/am/ProcessRecord;
    .locals 8

    const/4 v5, 0x0

    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move v3, p3

    move v4, p4

    move-object v6, p5

    move v7, p6

    .line 8871
    invoke-virtual/range {v0 .. v7}, Lcom/android/server/am/ActivityManagerService;->addAppLocked(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;ZZZLjava/lang/String;I)Lcom/android/server/am/ProcessRecord;

    move-result-object p0

    return-object p0
.end method

.method public final addAppLocked(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;ZZZLjava/lang/String;I)Lcom/android/server/am/ProcessRecord;
    .locals 11

    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move v3, p3

    move v7, p4

    move/from16 v8, p5

    move-object/from16 v9, p6

    move/from16 v10, p7

    .line 8880
    invoke-virtual/range {v0 .. v10}, Lcom/android/server/am/ActivityManagerService;->addAppLocked(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;ZZILjava/lang/String;ZZLjava/lang/String;I)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    return-object v0
.end method

.method public final addBackgroundCheckViolationLocked(Ljava/lang/String;Ljava/lang/String;)V
    .locals 0

    .line 18190
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->rotateBroadcastStatsIfNeededLocked()V

    .line 18191
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mCurBroadcastStats:Lcom/android/server/am/BroadcastStats;

    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/BroadcastStats;->addBackgroundCheckViolation(Ljava/lang/String;Ljava/lang/String;)V

    return-void
.end method

.method public final addBroadcastStatLocked(Ljava/lang/String;Ljava/lang/String;IIJ)V
    .locals 7

    .line 18185
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->rotateBroadcastStatsIfNeededLocked()V

    .line 18186
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurBroadcastStats:Lcom/android/server/am/BroadcastStats;

    move-object v1, p1

    move-object v2, p2

    move v3, p3

    move v4, p4

    move-wide v5, p5

    invoke-virtual/range {v0 .. v6}, Lcom/android/server/am/BroadcastStats;->addBroadcast(Ljava/lang/String;Ljava/lang/String;IIJ)V

    return-void
.end method

.method public addErrorToDropBox(Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Landroid/app/ApplicationErrorReport$CrashInfo;Ljava/lang/Float;Landroid/os/incremental/IncrementalMetrics;Ljava/util/UUID;)V
    .locals 15

    const/4 v14, 0x0

    move-object v0, p0

    move-object/from16 v1, p1

    move-object/from16 v2, p2

    move-object/from16 v3, p3

    move-object/from16 v4, p4

    move-object/from16 v5, p5

    move-object/from16 v6, p6

    move-object/from16 v7, p7

    move-object/from16 v8, p8

    move-object/from16 v9, p9

    move-object/from16 v10, p10

    move-object/from16 v11, p11

    move-object/from16 v12, p12

    move-object/from16 v13, p13

    .line 11513
    invoke-virtual/range {v0 .. v14}, Lcom/android/server/am/ActivityManagerService;->addErrorToDropBox(Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Landroid/app/ApplicationErrorReport$CrashInfo;Ljava/lang/Float;Landroid/os/incremental/IncrementalMetrics;Ljava/util/UUID;Lcom/android/server/am/BinderTransaction$BinderProcsInfo;)V

    return-void
.end method

.method public addErrorToDropBox(Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Landroid/app/ApplicationErrorReport$CrashInfo;Ljava/lang/Float;Landroid/os/incremental/IncrementalMetrics;Ljava/util/UUID;Lcom/android/server/am/BinderTransaction$BinderProcsInfo;)V
    .locals 19

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-object/from16 v2, p2

    move-object/from16 v3, p3

    move-object/from16 v4, p4

    move-object/from16 v5, p5

    move-object/from16 v6, p6

    move-object/from16 v7, p7

    move-object/from16 v8, p10

    move-object/from16 v9, p14

    .line 11532
    :try_start_0
    iget-object v10, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-class v11, Landroid/os/DropBoxManager;

    invoke-virtual {v10, v11}, Landroid/content/Context;->getSystemService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Landroid/os/DropBoxManager;
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 11538
    new-instance v11, Ljava/lang/StringBuilder;

    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    invoke-static/range {p2 .. p2}, Lcom/android/server/am/ActivityManagerService;->processClass(Lcom/android/server/am/ProcessRecord;)Ljava/lang/String;

    move-result-object v12

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v12, "_"

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v11, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v11

    if-eqz v10, :cond_11

    .line 11539
    invoke-virtual {v10, v11}, Landroid/os/DropBoxManager;->isTagEnabled(Ljava/lang/String;)Z

    move-result v12

    if-nez v12, :cond_0

    goto/16 :goto_3

    .line 11542
    :cond_0
    iget-object v12, v0, Lcom/android/server/am/ActivityManagerService;->mDropboxRateLimiter:Lcom/android/server/am/DropboxRateLimiter;

    .line 11543
    invoke-virtual {v12, v1, v3}, Lcom/android/server/am/DropboxRateLimiter;->shouldRateLimit(Ljava/lang/String;Ljava/lang/String;)Lcom/android/server/am/DropboxRateLimiter$RateLimitResult;

    move-result-object v1

    .line 11544
    invoke-virtual {v1}, Lcom/android/server/am/DropboxRateLimiter$RateLimitResult;->shouldRateLimit()Z

    move-result v12

    if-eqz v12, :cond_1

    return-void

    .line 11546
    :cond_1
    new-instance v12, Ljava/lang/StringBuilder;

    const/16 v13, 0x400

    invoke-direct {v12, v13}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 11547
    invoke-virtual {v0, v2, v3, v12}, Lcom/android/server/am/ActivityManagerService;->appendDropBoxProcessHeaders(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/StringBuilder;)V

    const-wide/16 v13, 0x0

    const-string v3, "\n"

    if-eqz v2, :cond_3

    const-string v15, "Foreground: "

    .line 11549
    invoke-virtual {v12, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11550
    invoke-virtual/range {p2 .. p2}, Lcom/android/server/am/ProcessRecord;->isInterestingToUserLocked()Z

    move-result v15

    if-eqz v15, :cond_2

    const-string v15, "Yes"

    goto :goto_0

    :cond_2
    const-string v15, "No"

    :goto_0
    invoke-virtual {v12, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11551
    invoke-virtual {v12, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11552
    invoke-virtual/range {p2 .. p2}, Lcom/android/server/am/ProcessRecord;->getStartUptime()J

    move-result-wide v15

    cmp-long v15, v15, v13

    if-lez v15, :cond_3

    .line 11553
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v15

    invoke-virtual/range {p2 .. p2}, Lcom/android/server/am/ProcessRecord;->getStartUptime()J

    move-result-wide v17

    sub-long v13, v15, v17

    const-string v15, "Process-Runtime: "

    .line 11554
    invoke-virtual {v12, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v12, v13, v14}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    invoke-virtual {v12, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    :cond_3
    if-eqz v4, :cond_4

    const-string v13, "Activity: "

    .line 11558
    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v12, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v12, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    :cond_4
    if-eqz v5, :cond_6

    if-eqz v6, :cond_5

    .line 11561
    invoke-virtual/range {p6 .. p6}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v13

    invoke-virtual/range {p2 .. p2}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v14

    if-eq v13, v14, :cond_5

    const-string v13, "Parent-Process: "

    .line 11562
    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v6, v6, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v12, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v12, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11564
    :cond_5
    invoke-virtual {v5, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_6

    const-string v4, "Parent-Activity: "

    .line 11565
    invoke-virtual {v12, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v12, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v12, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    :cond_6
    if-eqz v7, :cond_7

    const-string v4, "Subject: "

    .line 11569
    invoke-virtual {v12, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v12, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v12, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    :cond_7
    if-eqz p13, :cond_8

    const-string v4, "ErrorId: "

    .line 11572
    invoke-virtual {v12, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual/range {p13 .. p13}, Ljava/util/UUID;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v12, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v12, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    :cond_8
    const-string v4, "Build: "

    .line 11574
    invoke-virtual {v12, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v4, Landroid/os/Build;->FINGERPRINT:Ljava/lang/String;

    invoke-virtual {v12, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v12, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11575
    invoke-static {}, Landroid/os/Debug;->isDebuggerConnected()Z

    move-result v4

    if-eqz v4, :cond_9

    const-string v4, "Debugger: Connected\n"

    .line 11576
    invoke-virtual {v12, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    :cond_9
    if-eqz v8, :cond_a

    .line 11578
    iget-object v4, v8, Landroid/app/ApplicationErrorReport$CrashInfo;->exceptionHandlerClassName:Ljava/lang/String;

    if-eqz v4, :cond_a

    .line 11579
    invoke-virtual {v4}, Ljava/lang/String;->isEmpty()Z

    move-result v4

    if-nez v4, :cond_a

    const-string v4, "Crash-Handler: "

    .line 11580
    invoke-virtual {v12, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v4, v8, Landroid/app/ApplicationErrorReport$CrashInfo;->exceptionHandlerClassName:Ljava/lang/String;

    invoke-virtual {v12, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v12, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    :cond_a
    if-eqz v8, :cond_b

    .line 11582
    iget-object v4, v8, Landroid/app/ApplicationErrorReport$CrashInfo;->crashTag:Ljava/lang/String;

    if-eqz v4, :cond_b

    invoke-virtual {v4}, Ljava/lang/String;->isEmpty()Z

    move-result v4

    if-nez v4, :cond_b

    const-string v4, "Crash-Tag: "

    .line 11583
    invoke-virtual {v12, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v4, v8, Landroid/app/ApplicationErrorReport$CrashInfo;->crashTag:Ljava/lang/String;

    invoke-virtual {v12, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v12, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    :cond_b
    if-eqz p11, :cond_c

    const-string v4, "Loading-Progress: "

    .line 11586
    invoke-virtual {v12, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual/range {p11 .. p11}, Ljava/lang/Float;->floatValue()F

    move-result v4

    invoke-virtual {v12, v4}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    invoke-virtual {v12, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    :cond_c
    if-eqz p12, :cond_d

    const-string v4, "Incremental: Yes"

    .line 11589
    invoke-virtual {v12, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v12, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11591
    invoke-virtual/range {p12 .. p12}, Landroid/os/incremental/IncrementalMetrics;->getMillisSinceOldestPendingRead()J

    move-result-wide v4

    const-wide/16 v6, 0x0

    cmp-long v6, v4, v6

    if-lez v6, :cond_d

    const-string v6, "Millis-Since-Oldest-Pending-Read: "

    .line 11593
    invoke-virtual {v12, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v12, v4, v5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 11594
    invoke-virtual {v12, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11597
    :cond_d
    invoke-virtual {v1}, Lcom/android/server/am/DropboxRateLimiter$RateLimitResult;->createHeader()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v12, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11598
    invoke-virtual {v12, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    if-eqz v9, :cond_e

    .line 11601
    iget-object v1, v9, Lcom/android/server/am/BinderTransaction$BinderProcsInfo;->rawInfo:Ljava/util/ArrayList;

    if-eqz v1, :cond_e

    .line 11602
    invoke-virtual {v1}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_1
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_e

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    .line 11603
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v5, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v12, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    goto :goto_1

    :cond_e
    if-nez v2, :cond_f

    const/4 v1, 0x1

    goto :goto_2

    :cond_f
    const/4 v1, 0x0

    :goto_2
    move v13, v1

    .line 11613
    new-instance v14, Lcom/android/server/am/ActivityManagerService$21;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Error dump: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    move-object v1, v14

    move-object/from16 v2, p0

    move-object/from16 v4, p8

    move-object v5, v12

    move-object v6, v11

    move-object/from16 v7, p9

    move-object/from16 v8, p10

    move v9, v13

    invoke-direct/range {v1 .. v10}, Lcom/android/server/am/ActivityManagerService$21;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/lang/String;Ljava/lang/String;Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/io/File;Landroid/app/ApplicationErrorReport$CrashInfo;ZLandroid/os/DropBoxManager;)V

    if-eqz v13, :cond_10

    .line 11675
    invoke-static {}, Landroid/os/StrictMode;->allowThreadDiskWritesMask()I

    move-result v1

    .line 11677
    :try_start_1
    invoke-virtual {v14}, Ljava/lang/Thread;->run()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 11679
    invoke-static {v1}, Landroid/os/StrictMode;->setThreadPolicyMask(I)V

    goto :goto_3

    :catchall_0
    move-exception v0

    move-object v2, v0

    invoke-static {v1}, Landroid/os/StrictMode;->setThreadPolicyMask(I)V

    .line 11680
    throw v2

    .line 11682
    :cond_10
    invoke-virtual {v14}, Ljava/lang/Thread;->start()V

    :catch_0
    :cond_11
    :goto_3
    return-void
.end method

.method public addInstrumentationResults(Landroid/app/IApplicationThread;Landroid/os/Bundle;)V
    .locals 3

    .line 18785
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    if-eqz p2, :cond_1

    .line 18787
    invoke-virtual {p2}, Landroid/os/Bundle;->hasFileDescriptors()Z

    move-result v0

    if-nez v0, :cond_0

    goto :goto_0

    .line 18788
    :cond_0
    new-instance p0, Ljava/lang/IllegalArgumentException;

    const-string p1, "File descriptors passed in Intent"

    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 18791
    :cond_1
    :goto_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 18792
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLOSP(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    if-nez v0, :cond_2

    const-string p2, "ActivityManager"

    .line 18794
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "addInstrumentationResults: no app for "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p2, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 18795
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 18797
    :cond_2
    :try_start_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 18799
    :try_start_2
    invoke-virtual {p0, v0, p2}, Lcom/android/server/am/ActivityManagerService;->addInstrumentationResultsLocked(Lcom/android/server/am/ProcessRecord;Landroid/os/Bundle;)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 18801
    :try_start_3
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 18803
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :catchall_0
    move-exception p1

    .line 18801
    :try_start_4
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 18802
    throw p1

    :catchall_1
    move-exception p1

    .line 18803
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public addInstrumentationResultsLocked(Lcom/android/server/am/ProcessRecord;Landroid/os/Bundle;)V
    .locals 0

    .line 18769
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getActiveInstrumentation()Lcom/android/server/am/ActiveInstrumentation;

    move-result-object p0

    if-nez p0, :cond_0

    .line 18771
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string p2, "finishInstrumentation called on non-instrumented: "

    invoke-virtual {p0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    const-string p1, "ActivityManager"

    invoke-static {p1, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    return-void

    .line 18775
    :cond_0
    iget-boolean p1, p0, Lcom/android/server/am/ActiveInstrumentation;->mFinished:Z

    if-nez p1, :cond_2

    if-eqz p2, :cond_2

    .line 18776
    iget-object p1, p0, Lcom/android/server/am/ActiveInstrumentation;->mCurResults:Landroid/os/Bundle;

    if-nez p1, :cond_1

    .line 18777
    new-instance p1, Landroid/os/Bundle;

    invoke-direct {p1, p2}, Landroid/os/Bundle;-><init>(Landroid/os/Bundle;)V

    iput-object p1, p0, Lcom/android/server/am/ActiveInstrumentation;->mCurResults:Landroid/os/Bundle;

    goto :goto_0

    .line 18779
    :cond_1
    invoke-virtual {p1, p2}, Landroid/os/Bundle;->putAll(Landroid/os/Bundle;)V

    :cond_2
    :goto_0
    return-void
.end method

.method public addLongLiveApp(Ljava/lang/String;)Z
    .locals 2

    .line 24207
    sget-boolean v0, Lcom/samsung/android/rune/CoreRune;->FW_DEDICATED_MEMORY:Z

    const/4 v1, 0x0

    if-nez v0, :cond_0

    return v1

    :cond_0
    const-string v0, "addLongLiveApp"

    .line 24211
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkLongLivePermissions(Ljava/lang/String;)V

    .line 24212
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 24213
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mExt:Lcom/android/server/am/ActivityManagerServiceExt;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActivityManagerServiceExt;->addLongLivePackageLocked(Ljava/lang/String;)Z

    move-result p1

    if-eqz p1, :cond_1

    .line 24214
    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(I)V

    .line 24215
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    const/4 p0, 0x1

    return p0

    .line 24217
    :cond_1
    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v1

    :catchall_0
    move-exception p1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public addPackageData(Ljava/lang/String;F)V
    .locals 0

    .line 0
    return-void
.end method

.method public addPackageDependency(Ljava/lang/String;)V
    .locals 4

    .line 4691
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    .line 4692
    invoke-static {}, Landroid/os/Process;->myPid()I

    move-result v1

    if-ne v0, v1, :cond_0

    return-void

    .line 4696
    :cond_0
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 4697
    invoke-static {v0}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v1

    .line 4698
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal;

    move-result-object v2

    invoke-virtual {v2, p1, v0, v1}, Landroid/content/pm/PackageManagerInternal;->filterAppAccess(Ljava/lang/String;II)Z

    move-result v0

    if-eqz v0, :cond_1

    const-string p0, "ActivityManager"

    .line 4699
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Failed trying to add dependency on non-existing package: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p0, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    return-void

    .line 4703
    :cond_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v0

    .line 4704
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v1

    .line 4705
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    if-eqz v1, :cond_3

    .line 4707
    invoke-virtual {v1}, Lcom/android/server/am/ProcessRecord;->getPkgDeps()Landroid/util/ArraySet;

    move-result-object v0

    .line 4708
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 4709
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    if-nez v0, :cond_2

    .line 4711
    :try_start_2
    new-instance v0, Landroid/util/ArraySet;

    const/4 v3, 0x1

    invoke-direct {v0, v3}, Landroid/util/ArraySet;-><init>(I)V

    invoke-virtual {v1, v0}, Lcom/android/server/am/ProcessRecord;->setPkgDeps(Landroid/util/ArraySet;)V

    .line 4713
    :cond_2
    invoke-virtual {v0, p1}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 4714
    monitor-exit v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 4715
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    goto :goto_0

    :catchall_0
    move-exception p1

    .line 4714
    :try_start_4
    monitor-exit v2
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p1

    :catchall_1
    move-exception p1

    .line 4715
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1

    :cond_3
    :goto_0
    return-void

    :catchall_2
    move-exception p0

    .line 4705
    :try_start_6
    monitor-exit v0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_2

    throw p0
.end method

.method public addPidLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 3

    .line 1254
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v0

    .line 1255
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v1

    .line 1256
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v2, v0, p1}, Lcom/android/server/am/ActivityManagerService$PidMap;->doAddInternal(ILcom/android/server/am/ProcessRecord;)V

    .line 1257
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 1258
    sget-object v2, Lcom/android/server/am/ActivityManagerService;->sActiveProcessInfoSelfLocked:Landroid/util/SparseArray;

    monitor-enter v2

    .line 1259
    :try_start_1
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->processInfo:Landroid/content/pm/ProcessInfo;

    if-eqz v1, :cond_0

    .line 1260
    invoke-virtual {v2, v0, v1}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    goto :goto_0

    .line 1262
    :cond_0
    invoke-virtual {v2, v0}, Landroid/util/SparseArray;->remove(I)V

    .line 1264
    :goto_0
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 1265
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getWindowProcessController()Lcom/android/server/wm/WindowProcessController;

    move-result-object p1

    invoke-virtual {p0, v0, p1}, Lcom/android/server/wm/ActivityTaskManagerInternal;->onProcessMapped(ILcom/android/server/wm/WindowProcessController;)V

    return-void

    :catchall_0
    move-exception p0

    .line 1264
    :try_start_2
    monitor-exit v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw p0

    :catchall_1
    move-exception p0

    .line 1257
    :try_start_3
    monitor-exit v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    throw p0
.end method

.method public addUidToObserver(Landroid/os/IBinder;Ljava/lang/String;I)V
    .locals 1

    .line 9644
    invoke-virtual {p0, p2}, Lcom/android/server/am/ActivityManagerService;->hasUsageStatsPermission(Ljava/lang/String;)Z

    move-result p2

    if-nez p2, :cond_0

    const-string p2, "android.permission.PACKAGE_USAGE_STATS"

    const-string/jumbo v0, "registerUidObserver"

    .line 9645
    invoke-virtual {p0, p2, v0}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 9648
    :cond_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mUidObserverController:Lcom/android/server/am/UidObserverController;

    invoke-virtual {p0, p1, p3}, Lcom/android/server/am/UidObserverController;->addUidToObserver(Landroid/os/IBinder;I)V

    return-void
.end method

.method public final appDiedLocked(Lcom/android/server/am/ProcessRecord;ILandroid/app/IApplicationThread;ZLjava/lang/String;)V
    .locals 18

    move-object/from16 v0, p0

    move-object/from16 v7, p1

    move/from16 v3, p2

    move-object/from16 v1, p5

    .line 4063
    invoke-static/range {p2 .. p2}, Landroid/content/pm/ASKSManager;->removePackageWithPid(I)V

    .line 4069
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v2

    .line 4070
    :try_start_0
    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v4, v3}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v4

    .line 4071
    monitor-exit v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    if-eq v4, v7, :cond_2

    if-eqz p4, :cond_0

    .line 4073
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v0, v7, v3}, Lcom/android/server/am/ProcessList;->handleDyingAppDeathLocked(Lcom/android/server/am/ProcessRecord;I)Z

    move-result v0

    if-nez v0, :cond_1

    :cond_0
    const-string v0, "ActivityManager"

    .line 4074
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Spurious death for "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v2, ", curProc for "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, ": "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    :cond_1
    return-void

    .line 4079
    :cond_2
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    iget-object v4, v7, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v2, v4, v3}, Lcom/android/server/am/BatteryStatsService;->noteProcessDied(II)V

    .line 4084
    invoke-static {}, Lcom/android/internal/os/BackgroundThread;->getHandler()Landroid/os/Handler;

    move-result-object v2

    new-instance v4, Lcom/android/server/am/ActivityManagerService$6;

    invoke-direct {v4, v0, v3, v7}, Lcom/android/server/am/ActivityManagerService$6;-><init>(Lcom/android/server/am/ActivityManagerService;ILcom/android/server/am/ProcessRecord;)V

    invoke-virtual {v2, v4}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 4096
    new-instance v2, Lcom/android/internal/util/MemInfoReader;

    invoke-direct {v2}, Lcom/android/internal/util/MemInfoReader;-><init>()V

    .line 4097
    invoke-virtual {v2}, Lcom/android/internal/util/MemInfoReader;->readLightMemInfo()V

    .line 4098
    invoke-virtual {v2}, Lcom/android/internal/util/MemInfoReader;->getFreeSize()J

    move-result-wide v4

    const-wide/32 v8, 0x100000

    div-long/2addr v4, v8

    long-to-int v15, v4

    .line 4099
    invoke-virtual {v2}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeLegacy()J

    move-result-wide v4

    div-long/2addr v4, v8

    long-to-int v2, v4

    .line 4103
    invoke-static {}, Lcom/android/internal/os/BackgroundThread;->getHandler()Landroid/os/Handler;

    move-result-object v4

    new-instance v5, Lcom/android/server/am/ActivityManagerService$7;

    invoke-direct {v5, v0, v7, v3}, Lcom/android/server/am/ActivityManagerService$7;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;I)V

    invoke-virtual {v4, v5}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 4111
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ProcessRecord;->isKilled()Z

    move-result v4

    const/4 v5, 0x0

    const/4 v6, 0x1

    if-nez v4, :cond_5

    if-nez p4, :cond_4

    .line 4115
    invoke-static/range {p2 .. p2}, Landroid/os/Process;->getThreadGroupLeader(I)I

    move-result v4

    if-eq v4, v3, :cond_3

    const-string v4, "TGL@"

    .line 4116
    invoke-virtual {v4, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_4

    const-string v1, "ActivityManager"

    .line 4117
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "Not TGL "

    invoke-virtual {v4, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v8, "in appDiedLocked"

    invoke-virtual {v4, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v1, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    .line 4121
    :cond_3
    invoke-static/range {p2 .. p2}, Landroid/os/Process;->killProcessQuiet(I)V

    .line 4122
    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/16 v8, 0xd

    invoke-virtual {v4, v7, v8, v5, v1}, Lcom/android/server/am/ProcessList;->noteAppKill(Lcom/android/server/am/ProcessRecord;IILjava/lang/String;)V

    .line 4126
    :cond_4
    :goto_0
    invoke-virtual {v7, v6}, Lcom/android/server/am/ProcessRecord;->killProcessGroupIfNecessaryLocked(Z)V

    .line 4127
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v1

    .line 4128
    :try_start_1
    invoke-virtual {v7, v6}, Lcom/android/server/am/ProcessRecord;->setKilled(Z)V

    .line 4129
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    goto :goto_1

    :catchall_0
    move-exception v0

    :try_start_2
    monitor-exit v1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v0

    .line 4134
    :cond_5
    :goto_1
    iget-object v1, v7, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {v1}, Lcom/android/server/am/ProcessStateRecord;->getSetAdj()I

    move-result v13

    .line 4135
    iget-object v1, v7, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {v1}, Lcom/android/server/am/ProcessStateRecord;->getSetProcState()I

    move-result v14

    .line 4136
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v1

    const/4 v4, 0x2

    if-ne v1, v3, :cond_9

    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v1

    if-eqz v1, :cond_9

    .line 4137
    invoke-interface {v1}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    invoke-interface/range {p3 .. p3}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v8

    if-ne v1, v8, :cond_9

    .line 4138
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ProcessRecord;->getActiveInstrumentation()Lcom/android/server/am/ActiveInstrumentation;

    move-result-object v1

    if-nez v1, :cond_6

    move/from16 v16, v6

    goto :goto_2

    :cond_6
    move/from16 v16, v5

    .line 4140
    :goto_2
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ProcessRecord;->isKilledByAm()Z

    move-result v1

    if-nez v1, :cond_7

    const-string v1, "ActivityManager"

    .line 4141
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "Process "

    invoke-virtual {v5, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v8, v7, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v5, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v8, " (pid "

    invoke-virtual {v5, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v8, ") has died: "

    invoke-virtual {v5, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 4143
    invoke-static {v13, v6}, Lcom/android/server/am/ProcessList;->makeOomAdjString(IZ)Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v5, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v8, " "

    invoke-virtual {v5, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 4144
    invoke-static {v14}, Lcom/android/server/am/ProcessList;->makeProcStateString(I)Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v5, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v8, "("

    invoke-virtual {v5, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v15}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v8, ","

    invoke-virtual {v5, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v8, ")"

    invoke-virtual {v5, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    iget-object v8, v7, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v8, v8, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 4141
    invoke-virtual {v0, v1, v5, v8}, Lcom/android/server/am/ActivityManagerService;->reportUidInfoMessageLocked(Ljava/lang/String;Ljava/lang/String;I)V

    .line 4147
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {v1, v6}, Lcom/android/server/am/AppProfiler;->setAllowLowerMemLevelLocked(Z)V

    move/from16 v17, v16

    goto :goto_3

    .line 4151
    :cond_7
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {v1, v5}, Lcom/android/server/am/AppProfiler;->setAllowLowerMemLevelLocked(Z)V

    move/from16 v17, v5

    .line 4154
    :goto_3
    iget v8, v7, Lcom/android/server/am/ProcessRecord;->userId:I

    iget-object v10, v7, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move/from16 v9, p2

    move v11, v13

    move v12, v14

    move v13, v15

    move v14, v2

    invoke-static/range {v8 .. v14}, Lcom/android/server/am/EventLogTags;->writeAmProcDied(IILjava/lang/String;IIII)V

    .line 4159
    invoke-static {}, Lcom/android/server/chimera/PerProcessNandswap;->getInstance()Lcom/android/server/chimera/PerProcessNandswap;

    move-result-object v1

    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v2

    invoke-virtual {v1, v2}, Lcom/android/server/chimera/PerProcessNandswap;->notifyDiedAppToPPR(I)V

    .line 4163
    iget-object v1, v7, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v1, v1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v2

    invoke-static {v4, v1, v2}, Lcom/android/server/am/Pageboost;->onProcStatusChange(ILjava/lang/String;I)V

    .line 4169
    invoke-static {}, Lcom/android/server/am/DynamicHiddenApp;->getInstance()Lcom/android/server/am/DynamicHiddenApp;

    move-result-object v1

    invoke-virtual {v1, v7}, Lcom/android/server/am/DynamicHiddenApp;->handleDiedProcessForGenAIReclaimMode(Lcom/android/server/am/ProcessRecord;)V

    const/4 v4, 0x0

    const/4 v5, 0x1

    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move/from16 v3, p2

    move/from16 v6, p4

    .line 4175
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->handleAppDiedLocked(Lcom/android/server/am/ProcessRecord;IZZZ)V

    if-eqz v16, :cond_8

    const/16 v1, 0xc

    .line 4178
    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(I)V

    :cond_8
    if-eqz v17, :cond_a

    .line 4181
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {v0, v7}, Lcom/android/server/am/AppProfiler;->doLowMemReportIfNeededLocked(Lcom/android/server/am/ProcessRecord;)V

    goto :goto_4

    .line 4183
    :cond_9
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v1

    if-eq v1, v3, :cond_a

    const-string v1, "ActivityManager"

    .line 4185
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Process "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v6, v7, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v6, " (pid "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ") has died and restarted (pid "

    invoke-virtual {v5, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 4187
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v3

    invoke-virtual {v5, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ").("

    invoke-virtual {v5, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v15}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ","

    invoke-virtual {v5, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ")"

    invoke-virtual {v5, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    iget-object v5, v7, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v5, v5, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 4185
    invoke-virtual {v0, v1, v3, v5}, Lcom/android/server/am/ActivityManagerService;->reportUidInfoMessageLocked(Ljava/lang/String;Ljava/lang/String;I)V

    .line 4191
    invoke-static {}, Lcom/android/server/chimera/PerProcessNandswap;->getInstance()Lcom/android/server/chimera/PerProcessNandswap;

    move-result-object v0

    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v1

    invoke-virtual {v0, v1}, Lcom/android/server/chimera/PerProcessNandswap;->notifyDiedAppToPPR(I)V

    .line 4195
    iget-object v0, v7, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v0, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v1

    invoke-static {v4, v0, v1}, Lcom/android/server/am/Pageboost;->onProcStatusChange(ILjava/lang/String;I)V

    .line 4201
    invoke-static {}, Lcom/android/server/am/DynamicHiddenApp;->getInstance()Lcom/android/server/am/DynamicHiddenApp;

    move-result-object v0

    invoke-virtual {v0, v7}, Lcom/android/server/am/DynamicHiddenApp;->handleDiedProcessForGenAIReclaimMode(Lcom/android/server/am/ProcessRecord;)V

    .line 4205
    iget v10, v7, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v11

    iget-object v12, v7, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move/from16 v16, v2

    invoke-static/range {v10 .. v16}, Lcom/android/server/am/EventLogTags;->writeAmProcDied(IILjava/lang/String;IIII)V

    .line 4214
    :cond_a
    :goto_4
    invoke-static {}, Lcom/android/server/am/MemoryStatUtil;->hasMemcg()Z

    move-result v0

    if-nez v0, :cond_b

    const/16 v0, 0x41

    .line 4215
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v1

    invoke-static {v0, v1, v2}, Lcom/android/internal/util/FrameworkStatsLog;->write(IJ)V

    :cond_b
    return-void

    :catchall_1
    move-exception v0

    .line 4071
    :try_start_3
    monitor-exit v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    throw v0
.end method

.method public final appDiedLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;)V
    .locals 6

    .line 4054
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v2

    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v3

    const/4 v4, 0x0

    move-object v0, p0

    move-object v1, p1

    move-object v5, p2

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->appDiedLocked(Lcom/android/server/am/ProcessRecord;ILandroid/app/IApplicationThread;ZLjava/lang/String;)V

    return-void
.end method

.method public appNotResponding(Lcom/android/server/am/ProcessRecord;Lcom/android/internal/os/TimeoutRecord;)V
    .locals 0

    .line 8627
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mAnrHelper:Lcom/android/server/am/AnrHelper;

    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/AnrHelper;->appNotResponding(Lcom/android/server/am/ProcessRecord;Lcom/android/internal/os/TimeoutRecord;)V

    return-void
.end method

.method public appNotResponding(Ljava/lang/String;)V
    .locals 1

    const/4 v0, 0x0

    .line 8606
    invoke-virtual {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->appNotResponding(Ljava/lang/String;Z)V

    return-void
.end method

.method public final appNotResponding(Ljava/lang/String;ILcom/android/internal/os/TimeoutRecord;)V
    .locals 1

    .line 8632
    invoke-static {p1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 8633
    invoke-static {p3}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 8635
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 8636
    :try_start_0
    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->getProcessRecordLocked(Ljava/lang/String;I)Lcom/android/server/am/ProcessRecord;

    move-result-object p2

    if-nez p2, :cond_0

    const-string p2, "ActivityManager"

    .line 8638
    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "Unknown process: "

    invoke-virtual {p3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p2, p1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 8639
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 8641
    :cond_0
    :try_start_1
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAnrHelper:Lcom/android/server/am/AnrHelper;

    invoke-virtual {p1, p2, p3}, Lcom/android/server/am/AnrHelper;->appNotResponding(Lcom/android/server/am/ProcessRecord;Lcom/android/internal/os/TimeoutRecord;)V

    .line 8642
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :catchall_0
    move-exception p1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public appNotResponding(Ljava/lang/String;Z)V
    .locals 10

    .line 8610
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "App requested: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p1}, Lcom/android/internal/os/TimeoutRecord;->forApp(Ljava/lang/String;)Lcom/android/internal/os/TimeoutRecord;

    move-result-object v7

    .line 8611
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result p1

    .line 8613
    iget-object v0, v7, Lcom/android/internal/os/TimeoutRecord;->mLatencyTracker:Lcom/android/internal/os/anr/AnrLatencyTracker;

    invoke-virtual {v0}, Lcom/android/internal/os/anr/AnrLatencyTracker;->waitingOnPidLockStarted()V

    .line 8614
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v9

    .line 8615
    :try_start_0
    iget-object v0, v7, Lcom/android/internal/os/TimeoutRecord;->mLatencyTracker:Lcom/android/internal/os/anr/AnrLatencyTracker;

    invoke-virtual {v0}, Lcom/android/internal/os/anr/AnrLatencyTracker;->waitingOnPidLockEnded()V

    .line 8616
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v1

    if-eqz v1, :cond_0

    .line 8621
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAnrHelper:Lcom/android/server/am/AnrHelper;

    const/4 v2, 0x0

    iget-object v3, v1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    move v8, p2

    invoke-virtual/range {v0 .. v8}, Lcom/android/server/am/AnrHelper;->appNotResponding(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/pm/ApplicationInfo;Ljava/lang/String;Lcom/android/server/wm/WindowProcessController;ZLcom/android/internal/os/TimeoutRecord;Z)V

    .line 8623
    monitor-exit v9

    return-void

    .line 8618
    :cond_0
    new-instance p0, Ljava/lang/SecurityException;

    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "Unknown process: "

    invoke-virtual {p2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p0, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p0

    :catchall_0
    move-exception p0

    .line 8623
    monitor-exit v9
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw p0
.end method

.method public appNotRespondingViaProvider(Landroid/os/IBinder;)V
    .locals 0

    .line 8787
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    invoke-virtual {p0, p1}, Lcom/android/server/am/ContentProviderHelper;->appNotRespondingViaProvider(Landroid/os/IBinder;)V

    return-void
.end method

.method public appRestrictedInBackgroundLOSP(ILjava/lang/String;I)I
    .locals 8

    const/16 v0, 0x1a

    const/4 v1, 0x2

    if-lt p3, v0, :cond_0

    return v1

    .line 7544
    :cond_0
    iget-boolean p3, p0, Lcom/android/server/am/ActivityManagerService;->mOnBattery:Z

    const/4 v0, 0x1

    if-eqz p3, :cond_1

    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget-boolean p3, p3, Lcom/android/server/am/ActivityManagerConstants;->FORCE_BACKGROUND_CHECK_ON_RESTRICTED_APPS:Z

    if-eqz p3, :cond_1

    .line 7547
    invoke-static {p1}, Landroid/os/UserHandle;->getUserId(I)I

    move-result p3

    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v2

    .line 7546
    invoke-virtual {p0, p3, p2, v2, v3}, Lcom/android/server/am/ActivityManagerService;->isInRestrictedBucket(ILjava/lang/String;J)Z

    move-result p3

    if-eqz p3, :cond_1

    return v0

    .line 7554
    :cond_1
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getAppOpsManager()Landroid/app/AppOpsManager;

    move-result-object v2

    const/16 v3, 0x3f

    const/4 v6, 0x0

    const-string v7, ""

    move v4, p1

    move-object v5, p2

    invoke-virtual/range {v2 .. v7}, Landroid/app/AppOpsManager;->noteOpNoThrow(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)I

    move-result p2

    if-eqz p2, :cond_3

    if-eq p2, v0, :cond_2

    return v1

    :cond_2
    return v0

    .line 7562
    :cond_3
    iget-boolean p2, p0, Lcom/android/server/am/ActivityManagerService;->mForceBackgroundCheck:Z

    if-eqz p2, :cond_4

    .line 7563
    invoke-static {p1}, Landroid/os/UserHandle;->isCore(I)Z

    move-result p2

    if-nez p2, :cond_4

    .line 7564
    invoke-virtual {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->isOnDeviceIdleAllowlistLOSP(IZ)Z

    move-result p0

    if-nez p0, :cond_4

    return v0

    :cond_4
    const/4 p0, 0x0

    return p0
.end method

.method public appServicesRestrictedInBackgroundLOSP(ILjava/lang/String;I)I
    .locals 2

    .line 7585
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPackageManagerInt:Landroid/content/pm/PackageManagerInternal;

    invoke-virtual {v0, p2}, Landroid/content/pm/PackageManagerInternal;->isPackagePersistent(Ljava/lang/String;)Z

    move-result v0

    const/4 v1, 0x0

    if-eqz v0, :cond_0

    return v1

    .line 7594
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->uidOnBackgroundAllowlistLOSP(I)Z

    move-result v0

    if-eqz v0, :cond_1

    return v1

    .line 7603
    :cond_1
    invoke-virtual {p0, p1, v1}, Lcom/android/server/am/ActivityManagerService;->isOnDeviceIdleAllowlistLOSP(IZ)Z

    move-result v0

    if-eqz v0, :cond_2

    return v1

    .line 7612
    :cond_2
    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/am/ActivityManagerService;->appRestrictedInBackgroundLOSP(ILjava/lang/String;I)I

    move-result p0

    return p0
.end method

.method public appendDropBoxProcessHeaders(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/StringBuilder;)V
    .locals 4

    if-nez p1, :cond_0

    const-string p0, "Process: "

    .line 11393
    invoke-virtual {p3, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p0, "\n"

    invoke-virtual {p3, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    return-void

    .line 11399
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v0

    :try_start_0
    const-string v1, "Process: "

    .line 11400
    invoke-virtual {p3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p2, "\n"

    invoke-virtual {p3, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p2, "PID: "

    .line 11401
    invoke-virtual {p3, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result p2

    invoke-virtual {p3, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p2, "\n"

    invoke-virtual {p3, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p2, "UID: "

    .line 11402
    invoke-virtual {p3, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget p2, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {p3, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p2, "\n"

    invoke-virtual {p3, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11403
    iget-object p2, p1, Lcom/android/server/am/ProcessRecord;->mOptRecord:Lcom/android/server/am/ProcessCachedOptimizerRecord;

    if-eqz p2, :cond_1

    const-string p2, "Frozen: "

    .line 11404
    invoke-virtual {p3, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object p2, p1, Lcom/android/server/am/ProcessRecord;->mOptRecord:Lcom/android/server/am/ProcessCachedOptimizerRecord;

    invoke-virtual {p2}, Lcom/android/server/am/ProcessCachedOptimizerRecord;->isFrozen()Z

    move-result p2

    invoke-virtual {p3, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    const-string p2, "\n"

    invoke-virtual {p3, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11406
    :cond_1
    iget-object p2, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget p2, p2, Landroid/content/pm/ApplicationInfo;->flags:I

    .line 11407
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v1

    const-string v2, "Flags: 0x"

    .line 11408
    invoke-virtual {p3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {p2}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object p2

    invoke-virtual {p3, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p2, "\n"

    invoke-virtual {p3, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11409
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result p2

    .line 11410
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getPkgList()Lcom/android/server/am/PackageList;

    move-result-object v2

    new-instance v3, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda17;

    invoke-direct {v3, p3, v1, p2}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda17;-><init>(Ljava/lang/StringBuilder;Landroid/content/pm/IPackageManager;I)V

    invoke-virtual {v2, v3}, Lcom/android/server/am/PackageList;->forEachPackage(Ljava/util/function/Consumer;)V

    .line 11425
    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    invoke-virtual {v2}, Landroid/content/pm/ApplicationInfo;->isInstantApp()Z

    move-result v2

    if-eqz v2, :cond_2

    const-string v2, "Instant-App: true\n"

    .line 11426
    invoke-virtual {p3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11429
    :cond_2
    iget-boolean v2, p1, Lcom/android/server/am/ProcessRecord;->isSdkSandbox:Z

    if-eqz v2, :cond_4

    .line 11430
    iget-object p1, p1, Lcom/android/server/am/ProcessRecord;->sdkSandboxClientAppPackage:Ljava/lang/String;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    const-wide/16 v2, 0x400

    .line 11432
    :try_start_1
    invoke-interface {v1, p1, v2, v3, p2}, Landroid/content/pm/IPackageManager;->getPackageInfo(Ljava/lang/String;JI)Landroid/content/pm/PackageInfo;

    move-result-object p2

    if-eqz p2, :cond_3

    .line 11435
    invoke-virtual {p0, p3, p2}, Lcom/android/server/am/ActivityManagerService;->appendSdkSandboxClientPackageHeader(Ljava/lang/StringBuilder;Landroid/content/pm/PackageInfo;)V

    .line 11436
    invoke-virtual {p0, p3, p2}, Lcom/android/server/am/ActivityManagerService;->appendSdkSandboxLibraryHeaders(Ljava/lang/StringBuilder;Landroid/content/pm/PackageInfo;)V

    goto :goto_0

    :cond_3
    const-string p0, "ActivityManager"

    .line 11438
    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "PackageInfo is null for SDK sandbox client: "

    invoke-virtual {p2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-static {p0, p2}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_0

    :catch_0
    move-exception p0

    :try_start_2
    const-string p2, "ActivityManager"

    .line 11442
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Error getting package info for SDK sandbox client: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p2, p1, p0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    :goto_0
    const-string p0, "SdkSandbox: true\n"

    .line 11446
    invoke-virtual {p3, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11448
    :cond_4
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return-void

    :catchall_0
    move-exception p0

    :try_start_3
    monitor-exit v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p0
.end method

.method public final appendSdkSandboxClientPackageHeader(Ljava/lang/StringBuilder;Landroid/content/pm/PackageInfo;)V
    .locals 2

    const-string p0, "SdkSandbox-Client-Package: "

    .line 11453
    invoke-virtual {p1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object p0, p2, Landroid/content/pm/PackageInfo;->packageName:Ljava/lang/String;

    invoke-virtual {p1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p0, " v"

    .line 11454
    invoke-virtual {p1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Landroid/content/pm/PackageInfo;->getLongVersionCode()J

    move-result-wide v0

    invoke-virtual {p1, v0, v1}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 11455
    iget-object p0, p2, Landroid/content/pm/PackageInfo;->versionName:Ljava/lang/String;

    if-eqz p0, :cond_0

    const-string p0, " ("

    .line 11456
    invoke-virtual {p1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object p0, p2, Landroid/content/pm/PackageInfo;->versionName:Ljava/lang/String;

    invoke-virtual {p1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p0, ")"

    invoke-virtual {p1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    :cond_0
    const-string p0, "\n"

    .line 11458
    invoke-virtual {p1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    return-void
.end method

.method public final appendSdkSandboxLibraryHeaders(Ljava/lang/StringBuilder;Landroid/content/pm/PackageInfo;)V
    .locals 3

    .line 11463
    iget-object p0, p2, Landroid/content/pm/PackageInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    .line 11464
    invoke-virtual {p0}, Landroid/content/pm/ApplicationInfo;->getSharedLibraryInfos()Ljava/util/List;

    move-result-object p0

    .line 11465
    invoke-interface {p0}, Ljava/util/List;->size()I

    move-result p2

    const/4 v0, 0x0

    :goto_0
    if-ge v0, p2, :cond_1

    .line 11466
    invoke-interface {p0, v0}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/content/pm/SharedLibraryInfo;

    .line 11467
    invoke-virtual {v1}, Landroid/content/pm/SharedLibraryInfo;->isSdk()Z

    move-result v2

    if-nez v2, :cond_0

    goto :goto_1

    :cond_0
    const-string v2, "SdkSandbox-Library: "

    .line 11471
    invoke-virtual {p1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Landroid/content/pm/SharedLibraryInfo;->getPackageName()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {p1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11472
    invoke-virtual {v1}, Landroid/content/pm/SharedLibraryInfo;->getDeclaringPackage()Landroid/content/pm/VersionedPackage;

    move-result-object v1

    const-string v2, " v"

    .line 11473
    invoke-virtual {p1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Landroid/content/pm/VersionedPackage;->getLongVersionCode()J

    move-result-wide v1

    invoke-virtual {p1, v1, v2}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v1, "\n"

    .line 11474
    invoke-virtual {p1, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    :goto_1
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    :cond_1
    return-void
.end method

.method public attachAgent(Ljava/lang/String;Ljava/lang/String;)V
    .locals 3

    .line 23060
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v0
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    :try_start_1
    const-string v1, "attachAgent"

    const/4 v2, 0x0

    .line 23061
    invoke-virtual {p0, p1, v2, v1}, Lcom/android/server/am/ActivityManagerService;->findProcessLOSP(Ljava/lang/String;ILjava/lang/String;)Lcom/android/server/am/ProcessRecord;

    move-result-object v1

    if-eqz v1, :cond_0

    .line 23064
    invoke-virtual {v1}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v2

    if-eqz v2, :cond_0

    .line 23068
    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceDebuggable(Lcom/android/server/am/ProcessRecord;)V

    .line 23070
    invoke-interface {v2, p2}, Landroid/app/IApplicationThread;->attachAgent(Ljava/lang/String;)V

    .line 23071
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0

    return-void

    .line 23065
    :cond_0
    :try_start_3
    new-instance p0, Ljava/lang/IllegalArgumentException;

    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Unknown process: "

    invoke-virtual {p2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p0

    :catchall_0
    move-exception p0

    .line 23071
    monitor-exit v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p0
    :try_end_4
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_0

    .line 23073
    :catch_0
    new-instance p0, Ljava/lang/IllegalStateException;

    const-string p1, "Process disappeared"

    invoke-direct {p0, p1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p0
.end method

.method public final attachApplication(Landroid/app/IApplicationThread;J)V
    .locals 8

    if-eqz p1, :cond_0

    .line 5787
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 5788
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    .line 5789
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    .line 5790
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v6

    move-object v0, p0

    move-object v1, p1

    move-wide v4, p2

    .line 5791
    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->attachApplicationLocked(Landroid/app/IApplicationThread;IIJ)V

    .line 5792
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5793
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1

    .line 5785
    :cond_0
    new-instance p0, Ljava/lang/SecurityException;

    const-string p1, "Invalid application interface"

    invoke-direct {p0, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p0
.end method

.method public final attachApplicationLocked(Landroid/app/IApplicationThread;IIJ)V
    .locals 48

    move-object/from16 v9, p0

    move-object/from16 v15, p1

    move/from16 v14, p2

    move/from16 v13, p3

    move-wide/from16 v11, p4

    .line 5374
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v7

    .line 5376
    sget v0, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-eq v14, v0, :cond_3

    if-ltz v14, :cond_3

    .line 5377
    iget-object v1, v9, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v1

    .line 5378
    :try_start_0
    iget-object v2, v9, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v2, v14}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v6

    .line 5379
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-eqz v6, :cond_2

    .line 5380
    invoke-virtual {v6}, Lcom/android/server/am/ProcessRecord;->getStartUid()I

    move-result v1

    if-ne v1, v13, :cond_0

    invoke-virtual {v6}, Lcom/android/server/am/ProcessRecord;->getStartSeq()J

    move-result-wide v1

    cmp-long v1, v1, v11

    if-eqz v1, :cond_2

    .line 5382
    :cond_0
    iget-object v1, v9, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v1, v1, Lcom/android/server/am/ProcessList;->mPendingStarts:Landroid/util/LongSparseArray;

    invoke-virtual {v1, v11, v12}, Landroid/util/LongSparseArray;->get(J)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    if-eqz v1, :cond_1

    .line 5384
    iget-object v1, v1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    goto :goto_0

    :cond_1
    const/4 v1, 0x0

    .line 5386
    :goto_0
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "attachApplicationLocked process:"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " startSeq:"

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v11, v12}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v1, " pid:"

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v14}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " belongs to another existing app:"

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v1, v6, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " startSeq:"

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 5390
    invoke-virtual {v6}, Lcom/android/server/am/ProcessRecord;->getStartSeq()J

    move-result-wide v3

    invoke-virtual {v2, v3, v4}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    const-string v2, "ActivityManager"

    .line 5391
    invoke-static {v2, v1}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    const-string v2, "131105245"

    .line 5393
    invoke-virtual {v6}, Lcom/android/server/am/ProcessRecord;->getStartUid()I

    move-result v3

    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    filled-new-array {v2, v3, v1}, [Ljava/lang/Object;

    move-result-object v1

    const v2, 0x534e4554

    invoke-static {v2, v1}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    const/4 v4, 0x0

    const/4 v5, 0x0

    const/16 v16, -0x1

    const/16 v17, 0x1

    const/16 v18, 0x0

    move-object/from16 v1, p0

    move-object v2, v6

    move/from16 v3, p2

    move-object v10, v6

    move/from16 v6, v16

    move-wide/from16 v42, v7

    move/from16 v7, v17

    move/from16 v8, v18

    .line 5395
    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->cleanUpApplicationRecordLocked(Lcom/android/server/am/ProcessRecord;IZZIZZ)Z

    .line 5397
    invoke-virtual {v9, v14, v10}, Lcom/android/server/am/ActivityManagerService;->removePidLocked(ILcom/android/server/am/ProcessRecord;)Z

    goto :goto_1

    :cond_2
    move-object v10, v6

    move-wide/from16 v42, v7

    goto :goto_2

    :catchall_0
    move-exception v0

    .line 5379
    :try_start_1
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v0

    :cond_3
    move-wide/from16 v42, v7

    :goto_1
    const/4 v10, 0x0

    :goto_2
    if-nez v10, :cond_4

    const-wide/16 v1, 0x0

    cmp-long v1, v11, v1

    if-lez v1, :cond_4

    .line 5407
    iget-object v1, v9, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v1, v1, Lcom/android/server/am/ProcessList;->mPendingStarts:Landroid/util/LongSparseArray;

    invoke-virtual {v1, v11, v12}, Landroid/util/LongSparseArray;->get(J)Ljava/lang/Object;

    move-result-object v1

    move-object v8, v1

    check-cast v8, Lcom/android/server/am/ProcessRecord;

    if-eqz v8, :cond_4

    .line 5408
    invoke-virtual {v8}, Lcom/android/server/am/ProcessRecord;->getStartUid()I

    move-result v1

    if-ne v1, v13, :cond_4

    .line 5409
    invoke-virtual {v8}, Lcom/android/server/am/ProcessRecord;->getStartSeq()J

    move-result-wide v1

    cmp-long v1, v1, v11

    if-nez v1, :cond_4

    iget-object v1, v9, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 5411
    invoke-virtual {v8}, Lcom/android/server/am/ProcessRecord;->isUsingWrapper()Z

    move-result v4

    const/4 v7, 0x1

    move-object v2, v8

    move/from16 v3, p2

    move-wide/from16 v5, p4

    .line 5410
    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ProcessList;->handleProcessStartedLocked(Lcom/android/server/am/ProcessRecord;IZJZ)Z

    move-result v1

    if-eqz v1, :cond_4

    goto :goto_3

    :cond_4
    move-object v8, v10

    :goto_3
    if-nez v8, :cond_6

    const-string v1, "ActivityManager"

    .line 5417
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "No pending application record for pid "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v14}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, " (IApplicationThread "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v3, "); dropping process"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5419
    invoke-static/range {p2 .. p2}, Lcom/android/server/am/EventLogTags;->writeAmDropProcess(I)V

    if-lez v14, :cond_5

    if-eq v14, v0, :cond_5

    .line 5421
    invoke-static/range {p2 .. p2}, Landroid/os/Process;->killProcessQuiet(I)V

    goto :goto_4

    .line 5427
    :cond_5
    :try_start_2
    invoke-interface/range {p1 .. p1}, Landroid/app/IApplicationThread;->scheduleExit()V
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_0

    :catch_0
    :goto_4
    return-void

    :cond_6
    const/4 v7, 0x0

    .line 5439
    :try_start_3
    iget-object v0, v9, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    .line 5440
    invoke-virtual {v0}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v0

    const-string v1, "com.samsung.android.game.gos"

    invoke-virtual {v0, v1, v7}, Landroid/content/pm/PackageManager;->getApplicationInfo(Ljava/lang/String;I)Landroid/content/pm/ApplicationInfo;

    move-result-object v0

    .line 5441
    iget-boolean v0, v0, Landroid/content/pm/ApplicationInfo;->enabled:Z
    :try_end_3
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_3 .. :try_end_3} :catch_1

    goto :goto_5

    :catch_1
    move-exception v0

    .line 5443
    invoke-virtual {v0}, Landroid/content/pm/PackageManager$NameNotFoundException;->printStackTrace()V

    move v0, v7

    :goto_5
    if-nez v0, :cond_7

    .line 5446
    iget-object v0, v9, Lcom/android/server/am/ActivityManagerService;->mDssController:Lcom/android/server/DssController;

    iget-object v1, v8, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v1, v1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    const/high16 v2, 0x3f800000    # 1.0f

    invoke-virtual {v0, v1, v2}, Lcom/android/server/DssController;->addPackageData(Ljava/lang/String;F)V

    :cond_7
    const/high16 v30, 0x3f800000    # 1.0f

    .line 5491
    invoke-virtual {v8}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v0

    if-eqz v0, :cond_8

    const/4 v4, 0x1

    const/4 v5, 0x1

    const/4 v6, 0x0

    move-object/from16 v1, p0

    move-object v2, v8

    move/from16 v3, p2

    .line 5492
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->handleAppDiedLocked(Lcom/android/server/am/ProcessRecord;IZZZ)V

    .line 5500
    :cond_8
    iget-object v0, v8, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    .line 5502
    :try_start_4
    new-instance v1, Lcom/android/server/am/ActivityManagerService$AppDeathRecipient;

    invoke-direct {v1, v9, v8, v14, v15}, Lcom/android/server/am/ActivityManagerService$AppDeathRecipient;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;ILandroid/app/IApplicationThread;)V

    .line 5504
    invoke-interface/range {p1 .. p1}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v2

    invoke-interface {v2, v1, v7}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V

    .line 5505
    invoke-virtual {v8, v1}, Lcom/android/server/am/ProcessRecord;->setDeathRecipient(Landroid/os/IBinder$DeathRecipient;)V
    :try_end_4
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_5

    .line 5514
    iget v1, v8, Lcom/android/server/am/ProcessRecord;->userId:I

    iget-object v2, v8, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-static {v1, v14, v2}, Lcom/android/server/am/EventLogTags;->writeAmProcBound(IILjava/lang/String;)V

    .line 5516
    iget-object v1, v9, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v1

    .line 5517
    :try_start_5
    iget-object v2, v8, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    const/16 v3, -0x2710

    invoke-virtual {v2, v3}, Lcom/android/server/am/ProcessStateRecord;->setCurAdj(I)V

    .line 5518
    iget-object v2, v8, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {v2, v3}, Lcom/android/server/am/ProcessStateRecord;->setSetAdj(I)V

    .line 5519
    iget-object v2, v8, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {v2, v3}, Lcom/android/server/am/ProcessStateRecord;->setVerifiedAdj(I)V

    .line 5520
    iget-object v2, v9, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    invoke-virtual {v2, v8}, Lcom/android/server/am/OomAdjuster;->setAttachingSchedGroupLSP(Lcom/android/server/am/ProcessRecord;)V

    .line 5521
    iget-object v2, v8, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    const/4 v3, 0x0

    invoke-virtual {v2, v3}, Lcom/android/server/am/ProcessStateRecord;->setForcingToImportant(Ljava/lang/Object;)V

    .line 5522
    invoke-virtual {v9, v8}, Lcom/android/server/am/ActivityManagerService;->clearProcessForegroundLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 5523
    iget-object v2, v8, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {v2, v7}, Lcom/android/server/am/ProcessStateRecord;->setHasShownUi(Z)V

    .line 5524
    iget-object v2, v8, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {v2, v7}, Lcom/android/server/am/ProcessStateRecord;->setCached(Z)V

    .line 5525
    invoke-virtual {v8, v7}, Lcom/android/server/am/ProcessRecord;->setDebugging(Z)V

    .line 5526
    invoke-virtual {v8, v7}, Lcom/android/server/am/ProcessRecord;->setKilledByAm(Z)V

    .line 5527
    invoke-virtual {v8, v7}, Lcom/android/server/am/ProcessRecord;->setKilled(Z)V

    .line 5531
    iget v2, v8, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-static {v2}, Landroid/os/storage/StorageManager;->isUserKeyUnlocked(I)Z

    move-result v2

    invoke-virtual {v8, v2}, Lcom/android/server/am/ProcessRecord;->setUnlocked(Z)V

    .line 5532
    monitor-exit v1
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_7

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 5536
    iget-object v1, v9, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    iget-object v1, v1, Lcom/android/server/wm/ActivityTaskManagerService;->mExt:Lcom/android/server/wm/ActivityTaskManagerServiceExt;

    invoke-virtual {v8}, Lcom/android/server/am/ProcessRecord;->getWindowProcessController()Lcom/android/server/wm/WindowProcessController;

    move-result-object v2

    invoke-virtual {v1, v2}, Lcom/android/server/wm/ActivityTaskManagerServiceExt;->setSystemUiPidIfNeed(Lcom/android/server/wm/WindowProcessController;)V

    .line 5540
    iget-boolean v1, v9, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    if-nez v1, :cond_a

    iget-object v1, v8, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    invoke-virtual {v9, v1}, Lcom/android/server/am/ActivityManagerService;->isAllowedWhileBooting(Landroid/content/pm/ApplicationInfo;)Z

    move-result v1

    if-eqz v1, :cond_9

    goto :goto_6

    :cond_9
    move v1, v7

    goto :goto_7

    :cond_a
    :goto_6
    const/4 v1, 0x1

    :goto_7
    if-eqz v1, :cond_b

    .line 5542
    iget-object v3, v9, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    invoke-virtual {v3, v8}, Lcom/android/server/am/ContentProviderHelper;->generateApplicationProvidersLocked(Lcom/android/server/am/ProcessRecord;)Ljava/util/List;

    move-result-object v3

    goto :goto_8

    :cond_b
    const/4 v3, 0x0

    :goto_8
    if-eqz v3, :cond_c

    .line 5545
    iget-object v4, v9, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    invoke-virtual {v4, v8}, Lcom/android/server/am/ContentProviderHelper;->checkAppInLaunchingProvidersLocked(Lcom/android/server/am/ProcessRecord;)Z

    move-result v4

    if-eqz v4, :cond_c

    .line 5546
    iget-object v4, v9, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v5, 0x39

    invoke-virtual {v4, v5}, Landroid/os/Handler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v4

    .line 5547
    iput-object v8, v4, Landroid/os/Message;->obj:Ljava/lang/Object;

    .line 5548
    iget-object v5, v9, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    sget v6, Landroid/content/ContentResolver;->CONTENT_PROVIDER_PUBLISH_TIMEOUT_MILLIS:I

    move-object v10, v3

    int-to-long v2, v6

    invoke-virtual {v5, v4, v2, v3}, Landroid/os/Handler;->sendMessageDelayed(Landroid/os/Message;J)Z

    goto :goto_9

    :cond_c
    move-object v10, v3

    :goto_9
    const-string v2, "attachApplicationLocked: before bindApplication"

    move-wide/from16 v3, v42

    .line 5552
    invoke-virtual {v9, v3, v4, v2}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    if-nez v1, :cond_d

    const-string v2, "ActivityManager"

    .line 5555
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Launching preboot mode app: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v2, v5}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 5561
    :cond_d
    iget-object v2, v9, Lcom/android/server/am/ActivityManagerService;->mBackupTargets:Landroid/util/SparseArray;

    iget v5, v8, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-virtual {v2, v5}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/BackupRecord;

    .line 5564
    :try_start_6
    iget-object v6, v9, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    const/4 v7, 0x3

    if-eqz v6, :cond_11

    invoke-virtual {v6, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_11

    .line 5565
    iget-boolean v6, v9, Lcom/android/server/am/ActivityManagerService;->mWaitForDebugger:Z

    if-eqz v6, :cond_f

    .line 5566
    iget-boolean v6, v9, Lcom/android/server/am/ActivityManagerService;->mSuspendUponWait:Z

    if-eqz v6, :cond_e

    move v6, v7

    goto :goto_a

    :cond_e
    const/4 v6, 0x2

    :goto_a
    const/4 v5, 0x1

    goto :goto_b

    :cond_f
    const/4 v5, 0x1

    const/4 v6, 0x1

    .line 5574
    :goto_b
    invoke-virtual {v8, v5}, Lcom/android/server/am/ProcessRecord;->setDebugging(Z)V

    .line 5575
    iget-boolean v5, v9, Lcom/android/server/am/ActivityManagerService;->mDebugTransient:Z

    if-eqz v5, :cond_10

    .line 5576
    iget-object v5, v9, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    iput-object v5, v9, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    .line 5577
    iget-boolean v5, v9, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z

    iput-boolean v5, v9, Lcom/android/server/am/ActivityManagerService;->mWaitForDebugger:Z

    :cond_10
    move/from16 v21, v6

    goto :goto_c

    :cond_11
    const/16 v21, 0x0

    .line 5582
    :goto_c
    iget-object v5, v9, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v5
    :try_end_6
    .catch Ljava/lang/Exception; {:try_start_6 .. :try_end_6} :catch_4

    .line 5583
    :try_start_7
    iget-object v6, v9, Lcom/android/server/am/ActivityManagerService;->mTrackAllocationApp:Ljava/lang/String;

    if-eqz v6, :cond_12

    invoke-virtual {v6, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_12

    const/4 v6, 0x0

    .line 5585
    iput-object v6, v9, Lcom/android/server/am/ActivityManagerService;->mTrackAllocationApp:Ljava/lang/String;

    const/16 v23, 0x1

    goto :goto_d

    :cond_12
    const/16 v23, 0x0

    .line 5587
    :goto_d
    monitor-exit v5
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_5

    :try_start_8
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    const/16 v5, 0x2710

    if-eqz v2, :cond_14

    .line 5591
    iget-object v6, v2, Lcom/android/server/am/BackupRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v6, v6, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v6, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_14

    .line 5592
    iget-object v6, v2, Lcom/android/server/am/BackupRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget v6, v6, Landroid/content/pm/ApplicationInfo;->uid:I

    if-lt v6, v5, :cond_14

    iget v2, v2, Lcom/android/server/am/BackupRecord;->backupMode:I

    if-eq v2, v7, :cond_13

    const/4 v6, 0x1

    if-ne v2, v6, :cond_14

    :cond_13
    const/4 v2, 0x1

    goto :goto_e

    :cond_14
    const/4 v2, 0x0

    .line 5597
    :goto_e
    invoke-virtual {v8}, Lcom/android/server/am/ProcessRecord;->getActiveInstrumentation()Lcom/android/server/am/ActiveInstrumentation;

    move-result-object v6

    if-eqz v6, :cond_15

    .line 5600
    iget-object v7, v6, Lcom/android/server/am/ActiveInstrumentation;->mClass:Landroid/content/ComponentName;

    invoke-virtual {v7}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v7

    const/4 v5, 0x7

    invoke-virtual {v9, v7, v5}, Lcom/android/server/am/ActivityManagerService;->notifyPackageUse(Ljava/lang/String;I)V

    .line 5603
    :cond_15
    sget-boolean v5, Lcom/android/server/wm/ProtoLogCache;->WM_DEBUG_CONFIGURATION_enabled:Z

    if-eqz v5, :cond_16

    invoke-static {v0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v8}, Lcom/android/server/am/ProcessRecord;->getWindowProcessController()Lcom/android/server/wm/WindowProcessController;

    move-result-object v7

    invoke-virtual {v7}, Lcom/android/server/wm/ConfigurationContainer;->getConfiguration()Landroid/content/res/Configuration;

    move-result-object v7

    invoke-static {v7}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v7

    sget-object v11, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_CONFIGURATION:Lcom/android/internal/protolog/ProtoLogGroup;

    filled-new-array {v5, v7}, [Ljava/lang/Object;

    move-result-object v5

    const v7, -0x2360a226

    const/4 v12, 0x0

    const/4 v13, 0x0

    invoke-static {v11, v7, v13, v12, v5}, Lcom/android/internal/protolog/ProtoLogImpl;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V

    goto :goto_f

    :cond_16
    const/4 v12, 0x0

    :goto_f
    if-eqz v6, :cond_17

    .line 5605
    iget-object v5, v6, Lcom/android/server/am/ActiveInstrumentation;->mTargetInfo:Landroid/content/pm/ApplicationInfo;

    goto :goto_10

    :cond_17
    iget-object v5, v8, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    .line 5606
    :goto_10
    invoke-virtual {v9, v5}, Lcom/android/server/am/ActivityManagerService;->compatibilityInfoForPackage(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/CompatibilityInfo;

    move-result-object v7

    invoke-virtual {v8, v7}, Lcom/android/server/am/ProcessRecord;->setCompat(Landroid/content/res/CompatibilityInfo;)V

    .line 5608
    iget-object v7, v9, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {v7, v15, v8, v6}, Lcom/android/server/am/AppProfiler;->setupProfilerInfoLocked(Landroid/app/IApplicationThread;Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ActiveInstrumentation;)Landroid/app/ProfilerInfo;

    move-result-object v6

    .line 5613
    invoke-virtual {v5}, Landroid/content/pm/ApplicationInfo;->isInstantApp()Z

    move-result v7

    if-nez v7, :cond_18

    iget v7, v5, Landroid/content/pm/ApplicationInfo;->targetSdkVersion:I

    const/16 v11, 0x1c

    if-ge v7, v11, :cond_18

    .line 5615
    sget-object v7, Lcom/android/server/am/ActivityManagerService;->sTheRealBuildSerial:Ljava/lang/String;

    goto :goto_11

    :cond_18
    const-string/jumbo v7, "unknown"

    :goto_11
    move-object/from16 v31, v7

    .line 5619
    iget-object v7, v8, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v7, v7, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {v7}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v7
    :try_end_8
    .catch Ljava/lang/Exception; {:try_start_8 .. :try_end_8} :catch_4

    const/16 v11, 0x2710

    if-lt v7, v11, :cond_19

    .line 5620
    :try_start_9
    const-class v7, Landroid/view/autofill/AutofillManagerInternal;

    invoke-static {v7}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Landroid/view/autofill/AutofillManagerInternal;

    if-eqz v7, :cond_19

    .line 5623
    iget-object v11, v8, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v11, v11, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v13, v8, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-wide v12, v13, Landroid/content/pm/ApplicationInfo;->longVersionCode:J

    iget v14, v8, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-virtual {v7, v11, v12, v13, v14}, Landroid/view/autofill/AutofillManagerInternal;->getAutofillOptions(Ljava/lang/String;JI)Landroid/content/AutofillOptions;

    move-result-object v7

    move-object/from16 v32, v7

    goto :goto_12

    :cond_19
    const/16 v32, 0x0

    .line 5628
    :goto_12
    iget-object v7, v8, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v7, v7, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {v7}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v7

    const/16 v11, 0x2710

    if-lt v7, v11, :cond_1a

    .line 5629
    const-class v7, Lcom/android/server/contentcapture/ContentCaptureManagerInternal;

    .line 5630
    invoke-static {v7}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/contentcapture/ContentCaptureManagerInternal;

    if-eqz v7, :cond_1a

    .line 5632
    iget v11, v8, Lcom/android/server/am/ProcessRecord;->userId:I

    iget-object v12, v8, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v12, v12, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v7, v11, v12}, Lcom/android/server/contentcapture/ContentCaptureManagerInternal;->getOptionsForPackage(ILjava/lang/String;)Landroid/content/ContentCaptureOptions;

    move-result-object v7

    move-object/from16 v33, v7

    goto :goto_13

    :cond_1a
    const/16 v33, 0x0

    .line 5637
    :goto_13
    const-class v7, Lcom/android/server/graphics/fonts/FontManagerInternal;

    invoke-static {v7}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/graphics/fonts/FontManagerInternal;

    if-eqz v7, :cond_1b

    .line 5639
    invoke-interface {v7}, Lcom/android/server/graphics/fonts/FontManagerInternal;->getSerializedSystemFontMap()Landroid/os/SharedMemory;

    move-result-object v7

    move-object/from16 v35, v7

    goto :goto_14

    :cond_1b
    const/16 v35, 0x0

    .line 5643
    :goto_14
    iget-object v7, v9, Lcom/android/server/am/ActivityManagerService;->mCoreSettingsObserver:Lcom/android/server/am/CoreSettingsObserver;

    invoke-virtual {v7}, Lcom/android/server/am/CoreSettingsObserver;->getCoreSettingsLocked()Landroid/os/Bundle;

    move-result-object v7

    .line 5646
    sget-object v11, Lcom/samsung/android/multiwindow/MultiWindowCoreState;->TAG:Ljava/lang/String;

    iget-object v12, v9, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    iget-object v12, v12, Lcom/android/server/wm/ActivityTaskManagerService;->mExt:Lcom/android/server/wm/ActivityTaskManagerServiceExt;

    .line 5647
    invoke-virtual {v12}, Lcom/android/server/wm/ActivityTaskManagerServiceExt;->getCoreStateController()Lcom/android/server/wm/CoreStateController;

    move-result-object v12

    iget v13, v8, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-virtual {v12, v13}, Lcom/android/server/wm/CoreStateController;->getCoreStates(I)Landroid/os/Bundle;

    move-result-object v12

    .line 5646
    invoke-virtual {v7, v11, v12}, Landroid/os/Bundle;->putBundle(Ljava/lang/String;Landroid/os/Bundle;)V

    .line 5654
    new-instance v11, Landroid/content/res/Configuration;

    invoke-virtual {v8}, Lcom/android/server/am/ProcessRecord;->getWindowProcessController()Lcom/android/server/wm/WindowProcessController;

    move-result-object v12

    .line 5655
    invoke-virtual {v12}, Lcom/android/server/wm/ConfigurationContainer;->getConfiguration()Landroid/content/res/Configuration;

    move-result-object v12

    invoke-direct {v11, v12}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V

    .line 5662
    iget-object v11, v5, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v12, v8, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v11, v12}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v11

    if-eqz v11, :cond_1c

    .line 5664
    invoke-virtual {v9, v5}, Lcom/android/server/am/ActivityManagerService;->hasFixedAppContextDisplayMetaData(Landroid/content/pm/ApplicationInfo;)Z

    move-result v11

    invoke-virtual {v8, v11}, Lcom/android/server/am/ProcessRecord;->setFixedAppContextDisplay(Z)V

    :cond_1c
    const-string v11, "attachApplicationLocked: immediately before bindApplication"

    .line 5675
    invoke-virtual {v9, v3, v4, v11}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 5676
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v13

    .line 5677
    iget-object v11, v9, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {v8}, Lcom/android/server/am/ProcessRecord;->getWindowProcessController()Lcom/android/server/wm/WindowProcessController;

    move-result-object v12

    invoke-virtual {v11, v12}, Lcom/android/server/wm/ActivityTaskManagerInternal;->preBindApplication(Lcom/android/server/wm/WindowProcessController;)V

    .line 5678
    invoke-virtual {v8}, Lcom/android/server/am/ProcessRecord;->getActiveInstrumentation()Lcom/android/server/am/ActiveInstrumentation;

    move-result-object v11

    .line 5679
    iget-object v12, v9, Lcom/android/server/am/ActivityManagerService;->mPlatformCompat:Lcom/android/server/compat/PlatformCompat;

    move-wide/from16 v16, v13

    if-eqz v12, :cond_1d

    .line 5680
    iget-object v13, v8, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    invoke-virtual {v12, v13}, Lcom/android/server/compat/PlatformCompat;->resetReporting(Landroid/content/pm/ApplicationInfo;)V

    .line 5682
    :cond_1d
    invoke-static {v10}, Landroid/content/pm/ProviderInfoList;->fromList(Ljava/util/List;)Landroid/content/pm/ProviderInfoList;

    move-result-object v18

    .line 5683
    invoke-virtual {v8}, Lcom/android/server/am/ProcessRecord;->getIsolatedEntryPoint()Ljava/lang/String;

    move-result-object v10

    if-eqz v10, :cond_1e

    .line 5687
    invoke-virtual {v8}, Lcom/android/server/am/ProcessRecord;->getIsolatedEntryPoint()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v8}, Lcom/android/server/am/ProcessRecord;->getIsolatedEntryPointArgs()[Ljava/lang/String;

    move-result-object v1

    .line 5686
    invoke-interface {v15, v0, v1}, Landroid/app/IApplicationThread;->runIsolatedEntryPoint(Ljava/lang/String;[Ljava/lang/String;)V

    move-wide/from16 v44, v3

    move-wide/from16 v46, v16

    move/from16 v3, p3

    goto/16 :goto_19

    :cond_1e
    if-eqz v11, :cond_21

    .line 5689
    iget-object v13, v8, Lcom/android/server/am/ProcessRecord;->sdkSandboxClientAppVolumeUuid:Ljava/lang/String;

    iget-object v14, v8, Lcom/android/server/am/ProcessRecord;->sdkSandboxClientAppPackage:Ljava/lang/String;

    iget-object v12, v11, Lcom/android/server/am/ActiveInstrumentation;->mClass:Landroid/content/ComponentName;

    iget-object v10, v11, Lcom/android/server/am/ActiveInstrumentation;->mArguments:Landroid/os/Bundle;

    move-wide/from16 v44, v3

    iget-object v3, v11, Lcom/android/server/am/ActiveInstrumentation;->mWatcher:Landroid/app/IInstrumentationWatcher;

    iget-object v4, v11, Lcom/android/server/am/ActiveInstrumentation;->mUiAutomationConnection:Landroid/app/IUiAutomationConnection;

    iget-boolean v11, v9, Lcom/android/server/am/ActivityManagerService;->mBinderTransactionTrackingEnabled:Z

    if-nez v2, :cond_20

    if-nez v1, :cond_1f

    goto :goto_15

    :cond_1f
    const/16 v24, 0x0

    goto :goto_16

    :cond_20
    :goto_15
    const/16 v24, 0x1

    .line 5697
    :goto_16
    invoke-virtual {v8}, Lcom/android/server/am/ProcessRecord;->isPersistent()Z

    move-result v25

    new-instance v1, Landroid/content/res/Configuration;

    .line 5700
    invoke-virtual {v8}, Lcom/android/server/am/ProcessRecord;->getWindowProcessController()Lcom/android/server/wm/WindowProcessController;

    move-result-object v2

    invoke-virtual {v2}, Lcom/android/server/wm/ConfigurationContainer;->getConfiguration()Landroid/content/res/Configuration;

    move-result-object v2

    invoke-direct {v1, v2}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V

    .line 5701
    invoke-virtual {v8}, Lcom/android/server/am/ProcessRecord;->getCompat()Landroid/content/res/CompatibilityInfo;

    move-result-object v27

    iget-boolean v2, v8, Lcom/android/server/am/ProcessRecord;->isolated:Z

    invoke-virtual {v9, v2}, Lcom/android/server/am/ActivityManagerService;->getCommonServicesLocked(Z)Landroid/util/ArrayMap;

    move-result-object v28

    .line 5706
    invoke-virtual {v8}, Lcom/android/server/am/ProcessRecord;->getDisabledCompatChanges()[J

    move-result-object v34

    .line 5707
    invoke-virtual {v8}, Lcom/android/server/am/ProcessRecord;->getStartElapsedTime()J

    move-result-wide v36

    invoke-virtual {v8}, Lcom/android/server/am/ProcessRecord;->getStartUptime()J

    move-result-wide v38

    .line 5709
    invoke-virtual {v8}, Lcom/android/server/am/ProcessRecord;->getDisplayId()I

    move-result v40

    .line 5712
    invoke-virtual {v8}, Lcom/android/server/am/ProcessRecord;->isFixedAppContextDisplay()Z

    move-result v41

    move-object v2, v10

    move-object/from16 v10, p1

    move/from16 v22, v11

    move-object v11, v0

    move-object v0, v12

    move-object v12, v5

    move/from16 v5, p3

    move-wide/from16 v46, v16

    move-object/from16 v15, v18

    move-object/from16 v16, v0

    move-object/from16 v17, v6

    move-object/from16 v18, v2

    move-object/from16 v19, v3

    move-object/from16 v20, v4

    move-object/from16 v26, v1

    move-object/from16 v29, v7

    .line 5689
    invoke-interface/range {v10 .. v41}, Landroid/app/IApplicationThread;->bindApplication(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;Ljava/lang/String;Ljava/lang/String;Landroid/content/pm/ProviderInfoList;Landroid/content/ComponentName;Landroid/app/ProfilerInfo;Landroid/os/Bundle;Landroid/app/IInstrumentationWatcher;Landroid/app/IUiAutomationConnection;IZZZZLandroid/content/res/Configuration;Landroid/content/res/CompatibilityInfo;Ljava/util/Map;Landroid/os/Bundle;FLjava/lang/String;Landroid/content/AutofillOptions;Landroid/content/ContentCaptureOptions;[JLandroid/os/SharedMemory;JJIZ)V

    move v3, v5

    goto :goto_19

    :cond_21
    move-wide/from16 v44, v3

    move-wide/from16 v46, v16

    move/from16 v3, p3

    .line 5715
    iget-object v13, v8, Lcom/android/server/am/ProcessRecord;->sdkSandboxClientAppVolumeUuid:Ljava/lang/String;

    iget-object v14, v8, Lcom/android/server/am/ProcessRecord;->sdkSandboxClientAppPackage:Ljava/lang/String;

    const/16 v16, 0x0

    const/4 v4, 0x0

    const/16 v19, 0x0

    const/16 v20, 0x0

    iget-boolean v15, v9, Lcom/android/server/am/ActivityManagerService;->mBinderTransactionTrackingEnabled:Z

    if-nez v2, :cond_23

    if-nez v1, :cond_22

    goto :goto_17

    :cond_22
    const/16 v24, 0x0

    goto :goto_18

    :cond_23
    :goto_17
    const/16 v24, 0x1

    .line 5719
    :goto_18
    invoke-virtual {v8}, Lcom/android/server/am/ProcessRecord;->isPersistent()Z

    move-result v25

    new-instance v1, Landroid/content/res/Configuration;

    .line 5722
    invoke-virtual {v8}, Lcom/android/server/am/ProcessRecord;->getWindowProcessController()Lcom/android/server/wm/WindowProcessController;

    move-result-object v2

    invoke-virtual {v2}, Lcom/android/server/wm/ConfigurationContainer;->getConfiguration()Landroid/content/res/Configuration;

    move-result-object v2

    invoke-direct {v1, v2}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V

    .line 5723
    invoke-virtual {v8}, Lcom/android/server/am/ProcessRecord;->getCompat()Landroid/content/res/CompatibilityInfo;

    move-result-object v27

    iget-boolean v2, v8, Lcom/android/server/am/ProcessRecord;->isolated:Z

    invoke-virtual {v9, v2}, Lcom/android/server/am/ActivityManagerService;->getCommonServicesLocked(Z)Landroid/util/ArrayMap;

    move-result-object v28

    .line 5728
    invoke-virtual {v8}, Lcom/android/server/am/ProcessRecord;->getDisabledCompatChanges()[J

    move-result-object v34

    .line 5729
    invoke-virtual {v8}, Lcom/android/server/am/ProcessRecord;->getStartElapsedTime()J

    move-result-wide v36

    invoke-virtual {v8}, Lcom/android/server/am/ProcessRecord;->getStartUptime()J

    move-result-wide v38

    .line 5731
    invoke-virtual {v8}, Lcom/android/server/am/ProcessRecord;->getDisplayId()I

    move-result v40

    .line 5734
    invoke-virtual {v8}, Lcom/android/server/am/ProcessRecord;->isFixedAppContextDisplay()Z

    move-result v41

    const/high16 v30, 0x3f800000    # 1.0f

    move-object/from16 v10, p1

    move-object v11, v0

    move-object v12, v5

    move v0, v15

    move-object/from16 v15, v18

    move-object/from16 v17, v6

    move-object/from16 v18, v4

    move/from16 v22, v0

    move-object/from16 v26, v1

    move-object/from16 v29, v7

    .line 5715
    invoke-interface/range {v10 .. v41}, Landroid/app/IApplicationThread;->bindApplication(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;Ljava/lang/String;Ljava/lang/String;Landroid/content/pm/ProviderInfoList;Landroid/content/ComponentName;Landroid/app/ProfilerInfo;Landroid/os/Bundle;Landroid/app/IInstrumentationWatcher;Landroid/app/IUiAutomationConnection;IZZZZLandroid/content/res/Configuration;Landroid/content/res/CompatibilityInfo;Ljava/util/Map;Landroid/os/Bundle;FLjava/lang/String;Landroid/content/AutofillOptions;Landroid/content/ContentCaptureOptions;[JLandroid/os/SharedMemory;JJIZ)V

    :goto_19
    if-eqz v6, :cond_24

    .line 5738
    invoke-virtual {v6}, Landroid/app/ProfilerInfo;->closeFd()V

    :cond_24
    move-wide/from16 v0, v46

    .line 5742
    invoke-virtual {v8, v0, v1}, Lcom/android/server/am/ProcessRecord;->setBindApplicationTime(J)V

    .line 5746
    iget-object v1, v9, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v1
    :try_end_9
    .catch Ljava/lang/Exception; {:try_start_9 .. :try_end_9} :catch_2

    .line 5747
    :try_start_a
    iget-object v0, v9, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    move-object/from16 v2, p1

    invoke-virtual {v8, v2, v0}, Lcom/android/server/am/ProcessRecord;->makeActive(Landroid/app/IApplicationThread;Lcom/android/server/am/ProcessStatsService;)V

    const-string v0, "attachApplicationLocked: immediately after bindApplication"

    move-wide/from16 v4, v44

    .line 5748
    invoke-virtual {v9, v4, v5, v0}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 5749
    monitor-exit v1
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_3

    :try_start_b
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    const/4 v1, 0x0

    const/4 v2, 0x0

    .line 5750
    invoke-virtual {v9, v8, v2, v1}, Lcom/android/server/am/ActivityManagerService;->updateLruProcessLocked(Lcom/android/server/am/ProcessRecord;ZLcom/android/server/am/ProcessRecord;)V

    const-string v0, "attachApplicationLocked: after updateLruProcessLocked"

    .line 5751
    invoke-virtual {v9, v4, v5, v0}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 5752
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v0

    .line 5753
    iget-object v2, v9, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    iget-object v2, v2, Lcom/android/server/am/AppProfiler;->mProfilerLock:Ljava/lang/Object;

    monitor-enter v2
    :try_end_b
    .catch Ljava/lang/Exception; {:try_start_b .. :try_end_b} :catch_2

    .line 5754
    :try_start_c
    iget-object v4, v8, Lcom/android/server/am/ProcessRecord;->mProfile:Lcom/android/server/am/ProcessProfileRecord;

    invoke-virtual {v4, v0, v1}, Lcom/android/server/am/ProcessProfileRecord;->setLastRequestedGc(J)V

    .line 5755
    iget-object v4, v8, Lcom/android/server/am/ProcessRecord;->mProfile:Lcom/android/server/am/ProcessProfileRecord;

    invoke-virtual {v4, v0, v1}, Lcom/android/server/am/ProcessProfileRecord;->setLastLowMemory(J)V

    .line 5756
    monitor-exit v2
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_1

    .line 5759
    :try_start_d
    iget-object v0, v9, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0, v8}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 5763
    iget-object v0, v9, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    invoke-virtual {v0, v8}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 5765
    iget-object v0, v9, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget-boolean v0, v0, Lcom/android/server/am/ActivityManagerConstants;->mEnableWaitForFinishAttachApplication:Z
    :try_end_d
    .catch Ljava/lang/Exception; {:try_start_d .. :try_end_d} :catch_2

    if-nez v0, :cond_25

    move/from16 v4, p2

    move-wide/from16 v1, p4

    .line 5766
    :try_start_e
    invoke-virtual {v9, v1, v2, v3, v4}, Lcom/android/server/am/ActivityManagerService;->finishAttachApplicationInner(JII)V

    goto :goto_1a

    :cond_25
    move/from16 v4, p2

    const/4 v1, 0x1

    .line 5768
    invoke-virtual {v8, v1}, Lcom/android/server/am/ProcessRecord;->setPendingFinishAttach(Z)V
    :try_end_e
    .catch Ljava/lang/Exception; {:try_start_e .. :try_end_e} :catch_3

    :goto_1a
    return-void

    :catchall_1
    move-exception v0

    move/from16 v4, p2

    .line 5756
    :goto_1b
    :try_start_f
    monitor-exit v2
    :try_end_f
    .catchall {:try_start_f .. :try_end_f} :catchall_2

    :try_start_10
    throw v0
    :try_end_10
    .catch Ljava/lang/Exception; {:try_start_10 .. :try_end_10} :catch_3

    :catchall_2
    move-exception v0

    goto :goto_1b

    :catchall_3
    move-exception v0

    move/from16 v4, p2

    .line 5749
    :goto_1c
    :try_start_11
    monitor-exit v1
    :try_end_11
    .catchall {:try_start_11 .. :try_end_11} :catchall_4

    :try_start_12
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v0
    :try_end_12
    .catch Ljava/lang/Exception; {:try_start_12 .. :try_end_12} :catch_3

    :catchall_4
    move-exception v0

    goto :goto_1c

    :catch_2
    move-exception v0

    move/from16 v4, p2

    goto :goto_1e

    :catchall_5
    move-exception v0

    move v4, v14

    .line 5587
    :goto_1d
    :try_start_13
    monitor-exit v5
    :try_end_13
    .catchall {:try_start_13 .. :try_end_13} :catchall_6

    :try_start_14
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v0
    :try_end_14
    .catch Ljava/lang/Exception; {:try_start_14 .. :try_end_14} :catch_3

    :catch_3
    move-exception v0

    goto :goto_1e

    :catchall_6
    move-exception v0

    goto :goto_1d

    :catch_4
    move-exception v0

    move v4, v14

    :goto_1e
    const-string v1, "ActivityManager"

    .line 5772
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Exception thrown during bind of "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 5773
    iget-object v0, v9, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {v8, v0}, Lcom/android/server/am/ProcessRecord;->resetPackageList(Lcom/android/server/am/ProcessStatsService;)V

    .line 5774
    invoke-virtual {v8}, Lcom/android/server/am/ProcessRecord;->unlinkDeathRecipient()V

    const-string v0, "error during bind"

    const/4 v1, 0x7

    const/4 v2, 0x1

    .line 5775
    invoke-virtual {v8, v0, v1, v2}, Lcom/android/server/am/ProcessRecord;->killLocked(Ljava/lang/String;IZ)V

    const/4 v0, 0x0

    const/4 v5, 0x1

    const/4 v6, 0x0

    move-object/from16 v1, p0

    move-object v2, v8

    move/from16 v3, p2

    move v4, v0

    .line 5777
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->handleAppDiedLocked(Lcom/android/server/am/ProcessRecord;IZZZ)V

    return-void

    :catchall_7
    move-exception v0

    .line 5532
    :try_start_15
    monitor-exit v1
    :try_end_15
    .catchall {:try_start_15 .. :try_end_15} :catchall_7

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v0

    .line 5507
    :catch_5
    iget-object v1, v9, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {v8, v1}, Lcom/android/server/am/ProcessRecord;->resetPackageList(Lcom/android/server/am/ProcessStatsService;)V

    .line 5508
    iget-object v1, v9, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    new-instance v2, Lcom/android/server/am/HostingRecord;

    const-string/jumbo v3, "link fail"

    invoke-direct {v2, v3, v0}, Lcom/android/server/am/HostingRecord;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    const/4 v3, 0x0

    invoke-virtual {v1, v8, v2, v3}, Lcom/android/server/am/ProcessList;->startProcessLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/HostingRecord;I)V

    return-void
.end method

.method public backgroundAllowlistUid(I)V
    .locals 5

    .line 8843
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    const/16 v1, 0x3e8

    if-ne v0, v1, :cond_0

    .line 8850
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 8851
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 8852
    :try_start_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBackgroundAppIdAllowlist:[I

    array-length v2, v1

    add-int/lit8 v3, v2, 0x1

    .line 8853
    new-array v3, v3, [I

    const/4 v4, 0x0

    .line 8854
    invoke-static {v1, v4, v3, v4, v2}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 8855
    invoke-static {p1}, Landroid/os/UserHandle;->getAppId(I)I

    move-result p1

    aput p1, v3, v2

    .line 8856
    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mBackgroundAppIdAllowlist:[I

    .line 8857
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 8858
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :catchall_0
    move-exception p1

    .line 8857
    :try_start_3
    monitor-exit v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p1

    :catchall_1
    move-exception p1

    .line 8858
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1

    .line 8844
    :cond_0
    new-instance p0, Ljava/lang/SecurityException;

    const-string p1, "Only the OS may call backgroundAllowlistUid()"

    invoke-direct {p0, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p0
.end method

.method public backgroundServicesFinishedLocked(I)V
    .locals 3

    .line 18380
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v0, p0

    const/4 v1, 0x0

    :goto_0
    if-ge v1, v0, :cond_0

    aget-object v2, p0, v1

    .line 18381
    invoke-virtual {v2, p1}, Lcom/android/server/am/BroadcastQueue;->backgroundServicesFinishedLocked(I)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    :cond_0
    return-void
.end method

.method public backupAgentCreated(Ljava/lang/String;Landroid/os/IBinder;I)V
    .locals 8

    .line 16355
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    .line 16356
    invoke-virtual {p0, p1, v2}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPackage(Ljava/lang/String;I)V

    .line 16359
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    const/4 v4, 0x0

    const/4 v5, 0x2

    const-string v6, "backupAgentCreated"

    const/4 v7, 0x0

    move v3, p3

    invoke-virtual/range {v0 .. v7}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p3

    .line 16367
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 16368
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTargets:Landroid/util/SparseArray;

    invoke-virtual {v0, p3}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/BackupRecord;

    if-nez v0, :cond_0

    const/4 v0, 0x0

    goto :goto_0

    .line 16369
    :cond_0
    iget-object v0, v0, Lcom/android/server/am/BackupRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v0, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 16370
    :goto_0
    invoke-virtual {p1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_1

    const-string p2, "ActivityManager"

    .line 16371
    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "Backup agent created for "

    invoke-virtual {p3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, " but not requested!"

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p2, p1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 16372
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 16374
    :cond_1
    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 16376
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    :try_start_2
    const-string p0, "backup"

    .line 16379
    invoke-static {p0}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object p0

    .line 16378
    invoke-static {p0}, Landroid/app/backup/IBackupManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/app/backup/IBackupManager;

    move-result-object p0

    .line 16380
    invoke-interface {p0, p3, p1, p2}, Landroid/app/backup/IBackupManager;->agentConnectedForUser(ILjava/lang/String;Landroid/os/IBinder;)V
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_1
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    goto :goto_2

    :catchall_0
    move-exception p0

    goto :goto_1

    :catch_0
    move-exception p0

    :try_start_3
    const-string p1, "ActivityManager"

    const-string p2, "Exception trying to deliver BackupAgent binding: "

    .line 16384
    invoke-static {p1, p2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 16385
    invoke-virtual {p0}, Ljava/lang/Exception;->printStackTrace()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    goto :goto_2

    .line 16387
    :goto_1
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 16388
    throw p0

    .line 16387
    :catch_1
    :goto_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return-void

    :catchall_1
    move-exception p1

    .line 16374
    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public batteryNeedsCpuUpdate()V
    .locals 0

    .line 3232
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V

    return-void
.end method

.method public batteryPowerChanged(Z)V
    .locals 1

    .line 3239
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V

    .line 3240
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v0

    .line 3241
    :try_start_0
    iput-boolean p1, p0, Lcom/android/server/am/ActivityManagerService;->mOnBattery:Z

    .line 3242
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjProfiler:Lcom/android/server/am/OomAdjProfiler;

    invoke-virtual {p0, p1}, Lcom/android/server/am/OomAdjProfiler;->batteryPowerChanged(Z)V

    .line 3243
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return-void

    :catchall_0
    move-exception p0

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p0
.end method

.method public batterySendBroadcast(Landroid/content/Intent;)V
    .locals 23

    .line 3253
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    const/4 v2, 0x0

    const/4 v3, 0x0

    const/4 v4, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v13, 0x0

    const/4 v14, -0x1

    const/4 v15, 0x0

    const/16 v16, 0x0

    const/16 v17, 0x0

    const/16 v18, -0x1

    const/16 v19, 0x3e8

    .line 3255
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v20

    .line 3256
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v21

    const/16 v22, -0x1

    move-object/from16 v1, p0

    move-object/from16 v5, p1

    .line 3254
    invoke-virtual/range {v1 .. v22}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ILandroid/os/Bundle;ZZIIIII)I

    .line 3257
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public batteryStatsReset()V
    .locals 0

    .line 3248
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjProfiler:Lcom/android/server/am/OomAdjProfiler;

    invoke-virtual {p0}, Lcom/android/server/am/OomAdjProfiler;->reset()V

    return-void
.end method

.method public bindBackupAgent(Ljava/lang/String;III)Z
    .locals 18

    move-object/from16 v10, p0

    move-object/from16 v0, p1

    move/from16 v11, p2

    move/from16 v12, p3

    move/from16 v13, p4

    const-string v1, "android.permission.CONFIRM_FULL_BACKUP"

    const-string v2, "bindBackupAgent"

    .line 16200
    invoke-virtual {v10, v1, v2}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    const-string v1, "android"

    .line 16207
    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    const/4 v15, 0x0

    if-nez v1, :cond_1

    .line 16208
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal;

    move-result-object v1

    invoke-virtual {v1}, Landroid/content/pm/PackageManagerInternal;->getSystemUiServiceComponent()Landroid/content/ComponentName;

    move-result-object v1

    invoke-virtual {v1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v1

    .line 16209
    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_0

    goto :goto_0

    :cond_0
    move v1, v15

    goto :goto_1

    :cond_1
    :goto_0
    const/4 v1, 0x1

    :goto_1
    if-eqz v1, :cond_2

    move v1, v15

    goto :goto_2

    :cond_2
    move v1, v12

    .line 16212
    :goto_2
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v2

    const-wide/16 v3, 0x400

    .line 16215
    :try_start_0
    invoke-interface {v2, v0, v3, v4, v1}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;JI)Landroid/content/pm/ApplicationInfo;

    move-result-object v3
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    :goto_3
    move-object v9, v3

    goto :goto_4

    :catch_0
    const/4 v3, 0x0

    goto :goto_3

    :goto_4
    if-nez v9, :cond_3

    const-string v1, "ActivityManager"

    .line 16220
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Unable to bind backup agent for "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    return v15

    .line 16223
    :cond_3
    iget-object v0, v9, Landroid/content/pm/ApplicationInfo;->backupAgentName:Ljava/lang/String;

    const/4 v8, 0x4

    const/4 v3, 0x2

    if-eqz v0, :cond_5

    .line 16224
    new-instance v0, Landroid/content/ComponentName;

    iget-object v4, v9, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v5, v9, Landroid/content/pm/ApplicationInfo;->backupAgentName:Ljava/lang/String;

    invoke-direct {v0, v4, v5}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 16228
    :try_start_1
    invoke-interface {v2, v0, v1}, Landroid/content/pm/IPackageManager;->getComponentEnabledSetting(Landroid/content/ComponentName;I)I

    move-result v1
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_1

    goto :goto_5

    :catch_1
    move v1, v15

    :goto_5
    if-eq v1, v3, :cond_4

    const/4 v2, 0x3

    if-eq v1, v2, :cond_4

    if-eq v1, v8, :cond_4

    goto :goto_6

    :cond_4
    const-string v1, "ActivityManager"

    .line 16236
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Unable to bind backup agent for "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v0, ", the backup agent component is disabled."

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    return v15

    .line 16252
    :cond_5
    :goto_6
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 16256
    :try_start_2
    iget-object v0, v10, Lcom/android/server/am/ActivityManagerService;->mPackageManagerInt:Landroid/content/pm/PackageManagerInternal;

    iget-object v1, v9, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget v2, v9, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 16257
    invoke-static {v2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v2

    .line 16256
    invoke-virtual {v0, v1, v15, v2}, Landroid/content/pm/PackageManagerInternal;->setPackageStoppedState(Ljava/lang/String;ZI)V
    :try_end_2
    .catch Ljava/lang/IllegalArgumentException; {:try_start_2 .. :try_end_2} :catch_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    goto :goto_7

    :catchall_0
    move-exception v0

    goto/16 :goto_c

    :catch_2
    move-exception v0

    :try_start_3
    const-string v1, "ActivityManager"

    .line 16259
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Failed trying to unstop package "

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v4, v9, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v4, ": "

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 16263
    :goto_7
    new-instance v0, Lcom/android/server/am/BackupRecord;

    invoke-direct {v0, v9, v11, v12, v13}, Lcom/android/server/am/BackupRecord;-><init>(Landroid/content/pm/ApplicationInfo;III)V

    if-eqz v11, :cond_7

    if-ne v11, v3, :cond_6

    goto :goto_8

    .line 16268
    :cond_6
    new-instance v1, Landroid/content/ComponentName;

    const-string v2, "android"

    const-string v3, "FullBackupAgent"

    invoke-direct {v1, v2, v3}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    goto :goto_9

    .line 16267
    :cond_7
    :goto_8
    new-instance v1, Landroid/content/ComponentName;

    iget-object v2, v9, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v3, v9, Landroid/content/pm/ApplicationInfo;->backupAgentName:Ljava/lang/String;

    invoke-direct {v1, v2, v3}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 16271
    :goto_9
    iget-object v2, v9, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    const/4 v4, 0x0

    const/4 v5, 0x0

    new-instance v6, Lcom/android/server/am/HostingRecord;

    const-string v3, "backup"

    invoke-direct {v6, v3, v1}, Lcom/android/server/am/HostingRecord;-><init>(Ljava/lang/String;Landroid/content/ComponentName;)V

    const/4 v7, 0x4

    const/16 v16, 0x0

    const/16 v17, 0x0

    move-object/from16 v1, p0

    move-object v3, v9

    move/from16 v8, v16

    move-object v14, v9

    move/from16 v9, v17

    invoke-virtual/range {v1 .. v9}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILcom/android/server/am/HostingRecord;IZZ)Lcom/android/server/am/ProcessRecord;

    move-result-object v1

    if-nez v1, :cond_8

    const-string v1, "ActivityManager"

    .line 16276
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Unable to start backup agent process "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 16277
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v15

    .line 16284
    :cond_8
    :try_start_4
    iget v2, v14, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {v2}, Landroid/os/UserHandle;->isApp(I)Z

    move-result v2

    if-eqz v2, :cond_9

    const/4 v2, 0x1

    if-ne v11, v2, :cond_9

    .line 16286
    invoke-virtual {v1, v2}, Lcom/android/server/am/ProcessRecord;->setInFullBackup(Z)V

    .line 16288
    :cond_9
    iput-object v1, v0, Lcom/android/server/am/BackupRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 16289
    iget-object v2, v10, Lcom/android/server/am/ActivityManagerService;->mBackupTargets:Landroid/util/SparseArray;

    invoke-virtual {v2, v12}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/BackupRecord;

    const/4 v3, -0x1

    if-eqz v2, :cond_a

    .line 16290
    iget-object v2, v2, Lcom/android/server/am/BackupRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    goto :goto_a

    :cond_a
    move v2, v3

    .line 16291
    :goto_a
    invoke-virtual {v1}, Lcom/android/server/am/ProcessRecord;->isInFullBackup()Z

    move-result v4

    if-eqz v4, :cond_b

    iget-object v4, v0, Lcom/android/server/am/BackupRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    goto :goto_b

    :cond_b
    move v4, v3

    .line 16292
    :goto_b
    iget-object v5, v10, Lcom/android/server/am/ActivityManagerService;->mBackupTargets:Landroid/util/SparseArray;

    invoke-virtual {v5, v12, v0}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 16294
    iget-object v0, v1, Lcom/android/server/am/ProcessRecord;->mProfile:Lcom/android/server/am/ProcessProfileRecord;

    const/4 v5, 0x4

    invoke-virtual {v0, v5}, Lcom/android/server/am/ProcessProfileRecord;->addHostingComponentType(I)V

    const/16 v0, 0xf

    .line 16297
    invoke-virtual {v10, v1, v0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;I)Z

    .line 16301
    invoke-virtual {v1}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    if-eqz v0, :cond_c

    .line 16305
    :try_start_5
    invoke-interface {v0, v14, v11, v12, v13}, Landroid/app/IApplicationThread;->scheduleCreateBackupAgent(Landroid/content/pm/ApplicationInfo;III)V
    :try_end_5
    .catch Landroid/os/RemoteException; {:try_start_5 .. :try_end_5} :catch_3
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    .line 16317
    :catch_3
    :cond_c
    :try_start_6
    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 16319
    const-class v0, Lcom/android/server/job/JobSchedulerInternal;

    invoke-static {v0}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/job/JobSchedulerInternal;

    if-eq v2, v3, :cond_d

    .line 16321
    invoke-interface {v0, v2}, Lcom/android/server/job/JobSchedulerInternal;->removeBackingUpUid(I)V

    :cond_d
    if-eq v4, v3, :cond_e

    .line 16324
    invoke-interface {v0, v4}, Lcom/android/server/job/JobSchedulerInternal;->addBackingUpUid(I)V

    :cond_e
    const/4 v1, 0x1

    return v1

    .line 16317
    :goto_c
    :try_start_7
    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public bindService(Landroid/app/IApplicationThread;Landroid/os/IBinder;Landroid/content/Intent;Ljava/lang/String;Landroid/app/IServiceConnection;JLjava/lang/String;I)I
    .locals 11

    const/4 v8, 0x0

    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move-object v3, p3

    move-object v4, p4

    move-object/from16 v5, p5

    move-wide/from16 v6, p6

    move-object/from16 v9, p8

    move/from16 v10, p9

    .line 16052
    invoke-virtual/range {v0 .. v10}, Lcom/android/server/am/ActivityManagerService;->bindServiceInstance(Landroid/app/IApplicationThread;Landroid/os/IBinder;Landroid/content/Intent;Ljava/lang/String;Landroid/app/IServiceConnection;JLjava/lang/String;Ljava/lang/String;I)I

    move-result v0

    return v0
.end method

.method public bindServiceInstance(Landroid/app/IApplicationThread;Landroid/os/IBinder;Landroid/content/Intent;Ljava/lang/String;Landroid/app/IServiceConnection;JLjava/lang/String;Ljava/lang/String;I)I
    .locals 15

    const/4 v9, 0x0

    const/4 v10, -0x1

    const/4 v11, 0x0

    const/4 v12, 0x0

    move-object v0, p0

    move-object/from16 v1, p1

    move-object/from16 v2, p2

    move-object/from16 v3, p3

    move-object/from16 v4, p4

    move-object/from16 v5, p5

    move-wide/from16 v6, p6

    move-object/from16 v8, p8

    move-object/from16 v13, p9

    move/from16 v14, p10

    .line 16063
    invoke-virtual/range {v0 .. v14}, Lcom/android/server/am/ActivityManagerService;->bindServiceInstance(Landroid/app/IApplicationThread;Landroid/os/IBinder;Landroid/content/Intent;Ljava/lang/String;Landroid/app/IServiceConnection;JLjava/lang/String;ZILjava/lang/String;Landroid/app/IApplicationThread;Ljava/lang/String;I)I

    move-result v0

    return v0
.end method

.method public final bindServiceInstance(Landroid/app/IApplicationThread;Landroid/os/IBinder;Landroid/content/Intent;Ljava/lang/String;Landroid/app/IServiceConnection;JLjava/lang/String;ZILjava/lang/String;Landroid/app/IApplicationThread;Ljava/lang/String;I)I
    .locals 19

    move-object/from16 v1, p0

    move-object/from16 v0, p3

    move-object/from16 v10, p8

    const-string v2, "bindService"

    .line 16074
    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 16075
    invoke-virtual {v1, v0}, Lcom/android/server/am/ActivityManagerService;->enforceAllowedToStartOrBindServiceIfSdkSandbox(Landroid/content/Intent;)V

    const/4 v2, 0x1

    if-eqz v0, :cond_1

    .line 16078
    invoke-virtual/range {p3 .. p3}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v3

    if-eq v3, v2, :cond_0

    goto :goto_0

    .line 16079
    :cond_0
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "File descriptors passed in Intent"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_1
    :goto_0
    if-eqz p13, :cond_9

    if-eqz p9, :cond_3

    if-eqz v10, :cond_2

    goto :goto_1

    .line 16087
    :cond_2
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "No instance name provided for isolated process"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 16090
    :cond_3
    :goto_1
    invoke-virtual {v1, v10}, Lcom/android/server/am/ActivityManagerService;->validateServiceInstanceName(Ljava/lang/String;)V

    .line 16094
    invoke-static {}, Lcom/android/server/am/MARsPolicyManager;->getInstance()Lcom/android/server/am/MARsPolicyManager;

    move-result-object v3

    invoke-virtual {v3}, Lcom/android/server/am/MARsPolicyManager;->isChinaPolicyEnabled()Z

    move-result v3

    if-nez v3, :cond_6

    .line 16096
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 16097
    :try_start_0
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLOSP(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v3

    if-eqz v3, :cond_4

    .line 16098
    iget-object v3, v3, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {v3}, Lcom/android/server/am/ProcessStateRecord;->hasForegroundActivities()Z

    move-result v3

    if-eqz v3, :cond_4

    move v3, v2

    goto :goto_2

    :cond_4
    const/4 v3, 0x0

    .line 16101
    :goto_2
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    if-eqz v3, :cond_6

    .line 16103
    invoke-virtual/range {p3 .. p3}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v3

    if-eqz v3, :cond_5

    .line 16104
    invoke-virtual {v3}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v3

    goto :goto_3

    :cond_5
    invoke-virtual/range {p3 .. p3}, Landroid/content/Intent;->getPackage()Ljava/lang/String;

    move-result-object v3

    .line 16105
    :goto_3
    invoke-static {}, Lcom/android/server/am/MARsPolicyManager;->getInstance()Lcom/android/server/am/MARsPolicyManager;

    move-result-object v4

    move/from16 v15, p14

    invoke-virtual {v4, v3, v15, v2}, Lcom/android/server/am/MARsPolicyManager;->cancelDisablePolicy(Ljava/lang/String;II)Z

    goto :goto_4

    :catchall_0
    move-exception v0

    .line 16101
    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :cond_6
    move/from16 v15, p14

    :goto_4
    const-wide/16 v13, 0x40

    .line 16116
    :try_start_2
    invoke-static {v13, v14}, Landroid/os/Trace;->isTagEnabled(J)Z

    move-result v2

    if-eqz v2, :cond_8

    .line 16117
    invoke-virtual/range {p3 .. p3}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v2

    .line 16118
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "bindService:"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    if-eqz v2, :cond_7

    .line 16119
    invoke-virtual {v2}, Landroid/content/ComponentName;->toShortString()Ljava/lang/String;

    move-result-object v2

    goto :goto_5

    :cond_7
    invoke-virtual/range {p3 .. p3}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v2

    :goto_5
    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    .line 16118
    invoke-static {v13, v14, v2}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 16121
    :cond_8
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_4

    .line 16122
    :try_start_3
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    move-object/from16 v3, p1

    move-object/from16 v4, p2

    move-object/from16 v5, p3

    move-object/from16 v6, p4

    move-object/from16 v7, p5

    move-wide/from16 v8, p6

    move-object/from16 v10, p8

    move/from16 v11, p9

    move/from16 v12, p10

    move-wide/from16 v17, v13

    move-object/from16 v13, p11

    move-object/from16 v14, p12

    move-object/from16 v15, p13

    move/from16 v16, p14

    :try_start_4
    invoke-virtual/range {v2 .. v16}, Lcom/android/server/am/ActiveServices;->bindServiceLocked(Landroid/app/IApplicationThread;Landroid/os/IBinder;Landroid/content/Intent;Ljava/lang/String;Landroid/app/IServiceConnection;JLjava/lang/String;ZILjava/lang/String;Landroid/app/IApplicationThread;Ljava/lang/String;I)I

    move-result v0

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 16128
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    invoke-static/range {v17 .. v18}, Landroid/os/Trace;->traceEnd(J)V

    return v0

    :catchall_1
    move-exception v0

    goto :goto_6

    :catchall_2
    move-exception v0

    move-wide/from16 v17, v13

    .line 16126
    :goto_6
    :try_start_5
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    :try_start_6
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_3

    :catchall_3
    move-exception v0

    goto :goto_7

    :catchall_4
    move-exception v0

    move-wide/from16 v17, v13

    .line 16128
    :goto_7
    invoke-static/range {v17 .. v18}, Landroid/os/Trace;->traceEnd(J)V

    .line 16129
    throw v0

    .line 16083
    :cond_9
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "callingPackage cannot be null"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public bootAnimationComplete()V
    .locals 4

    const-string v0, "bootAnimationComplete"

    const-string v1, "NULL"

    const/4 v2, 0x0

    const/4 v3, -0x1

    .line 6385
    invoke-static {v2, v3, v2, v0, v1}, Lcom/android/server/am/EventLogTags;->writeBootProgressAmsState(IIILjava/lang/String;Ljava/lang/String;)V

    .line 6390
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 6391
    :try_start_0
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mCallFinishBooting:Z

    const/4 v1, 0x1

    .line 6392
    iput-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mBootAnimationComplete:Z

    .line 6393
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    if-eqz v0, :cond_0

    .line 6395
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->finishBooting()V

    :cond_0
    const-string p0, "bootAnimationComplete"

    const-string v0, "NULL"

    const/4 v1, 0x2

    .line 6400
    invoke-static {v2, v3, v1, p0, v0}, Lcom/android/server/am/EventLogTags;->writeBootProgressAmsState(IIILjava/lang/String;Ljava/lang/String;)V

    return-void

    :catchall_0
    move-exception v0

    .line 6393
    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public final broadcastIntent(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZI)I
    .locals 17

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-object/from16 v3, p2

    move-object/from16 v4, p3

    move-object/from16 v5, p4

    move/from16 v6, p5

    move-object/from16 v7, p6

    move-object/from16 v8, p7

    move-object/from16 v9, p8

    move/from16 v12, p9

    move-object/from16 v13, p10

    move/from16 v14, p11

    move/from16 v15, p12

    move/from16 v16, p13

    const/4 v2, 0x0

    const/4 v10, 0x0

    const/4 v11, 0x0

    .line 18253
    invoke-virtual/range {v0 .. v16}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentWithFeature(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ILandroid/os/Bundle;ZZI)I

    move-result v0

    return v0
.end method

.method public broadcastIntentInPackage(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;IIILandroid/content/Intent;Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;Landroid/os/Bundle;ZZILandroid/app/BackgroundStartPrivileges;[I)I
    .locals 30

    move-object/from16 v15, p0

    .line 18316
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    move-object/from16 v0, p7

    .line 18317
    :try_start_0
    invoke-virtual {v15, v0}, Lcom/android/server/am/ActivityManagerService;->verifyBroadcastLocked(Landroid/content/Intent;)Landroid/content/Intent;

    move-result-object v5

    .line 18319
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v28

    if-nez p14, :cond_0

    const/4 v0, 0x0

    :goto_0
    move-object v12, v0

    goto :goto_1

    .line 18321
    :cond_0
    filled-new-array/range {p14 .. p14}, [Ljava/lang/String;

    move-result-object v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    goto :goto_0

    .line 18324
    :goto_1
    :try_start_1
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLOSP(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v2

    const/4 v13, 0x0

    const/4 v14, 0x0

    const/4 v0, -0x1

    const/16 v19, -0x1

    const/16 v26, 0x0

    if-eqz p1, :cond_1

    const/4 v1, 0x1

    goto :goto_2

    :cond_1
    const/4 v1, 0x0

    :goto_2
    move/from16 v27, v1

    move-object/from16 v1, p0

    move-object/from16 v3, p2

    move-object/from16 v4, p3

    move-object/from16 v6, p8

    move-object/from16 v7, p9

    move-object/from16 v8, p10

    move/from16 v9, p11

    move-object/from16 v10, p12

    move-object/from16 v11, p13

    move v15, v0

    move-object/from16 v16, p15

    move/from16 v17, p16

    move/from16 v18, p17

    move/from16 v20, p4

    move/from16 v21, p5

    move/from16 v22, p6

    move/from16 v23, p18

    move-object/from16 v24, p19

    move-object/from16 v25, p20

    .line 18325
    invoke-virtual/range {v1 .. v27}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ILandroid/os/Bundle;ZZIIIIILandroid/app/BackgroundStartPrivileges;[ILjava/util/function/BiFunction;Z)I

    move-result v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 18332
    :try_start_2
    invoke-static/range {v28 .. v29}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 18325
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v0

    :catchall_0
    move-exception v0

    .line 18332
    :try_start_3
    invoke-static/range {v28 .. v29}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 18333
    throw v0

    :catchall_1
    move-exception v0

    .line 18334
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public broadcastIntentInPackage(Ljava/lang/String;Ljava/lang/String;IIILandroid/content/Intent;Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;Landroid/os/Bundle;ZZILandroid/app/BackgroundStartPrivileges;[I)I
    .locals 21

    move-object/from16 v0, p0

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move/from16 v4, p3

    move/from16 v5, p4

    move/from16 v6, p5

    move-object/from16 v7, p6

    move-object/from16 v8, p7

    move-object/from16 v9, p8

    move-object/from16 v10, p9

    move/from16 v11, p10

    move-object/from16 v12, p11

    move-object/from16 v13, p12

    move-object/from16 v14, p13

    move-object/from16 v15, p14

    move/from16 v16, p15

    move/from16 v17, p16

    move/from16 v18, p17

    move-object/from16 v19, p18

    move-object/from16 v20, p19

    const/4 v1, 0x0

    .line 18301
    invoke-virtual/range {v0 .. v20}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentInPackage(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;IIILandroid/content/Intent;Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;Landroid/os/Bundle;ZZILandroid/app/BackgroundStartPrivileges;[I)I

    move-result v0

    return v0
.end method

.method public final broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ILandroid/os/Bundle;ZZIIIII)I
    .locals 27

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-object/from16 v2, p2

    move-object/from16 v3, p3

    move-object/from16 v4, p4

    move-object/from16 v5, p5

    move-object/from16 v7, p6

    move/from16 v8, p7

    move-object/from16 v9, p8

    move-object/from16 v10, p9

    move-object/from16 v11, p10

    move-object/from16 v12, p11

    move-object/from16 v13, p12

    move/from16 v14, p13

    move-object/from16 v15, p14

    move/from16 v16, p15

    move/from16 v17, p16

    move/from16 v18, p17

    move/from16 v19, p18

    move/from16 v20, p19

    move/from16 v21, p20

    move/from16 v22, p21

    const/4 v6, 0x0

    .line 17154
    sget-object v23, Landroid/app/BackgroundStartPrivileges;->NONE:Landroid/app/BackgroundStartPrivileges;

    const/16 v24, 0x0

    const/16 v25, 0x0

    const/16 v26, 0x0

    invoke-virtual/range {v0 .. v26}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ILandroid/os/Bundle;ZZIIIIILandroid/app/BackgroundStartPrivileges;[ILjava/util/function/BiFunction;Z)I

    move-result v0

    return v0
.end method

.method public final broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ILandroid/os/Bundle;ZZIIIIILandroid/app/BackgroundStartPrivileges;[ILjava/util/function/BiFunction;)I
    .locals 27

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-object/from16 v2, p2

    move-object/from16 v3, p3

    move-object/from16 v4, p4

    move-object/from16 v5, p5

    move-object/from16 v6, p6

    move-object/from16 v7, p7

    move/from16 v8, p8

    move-object/from16 v9, p9

    move-object/from16 v10, p10

    move-object/from16 v11, p11

    move-object/from16 v12, p12

    move-object/from16 v13, p13

    move/from16 v14, p14

    move-object/from16 v15, p15

    move/from16 v16, p16

    move/from16 v17, p17

    move/from16 v18, p18

    move/from16 v19, p19

    move/from16 v20, p20

    move/from16 v21, p21

    move/from16 v22, p22

    move-object/from16 v23, p23

    move-object/from16 v24, p24

    move-object/from16 v25, p25

    const/16 v26, 0x0

    .line 17174
    invoke-virtual/range {v0 .. v26}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ILandroid/os/Bundle;ZZIIIIILandroid/app/BackgroundStartPrivileges;[ILjava/util/function/BiFunction;Z)I

    move-result v0

    return v0
.end method

.method public final broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ILandroid/os/Bundle;ZZIIIIILandroid/app/BackgroundStartPrivileges;[ILjava/util/function/BiFunction;Z)I
    .locals 28

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-object/from16 v2, p2

    move-object/from16 v3, p3

    move-object/from16 v4, p4

    move-object/from16 v5, p5

    move-object/from16 v6, p6

    move-object/from16 v7, p7

    move/from16 v8, p8

    move-object/from16 v9, p9

    move-object/from16 v10, p10

    move-object/from16 v11, p11

    move-object/from16 v12, p12

    move-object/from16 v13, p13

    move/from16 v14, p14

    move/from16 v16, p16

    move/from16 v17, p17

    move/from16 v18, p18

    move/from16 v19, p19

    move/from16 v20, p20

    move/from16 v21, p21

    move/from16 v22, p22

    move-object/from16 v23, p23

    move-object/from16 v24, p24

    move-object/from16 v25, p25

    move/from16 v26, p26

    const-string v15, "broadcastIntentLockedTraced"

    .line 17196
    invoke-static {v15}, Lcom/android/server/am/BroadcastQueue;->traceBegin(Ljava/lang/String;)I

    move-result v27

    .line 17200
    invoke-static/range {p15 .. p15}, Landroid/app/BroadcastOptions;->fromBundleNullable(Landroid/os/Bundle;)Landroid/app/BroadcastOptions;

    move-result-object v15

    .line 17197
    invoke-virtual/range {v0 .. v26}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLockedTraced(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ILandroid/app/BroadcastOptions;ZZIIIIILandroid/app/BackgroundStartPrivileges;[ILjava/util/function/BiFunction;Z)I

    move-result v0

    .line 17203
    invoke-static/range {v27 .. v27}, Lcom/android/server/am/BroadcastQueue;->traceEnd(I)V

    return v0
.end method

.method public final broadcastIntentLockedTraced(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ILandroid/app/BroadcastOptions;ZZIIIIILandroid/app/BackgroundStartPrivileges;[ILjava/util/function/BiFunction;Z)I
    .locals 53

    move-object/from16 v11, p0

    move-object/from16 v0, p1

    move-object/from16 v15, p2

    move-object/from16 v1, p4

    move-object/from16 v14, p7

    move-object/from16 v12, p11

    move-object/from16 v13, p15

    move/from16 v10, p16

    move/from16 v9, p18

    move/from16 v8, p19

    move/from16 v7, p20

    move/from16 v6, p21

    .line 17219
    invoke-static {}, Lcom/android/server/am/BroadcastLoopers;->addMyLooper()V

    .line 17221
    invoke-static/range {p20 .. p20}, Landroid/os/Process;->isSdkSandboxUid(I)Z

    move-result v2

    if-eqz v2, :cond_2

    .line 17222
    const-class v2, Lcom/android/server/sdksandbox/SdkSandboxManagerLocal;

    invoke-static {v2}, Lcom/android/server/LocalManagerRegistry;->getManager(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/sdksandbox/SdkSandboxManagerLocal;

    if-eqz v2, :cond_1

    .line 17228
    invoke-interface {v2, v1}, Lcom/android/server/sdksandbox/SdkSandboxManagerLocal;->canSendBroadcast(Landroid/content/Intent;)Z

    move-result v2

    if-eqz v2, :cond_0

    goto :goto_0

    .line 17229
    :cond_0
    new-instance v0, Ljava/lang/SecurityException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Intent "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 17230
    invoke-virtual/range {p4 .. p4}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " may not be broadcast from an SDK sandbox uid. Given caller package "

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " (pid="

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ", realCallingUid="

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ", callingUid= "

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ")"

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 17225
    :cond_1
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "SdkSandboxManagerLocal not found when sending a broadcast from an SDK sandbox uid."

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_2
    :goto_0
    const/16 v5, 0x3e8

    if-eqz v14, :cond_4

    if-nez p6, :cond_4

    .line 17238
    invoke-interface/range {p7 .. p7}, Landroid/content/IIntentReceiver;->asBinder()Landroid/os/IBinder;

    move-result-object v2

    instance-of v2, v2, Landroid/os/BinderProxy;

    if-eqz v2, :cond_3

    const-string v2, "ActivityManager"

    .line 17240
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Sending broadcast "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual/range {p4 .. p4}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v4, " with resultTo requires resultToApp"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    new-instance v4, Ljava/lang/Throwable;

    invoke-direct {v4}, Ljava/lang/Throwable;-><init>()V

    invoke-static {v2, v3, v4}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    goto :goto_1

    :cond_3
    const-string/jumbo v2, "system"

    .line 17245
    invoke-virtual {v11, v2, v5}, Lcom/android/server/am/ActivityManagerService;->getProcessRecordLocked(Ljava/lang/String;I)Lcom/android/server/am/ProcessRecord;

    move-result-object v2

    move-object/from16 v41, v2

    goto :goto_2

    :cond_4
    :goto_1
    move-object/from16 v41, p6

    .line 17249
    :goto_2
    new-instance v4, Landroid/content/Intent;

    invoke-direct {v4, v1}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V

    .line 17251
    invoke-virtual {v11, v0, v15, v8}, Lcom/android/server/am/ActivityManagerService;->isInstantApp(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;I)Z

    move-result v42

    if-eqz v42, :cond_5

    .line 17254
    invoke-virtual {v4}, Landroid/content/Intent;->getFlags()I

    move-result v1

    const v2, -0x200001

    and-int/2addr v1, v2

    invoke-virtual {v4, v1}, Landroid/content/Intent;->setFlags(I)Landroid/content/Intent;

    :cond_5
    const/4 v3, -0x1

    const/4 v2, 0x0

    move/from16 v1, p22

    if-ne v1, v3, :cond_6

    if-eqz p24, :cond_6

    const-string v3, "ActivityManager"

    const-string v5, "broadcastAllowList only applies when sending to individual users. Assuming restrictive whitelist."

    .line 17258
    invoke-static {v3, v5}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    new-array v3, v2, [I

    move-object v5, v3

    goto :goto_3

    :cond_6
    move-object/from16 v5, p24

    :goto_3
    const/16 v3, 0x10

    .line 17264
    invoke-virtual {v4, v3}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 17267
    iget-boolean v2, v11, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    const/high16 v17, 0x2000000

    const/high16 v6, 0x40000000    # 2.0f

    if-nez v2, :cond_7

    invoke-virtual {v4}, Landroid/content/Intent;->getFlags()I

    move-result v2

    and-int v2, v2, v17

    if-nez v2, :cond_7

    .line 17268
    invoke-virtual {v4, v6}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    :cond_7
    if-eqz v14, :cond_a

    if-nez v10, :cond_a

    .line 17276
    iget-boolean v2, v11, Lcom/android/server/am/ActivityManagerService;->mEnableModernQueue:Z

    if-nez v2, :cond_8

    const-string v2, "ActivityManager"

    .line 17277
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Broadcast "

    invoke-virtual {v3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v6, " not ordered but result callback requested!"

    invoke-virtual {v3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 17279
    :cond_8
    invoke-static/range {p19 .. p19}, Landroid/os/UserHandle;->isCore(I)Z

    move-result v2

    if-eqz v2, :cond_9

    goto :goto_4

    .line 17280
    :cond_9
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Unauthorized unordered resultTo broadcast "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v1, " sent from uid "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "ActivityManager"

    .line 17282
    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 17283
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 17287
    :cond_a
    :goto_4
    iget-object v2, v11, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    const/4 v6, 0x1

    const/16 v19, 0x0

    const-string v20, "broadcast"

    move-object v1, v2

    const/4 v3, 0x0

    move/from16 v2, p18

    const/16 v21, 0x10

    move/from16 v3, p19

    move-object/from16 p4, v4

    move/from16 v4, p22

    move-object/from16 p6, v5

    const/16 v10, 0x3e8

    move v5, v6

    move/from16 v6, v19

    move-object/from16 v7, v20

    move v14, v8

    move-object/from16 v8, p2

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result v8

    const/4 v7, -0x1

    if-eq v8, v7, :cond_c

    .line 17292
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v1, v8}, Lcom/android/server/am/UserController;->isUserOrItsParentRunning(I)Z

    move-result v1

    if-nez v1, :cond_c

    if-ne v14, v10, :cond_b

    .line 17294
    invoke-virtual/range {p4 .. p4}, Landroid/content/Intent;->getFlags()I

    move-result v1

    and-int v1, v1, v17

    if-nez v1, :cond_c

    :cond_b
    const-string v1, "android.intent.action.ACTION_SHUTDOWN"

    .line 17295
    invoke-virtual/range {p4 .. p4}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_c

    const-string v0, "ActivityManager"

    .line 17296
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Skipping broadcast of "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-object/from16 v10, p4

    invoke-virtual {v1, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v2, ": user "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, " and its parent (if any) are stopped"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    move-object/from16 v1, p0

    move-object/from16 v2, v41

    move-object/from16 v3, p7

    move-object v4, v10

    move v5, v8

    move-object/from16 v6, p15

    move/from16 v7, p19

    move-object/from16 v8, p2

    .line 17298
    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->scheduleCanceledResultTo(Lcom/android/server/am/ProcessRecord;Landroid/content/IIntentReceiver;Landroid/content/Intent;ILandroid/app/BroadcastOptions;ILjava/lang/String;)V

    const/4 v0, -0x2

    return v0

    :cond_c
    move-object/from16 v10, p4

    .line 17304
    invoke-virtual {v10}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v6

    const-wide/16 v1, 0x0

    const/4 v5, 0x1

    if-eqz v13, :cond_14

    .line 17306
    invoke-virtual/range {p15 .. p15}, Landroid/app/BroadcastOptions;->getTemporaryAppAllowlistDuration()J

    move-result-wide v3

    cmp-long v3, v3, v1

    if-lez v3, :cond_e

    const-string v3, "android.permission.CHANGE_DEVICE_IDLE_TEMP_WHITELIST"

    move/from16 v4, p20

    move/from16 v1, p21

    .line 17310
    invoke-static {v3, v1, v4, v7, v5}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v2

    if-eqz v2, :cond_f

    const-string v2, "android.permission.START_ACTIVITIES_FROM_BACKGROUND"

    .line 17313
    invoke-static {v2, v1, v4, v7, v5}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v2

    if-eqz v2, :cond_f

    const-string v2, "android.permission.START_FOREGROUND_SERVICES_FROM_BACKGROUND"

    .line 17316
    invoke-static {v2, v1, v4, v7, v5}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v2

    if-nez v2, :cond_d

    goto :goto_5

    .line 17319
    :cond_d
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Permission Denial: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v10}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " broadcast from "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " (pid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ", uid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v14}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ") requires "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "android.permission.CHANGE_DEVICE_IDLE_TEMP_WHITELIST"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " or "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "android.permission.START_ACTIVITIES_FROM_BACKGROUND"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " or "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "android.permission.START_FOREGROUND_SERVICES_FROM_BACKGROUND"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "ActivityManager"

    .line 17326
    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 17327
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    :cond_e
    move/from16 v4, p20

    move/from16 v1, p21

    .line 17330
    :cond_f
    :goto_5
    invoke-virtual/range {p15 .. p15}, Landroid/app/BroadcastOptions;->isDontSendToRestrictedApps()Z

    move-result v2

    if-eqz v2, :cond_10

    .line 17331
    invoke-virtual {v11, v14}, Lcom/android/server/am/ActivityManagerService;->isUidActiveLOSP(I)Z

    move-result v2

    if-nez v2, :cond_10

    .line 17332
    invoke-virtual {v11, v14, v15}, Lcom/android/server/am/ActivityManagerService;->isBackgroundRestrictedNoCheck(ILjava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_10

    const-string v0, "ActivityManager"

    .line 17333
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Not sending broadcast "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, " - app "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, " has background restrictions"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    const/16 v0, -0x60

    return v0

    .line 17337
    :cond_10
    invoke-virtual/range {p15 .. p15}, Landroid/app/BroadcastOptions;->allowsBackgroundActivityStarts()Z

    move-result v2

    if-eqz v2, :cond_12

    const-string v2, "android.permission.START_ACTIVITIES_FROM_BACKGROUND"

    .line 17341
    invoke-static {v2, v1, v4, v7, v5}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v2

    if-nez v2, :cond_11

    .line 17354
    sget-object v2, Landroid/app/BackgroundStartPrivileges;->ALLOW_BAL:Landroid/app/BackgroundStartPrivileges;

    goto :goto_6

    .line 17345
    :cond_11
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Permission Denial: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v10}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " broadcast from "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " (pid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ", uid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v14}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ") requires "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "android.permission.START_ACTIVITIES_FROM_BACKGROUND"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "ActivityManager"

    .line 17350
    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 17351
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    :cond_12
    move-object/from16 v2, p23

    .line 17358
    :goto_6
    invoke-virtual/range {p15 .. p15}, Landroid/app/BroadcastOptions;->getIdForResponseEvent()J

    move-result-wide v3

    const-wide/16 v16, 0x0

    cmp-long v3, v3, v16

    if-lez v3, :cond_13

    const-string v3, "android.permission.ACCESS_BROADCAST_RESPONSE_STATS"

    const-string/jumbo v4, "recordResponseEventWhileInBackground"

    .line 17359
    invoke-virtual {v11, v3, v9, v14, v4}, Lcom/android/server/am/ActivityManagerService;->enforcePermission(Ljava/lang/String;IILjava/lang/String;)V

    :cond_13
    move-object/from16 v43, v2

    goto :goto_7

    :cond_14
    move-wide/from16 v16, v1

    move/from16 v1, p21

    move-object/from16 v43, p23

    .line 17368
    :goto_7
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v2

    invoke-interface {v2, v6}, Landroid/content/pm/IPackageManager;->isProtectedBroadcast(Ljava/lang/String;)Z

    move-result v46
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_3

    .line 17377
    invoke-static/range {p19 .. p19}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v2

    if-eqz v2, :cond_17

    const/16 v3, 0x403

    if-eq v2, v3, :cond_17

    const/16 v3, 0x42c

    if-eq v2, v3, :cond_17

    const/16 v3, 0x431

    if-eq v2, v3, :cond_17

    const/16 v3, 0x1482

    if-eq v2, v3, :cond_17

    packed-switch v2, :pswitch_data_0

    if-nez v46, :cond_15

    if-nez p26, :cond_16

    :cond_15
    if-eqz v0, :cond_16

    .line 17392
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ProcessRecord;->isPersistent()Z

    move-result v2

    if-eqz v2, :cond_16

    move v2, v5

    goto :goto_8

    :cond_16
    const/4 v2, 0x0

    :goto_8
    move/from16 v47, v2

    goto :goto_9

    :cond_17
    :pswitch_0
    move/from16 v47, v5

    :goto_9
    if-nez v47, :cond_1d

    if-nez v46, :cond_1c

    const-string v2, "android.appwidget.action.APPWIDGET_CONFIGURE"

    .line 17407
    invoke-virtual {v2, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_18

    const-string v2, "android.appwidget.action.APPWIDGET_UPDATE"

    .line 17408
    invoke-virtual {v2, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_1d

    :cond_18
    if-eqz v15, :cond_1b

    .line 17418
    invoke-virtual {v10}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v2

    if-eqz v2, :cond_1a

    .line 17421
    invoke-virtual {v10}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v2

    invoke-virtual {v2}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v2, v15}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_19

    goto/16 :goto_a

    .line 17423
    :cond_19
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Permission Denial: not allowed to send broadcast "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " to "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 17425
    invoke-virtual {v10}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v1

    invoke-virtual {v1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " from "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "ActivityManager"

    .line 17427
    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 17428
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 17432
    :cond_1a
    invoke-virtual {v10, v15}, Landroid/content/Intent;->setPackage(Ljava/lang/String;)Landroid/content/Intent;

    goto :goto_a

    .line 17414
    :cond_1b
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Permission Denial: not allowed to send broadcast "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " from unknown caller."

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "ActivityManager"

    .line 17416
    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 17417
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 17401
    :cond_1c
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Permission Denial: not allowed to send broadcast "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " from pid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ", uid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v14}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "ActivityManager"

    .line 17404
    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 17405
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    :cond_1d
    :goto_a
    const/16 v48, 0x0

    if-eqz v6, :cond_56

    .line 17440
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getBackgroundLaunchBroadcasts()Landroid/util/ArraySet;

    move-result-object v2

    invoke-virtual {v2, v6}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_1e

    const/high16 v2, 0x1000000

    .line 17444
    invoke-virtual {v10, v2}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 17447
    :cond_1e
    invoke-virtual {v6}, Ljava/lang/String;->hashCode()I

    move-result v2

    const/16 v18, 0x6

    const/16 v19, 0x5

    const/16 v20, 0x4

    const/16 v32, 0x2

    sparse-switch v2, :sswitch_data_0

    :goto_b
    move v2, v7

    goto/16 :goto_c

    :sswitch_0
    const-string v2, "android.security.action.TRUST_STORE_CHANGED"

    invoke-virtual {v6, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_1f

    goto :goto_b

    :cond_1f
    const/16 v2, 0x14

    goto/16 :goto_c

    :sswitch_1
    const-string v2, "android.net.action.CLEAR_DNS_CACHE"

    invoke-virtual {v6, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_20

    goto :goto_b

    :cond_20
    const/16 v2, 0x13

    goto/16 :goto_c

    :sswitch_2
    const-string v2, "android.intent.action.PACKAGE_ADDED"

    invoke-virtual {v6, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_21

    goto :goto_b

    :cond_21
    const/16 v2, 0x12

    goto/16 :goto_c

    :sswitch_3
    const-string v2, "android.intent.action.PACKAGES_UNSUSPENDED"

    invoke-virtual {v6, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_22

    goto :goto_b

    :cond_22
    const/16 v2, 0x11

    goto/16 :goto_c

    :sswitch_4
    const-string v2, "android.hardware.action.NEW_PICTURE"

    invoke-virtual {v6, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_23

    goto :goto_b

    :cond_23
    move/from16 v2, v21

    goto/16 :goto_c

    :sswitch_5
    const-string v2, "android.intent.action.MEDIA_SCANNER_SCAN_FILE"

    invoke-virtual {v6, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_24

    goto :goto_b

    :cond_24
    const/16 v2, 0xf

    goto/16 :goto_c

    :sswitch_6
    const-string v2, "android.intent.action.PRE_BOOT_COMPLETED"

    invoke-virtual {v6, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_25

    goto :goto_b

    :cond_25
    const/16 v2, 0xe

    goto/16 :goto_c

    :sswitch_7
    const-string v2, "com.android.launcher.action.INSTALL_SHORTCUT"

    invoke-virtual {v6, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_26

    goto :goto_b

    :cond_26
    const/16 v2, 0xd

    goto/16 :goto_c

    :sswitch_8
    const-string v2, "android.intent.action.PACKAGE_REMOVED"

    invoke-virtual {v6, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_27

    goto :goto_b

    :cond_27
    const/16 v2, 0xc

    goto/16 :goto_c

    :sswitch_9
    const-string v2, "android.intent.action.TIME_SET"

    invoke-virtual {v6, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_28

    goto/16 :goto_b

    :cond_28
    const/16 v2, 0xb

    goto/16 :goto_c

    :sswitch_a
    const-string v2, "android.intent.action.TIMEZONE_CHANGED"

    invoke-virtual {v6, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_29

    goto/16 :goto_b

    :cond_29
    const/16 v2, 0xa

    goto/16 :goto_c

    :sswitch_b
    const-string v2, "android.intent.action.PACKAGE_DATA_CLEARED"

    invoke-virtual {v6, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_2a

    goto/16 :goto_b

    :cond_2a
    const/16 v2, 0x9

    goto/16 :goto_c

    :sswitch_c
    const-string v2, "android.intent.action.PROXY_CHANGE"

    invoke-virtual {v6, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_2b

    goto/16 :goto_b

    :cond_2b
    const/16 v2, 0x8

    goto/16 :goto_c

    :sswitch_d
    const-string v2, "android.intent.action.PACKAGE_CHANGED"

    invoke-virtual {v6, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_2c

    goto/16 :goto_b

    :cond_2c
    const/4 v2, 0x7

    goto :goto_c

    :sswitch_e
    const-string v2, "android.intent.action.CLOSE_SYSTEM_DIALOGS"

    invoke-virtual {v6, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_2d

    goto/16 :goto_b

    :cond_2d
    move/from16 v2, v18

    goto :goto_c

    :sswitch_f
    const-string v2, "android.intent.action.PACKAGE_REPLACED"

    invoke-virtual {v6, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_2e

    goto/16 :goto_b

    :cond_2e
    move/from16 v2, v19

    goto :goto_c

    :sswitch_10
    const-string v2, "android.intent.action.PACKAGES_SUSPENDED"

    invoke-virtual {v6, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_2f

    goto/16 :goto_b

    :cond_2f
    move/from16 v2, v20

    goto :goto_c

    :sswitch_11
    const-string v2, "android.intent.action.EXTERNAL_APPLICATIONS_AVAILABLE"

    invoke-virtual {v6, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_30

    goto/16 :goto_b

    :cond_30
    const/4 v2, 0x3

    goto :goto_c

    :sswitch_12
    const-string v2, "android.intent.action.EXTERNAL_APPLICATIONS_UNAVAILABLE"

    invoke-virtual {v6, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_31

    goto/16 :goto_b

    :cond_31
    move/from16 v2, v32

    goto :goto_c

    :sswitch_13
    const-string v2, "android.intent.action.UID_REMOVED"

    invoke-virtual {v6, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_32

    goto/16 :goto_b

    :cond_32
    move v2, v5

    goto :goto_c

    :sswitch_14
    const-string v2, "android.hardware.action.NEW_VIDEO"

    invoke-virtual {v6, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_33

    goto/16 :goto_b

    :cond_33
    const/4 v2, 0x0

    :goto_c
    packed-switch v2, :pswitch_data_1

    :cond_34
    :goto_d
    move v13, v1

    move-object/from16 v49, v6

    move v12, v7

    move v5, v8

    move v8, v9

    move-object v9, v10

    const/high16 v7, 0x40000000    # 2.0f

    const/4 v10, 0x0

    goto/16 :goto_21

    .line 17739
    :pswitch_1
    iget-object v2, v11, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v3, 0x3f

    invoke-virtual {v2, v3}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    goto :goto_d

    .line 17707
    :pswitch_2
    iget-object v2, v11, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v3, 0x1c

    invoke-virtual {v2, v3}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    goto :goto_d

    .line 17657
    :pswitch_3
    invoke-virtual {v10}, Landroid/content/Intent;->getData()Landroid/net/Uri;

    move-result-object v2

    if-eqz v2, :cond_34

    .line 17659
    invoke-virtual {v2}, Landroid/net/Uri;->getSchemeSpecificPart()Ljava/lang/String;

    move-result-object v2

    if-eqz v2, :cond_34

    const-string v5, "android.intent.extra.REPLACING"

    const/4 v3, 0x0

    .line 17661
    invoke-virtual {v10, v5, v3}, Landroid/content/Intent;->getBooleanExtra(Ljava/lang/String;Z)Z

    move-result v4

    .line 17662
    iget-object v5, v11, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {v5, v2, v4}, Lcom/android/server/wm/ActivityTaskManagerInternal;->onPackageAdded(Ljava/lang/String;Z)V

    .line 17665
    :try_start_1
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v4
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    move/from16 v34, v8

    const-wide/16 v7, 0x400

    .line 17666
    :try_start_2
    invoke-interface {v4, v2, v7, v8, v3}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;JI)Landroid/content/pm/ApplicationInfo;

    move-result-object v4

    .line 17667
    iget-object v5, v11, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    if-eqz v4, :cond_35

    .line 17668
    iget-wide v7, v4, Landroid/content/pm/ApplicationInfo;->longVersionCode:J

    goto :goto_e

    :cond_35
    move-wide/from16 v7, v16

    .line 17667
    :goto_e
    invoke-virtual {v5, v2, v7, v8}, Lcom/android/server/am/BatteryStatsService;->notePackageInstalled(Ljava/lang/String;J)V
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_1

    goto :goto_f

    :catch_0
    move/from16 v34, v8

    :catch_1
    :goto_f
    move v13, v1

    move-object/from16 v49, v6

    move v8, v9

    move-object v9, v10

    move/from16 v5, v34

    goto :goto_10

    :pswitch_4
    move/from16 v34, v8

    const/4 v3, 0x0

    .line 17449
    const-class v2, Lcom/android/server/pm/UserManagerInternal;

    invoke-static {v2}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/pm/UserManagerInternal;

    .line 17451
    invoke-virtual {v2, v8}, Lcom/android/server/pm/UserManagerInternal;->getUserInfo(I)Landroid/content/pm/UserInfo;

    move-result-object v4

    if-eqz v4, :cond_36

    .line 17452
    invoke-virtual {v4}, Landroid/content/pm/UserInfo;->isCloneProfile()Z

    move-result v4

    if-eqz v4, :cond_36

    .line 17453
    invoke-virtual {v2, v8}, Lcom/android/server/pm/UserManagerInternal;->getProfileParentId(I)I

    move-result v8

    move v13, v1

    move v2, v3

    move-object/from16 v49, v6

    move v5, v8

    move v8, v9

    move-object v9, v10

    const/high16 v7, 0x40000000    # 2.0f

    const/4 v12, -0x1

    move v10, v2

    goto/16 :goto_22

    :cond_36
    move v13, v1

    move-object/from16 v49, v6

    move v5, v8

    move v8, v9

    move-object v9, v10

    :goto_10
    const/high16 v7, 0x40000000    # 2.0f

    const/4 v12, -0x1

    move v10, v3

    goto/16 :goto_21

    :pswitch_5
    move v13, v1

    move-object/from16 v49, v6

    move v12, v7

    move v5, v8

    move v8, v9

    move-object v9, v10

    const/4 v2, 0x1

    const/high16 v7, 0x40000000    # 2.0f

    const/4 v10, 0x0

    goto/16 :goto_22

    :pswitch_6
    const/4 v3, 0x0

    const-string v0, "ActivityManager"

    .line 17744
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Broadcast "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, " no longer supported. It will not be delivered."

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    move-object/from16 v1, p0

    move-object/from16 v2, v41

    move v9, v3

    move-object/from16 v3, p7

    move-object v4, v10

    move v5, v8

    move-object/from16 v6, p15

    move/from16 v7, p19

    move-object/from16 v8, p2

    .line 17746
    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->scheduleCanceledResultTo(Lcom/android/server/am/ProcessRecord;Landroid/content/IIntentReceiver;Landroid/content/Intent;ILandroid/app/BroadcastOptions;ILjava/lang/String;)V

    return v9

    :pswitch_7
    const/4 v7, 0x0

    const-string v2, "android.intent.extra.TIME_PREF_24_HOUR_FORMAT"

    const/4 v3, -0x1

    .line 17694
    invoke-virtual {v10, v2, v3}, Landroid/content/Intent;->getIntExtra(Ljava/lang/String;I)I

    move-result v2

    if-eq v2, v3, :cond_37

    .line 17699
    iget-object v3, v11, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v4, 0x29

    .line 17700
    invoke-virtual {v3, v4, v2, v7}, Landroid/os/Handler;->obtainMessage(III)Landroid/os/Message;

    move-result-object v2

    .line 17702
    iget-object v3, v11, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v3, v2}, Landroid/os/Handler;->sendMessage(Landroid/os/Message;)Z

    .line 17704
    :cond_37
    iget-object v2, v11, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v2}, Lcom/android/server/am/BatteryStatsService;->noteCurrentTimeChanged()V

    goto/16 :goto_12

    :pswitch_8
    const/4 v7, 0x0

    .line 17687
    iget-object v2, v11, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v3, 0xd

    invoke-virtual {v2, v3}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    goto/16 :goto_12

    :pswitch_9
    const/4 v7, 0x0

    .line 17676
    invoke-virtual {v10}, Landroid/content/Intent;->getData()Landroid/net/Uri;

    move-result-object v2

    if-eqz v2, :cond_3a

    .line 17678
    invoke-virtual {v2}, Landroid/net/Uri;->getSchemeSpecificPart()Ljava/lang/String;

    move-result-object v2

    if-eqz v2, :cond_3a

    .line 17679
    iget-object v3, v11, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {v3, v2, v8}, Lcom/android/server/wm/ActivityTaskManagerInternal;->onPackageDataCleared(Ljava/lang/String;I)V

    goto/16 :goto_12

    :pswitch_a
    const/4 v7, 0x0

    const-string v2, "android.intent.extra.PROXY_INFO"

    .line 17716
    invoke-virtual {v10, v2}, Landroid/content/Intent;->getParcelableExtra(Ljava/lang/String;)Landroid/os/Parcelable;

    move-result-object v2

    check-cast v2, Landroid/net/ProxyInfo;

    .line 17717
    iget-object v3, v11, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v4, 0x1d

    invoke-virtual {v3, v4, v2}, Landroid/os/Handler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v2

    .line 17718
    invoke-virtual {v10}, Landroid/content/Intent;->getPackage()Ljava/lang/String;

    move-result-object v3

    .line 17720
    invoke-static {v3}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v4

    if-nez v4, :cond_38

    .line 17721
    new-instance v4, Landroid/os/Bundle;

    invoke-direct {v4}, Landroid/os/Bundle;-><init>()V

    const-string/jumbo v5, "packageName"

    .line 17722
    invoke-virtual {v4, v5, v3}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 17723
    invoke-virtual {v2, v4}, Landroid/os/Message;->setData(Landroid/os/Bundle;)V

    .line 17725
    :cond_38
    iget-object v3, v11, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v3, v2}, Landroid/os/Handler;->sendMessage(Landroid/os/Message;)Z

    goto/16 :goto_12

    :pswitch_b
    const/4 v7, 0x0

    .line 17753
    iget-object v2, v11, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {v2, v9, v14, v15}, Lcom/android/server/wm/ActivityTaskManagerInternal;->checkCanCloseSystemDialogs(IILjava/lang/String;)Z

    move-result v2

    if-nez v2, :cond_3a

    move-object/from16 v1, p0

    move-object/from16 v2, v41

    move-object/from16 v3, p7

    move-object v4, v10

    move v5, v8

    move-object/from16 v6, p15

    move v9, v7

    move/from16 v7, p19

    move-object/from16 v8, p2

    .line 17755
    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->scheduleCanceledResultTo(Lcom/android/server/am/ProcessRecord;Landroid/content/IIntentReceiver;Landroid/content/Intent;ILandroid/app/BroadcastOptions;ILjava/lang/String;)V

    return v9

    :pswitch_c
    const/4 v7, 0x0

    .line 17631
    invoke-virtual {v10}, Landroid/content/Intent;->getData()Landroid/net/Uri;

    move-result-object v2

    if-eqz v2, :cond_3a

    .line 17633
    invoke-virtual {v2}, Landroid/net/Uri;->getSchemeSpecificPart()Ljava/lang/String;

    move-result-object v3

    if-eqz v3, :cond_3a

    .line 17636
    :try_start_3
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v4

    const-wide/16 v12, 0x400

    .line 17637
    invoke-interface {v4, v3, v12, v13, v8}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;JI)Landroid/content/pm/ApplicationInfo;

    move-result-object v4
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_2

    goto :goto_11

    :catch_2
    move-object/from16 v4, v48

    :goto_11
    if-nez v4, :cond_39

    const-string v0, "ActivityManager"

    .line 17640
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Dropping ACTION_PACKAGE_REPLACED for non-existent pkg: ssp="

    invoke-virtual {v1, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, " data="

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    move-object/from16 v1, p0

    move-object/from16 v2, v41

    move-object/from16 v3, p7

    move-object v4, v10

    move v5, v8

    move-object/from16 v6, p15

    move v12, v7

    move/from16 v7, p19

    move-object/from16 v8, p2

    .line 17642
    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->scheduleCanceledResultTo(Lcom/android/server/am/ProcessRecord;Landroid/content/IIntentReceiver;Landroid/content/Intent;ILandroid/app/BroadcastOptions;ILjava/lang/String;)V

    return v12

    :cond_39
    move v12, v7

    .line 17646
    invoke-virtual {v11, v4}, Lcom/android/server/am/ActivityManagerService;->updateAssociationForApp(Landroid/content/pm/ApplicationInfo;)V

    .line 17647
    iget-object v2, v11, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {v2, v4}, Lcom/android/server/wm/ActivityTaskManagerInternal;->onPackageReplaced(Landroid/content/pm/ApplicationInfo;)V

    .line 17648
    iget-object v2, v11, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v2, v4}, Lcom/android/server/am/ActiveServices;->updateServiceApplicationInfoLocked(Landroid/content/pm/ApplicationInfo;)V

    .line 17649
    filled-new-array {v3}, [Ljava/lang/String;

    move-result-object v2

    const/4 v3, 0x3

    invoke-virtual {v11, v3, v2, v8}, Lcom/android/server/am/ActivityManagerService;->sendPackageBroadcastLocked(I[Ljava/lang/String;I)V

    move v13, v1

    move-object/from16 v49, v6

    move v5, v8

    move v8, v9

    move-object v9, v10

    move v10, v12

    const/high16 v7, 0x40000000    # 2.0f

    const/4 v12, -0x1

    goto/16 :goto_21

    :cond_3a
    :goto_12
    move v13, v1

    move-object/from16 v49, v6

    move v5, v8

    move v8, v9

    move-object v9, v10

    const/4 v12, -0x1

    move v10, v7

    :goto_13
    const/high16 v7, 0x40000000    # 2.0f

    goto/16 :goto_21

    :pswitch_d
    const/4 v3, 0x3

    const/4 v12, 0x0

    const-string v2, "android.permission.BROADCAST_PACKAGE_REMOVED"

    const/4 v4, -0x1

    const/4 v5, 0x1

    .line 17466
    invoke-static {v2, v9, v14, v4, v5}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v2

    if-nez v2, :cond_53

    .line 17478
    invoke-virtual {v6}, Ljava/lang/String;->hashCode()I

    move-result v2

    sparse-switch v2, :sswitch_data_1

    :goto_14
    const/4 v3, -0x1

    goto :goto_15

    :sswitch_15
    const-string v2, "android.intent.action.PACKAGES_UNSUSPENDED"

    invoke-virtual {v6, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_3b

    goto :goto_14

    :cond_3b
    move/from16 v3, v18

    goto :goto_15

    :sswitch_16
    const-string v2, "android.intent.action.PACKAGE_REMOVED"

    invoke-virtual {v6, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_3c

    goto :goto_14

    :cond_3c
    move/from16 v3, v19

    goto :goto_15

    :sswitch_17
    const-string v2, "android.intent.action.PACKAGE_CHANGED"

    invoke-virtual {v6, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_3d

    goto :goto_14

    :cond_3d
    move/from16 v3, v20

    goto :goto_15

    :sswitch_18
    const-string v2, "android.intent.action.PACKAGES_SUSPENDED"

    invoke-virtual {v6, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_41

    goto :goto_14

    :sswitch_19
    const-string v2, "android.intent.action.EXTERNAL_APPLICATIONS_AVAILABLE"

    invoke-virtual {v6, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_3e

    goto :goto_14

    :cond_3e
    move/from16 v3, v32

    goto :goto_15

    :sswitch_1a
    const-string v2, "android.intent.action.EXTERNAL_APPLICATIONS_UNAVAILABLE"

    invoke-virtual {v6, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_3f

    goto :goto_14

    :cond_3f
    const/4 v3, 0x1

    goto :goto_15

    :sswitch_1b
    const-string v2, "android.intent.action.UID_REMOVED"

    invoke-virtual {v6, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_40

    goto :goto_14

    :cond_40
    move v3, v12

    :cond_41
    :goto_15
    packed-switch v3, :pswitch_data_2

    :cond_42
    :goto_16
    move v13, v1

    move-object/from16 v49, v6

    move v5, v8

    move-object v9, v10

    move v10, v12

    const/4 v12, -0x1

    goto/16 :goto_20

    .line 17525
    :pswitch_e
    invoke-virtual {v10}, Landroid/content/Intent;->getData()Landroid/net/Uri;

    move-result-object v2

    if-eqz v2, :cond_42

    .line 17527
    invoke-virtual {v2}, Landroid/net/Uri;->getSchemeSpecificPart()Ljava/lang/String;

    move-result-object v2

    if-eqz v2, :cond_42

    const-string v3, "android.intent.action.PACKAGE_REMOVED"

    .line 17528
    invoke-virtual {v3, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    const-string v4, "android.intent.extra.REPLACING"

    .line 17530
    invoke-virtual {v10, v4, v12}, Landroid/content/Intent;->getBooleanExtra(Ljava/lang/String;Z)Z

    move-result v4

    const-string v5, "android.intent.extra.DONT_KILL_APP"

    .line 17532
    invoke-virtual {v10, v5, v12}, Landroid/content/Intent;->getBooleanExtra(Ljava/lang/String;Z)Z

    move-result v5

    const/4 v7, 0x1

    xor-int/2addr v5, v7

    if-eqz v3, :cond_43

    if-nez v4, :cond_43

    const/4 v7, 0x1

    goto :goto_17

    :cond_43
    move v7, v12

    :goto_17
    if-eqz v3, :cond_48

    if-eqz v5, :cond_44

    .line 17539
    iget-object v3, v11, Lcom/android/server/am/ActivityManagerService;->mExt:Lcom/android/server/am/ActivityManagerServiceExt;

    const-string v4, "android.intent.extra.UID"

    const/4 v13, -0x1

    .line 17540
    invoke-virtual {v10, v4, v13}, Landroid/content/Intent;->getIntExtra(Ljava/lang/String;I)I

    move-result v4

    .line 17539
    invoke-static {v4}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v24

    const/16 v25, 0x0

    const/16 v26, 0x1

    const/16 v27, 0x1

    const/16 v28, 0x0

    const-string/jumbo v31, "pkg removed"

    move-object/from16 v22, v3

    move-object/from16 v23, v2

    move/from16 v29, v7

    move/from16 v30, v8

    invoke-virtual/range {v22 .. v31}, Lcom/android/server/am/ActivityManagerServiceExt;->forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z

    .line 17550
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal;

    move-result-object v3

    .line 17551
    invoke-virtual {v3, v2}, Landroid/content/pm/PackageManagerInternal;->onPackageProcessKilledForUninstall(Ljava/lang/String;)V

    goto :goto_18

    :cond_44
    const-string v3, "android.intent.extra.UID"

    const/4 v4, -0x1

    .line 17556
    invoke-virtual {v10, v3, v4}, Landroid/content/Intent;->getIntExtra(Ljava/lang/String;I)I

    move-result v3

    .line 17555
    invoke-static {v3}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v3

    invoke-virtual {v11, v2, v3, v8}, Lcom/android/server/am/ActivityManagerService;->forceStopAppZygoteLocked(Ljava/lang/String;II)V

    :goto_18
    if-eqz v5, :cond_45

    move v3, v12

    goto :goto_19

    :cond_45
    move/from16 v3, v32

    .line 17562
    :goto_19
    filled-new-array {v2}, [Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v11, v3, v4, v8}, Lcom/android/server/am/ActivityManagerService;->sendPackageBroadcastLocked(I[Ljava/lang/String;I)V

    if-eqz v7, :cond_47

    .line 17566
    iget-object v3, v11, Lcom/android/server/am/ActivityManagerService;->mUgmInternal:Lcom/android/server/uri/UriGrantsManagerInternal;

    const/4 v7, 0x1

    invoke-interface {v3, v2, v8, v7, v12}, Lcom/android/server/uri/UriGrantsManagerInternal;->removeUriPermissionsForPackage(Ljava/lang/String;IZZ)V

    .line 17571
    iget-object v3, v11, Lcom/android/server/am/ActivityManagerService;->mExt:Lcom/android/server/am/ActivityManagerServiceExt;

    invoke-virtual {v3, v2}, Lcom/android/server/am/ActivityManagerServiceExt;->removeLongLivePackageWhenUninstalledLocked(Ljava/lang/String;)Z

    .line 17573
    sget-boolean v3, Lcom/samsung/android/rune/CoreRune;->FW_DEDICATED_MEMORY:Z

    if-eqz v3, :cond_46

    .line 17574
    iget-object v3, v11, Lcom/android/server/am/ActivityManagerService;->mExt:Lcom/android/server/am/ActivityManagerServiceExt;

    invoke-virtual {v3, v2, v8}, Lcom/android/server/am/ActivityManagerServiceExt;->removeLongLiveTaskLocked(Ljava/lang/String;I)V

    .line 17578
    :cond_46
    iget-object v3, v11, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {v3, v2, v8}, Lcom/android/server/wm/ActivityTaskManagerInternal;->removeRecentTasksByPackageName(Ljava/lang/String;I)V

    .line 17580
    iget-object v3, v11, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v3, v2, v8}, Lcom/android/server/am/ActiveServices;->forceStopPackageLocked(Ljava/lang/String;I)V

    .line 17581
    iget-object v3, v11, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {v3, v2, v8}, Lcom/android/server/wm/ActivityTaskManagerInternal;->onPackageUninstalled(Ljava/lang/String;I)V

    .line 17582
    iget-object v3, v11, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v3, v2}, Lcom/android/server/am/BatteryStatsService;->notePackageUninstalled(Ljava/lang/String;)V

    goto/16 :goto_16

    :cond_47
    const/4 v7, 0x1

    goto/16 :goto_16

    :cond_48
    const/4 v7, 0x1

    if-eqz v5, :cond_4a

    if-eqz v4, :cond_49

    move/from16 v27, v21

    goto :goto_1a

    :cond_49
    const/16 v27, 0xf

    :goto_1a
    const/16 v28, 0x0

    const-string v3, "android.intent.extra.UID"

    const/4 v4, -0x1

    .line 17597
    invoke-virtual {v10, v3, v4}, Landroid/content/Intent;->getIntExtra(Ljava/lang/String;I)I

    move-result v3

    .line 17599
    iget-object v4, v11, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v4

    .line 17600
    :try_start_4
    iget-object v5, v11, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 17601
    invoke-static {v3}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v24

    const/16 v26, -0x2710

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v13, "change "

    invoke-virtual {v3, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v29

    move-object/from16 v22, v5

    move-object/from16 v23, v2

    move/from16 v25, v8

    .line 17600
    invoke-virtual/range {v22 .. v29}, Lcom/android/server/am/ProcessList;->killPackageProcessesLSP(Ljava/lang/String;IIIIILjava/lang/String;)Z

    .line 17606
    monitor-exit v4
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    goto :goto_1b

    :catchall_0
    move-exception v0

    :try_start_5
    monitor-exit v4
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v0

    :cond_4a
    :goto_1b
    const-string v3, "android.intent.extra.changed_component_name_list"

    .line 17609
    invoke-virtual {v10, v3}, Landroid/content/Intent;->getStringArrayExtra(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v3

    .line 17608
    invoke-virtual {v11, v2, v8, v3}, Lcom/android/server/am/ActivityManagerService;->cleanupDisabledPackageComponentsLocked(Ljava/lang/String;I[Ljava/lang/String;)V

    .line 17611
    iget-object v3, v11, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v3, v2, v8}, Lcom/android/server/am/ActiveServices;->schedulePendingServiceStartLocked(Ljava/lang/String;I)V

    goto/16 :goto_16

    :pswitch_f
    const/4 v7, 0x1

    const-string v2, "android.intent.action.PACKAGES_SUSPENDED"

    .line 17618
    invoke-virtual {v10}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v3

    .line 17617
    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    const-string v3, "android.intent.extra.changed_package_list"

    .line 17619
    invoke-virtual {v10, v3}, Landroid/content/Intent;->getStringArrayExtra(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v3

    const-string v4, "android.intent.extra.user_handle"

    const/16 v5, -0x2710

    .line 17621
    invoke-virtual {v10, v4, v5}, Landroid/content/Intent;->getIntExtra(Ljava/lang/String;I)I

    move-result v4

    .line 17624
    iget-object v5, v11, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {v5, v3, v2, v4}, Lcom/android/server/wm/ActivityTaskManagerInternal;->onPackagesSuspendedChanged([Ljava/lang/String;ZI)V

    goto/16 :goto_16

    :pswitch_10
    const/4 v7, 0x1

    .line 17521
    iget-object v2, v11, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    const/4 v13, -0x1

    invoke-virtual {v2, v13}, Lcom/android/server/wm/ActivityTaskManagerInternal;->cleanupRecentTasksForUser(I)V

    move-object/from16 v49, v6

    move v5, v8

    move-object v9, v10

    move v10, v12

    move v12, v13

    move v13, v1

    goto/16 :goto_20

    :pswitch_11
    const/4 v7, 0x1

    const/4 v13, -0x1

    const-string v2, "android.intent.extra.changed_package_list"

    .line 17508
    invoke-virtual {v10, v2}, Landroid/content/Intent;->getStringArrayExtra(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v5

    if-eqz v5, :cond_4c

    .line 17509
    array-length v2, v5

    if-lez v2, :cond_4c

    move v4, v12

    .line 17510
    :goto_1c
    array-length v2, v5

    if-ge v4, v2, :cond_4b

    .line 17511
    aget-object v2, v5, v4

    const/4 v3, -0x1

    const/16 v16, 0x0

    const/16 v17, 0x1

    const/16 v18, 0x1

    const/16 v19, 0x0

    const/16 v20, 0x0

    const-string/jumbo v21, "storage unmount"

    move v13, v1

    move-object/from16 v1, p0

    move/from16 v22, v4

    move/from16 v4, v16

    move v12, v7

    move-object v7, v5

    move/from16 v5, v17

    move-object/from16 v49, v6

    move/from16 v6, v18

    move-object/from16 v50, v7

    const/4 v12, -0x1

    move/from16 v7, v19

    move/from16 v34, v8

    move/from16 v8, v20

    move/from16 v9, v34

    move-object/from16 v51, v10

    move-object/from16 v10, v21

    invoke-virtual/range {v1 .. v10}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z

    add-int/lit8 v4, v22, 0x1

    move/from16 v9, p18

    move v1, v13

    move/from16 v8, v34

    move-object/from16 v6, v49

    move-object/from16 v5, v50

    move-object/from16 v10, v51

    const/4 v7, 0x1

    move v13, v12

    const/4 v12, 0x0

    goto :goto_1c

    :cond_4b
    move-object/from16 v50, v5

    move-object/from16 v49, v6

    move/from16 v34, v8

    move-object/from16 v51, v10

    move v12, v13

    move v13, v1

    .line 17514
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {v1, v12}, Lcom/android/server/wm/ActivityTaskManagerInternal;->cleanupRecentTasksForUser(I)V

    move/from16 v5, v34

    move-object/from16 v1, v50

    const/4 v2, 0x1

    .line 17515
    invoke-virtual {v11, v2, v1, v5}, Lcom/android/server/am/ActivityManagerService;->sendPackageBroadcastLocked(I[Ljava/lang/String;I)V

    move-object/from16 v9, v51

    goto/16 :goto_1f

    :cond_4c
    move-object/from16 v49, v6

    move v5, v8

    move v12, v13

    move v13, v1

    move-object v9, v10

    goto :goto_1f

    :pswitch_12
    move v13, v1

    move-object/from16 v49, v6

    move v5, v8

    move-object v9, v10

    const/4 v12, -0x1

    .line 17480
    invoke-virtual {v11, v9}, Lcom/android/server/am/ActivityManagerService;->getUidFromIntent(Landroid/content/Intent;)I

    move-result v1

    if-ltz v1, :cond_51

    .line 17482
    iget-object v2, v11, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v2, v1}, Lcom/android/server/am/BatteryStatsService;->removeUid(I)V

    const-string v2, "android.intent.extra.REPLACING"

    const/4 v10, 0x0

    .line 17483
    invoke-virtual {v9, v2, v10}, Landroid/content/Intent;->getBooleanExtra(Ljava/lang/String;Z)Z

    move-result v2

    if-eqz v2, :cond_4d

    .line 17484
    iget-object v2, v11, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    invoke-static {v1}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v1

    const-string v3, "android.intent.extra.PACKAGE_NAME"

    .line 17485
    invoke-virtual {v9, v3}, Landroid/content/Intent;->getStringExtra(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v3

    .line 17484
    invoke-virtual {v2, v1, v3}, Lcom/android/server/appop/AppOpsService;->resetAllModes(ILjava/lang/String;)V

    goto :goto_20

    .line 17489
    :cond_4d
    invoke-static {v1}, Landroid/os/Process;->isCoreUid(I)Z

    move-result v2

    if-eqz v2, :cond_50

    .line 17491
    iget-object v2, v11, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v2

    .line 17492
    :try_start_6
    iget-object v3, v11, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    iget-object v3, v3, Lcom/android/server/am/OomAdjuster;->mActiveUids:Lcom/android/server/am/ActiveUids;

    invoke-virtual {v3, v1}, Lcom/android/server/am/ActiveUids;->get(I)Lcom/android/server/am/UidRecord;

    move-result-object v3

    if-eqz v3, :cond_4f

    .line 17493
    invoke-virtual {v3}, Lcom/android/server/am/UidRecord;->getCurProcState()I

    move-result v3

    if-lez v3, :cond_4e

    goto :goto_1d

    :cond_4e
    move v3, v10

    goto :goto_1e

    :cond_4f
    :goto_1d
    const/4 v3, 0x1

    .line 17495
    :goto_1e
    monitor-exit v2
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    if-eqz v3, :cond_52

    .line 17496
    iget-object v2, v11, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    invoke-virtual {v2, v1}, Lcom/android/server/appop/AppOpsService;->uidRemoved(I)V

    goto :goto_20

    :catchall_1
    move-exception v0

    .line 17495
    :try_start_7
    monitor-exit v2
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v0

    .line 17499
    :cond_50
    iget-object v2, v11, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    invoke-virtual {v2, v1}, Lcom/android/server/appop/AppOpsService;->uidRemoved(I)V

    goto :goto_20

    :cond_51
    :goto_1f
    const/4 v10, 0x0

    :cond_52
    :goto_20
    move/from16 v8, p18

    goto/16 :goto_13

    :cond_53
    move-object v9, v10

    .line 17470
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Permission Denial: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v9}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " broadcast from "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " (pid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move/from16 v8, p18

    invoke-virtual {v0, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ", uid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v14}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ") requires "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "android.permission.BROADCAST_PACKAGE_REMOVED"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "ActivityManager"

    .line 17475
    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 17476
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    :pswitch_13
    move v13, v1

    move-object/from16 v49, v6

    move v12, v7

    move v5, v8

    move v8, v9

    move-object v9, v10

    const/high16 v7, 0x40000000    # 2.0f

    const/4 v10, 0x0

    .line 17736
    invoke-virtual {v9, v7}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    :goto_21
    move v2, v10

    :goto_22
    const-string v1, "android.intent.action.PACKAGE_ADDED"

    move-object/from16 v3, v49

    .line 17763
    invoke-virtual {v1, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_54

    const-string v1, "android.intent.action.PACKAGE_REMOVED"

    .line 17764
    invoke-virtual {v1, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_54

    const-string v1, "android.intent.action.PACKAGE_REPLACED"

    .line 17765
    invoke-virtual {v1, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_55

    .line 17766
    :cond_54
    invoke-virtual {v11, v9}, Lcom/android/server/am/ActivityManagerService;->getUidFromIntent(Landroid/content/Intent;)I

    move-result v1

    if-eq v1, v12, :cond_55

    .line 17768
    iget-object v3, v11, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v3, v1}, Lcom/android/server/am/ProcessList;->getUidRecordLOSP(I)Lcom/android/server/am/UidRecord;

    move-result-object v1

    if-eqz v1, :cond_55

    .line 17770
    invoke-virtual {v1}, Lcom/android/server/am/UidRecord;->updateHasInternetPermission()V

    :cond_55
    move/from16 v44, v2

    move v6, v5

    goto :goto_23

    :cond_56
    move v13, v1

    move v12, v7

    move v5, v8

    move v8, v9

    move-object v9, v10

    const/high16 v7, 0x40000000    # 2.0f

    const/4 v10, 0x0

    move v6, v5

    move/from16 v44, v10

    .line 17776
    :goto_23
    invoke-virtual {v11, v0, v13}, Lcom/android/server/am/ActivityManagerService;->getRealProcessStateLocked(Lcom/android/server/am/ProcessRecord;I)I

    move-result v13

    if-eqz p17, :cond_61

    const-string v1, "android.permission.BROADCAST_STICKY"

    .line 17779
    invoke-virtual {v11, v1, v8, v14}, Lcom/android/server/am/ActivityManagerService;->checkPermission(Ljava/lang/String;II)I

    move-result v1

    if-nez v1, :cond_60

    move-object/from16 v5, p11

    if-eqz v5, :cond_57

    .line 17788
    array-length v1, v5

    if-lez v1, :cond_57

    const-string v0, "ActivityManager"

    .line 17789
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Can\'t broadcast sticky intent "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v2, " and enforce permissions "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 17790
    invoke-static/range {p11 .. p11}, Ljava/util/Arrays;->toString([Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    .line 17789
    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    move-object/from16 v1, p0

    move-object/from16 v2, v41

    move-object/from16 v3, p7

    move-object v4, v9

    move v5, v6

    move-object/from16 v6, p15

    move/from16 v7, p19

    move-object/from16 v8, p2

    .line 17791
    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->scheduleCanceledResultTo(Lcom/android/server/am/ProcessRecord;Landroid/content/IIntentReceiver;Landroid/content/Intent;ILandroid/app/BroadcastOptions;ILjava/lang/String;)V

    return v12

    .line 17795
    :cond_57
    invoke-virtual {v9}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v1

    if-nez v1, :cond_5f

    if-eq v6, v12, :cond_59

    .line 17805
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    invoke-virtual {v1, v12}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/util/ArrayMap;

    if-eqz v1, :cond_59

    .line 17808
    invoke-virtual {v9}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/util/ArrayList;

    if-eqz v1, :cond_59

    .line 17810
    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v2

    move v3, v10

    :goto_24
    if-ge v3, v2, :cond_59

    .line 17813
    invoke-virtual {v1, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ActivityManagerService$StickyBroadcast;

    iget-object v4, v4, Lcom/android/server/am/ActivityManagerService$StickyBroadcast;->intent:Landroid/content/Intent;

    invoke-virtual {v9, v4}, Landroid/content/Intent;->filterEquals(Landroid/content/Intent;)Z

    move-result v4

    if-nez v4, :cond_58

    add-int/lit8 v3, v3, 0x1

    goto :goto_24

    .line 17814
    :cond_58
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Sticky broadcast "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v2, " for user "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, " conflicts with existing global broadcast"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 17822
    :cond_59
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    invoke-virtual {v1, v6}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/util/ArrayMap;

    if-nez v1, :cond_5a

    .line 17824
    new-instance v1, Landroid/util/ArrayMap;

    invoke-direct {v1}, Landroid/util/ArrayMap;-><init>()V

    .line 17825
    iget-object v2, v11, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    invoke-virtual {v2, v6, v1}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 17827
    :cond_5a
    invoke-virtual {v9}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/ArrayList;

    if-nez v2, :cond_5b

    .line 17829
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    .line 17830
    invoke-virtual {v9}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v1, v3, v2}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    :cond_5b
    move-object/from16 v4, p15

    .line 17834
    invoke-static {v9, v4}, Lcom/android/server/am/BroadcastRecord;->calculateUrgent(Landroid/content/Intent;Landroid/app/BroadcastOptions;)Z

    move-result v1

    move/from16 v3, p16

    move v10, v14

    move-object/from16 v14, p7

    .line 17832
    invoke-static {v10, v4, v14, v3, v1}, Lcom/android/server/am/BroadcastRecord;->calculateDeferUntilActive(ILandroid/app/BroadcastOptions;Landroid/content/IIntentReceiver;ZZ)Z

    move-result v1

    .line 17835
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v7

    const/4 v12, 0x0

    :goto_25
    if-ge v12, v7, :cond_5d

    .line 17838
    invoke-virtual {v2, v12}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v16

    move-object/from16 v0, v16

    check-cast v0, Lcom/android/server/am/ActivityManagerService$StickyBroadcast;

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService$StickyBroadcast;->intent:Landroid/content/Intent;

    invoke-virtual {v9, v0}, Landroid/content/Intent;->filterEquals(Landroid/content/Intent;)Z

    move-result v0

    if-eqz v0, :cond_5c

    .line 17840
    new-instance v0, Landroid/content/Intent;

    invoke-direct {v0, v9}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V

    invoke-static {v0, v1, v10, v13}, Lcom/android/server/am/ActivityManagerService$StickyBroadcast;->create(Landroid/content/Intent;ZII)Lcom/android/server/am/ActivityManagerService$StickyBroadcast;

    move-result-object v0

    invoke-virtual {v2, v12, v0}, Ljava/util/ArrayList;->set(ILjava/lang/Object;)Ljava/lang/Object;

    goto :goto_26

    :cond_5c
    add-int/lit8 v12, v12, 0x1

    move-object/from16 v0, p1

    goto :goto_25

    :cond_5d
    :goto_26
    if-lt v12, v7, :cond_5e

    .line 17846
    new-instance v0, Landroid/content/Intent;

    invoke-direct {v0, v9}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V

    invoke-static {v0, v1, v10, v13}, Lcom/android/server/am/ActivityManagerService$StickyBroadcast;->create(Landroid/content/Intent;ZII)Lcom/android/server/am/ActivityManagerService$StickyBroadcast;

    move-result-object v0

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    :cond_5e
    const/4 v0, -0x1

    goto :goto_27

    .line 17796
    :cond_5f
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Sticky broadcasts can\'t target a specific component"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_60
    move v10, v14

    .line 17782
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Permission Denial: broadcastIntent() requesting a sticky broadcast from pid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ", uid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " requires "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "android.permission.BROADCAST_STICKY"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "ActivityManager"

    .line 17785
    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 17786
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    :cond_61
    move-object/from16 v5, p11

    move-object/from16 v4, p15

    move/from16 v3, p16

    move v10, v14

    move-object/from16 v14, p7

    move v0, v12

    :goto_27
    if-ne v6, v0, :cond_62

    .line 17854
    iget-object v0, v11, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v0}, Lcom/android/server/am/UserController;->getStartedUserArray()[I

    move-result-object v0

    goto :goto_28

    .line 17857
    :cond_62
    filled-new-array {v6}, [I

    move-result-object v0

    :goto_28
    const-string/jumbo v1, "queryReceivers"

    .line 17861
    invoke-static {v1}, Lcom/android/server/am/BroadcastQueue;->traceBegin(Ljava/lang/String;)I

    move-result v7

    .line 17865
    invoke-virtual {v9}, Landroid/content/Intent;->getFlags()I

    move-result v1

    const/high16 v12, 0x40000000    # 2.0f

    and-int/2addr v1, v12

    if-nez v1, :cond_63

    move-object/from16 v1, p0

    move-object v2, v9

    move-object/from16 v3, p5

    move/from16 v4, p19

    move-object v5, v0

    move v15, v6

    move-object/from16 v6, p6

    .line 17866
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->collectReceiverComponents(Landroid/content/Intent;Ljava/lang/String;I[I[I)Ljava/util/List;

    move-result-object v1

    move-object v6, v1

    goto :goto_29

    :cond_63
    move v15, v6

    move-object/from16 v6, v48

    .line 17869
    :goto_29
    invoke-virtual {v9}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v1

    if-nez v1, :cond_69

    .line 17870
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal;

    move-result-object v1

    invoke-virtual {v1}, Landroid/content/pm/PackageManagerInternal;->snapshot()Lcom/android/server/pm/snapshot/PackageDataSnapshot;

    move-result-object v1

    const/4 v2, -0x1

    if-ne v15, v2, :cond_68

    const/16 v2, 0x7d0

    if-ne v10, v2, :cond_68

    move-object/from16 v3, v48

    const/4 v2, 0x0

    .line 17873
    :goto_2a
    array-length v4, v0

    if-ge v2, v4, :cond_67

    .line 17874
    iget-object v4, v11, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    const-string/jumbo v5, "no_debugging_features"

    aget v12, v0, v2

    invoke-virtual {v4, v5, v12}, Lcom/android/server/am/UserController;->hasUserRestriction(Ljava/lang/String;I)Z

    move-result v4

    if-eqz v4, :cond_64

    goto :goto_2b

    .line 17878
    :cond_64
    iget-object v4, v11, Lcom/android/server/am/ActivityManagerService;->mReceiverResolver:Lcom/android/server/IntentResolver;

    const/16 v20, 0x0

    aget v21, v0, v2

    move-object/from16 v16, v4

    move-object/from16 v17, v1

    move-object/from16 v18, v9

    move-object/from16 v19, p5

    .line 17879
    invoke-virtual/range {v16 .. v21}, Lcom/android/server/IntentResolver;->queryIntent(Lcom/android/server/pm/snapshot/PackageDataSnapshot;Landroid/content/Intent;Ljava/lang/String;ZI)Ljava/util/List;

    move-result-object v4

    if-nez v3, :cond_65

    move-object v3, v4

    goto :goto_2b

    :cond_65
    if-eqz v4, :cond_66

    .line 17884
    invoke-interface {v3, v4}, Ljava/util/List;->addAll(Ljava/util/Collection;)Z

    :cond_66
    :goto_2b
    add-int/lit8 v2, v2, 0x1

    const/high16 v12, 0x40000000    # 2.0f

    goto :goto_2a

    :cond_67
    move-object v12, v3

    goto :goto_2c

    .line 17888
    :cond_68
    iget-object v2, v11, Lcom/android/server/am/ActivityManagerService;->mReceiverResolver:Lcom/android/server/IntentResolver;

    const/16 v20, 0x0

    move-object/from16 v16, v2

    move-object/from16 v17, v1

    move-object/from16 v18, v9

    move-object/from16 v19, p5

    move/from16 v21, v15

    invoke-virtual/range {v16 .. v21}, Lcom/android/server/IntentResolver;->queryIntent(Lcom/android/server/pm/snapshot/PackageDataSnapshot;Landroid/content/Intent;Ljava/lang/String;ZI)Ljava/util/List;

    move-result-object v1

    move-object v12, v1

    goto :goto_2c

    :cond_69
    move-object/from16 v12, v48

    .line 17892
    :goto_2c
    invoke-static {v7}, Lcom/android/server/am/BroadcastQueue;->traceEnd(I)V

    .line 17895
    invoke-virtual {v9}, Landroid/content/Intent;->getFlags()I

    move-object/from16 v7, p6

    if-eqz v12, :cond_6b

    if-eqz v7, :cond_6b

    .line 17902
    invoke-interface {v12}, Ljava/util/List;->size()I

    move-result v1

    const/16 v16, 0x1

    add-int/lit8 v1, v1, -0x1

    :goto_2d
    if-ltz v1, :cond_6c

    .line 17903
    invoke-interface {v12, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/BroadcastFilter;

    iget v2, v2, Lcom/android/server/am/BroadcastFilter;->owningUid:I

    invoke-static {v2}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v2

    const/16 v3, 0x2710

    if-lt v2, v3, :cond_6a

    .line 17905
    invoke-static {v7, v2}, Ljava/util/Arrays;->binarySearch([II)I

    move-result v2

    if-gez v2, :cond_6a

    const-string v2, "ActivityManager"

    .line 17908
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "broadcastAllowList remove "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-interface {v12, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 17911
    invoke-interface {v12, v1}, Ljava/util/List;->remove(I)Ljava/lang/Object;

    :cond_6a
    add-int/lit8 v1, v1, -0x1

    goto :goto_2d

    :cond_6b
    const/16 v16, 0x1

    .line 17916
    :cond_6c
    iget-object v5, v11, Lcom/android/server/am/ActivityManagerService;->mPlatformCompat:Lcom/android/server/compat/PlatformCompat;

    move-object/from16 v1, p0

    move-object v2, v9

    move/from16 v3, p19

    move/from16 v4, p18

    move-object/from16 v17, v5

    move-object v5, v12

    move-object v10, v6

    move-object/from16 v6, v17

    move-object/from16 v45, v7

    const/high16 v49, 0x40000000    # 2.0f

    move-object/from16 v7, p2

    move-object/from16 v8, p5

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->filterNonExportedComponents(Landroid/content/Intent;IILjava/util/List;Lcom/android/server/compat/PlatformCompat;Ljava/lang/String;Ljava/lang/String;)V

    if-eqz v12, :cond_6d

    .line 17918
    invoke-interface {v12}, Ljava/util/List;->size()I

    move-result v2

    goto :goto_2e

    :cond_6d
    const/4 v2, 0x0

    :goto_2e
    const-wide/16 v7, 0x40

    if-nez p16, :cond_71

    if-lez v2, :cond_71

    .line 17919
    iget-boolean v1, v11, Lcom/android/server/am/ActivityManagerService;->mEnableModernQueue:Z

    if-nez v1, :cond_71

    if-eqz v47, :cond_6e

    move-object/from16 v1, p0

    move-object v2, v9

    move-object/from16 v3, p1

    move-object/from16 v4, p2

    move/from16 v5, p19

    move/from16 v6, v46

    move-object v7, v12

    .line 17926
    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->checkBroadcastFromSystem(Landroid/content/Intent;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;IZLjava/util/List;)V

    .line 17929
    :cond_6e
    invoke-virtual {v11, v9}, Lcom/android/server/am/ActivityManagerService;->broadcastQueueForIntent(Landroid/content/Intent;)Lcom/android/server/am/BroadcastQueue;

    move-result-object v1

    move/from16 v50, v13

    move-object v13, v1

    .line 17930
    new-instance v2, Lcom/android/server/am/BroadcastRecord;

    move-object v3, v12

    move/from16 v7, v16

    const/16 v51, 0x0

    move-object v12, v2

    const/16 v35, 0x0

    move-object v14, v9

    move/from16 v52, v15

    move-object/from16 v15, p1

    move-object/from16 v16, p2

    move-object/from16 v17, p3

    move/from16 v18, p18

    move/from16 v19, p19

    move/from16 v20, v42

    move-object/from16 v21, p5

    move-object/from16 v22, p11

    move-object/from16 v23, p12

    move-object/from16 v24, p13

    move/from16 v25, p14

    move-object/from16 v26, p15

    move-object/from16 v27, v3

    move-object/from16 v28, v41

    move-object/from16 v29, p7

    move/from16 v30, p8

    move-object/from16 v31, p9

    move-object/from16 v32, p10

    move/from16 v33, p16

    move/from16 v34, p17

    move/from16 v36, v52

    move-object/from16 v37, v43

    move/from16 v38, v44

    move-object/from16 v39, p25

    move/from16 v40, v50

    invoke-direct/range {v12 .. v40}, Lcom/android/server/am/BroadcastRecord;-><init>(Lcom/android/server/am/BroadcastQueue;Landroid/content/Intent;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;IIZLjava/lang/String;[Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ILandroid/app/BroadcastOptions;Ljava/util/List;Lcom/android/server/am/ProcessRecord;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;ZZZILandroid/app/BackgroundStartPrivileges;ZLjava/util/function/BiFunction;I)V

    .line 17939
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getAppLaunchFlag()Z

    move-result v3

    if-eqz v3, :cond_6f

    iget-object v3, v11, Lcom/android/server/am/ActivityManagerService;->mInternal:Landroid/app/ActivityManagerInternal;

    .line 17940
    invoke-virtual {v3}, Landroid/app/ActivityManagerInternal;->isModernQueueEnabled()Z

    move-result v3

    if-eqz v3, :cond_6f

    invoke-virtual {v9}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v3

    if-eqz v3, :cond_6f

    .line 17941
    invoke-virtual {v9}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v3

    const-string v4, "PACKAGE"

    invoke-virtual {v3, v4}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v3

    if-eqz v3, :cond_6f

    .line 17942
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Delaying Broadcasts "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    const-wide/16 v14, 0x40

    invoke-static {v14, v15, v3}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    const-string v3, "ActivityManager Intent delay"

    .line 17943
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Delaying Broadcast "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 17944
    invoke-virtual {v1, v2}, Lcom/android/server/am/BroadcastQueue;->enqueueDelayedBroadcastLocked(Lcom/android/server/am/BroadcastRecord;)V

    .line 17945
    invoke-static {v14, v15}, Landroid/os/Trace;->traceEnd(J)V

    goto :goto_2f

    :cond_6f
    const-wide/16 v14, 0x40

    .line 17947
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getAppLaunchFlag()Z

    move-result v3

    if-nez v3, :cond_70

    .line 17948
    invoke-virtual {v1}, Lcom/android/server/am/BroadcastQueue;->clearDelayedBroadcastLocked()V

    .line 17950
    :cond_70
    invoke-virtual {v1, v2}, Lcom/android/server/am/BroadcastQueue;->enqueueBroadcastLocked(Lcom/android/server/am/BroadcastRecord;)V

    :goto_2f
    move-object/from16 v12, v48

    move/from16 v8, v51

    goto :goto_30

    :cond_71
    move-object v3, v12

    move/from16 v50, v13

    move/from16 v52, v15

    const/16 v51, 0x0

    move-wide v14, v7

    move/from16 v7, v16

    move v8, v2

    move-object v12, v3

    :goto_30
    if-eqz v10, :cond_7f

    const-string v1, "android.intent.action.PACKAGE_ADDED"

    .line 17967
    invoke-virtual {v9}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_77

    const-string v1, "android.intent.action.PACKAGE_RESTARTED"

    .line 17968
    invoke-virtual {v9}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_77

    const-string v1, "android.intent.action.PACKAGE_DATA_CLEARED"

    .line 17969
    invoke-virtual {v9}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_72

    goto/16 :goto_33

    :cond_72
    const-string v1, "android.intent.action.EXTERNAL_APPLICATIONS_AVAILABLE"

    .line 17977
    invoke-virtual {v9}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_73

    const-string v0, "android.intent.extra.changed_package_list"

    .line 17978
    invoke-virtual {v9, v0}, Landroid/content/Intent;->getStringArrayExtra(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v0

    goto/16 :goto_34

    :cond_73
    const-string v1, "android.intent.action.BOOT_COMPLETED"

    .line 17982
    invoke-virtual {v9}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_76

    .line 17983
    new-instance v13, Ljava/util/HashSet;

    invoke-direct {v13}, Ljava/util/HashSet;-><init>()V

    .line 17984
    new-instance v2, Landroid/content/Intent;

    const-string v1, "com.samsung.intent.action.LAZY_BOOT_COMPLETE"

    invoke-direct {v2, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    move-object/from16 v1, p0

    move-object/from16 v3, p5

    move/from16 v4, p19

    move-object v5, v0

    move-object/from16 v6, v45

    .line 17985
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->collectReceiverComponents(Landroid/content/Intent;Ljava/lang/String;I[I[I)Ljava/util/List;

    move-result-object v0

    if-eqz v0, :cond_76

    .line 17988
    invoke-interface {v0}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :goto_31
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_74

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/content/pm/ResolveInfo;

    .line 17989
    iget-object v1, v1, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    invoke-virtual {v1}, Landroid/content/pm/ActivityInfo;->getComponentName()Landroid/content/ComponentName;

    move-result-object v1

    invoke-virtual {v1}, Landroid/content/ComponentName;->getClassName()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v13, v1}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    goto :goto_31

    .line 17991
    :cond_74
    invoke-interface {v10}, Ljava/util/List;->size()I

    move-result v0

    move/from16 v2, v51

    :goto_32
    if-ge v2, v0, :cond_76

    .line 17993
    invoke-interface {v10, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/content/pm/ResolveInfo;

    .line 17994
    iget-object v1, v1, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    .line 17995
    invoke-virtual {v1}, Landroid/content/pm/ActivityInfo;->getComponentName()Landroid/content/ComponentName;

    move-result-object v1

    invoke-virtual {v1}, Landroid/content/ComponentName;->getClassName()Ljava/lang/String;

    move-result-object v1

    .line 17994
    invoke-virtual {v13, v1}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_75

    .line 17996
    invoke-interface {v10, v2}, Ljava/util/List;->remove(I)Ljava/lang/Object;

    add-int/lit8 v2, v2, -0x1

    add-int/lit8 v0, v0, -0x1

    :cond_75
    add-int/2addr v2, v7

    goto :goto_32

    :cond_76
    move-object/from16 v0, v48

    goto :goto_34

    .line 17970
    :cond_77
    :goto_33
    invoke-virtual {v9}, Landroid/content/Intent;->getData()Landroid/net/Uri;

    move-result-object v0

    if-eqz v0, :cond_76

    .line 17972
    invoke-virtual {v0}, Landroid/net/Uri;->getSchemeSpecificPart()Ljava/lang/String;

    move-result-object v0

    if-eqz v0, :cond_76

    .line 17974
    filled-new-array {v0}, [Ljava/lang/String;

    move-result-object v0

    :goto_34
    if-eqz v0, :cond_7a

    .line 18004
    array-length v1, v0

    if-lez v1, :cond_7a

    .line 18005
    array-length v1, v0

    move/from16 v2, v51

    :goto_35
    if-ge v2, v1, :cond_7a

    aget-object v3, v0, v2

    if-eqz v3, :cond_79

    .line 18007
    invoke-interface {v10}, Ljava/util/List;->size()I

    move-result v4

    move v5, v4

    move/from16 v4, v51

    :goto_36
    if-ge v4, v5, :cond_79

    .line 18009
    invoke-interface {v10, v4}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Landroid/content/pm/ResolveInfo;

    .line 18010
    iget-object v6, v6, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v6, v6, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v6, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_78

    .line 18011
    invoke-interface {v10, v4}, Ljava/util/List;->remove(I)Ljava/lang/Object;

    add-int/lit8 v4, v4, -0x1

    add-int/lit8 v5, v5, -0x1

    :cond_78
    add-int/2addr v4, v7

    goto :goto_36

    :cond_79
    add-int/lit8 v2, v2, 0x1

    goto :goto_35

    .line 18020
    :cond_7a
    invoke-interface {v10}, Ljava/util/List;->size()I

    move-result v0

    move-object/from16 v3, v48

    move-object v4, v3

    move/from16 v1, v51

    move v2, v1

    :goto_37
    if-ge v2, v0, :cond_7e

    if-ge v1, v8, :cond_7e

    if-nez v3, :cond_7b

    .line 18026
    invoke-interface {v10, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/content/pm/ResolveInfo;

    :cond_7b
    if-nez v4, :cond_7c

    .line 18029
    invoke-interface {v12, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/BroadcastFilter;

    .line 18031
    :cond_7c
    invoke-virtual {v4}, Landroid/content/IntentFilter;->getPriority()I

    move-result v5

    iget v6, v3, Landroid/content/pm/ResolveInfo;->priority:I

    if-lt v5, v6, :cond_7d

    .line 18033
    invoke-interface {v10, v2, v4}, Ljava/util/List;->add(ILjava/lang/Object;)V

    add-int/lit8 v1, v1, 0x1

    add-int/lit8 v2, v2, 0x1

    add-int/lit8 v0, v0, 0x1

    move-object/from16 v4, v48

    goto :goto_37

    :cond_7d
    add-int/lit8 v2, v2, 0x1

    move-object/from16 v3, v48

    goto :goto_37

    :cond_7e
    move v2, v1

    move-object/from16 v27, v10

    goto :goto_38

    :cond_7f
    move-object/from16 v27, v10

    move/from16 v2, v51

    :goto_38
    if-ge v2, v8, :cond_81

    if-nez v27, :cond_80

    .line 18047
    new-instance v27, Ljava/util/ArrayList;

    invoke-direct/range {v27 .. v27}, Ljava/util/ArrayList;-><init>()V

    :cond_80
    move-object/from16 v0, v27

    .line 18049
    invoke-interface {v12, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v1

    invoke-interface {v0, v1}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    add-int/lit8 v2, v2, 0x1

    move-object/from16 v27, v0

    goto :goto_38

    :cond_81
    if-eqz v47, :cond_82

    move-object/from16 v1, p0

    move-object v2, v9

    move-object/from16 v3, p1

    move-object/from16 v4, p2

    move/from16 v5, p19

    move/from16 v6, v46

    move-object/from16 v7, v27

    .line 18054
    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->checkBroadcastFromSystem(Landroid/content/Intent;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;IZLjava/util/List;)V

    :cond_82
    if-eqz v27, :cond_83

    .line 18058
    invoke-interface/range {v27 .. v27}, Ljava/util/List;->size()I

    move-result v0

    if-gtz v0, :cond_84

    :cond_83
    if-eqz p7, :cond_88

    .line 18060
    :cond_84
    invoke-virtual {v11, v9}, Lcom/android/server/am/ActivityManagerService;->broadcastQueueForIntent(Landroid/content/Intent;)Lcom/android/server/am/BroadcastQueue;

    move-result-object v0

    move-object v13, v0

    .line 18061
    iget-object v6, v11, Lcom/android/server/am/ActivityManagerService;->mPlatformCompat:Lcom/android/server/compat/PlatformCompat;

    move-object/from16 v1, p0

    move-object v2, v9

    move/from16 v3, p19

    move/from16 v4, p18

    move-object/from16 v5, v27

    move-object/from16 v7, p2

    move-object/from16 v8, p5

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->filterNonExportedComponents(Landroid/content/Intent;IILjava/util/List;Lcom/android/server/compat/PlatformCompat;Ljava/lang/String;Ljava/lang/String;)V

    .line 18063
    new-instance v1, Lcom/android/server/am/BroadcastRecord;

    move-object v12, v1

    const/16 v35, 0x0

    move-wide v2, v14

    move-object v14, v9

    move-object/from16 v15, p1

    move-object/from16 v16, p2

    move-object/from16 v17, p3

    move/from16 v18, p18

    move/from16 v19, p19

    move/from16 v20, v42

    move-object/from16 v21, p5

    move-object/from16 v22, p11

    move-object/from16 v23, p12

    move-object/from16 v24, p13

    move/from16 v25, p14

    move-object/from16 v26, p15

    move-object/from16 v28, v41

    move-object/from16 v29, p7

    move/from16 v30, p8

    move-object/from16 v31, p9

    move-object/from16 v32, p10

    move/from16 v33, p16

    move/from16 v34, p17

    move/from16 v36, v52

    move-object/from16 v37, v43

    move/from16 v38, v44

    move-object/from16 v39, p25

    move/from16 v40, v50

    invoke-direct/range {v12 .. v40}, Lcom/android/server/am/BroadcastRecord;-><init>(Lcom/android/server/am/BroadcastQueue;Landroid/content/Intent;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;IIZLjava/lang/String;[Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ILandroid/app/BroadcastOptions;Ljava/util/List;Lcom/android/server/am/ProcessRecord;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;ZZZILandroid/app/BackgroundStartPrivileges;ZLjava/util/function/BiFunction;I)V

    .line 18075
    iget-object v4, v11, Lcom/android/server/am/ActivityManagerService;->mExt:Lcom/android/server/am/ActivityManagerServiceExt;

    invoke-virtual {v4, v1}, Lcom/android/server/am/ActivityManagerServiceExt;->isNeedRestrictToSendBr(Lcom/android/server/am/BroadcastRecord;)Z

    move-result v4

    if-eqz v4, :cond_85

    return v51

    .line 18081
    :cond_85
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getAppLaunchFlag()Z

    move-result v4

    if-eqz v4, :cond_86

    iget-object v4, v11, Lcom/android/server/am/ActivityManagerService;->mInternal:Landroid/app/ActivityManagerInternal;

    .line 18082
    invoke-virtual {v4}, Landroid/app/ActivityManagerInternal;->isModernQueueEnabled()Z

    move-result v4

    if-eqz v4, :cond_86

    invoke-virtual {v9}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v4

    if-eqz v4, :cond_86

    .line 18083
    invoke-virtual {v9}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v4

    const-string v5, "PACKAGE"

    invoke-virtual {v4, v5}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v4

    if-eqz v4, :cond_86

    .line 18084
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Delaying Broadcasts "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v2, v3, v4}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    const-string v4, "ActivityManager Intent delay"

    .line 18085
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Delaying Broadcast "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 18086
    invoke-virtual {v0, v1}, Lcom/android/server/am/BroadcastQueue;->enqueueDelayedBroadcastLocked(Lcom/android/server/am/BroadcastRecord;)V

    .line 18087
    invoke-static {v2, v3}, Landroid/os/Trace;->traceEnd(J)V

    goto :goto_39

    .line 18089
    :cond_86
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getAppLaunchFlag()Z

    move-result v2

    if-nez v2, :cond_87

    .line 18090
    invoke-virtual {v0}, Lcom/android/server/am/BroadcastQueue;->clearDelayedBroadcastLocked()V

    .line 18092
    :cond_87
    invoke-virtual {v0, v1}, Lcom/android/server/am/BroadcastQueue;->enqueueBroadcastLocked(Lcom/android/server/am/BroadcastRecord;)V

    goto :goto_39

    .line 18098
    :cond_88
    invoke-virtual {v9}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v0

    if-nez v0, :cond_89

    invoke-virtual {v9}, Landroid/content/Intent;->getPackage()Ljava/lang/String;

    move-result-object v0

    if-nez v0, :cond_89

    .line 18099
    invoke-virtual {v9}, Landroid/content/Intent;->getFlags()I

    move-result v0

    and-int v0, v0, v49

    if-nez v0, :cond_89

    .line 18101
    invoke-virtual {v9}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v0

    const/4 v1, 0x0

    const/4 v2, 0x0

    const-wide/16 v3, 0x0

    move-object/from16 p3, p0

    move-object/from16 p4, v0

    move-object/from16 p5, p2

    move/from16 p6, v1

    move/from16 p7, v2

    move-wide/from16 p8, v3

    invoke-virtual/range {p3 .. p9}, Lcom/android/server/am/ActivityManagerService;->addBroadcastStatLocked(Ljava/lang/String;Ljava/lang/String;IIJ)V

    :cond_89
    :goto_39
    return v51

    :catch_3
    move-exception v0

    move v5, v8

    move-object v9, v10

    const/16 v51, 0x0

    const-string v1, "ActivityManager"

    const-string v2, "Remote exception"

    .line 17370
    invoke-static {v1, v2, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    move-object/from16 v1, p0

    move-object/from16 v2, v41

    move-object/from16 v3, p7

    move-object v4, v9

    move-object/from16 v6, p15

    move/from16 v7, p19

    move-object/from16 v8, p2

    .line 17371
    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->scheduleCanceledResultTo(Lcom/android/server/am/ProcessRecord;Landroid/content/IIntentReceiver;Landroid/content/Intent;ILandroid/app/BroadcastOptions;ILjava/lang/String;)V

    return v51

    nop

    :pswitch_data_0
    .packed-switch 0x3e8
        :pswitch_0
        :pswitch_0
        :pswitch_0
    .end packed-switch

    :sswitch_data_0
    .sparse-switch
        -0x7d14f855 -> :sswitch_14
        -0x6849e2b4 -> :sswitch_13
        -0x53ae571d -> :sswitch_12
        -0x4fc097e4 -> :sswitch_11
        -0x3bb3e592 -> :sswitch_10
        -0x304ed112 -> :sswitch_f
        -0x1808c879 -> :sswitch_e
        0xa480416 -> :sswitch_d
        0xaf62806 -> :sswitch_c
        0xff13fb5 -> :sswitch_b
        0x1df32313 -> :sswitch_a
        0x1e1f7f95 -> :sswitch_9
        0x1f50b9c2 -> :sswitch_8
        0x2114f460 -> :sswitch_7
        0x2f126fdf -> :sswitch_6
        0x32c98ebd -> :sswitch_5
        0x36db402e -> :sswitch_4
        0x4cef8b35 -> :sswitch_3
        0x5c1076e2 -> :sswitch_2
        0x6331ebb2 -> :sswitch_1
        0x6f08f706 -> :sswitch_0
    .end sparse-switch

    :pswitch_data_1
    .packed-switch 0x0
        :pswitch_13
        :pswitch_d
        :pswitch_d
        :pswitch_d
        :pswitch_d
        :pswitch_c
        :pswitch_b
        :pswitch_d
        :pswitch_a
        :pswitch_9
        :pswitch_8
        :pswitch_7
        :pswitch_d
        :pswitch_6
        :pswitch_5
        :pswitch_4
        :pswitch_13
        :pswitch_d
        :pswitch_3
        :pswitch_2
        :pswitch_1
    .end packed-switch

    :sswitch_data_1
    .sparse-switch
        -0x6849e2b4 -> :sswitch_1b
        -0x53ae571d -> :sswitch_1a
        -0x4fc097e4 -> :sswitch_19
        -0x3bb3e592 -> :sswitch_18
        0xa480416 -> :sswitch_17
        0x1f50b9c2 -> :sswitch_16
        0x4cef8b35 -> :sswitch_15
    .end sparse-switch

    :pswitch_data_2
    .packed-switch 0x0
        :pswitch_12
        :pswitch_11
        :pswitch_10
        :pswitch_f
        :pswitch_e
        :pswitch_e
        :pswitch_f
    .end packed-switch
.end method

.method public final broadcastIntentWithFeature(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ILandroid/os/Bundle;ZZI)I
    .locals 29

    move-object/from16 v15, p0

    const-string v0, "broadcastIntent"

    .line 18265
    invoke-virtual {v15, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 18266
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    move-object/from16 v0, p3

    .line 18267
    :try_start_0
    invoke-virtual {v15, v0}, Lcom/android/server/am/ActivityManagerService;->verifyBroadcastLocked(Landroid/content/Intent;)Landroid/content/Intent;

    move-result-object v5

    .line 18269
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLOSP(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v7

    .line 18270
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v22

    .line 18271
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    move-object/from16 v14, p13

    .line 18277
    invoke-virtual {v15, v14, v0}, Lcom/android/server/am/ActivityManagerService;->enforceBroadcastOptionPermissionsInternal(Landroid/os/Bundle;I)V

    .line 18279
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v27
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    if-eqz v7, :cond_0

    .line 18282
    :try_start_1
    iget-object v1, v7, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v1, v1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    goto :goto_0

    :catchall_0
    move-exception v0

    goto :goto_1

    :cond_0
    const/4 v1, 0x0

    :goto_0
    move-object v3, v1

    sget-object v24, Landroid/app/BackgroundStartPrivileges;->NONE:Landroid/app/BackgroundStartPrivileges;

    const/16 v25, 0x0

    const/16 v26, 0x0

    move-object/from16 v1, p0

    move-object v2, v7

    move-object/from16 v4, p2

    move-object/from16 v6, p4

    move-object/from16 v8, p5

    move/from16 v9, p6

    move-object/from16 v10, p7

    move-object/from16 v11, p8

    move-object/from16 v12, p9

    move-object/from16 v13, p10

    move-object/from16 v14, p11

    move/from16 v15, p12

    move-object/from16 v16, p13

    move/from16 v17, p14

    move/from16 v18, p15

    move/from16 v19, v22

    move/from16 v20, v0

    move/from16 v21, v0

    move/from16 v23, p16

    .line 18281
    invoke-virtual/range {v1 .. v26}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ILandroid/os/Bundle;ZZIIIIILandroid/app/BackgroundStartPrivileges;[ILjava/util/function/BiFunction;)I

    move-result v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 18288
    :try_start_2
    invoke-static/range {v27 .. v28}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 18281
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v0

    .line 18288
    :goto_1
    :try_start_3
    invoke-static/range {v27 .. v28}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 18289
    throw v0

    :catchall_1
    move-exception v0

    .line 18290
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public broadcastQueueForFlags(I)Lcom/android/server/am/BroadcastQueue;
    .locals 1

    const/4 v0, 0x0

    .line 987
    invoke-virtual {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->broadcastQueueForFlags(ILjava/lang/Object;)Lcom/android/server/am/BroadcastQueue;

    move-result-object p0

    return-object p0
.end method

.method public broadcastQueueForFlags(ILjava/lang/Object;)Lcom/android/server/am/BroadcastQueue;
    .locals 1

    .line 991
    iget-boolean p2, p0, Lcom/android/server/am/ActivityManagerService;->mEnableModernQueue:Z

    const/4 v0, 0x0

    if-eqz p2, :cond_0

    .line 992
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    aget-object p0, p0, v0

    return-object p0

    .line 995
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->isOnFgOffloadQueue(I)Z

    move-result p2

    if-eqz p2, :cond_1

    .line 1000
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    const/4 p1, 0x3

    aget-object p0, p0, p1

    return-object p0

    .line 1003
    :cond_1
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->isOnBgOffloadQueue(I)Z

    move-result p2

    if-eqz p2, :cond_2

    .line 1008
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    const/4 p1, 0x2

    aget-object p0, p0, p1

    return-object p0

    :cond_2
    const/high16 p2, 0x10000000

    and-int/2addr p1, p2

    const/4 p2, 0x1

    if-eqz p1, :cond_3

    move p1, p2

    goto :goto_0

    :cond_3
    move p1, v0

    :goto_0
    if-eqz p1, :cond_4

    .line 1015
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    aget-object p0, p0, v0

    goto :goto_1

    .line 1016
    :cond_4
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    aget-object p0, p0, p2

    :goto_1
    return-object p0
.end method

.method public broadcastQueueForIntent(Landroid/content/Intent;)Lcom/android/server/am/BroadcastQueue;
    .locals 1

    .line 983
    invoke-virtual {p1}, Landroid/content/Intent;->getFlags()I

    move-result v0

    invoke-virtual {p0, v0, p1}, Lcom/android/server/am/ActivityManagerService;->broadcastQueueForFlags(ILjava/lang/Object;)Lcom/android/server/am/BroadcastQueue;

    move-result-object p0

    return-object p0
.end method

.method public final cameraActiveChanged(IZ)V
    .locals 2

    .line 19670
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActiveCameraUids:Landroid/util/IntArray;

    monitor-enter v0

    .line 19671
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mActiveCameraUids:Landroid/util/IntArray;

    invoke-virtual {v1, p1}, Landroid/util/IntArray;->indexOf(I)I

    move-result v1

    if-eqz p2, :cond_0

    if-gez v1, :cond_1

    .line 19674
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mActiveCameraUids:Landroid/util/IntArray;

    invoke-virtual {p0, p1}, Landroid/util/IntArray;->add(I)V

    goto :goto_0

    :cond_0
    if-ltz v1, :cond_1

    .line 19678
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mActiveCameraUids:Landroid/util/IntArray;

    invoke-virtual {p0, v1}, Landroid/util/IntArray;->remove(I)V

    .line 19681
    :cond_1
    :goto_0
    monitor-exit v0

    return-void

    :catchall_0
    move-exception p0

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw p0
.end method

.method public final canGcNowLocked()Z
    .locals 5

    .line 19200
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v1, v0

    const/4 v2, 0x0

    move v3, v2

    :goto_0
    if-ge v3, v1, :cond_1

    aget-object v4, v0, v3

    .line 19201
    invoke-virtual {v4}, Lcom/android/server/am/BroadcastQueue;->isIdleLocked()Z

    move-result v4

    if-nez v4, :cond_0

    return v2

    :cond_0
    add-int/lit8 v3, v3, 0x1

    goto :goto_0

    .line 19205
    :cond_1
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {p0}, Lcom/android/server/wm/ActivityTaskManagerInternal;->canGcNow()Z

    move-result p0

    return p0
.end method

.method public canRestrict(ILjava/lang/String;I)Z
    .locals 0

    .line 23999
    invoke-static {}, Lcom/android/server/am/MARsPolicyManager;->getInstance()Lcom/android/server/am/MARsPolicyManager;

    move-result-object p0

    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/am/MARsPolicyManager;->canRestrictBySEP(ILjava/lang/String;I)Z

    move-result p0

    return p0
.end method

.method public canScheduleUserInitiatedJobs(IILjava/lang/String;)Z
    .locals 9

    .line 7836
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 7838
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 7839
    :try_start_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v1, p2}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v6

    .line 7840
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 7842
    :try_start_2
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v0

    const/4 v8, 0x1

    if-eqz v6, :cond_1

    .line 7845
    invoke-virtual {p0, v6, v0, v1}, Lcom/android/server/am/ActivityManagerService;->isProcessInStateToScheduleUserInitiatedJobsLocked(Lcom/android/server/am/ProcessRecord;J)Z

    move-result v2

    if-eqz v2, :cond_0

    .line 7846
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v8

    .line 7848
    :cond_0
    :try_start_3
    invoke-virtual {v6}, Lcom/android/server/am/ProcessRecord;->getBackgroundStartPrivileges()Landroid/app/BackgroundStartPrivileges;

    move-result-object v2

    goto :goto_0

    .line 7850
    :cond_1
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getBackgroundStartPrivileges(I)Landroid/app/BackgroundStartPrivileges;

    move-result-object v2

    :goto_0
    move-object v7, v2

    .line 7853
    invoke-virtual {v7}, Landroid/app/BackgroundStartPrivileges;->allowsBackgroundActivityStarts()Z

    move-result v2

    if-eqz v2, :cond_2

    .line 7855
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v8

    .line 7865
    :cond_2
    :try_start_4
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    move v3, p2

    move v4, p1

    move-object v5, p3

    invoke-virtual/range {v2 .. v7}, Lcom/android/server/am/ActiveServices;->canAllowWhileInUsePermissionInFgsLocked(IILjava/lang/String;Lcom/android/server/am/ProcessRecord;Landroid/app/BackgroundStartPrivileges;)Z

    move-result v2

    if-eqz v2, :cond_3

    .line 7867
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v8

    .line 7870
    :cond_3
    :try_start_5
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v2, p1}, Lcom/android/server/am/ProcessList;->getUidRecordLOSP(I)Lcom/android/server/am/UidRecord;

    move-result-object v2

    if-eqz v2, :cond_5

    .line 7872
    invoke-virtual {v2}, Lcom/android/server/am/UidRecord;->getNumOfProcs()I

    move-result v3

    sub-int/2addr v3, v8

    :goto_1
    if-ltz v3, :cond_5

    .line 7873
    invoke-virtual {v2, v3}, Lcom/android/server/am/UidRecord;->getProcessRecordByIndex(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v4

    .line 7874
    invoke-virtual {p0, v4, v0, v1}, Lcom/android/server/am/ActivityManagerService;->isProcessInStateToScheduleUserInitiatedJobsLocked(Lcom/android/server/am/ProcessRecord;J)Z

    move-result v4

    if-eqz v4, :cond_4

    .line 7875
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v8

    :cond_4
    add-int/lit8 v3, v3, -0x1

    goto :goto_1

    .line 7880
    :cond_5
    :try_start_6
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/wm/ActivityTaskManagerInternal;->hasSystemAlertWindowPermission(IILjava/lang/String;)Z

    move-result p3

    if-eqz p3, :cond_6

    .line 7882
    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v8

    .line 7885
    :cond_6
    :try_start_7
    invoke-static {p1}, Landroid/os/UserHandle;->getUserId(I)I

    move-result p3

    .line 7886
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mInternal:Landroid/app/ActivityManagerInternal;

    invoke-virtual {v0, p3, p1}, Landroid/app/ActivityManagerInternal;->isAssociatedCompanionApp(II)Z

    move-result p3

    if-eqz p3, :cond_7

    const-string p3, "android.permission.REQUEST_COMPANION_RUN_IN_BACKGROUND"

    .line 7888
    invoke-virtual {p0, p3, p2, p1}, Lcom/android/server/am/ActivityManagerService;->checkPermission(Ljava/lang/String;II)I

    move-result p1

    if-nez p1, :cond_7

    .line 7891
    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v8

    .line 7894
    :cond_7
    :try_start_8
    monitor-exit p0
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    const/4 p0, 0x0

    return p0

    :catchall_0
    move-exception p1

    .line 7840
    :try_start_9
    monitor-exit v0
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_0

    :try_start_a
    throw p1

    :catchall_1
    move-exception p1

    .line 7894
    monitor-exit p0
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public cancelIntentSender(Landroid/content/IIntentSender;)V
    .locals 0

    .line 6664
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingIntentController:Lcom/android/server/am/PendingIntentController;

    invoke-virtual {p0, p1}, Lcom/android/server/am/PendingIntentController;->cancelIntentSender(Landroid/content/IIntentSender;)V

    return-void
.end method

.method public cancelTaskWindowTransition(I)V
    .locals 0

    .line 8080
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {p0, p1}, Lcom/android/server/wm/ActivityTaskManagerService;->cancelTaskWindowTransition(I)V

    return-void
.end method

.method public final checkBroadcastFromSystem(Landroid/content/Intent;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;IZLjava/util/List;)V
    .locals 3

    .line 17028
    invoke-virtual {p1}, Landroid/content/Intent;->getFlags()I

    move-result v0

    const/high16 v1, 0x400000

    and-int/2addr v0, v1

    if-eqz v0, :cond_0

    return-void

    .line 17033
    :cond_0
    invoke-virtual {p1}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v0

    .line 17038
    sget-boolean v1, Lcom/samsung/android/rune/CoreRune;->SAFE_DEBUG:Z

    if-nez v1, :cond_1

    sget-boolean v1, Landroid/os/Build;->IS_USERDEBUG:Z

    if-eqz v1, :cond_1

    sget-boolean v1, Lcom/android/server/am/ActivityManagerService;->DEBUG_LEVEL_LOW:Z

    if-eqz v1, :cond_1

    return-void

    :cond_1
    if-nez p5, :cond_2

    if-eqz v0, :cond_2

    .line 17040
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mExt:Lcom/android/server/am/ActivityManagerServiceExt;

    .line 17041
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerServiceExt;->isRelaxedBroadcastAction(Ljava/lang/String;)Z

    move-result p0

    if-eqz p0, :cond_2

    return-void

    :cond_2
    if-nez p5, :cond_b

    const-string p0, "android.intent.action.CLOSE_SYSTEM_DIALOGS"

    .line 17048
    invoke-virtual {p0, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p0

    if-nez p0, :cond_b

    const-string p0, "com.android.intent.action.DISMISS_KEYBOARD_SHORTCUTS"

    .line 17049
    invoke-virtual {p0, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p0

    if-nez p0, :cond_b

    const-string p0, "android.intent.action.MEDIA_BUTTON"

    .line 17050
    invoke-virtual {p0, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p0

    if-nez p0, :cond_b

    const-string p0, "android.intent.action.MEDIA_SCANNER_SCAN_FILE"

    .line 17051
    invoke-virtual {p0, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p0

    if-nez p0, :cond_b

    const-string p0, "com.android.intent.action.SHOW_KEYBOARD_SHORTCUTS"

    .line 17052
    invoke-virtual {p0, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p0

    if-nez p0, :cond_b

    const-string p0, "android.intent.action.MASTER_CLEAR"

    .line 17053
    invoke-virtual {p0, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p0

    if-nez p0, :cond_b

    const-string p0, "android.intent.action.FACTORY_RESET"

    .line 17054
    invoke-virtual {p0, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p0

    if-nez p0, :cond_b

    const-string p0, "android.appwidget.action.APPWIDGET_CONFIGURE"

    .line 17055
    invoke-virtual {p0, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p0

    if-nez p0, :cond_b

    const-string p0, "android.appwidget.action.APPWIDGET_UPDATE"

    .line 17056
    invoke-virtual {p0, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p0

    if-nez p0, :cond_b

    const-string p0, "com.android.omadm.service.CONFIGURATION_UPDATE"

    .line 17057
    invoke-virtual {p0, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p0

    if-nez p0, :cond_b

    const-string p0, "android.text.style.SUGGESTION_PICKED"

    .line 17058
    invoke-virtual {p0, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p0

    if-nez p0, :cond_b

    const-string p0, "android.media.action.OPEN_AUDIO_EFFECT_CONTROL_SESSION"

    .line 17059
    invoke-virtual {p0, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p0

    if-nez p0, :cond_b

    const-string p0, "android.media.action.CLOSE_AUDIO_EFFECT_CONTROL_SESSION"

    .line 17060
    invoke-virtual {p0, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p0

    if-eqz p0, :cond_3

    goto/16 :goto_3

    .line 17071
    :cond_3
    invoke-virtual {p1}, Landroid/content/Intent;->getPackage()Ljava/lang/String;

    move-result-object p0

    if-nez p0, :cond_4

    invoke-virtual {p1}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object p0

    if-eqz p0, :cond_9

    :cond_4
    if-eqz p6, :cond_b

    .line 17072
    invoke-interface {p6}, Ljava/util/List;->size()I

    move-result p0

    if-nez p0, :cond_5

    goto/16 :goto_3

    .line 17082
    :cond_5
    invoke-interface {p6}, Ljava/util/List;->size()I

    move-result p0

    const/4 p1, 0x1

    sub-int/2addr p0, p1

    :goto_0
    if-ltz p0, :cond_8

    .line 17083
    invoke-interface {p6, p0}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object p5

    .line 17084
    instance-of v1, p5, Landroid/content/pm/ResolveInfo;

    const/4 v2, 0x0

    if-eqz v1, :cond_6

    .line 17085
    check-cast p5, Landroid/content/pm/ResolveInfo;

    .line 17086
    iget-object p5, p5, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-boolean v1, p5, Landroid/content/pm/ActivityInfo;->exported:Z

    if-eqz v1, :cond_7

    iget-object p5, p5, Landroid/content/pm/ActivityInfo;->permission:Ljava/lang/String;

    if-nez p5, :cond_7

    goto :goto_1

    .line 17091
    :cond_6
    check-cast p5, Lcom/android/server/am/BroadcastFilter;

    .line 17092
    iget-boolean v1, p5, Lcom/android/server/am/BroadcastFilter;->exported:Z

    if-eqz v1, :cond_7

    iget-object p5, p5, Lcom/android/server/am/BroadcastFilter;->requiredPermission:Ljava/lang/String;

    if-nez p5, :cond_7

    :goto_1
    move p1, v2

    goto :goto_2

    :cond_7
    add-int/lit8 p0, p0, -0x1

    goto :goto_0

    :cond_8
    :goto_2
    if-eqz p1, :cond_9

    return-void

    :cond_9
    const-string p0, " pkg "

    const-string p1, "Sending non-protected broadcast "

    const-string p5, "ActivityManager"

    if-eqz p2, :cond_a

    .line 17108
    new-instance p4, Ljava/lang/StringBuilder;

    invoke-direct {p4}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {p4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, " from system "

    invoke-virtual {p4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 17109
    invoke-virtual {p2}, Lcom/android/server/am/ProcessRecord;->toShortString()Ljava/lang/String;

    move-result-object p1

    invoke-virtual {p4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p4, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p4, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    new-instance p1, Ljava/lang/Throwable;

    invoke-direct {p1}, Ljava/lang/Throwable;-><init>()V

    .line 17108
    invoke-static {p5, p0, p1}, Landroid/util/Log;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    goto :goto_3

    .line 17112
    :cond_a
    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, " from system uid "

    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 17113
    invoke-static {p4}, Landroid/os/UserHandle;->formatUid(I)Ljava/lang/String;

    move-result-object p1

    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    new-instance p1, Ljava/lang/Throwable;

    invoke-direct {p1}, Ljava/lang/Throwable;-><init>()V

    .line 17112
    invoke-static {p5, p0, p1}, Landroid/util/Log;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    :cond_b
    :goto_3
    return-void
.end method

.method public checkCallingPermission(Ljava/lang/String;)I
    .locals 2

    .line 7465
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    .line 7466
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    .line 7464
    invoke-virtual {p0, p1, v0, v1}, Lcom/android/server/am/ActivityManagerService;->checkPermission(Ljava/lang/String;II)I

    move-result p0

    return p0
.end method

.method public final checkExcessivePowerUsage()V
    .locals 12

    .line 19209
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V

    .line 19211
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mSystemReady:Z

    const/4 v1, 0x1

    const/4 v2, 0x0

    if-eqz v0, :cond_0

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-string/jumbo v3, "settings_enable_monitor_phantom_procs"

    invoke-static {v0, v3}, Landroid/util/FeatureFlagUtils;->isEnabled(Landroid/content/Context;Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_0

    move v10, v1

    goto :goto_0

    :cond_0
    move v10, v2

    .line 19213
    :goto_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v0

    .line 19214
    :try_start_0
    iget-wide v3, p0, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckUptime:J

    const-wide/16 v5, 0x0

    cmp-long v3, v3, v5

    if-eqz v3, :cond_1

    move v9, v1

    goto :goto_1

    :cond_1
    move v9, v2

    .line 19215
    :goto_1
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v5

    .line 19216
    iget-wide v3, p0, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckUptime:J

    sub-long v7, v5, v3

    .line 19217
    iput-wide v5, p0, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckUptime:J

    .line 19218
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    new-instance v11, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda24;

    move-object v3, v11

    move-object v4, p0

    invoke-direct/range {v3 .. v10}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda24;-><init>(Lcom/android/server/am/ActivityManagerService;JJZZ)V

    invoke-virtual {v1, v2, v11}, Lcom/android/server/am/ProcessList;->forEachLruProcessesLOSP(ZLjava/util/function/Consumer;)V

    .line 19245
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return-void

    :catchall_0
    move-exception p0

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p0
.end method

.method public final checkExcessivePowerUsageLPr(JZJLjava/lang/String;Ljava/lang/String;ILcom/android/server/am/ProcessRecord;)Z
    .locals 8

    move-object/from16 v7, p9

    if-eqz p3, :cond_0

    const-wide/16 v0, 0x0

    cmp-long v0, p1, v0

    if-lez v0, :cond_0

    const-wide/16 v0, 0x64

    mul-long/2addr v0, p4

    .line 19329
    div-long/2addr v0, p1

    move/from16 v2, p8

    int-to-long v2, v2

    cmp-long v0, v0, v2

    if-ltz v0, :cond_0

    move-object v0, p0

    .line 19330
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    iget-object v1, v7, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v1, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    iget-object v2, v7, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-wide v3, p1

    move-wide v5, p4

    invoke-virtual/range {v0 .. v6}, Lcom/android/server/am/BatteryStatsService;->reportExcessiveCpu(ILjava/lang/String;JJ)V

    .line 19332
    invoke-virtual/range {p9 .. p9}, Lcom/android/server/am/ProcessRecord;->getPkgList()Lcom/android/server/am/PackageList;

    move-result-object v0

    new-instance v1, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda45;

    move-object v2, p6

    invoke-direct {v1, v7, p6}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda45;-><init>(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;)V

    invoke-virtual {v0, v1}, Lcom/android/server/am/PackageList;->forEachPackageProcessStats(Ljava/util/function/Consumer;)V

    const/4 v0, 0x1

    return v0

    :cond_0
    const/4 v0, 0x0

    return v0
.end method

.method public checkIfProcessIsRunning(Ljava/lang/String;I)Z
    .locals 2

    .line 6768
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    const/16 v1, 0x3e8

    if-ne v0, v1, :cond_1

    .line 6769
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 6770
    :try_start_0
    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->getProcessRecordLocked(Ljava/lang/String;I)Lcom/android/server/am/ProcessRecord;

    move-result-object p1

    if-eqz p1, :cond_0

    const/4 p1, 0x1

    goto :goto_0

    :cond_0
    const/4 p1, 0x0

    .line 6774
    :goto_0
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    const-string p0, "ActivityManager"

    .line 6778
    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "check to see if the app added to knox vpn profile is running "

    invoke-virtual {p2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-static {p0, p2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return p1

    :catchall_0
    move-exception p1

    .line 6774
    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1

    .line 6776
    :cond_1
    new-instance p0, Ljava/lang/SecurityException;

    const-string p1, "The caller is not authorized to access the API"

    invoke-direct {p0, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p0
.end method

.method public final checkLongLivePermissions(Ljava/lang/String;)V
    .locals 8

    .line 24152
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    invoke-static {}, Landroid/os/Process;->myUid()I

    move-result v1

    if-ne v0, v1, :cond_0

    return-void

    :cond_0
    const-string v2, "com.samsung.android.multistar"

    const-string v3, "com.android.systemui"

    const-string v4, "com.sec.android.app.launcher"

    const-string v5, "com.sec.android.app.desktoplauncher"

    const-string/jumbo v6, "system"

    const-string v7, "com.samsung.android.sidegesturepad"

    .line 24154
    filled-new-array/range {v2 .. v7}, [Ljava/lang/String;

    move-result-object v0

    .line 24157
    invoke-virtual {p0, v0, p1}, Lcom/android/server/am/ActivityManagerService;->ensureCallingPkg([Ljava/lang/String;Ljava/lang/String;)V

    const-string v0, "android.permission.FORCE_STOP_PACKAGES"

    .line 24159
    invoke-virtual {p0, v0, p1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    return-void
.end method

.method public checkPermission(Ljava/lang/String;II)I
    .locals 1

    const/4 p0, -0x1

    if-nez p1, :cond_0

    return p0

    :cond_0
    const/4 v0, 0x1

    .line 7454
    invoke-static {p1, p2, p3, p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result p0

    return p0
.end method

.method public checkProcDiedOrComponentExecutingForFreeze(Ljava/util/ArrayList;Ljava/util/ArrayList;)I
    .locals 3

    const/4 v0, 0x0

    if-eqz p1, :cond_3

    .line 16494
    invoke-virtual {p1}, Ljava/util/ArrayList;->size()I

    move-result v1

    if-lez v1, :cond_3

    .line 16495
    invoke-virtual {p1}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object p1

    :cond_0
    invoke-interface {p1}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_3

    invoke-interface {p1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/lang/Integer;

    .line 16496
    invoke-virtual {v1}, Ljava/lang/Integer;->intValue()I

    move-result v2

    invoke-virtual {p0, v2}, Lcom/android/server/am/ActivityManagerService;->getProcessRecordFromPidLocked(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v2

    if-eqz v2, :cond_1

    .line 16498
    invoke-virtual {p2, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 16499
    invoke-virtual {p0, v2}, Lcom/android/server/am/ActivityManagerService;->getReasonProcShouldNotBeFrozen(Lcom/android/server/am/ProcessRecord;)I

    move-result v0

    goto :goto_0

    .line 16502
    :cond_1
    invoke-static {}, Lcom/android/server/am/MARsPolicyManager;->getInstance()Lcom/android/server/am/MARsPolicyManager;

    move-result-object v2

    invoke-virtual {v2}, Lcom/android/server/am/MARsPolicyManager;->isChinaPolicyEnabled()Z

    move-result v2

    if-nez v2, :cond_2

    .line 16503
    invoke-static {}, Lcom/android/server/am/FreecessController;->getInstance()Lcom/android/server/am/FreecessController;

    move-result-object v2

    invoke-virtual {v1}, Ljava/lang/Integer;->intValue()I

    move-result v1

    invoke-virtual {v2, v1}, Lcom/android/server/am/FreecessController;->getPidProcessName(I)Ljava/lang/String;

    move-result-object v1

    const-string/jumbo v2, "logcat"

    invoke-virtual {v2, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_2

    const/4 v0, 0x7

    :cond_2
    :goto_0
    if-eqz v0, :cond_0

    :cond_3
    return v0
.end method

.method public checkProfileForADCP(ILjava/lang/String;)V
    .locals 1

    .line 23950
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v0

    .line 23951
    :try_start_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object p0

    .line 23952
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-eqz p0, :cond_0

    .line 23954
    invoke-virtual {p0}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object p1

    if-eqz p1, :cond_0

    .line 23956
    :try_start_1
    invoke-virtual {p0}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object p0

    invoke-interface {p0, p2}, Landroid/app/IApplicationThread;->getProfileLength(Ljava/lang/String;)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    goto :goto_0

    :catch_0
    const-string p0, "ActivityManager"

    const-string p1, "Failed to get profile length"

    .line 23958
    invoke-static {p0, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    :cond_0
    :goto_0
    return-void

    :catchall_0
    move-exception p0

    .line 23952
    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw p0
.end method

.method public checkTime(JLjava/lang/String;)V
    .locals 2

    .line 5977
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v0

    sub-long/2addr v0, p1

    const-wide/16 p0, 0x32

    cmp-long p0, v0, p0

    if-lez p0, :cond_0

    .line 5980
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string p1, "Slow operation: "

    .line 5982
    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v0, v1}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string/jumbo p1, "ms so far, now at "

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, "ActivityManager"

    .line 5984
    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-static {p1, p2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    const-wide/16 p1, 0x96

    cmp-long p1, v0, p1

    if-lez p1, :cond_0

    const/16 p1, 0x8

    .line 5988
    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-static {p1, p0}, Landroid/util/PerfLog;->d(ILjava/lang/String;)V

    :cond_0
    return-void
.end method

.method public checkUriPermission(Landroid/net/Uri;IIIILandroid/os/IBinder;)I
    .locals 2

    const-string p6, "checkUriPermission"

    .line 7922
    invoke-virtual {p0, p6}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 7925
    sget p6, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    const/4 v0, 0x0

    if-ne p2, p6, :cond_0

    return v0

    :cond_0
    const/4 p2, -0x1

    if-eqz p3, :cond_1

    .line 7929
    iget-object p6, p0, Lcom/android/server/am/ActivityManagerService;->mPackageManagerInt:Landroid/content/pm/PackageManagerInternal;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {p6, p3, v1}, Landroid/content/pm/PackageManagerInternal;->filterAppAccess(II)Z

    move-result p6

    if-eqz p6, :cond_1

    return p2

    .line 7933
    :cond_1
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mUgmInternal:Lcom/android/server/uri/UriGrantsManagerInternal;

    new-instance p6, Lcom/android/server/uri/GrantUri;

    invoke-direct {p6, p5, p1, p4}, Lcom/android/server/uri/GrantUri;-><init>(ILandroid/net/Uri;I)V

    invoke-interface {p0, p6, p3, p4}, Lcom/android/server/uri/UriGrantsManagerInternal;->checkUriPermission(Lcom/android/server/uri/GrantUri;II)Z

    move-result p0

    if-eqz p0, :cond_2

    goto :goto_0

    :cond_2
    move v0, p2

    :goto_0
    return v0
.end method

.method public checkUriPermissions(Ljava/util/List;IIIILandroid/os/IBinder;)[I
    .locals 13

    .line 7940
    invoke-interface {p1}, Ljava/util/List;->size()I

    move-result v0

    .line 7941
    new-array v1, v0, [I

    const/4 v2, -0x1

    .line 7943
    invoke-static {v1, v2}, Ljava/util/Arrays;->fill([II)V

    const/4 v2, 0x0

    :goto_0
    if-ge v2, v0, :cond_0

    move-object v3, p1

    .line 7946
    invoke-interface {p1, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/net/Uri;

    move/from16 v5, p5

    .line 7947
    invoke-static {v4, v5}, Landroid/content/ContentProvider;->getUserIdFromUri(Landroid/net/Uri;I)I

    move-result v11

    .line 7948
    invoke-static {v4}, Landroid/content/ContentProvider;->getUriWithoutUserId(Landroid/net/Uri;)Landroid/net/Uri;

    move-result-object v7

    move-object v6, p0

    move v8, p2

    move/from16 v9, p3

    move/from16 v10, p4

    move-object/from16 v12, p6

    invoke-virtual/range {v6 .. v12}, Lcom/android/server/am/ActivityManagerService;->checkUriPermission(Landroid/net/Uri;IIIILandroid/os/IBinder;)I

    move-result v4

    aput v4, v1, v2

    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    :cond_0
    return-object v1
.end method

.method public final cleanUpApplicationRecordLocked(Lcom/android/server/am/ProcessRecord;IZZIZZ)Z
    .locals 7

    .line 15634
    sget-boolean v0, Lcom/android/server/am/MARsPolicyManager;->MARs_ENABLE:Z

    const/4 v1, 0x1

    const/4 v2, 0x0

    if-eqz v0, :cond_0

    .line 15636
    invoke-static {}, Lcom/android/server/am/FreecessController;->getInstance()Lcom/android/server/am/FreecessController;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/am/FreecessController;->isPidUfzEnabled()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 15637
    invoke-static {}, Lcom/android/server/am/FreecessController;->getInstance()Lcom/android/server/am/FreecessController;

    move-result-object v0

    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v3, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget v4, p1, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-virtual {v0, v3, v4}, Lcom/android/server/am/FreecessController;->isPackageRestricted(Ljava/lang/String;I)Z

    move-result v0

    if-eqz v0, :cond_0

    move v0, v1

    goto :goto_0

    :cond_0
    move v0, v2

    .line 15642
    :goto_0
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v3

    if-ltz p5, :cond_1

    .line 15644
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->removeLruProcessLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 15645
    invoke-static {p2}, Lcom/android/server/am/ProcessList;->remove(I)V

    .line 15650
    :cond_1
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    if-eqz p4, :cond_2

    if-nez v0, :cond_2

    move v5, v1

    goto :goto_1

    :cond_2
    move v5, v2

    :goto_1
    if-nez p7, :cond_4

    iget-boolean p7, p1, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-eqz p7, :cond_3

    goto :goto_2

    :cond_3
    move p7, v2

    goto :goto_3

    :cond_4
    :goto_2
    move p7, v1

    :goto_3
    invoke-virtual {p1, v4, v5, p7}, Lcom/android/server/am/ProcessRecord;->onCleanupApplicationRecordLSP(Lcom/android/server/am/ProcessStatsService;ZZ)Z

    move-result p7

    .line 15657
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    iget-object v4, v4, Lcom/android/server/am/OomAdjuster;->mCachedAppOptimizer:Lcom/android/server/am/CachedAppOptimizer;

    invoke-virtual {v4, p1}, Lcom/android/server/am/CachedAppOptimizer;->onCleanupApplicationRecordLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 15658
    monitor-exit v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 15659
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {v3, p1}, Lcom/android/server/am/AppProfiler;->onCleanupApplicationRecordLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 15660
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v4, v3

    move v5, v2

    :goto_4
    if-ge v5, v4, :cond_5

    aget-object v6, v3, v5

    .line 15661
    invoke-virtual {v6, p1}, Lcom/android/server/am/BroadcastQueue;->onApplicationCleanupLocked(Lcom/android/server/am/ProcessRecord;)V

    add-int/lit8 v5, v5, 0x1

    goto :goto_4

    .line 15663
    :cond_5
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->clearProcessForegroundLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 15664
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v3, p1, p4, v0}, Lcom/android/server/am/ActiveServices;->killServicesLocked(Lcom/android/server/am/ProcessRecord;ZZ)V

    .line 15665
    iget-object p4, p0, Lcom/android/server/am/ActivityManagerService;->mPhantomProcessList:Lcom/android/server/am/PhantomProcessList;

    invoke-virtual {p4, p2}, Lcom/android/server/am/PhantomProcessList;->onAppDied(I)V

    .line 15668
    iget-object p4, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTargets:Landroid/util/SparseArray;

    iget v3, p1, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-virtual {p4, v3}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object p4

    check-cast p4, Lcom/android/server/am/BackupRecord;

    if-eqz p4, :cond_6

    .line 15669
    iget-object p4, p4, Lcom/android/server/am/BackupRecord;->app:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {p4}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result p4

    if-ne p2, p4, :cond_6

    .line 15672
    iget-object p4, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v3, Lcom/android/server/am/ActivityManagerService$23;

    invoke-direct {v3, p0, p1}, Lcom/android/server/am/ActivityManagerService$23;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;)V

    invoke-virtual {p4, v3}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 15686
    :cond_6
    iget-object p4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v3, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {p4, p2, v3}, Lcom/android/server/am/ProcessList;->scheduleDispatchProcessDiedLocked(II)V

    .line 15689
    iget-object p4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {p4, p1}, Lcom/android/server/am/ProcessList;->handlePrecedingAppDiedLocked(Lcom/android/server/am/ProcessRecord;)Z

    move-result p4

    .line 15693
    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->mPredecessor:Lcom/android/server/am/ProcessRecord;

    if-eqz v3, :cond_7

    const/4 v4, 0x0

    .line 15695
    iput-object v4, v3, Lcom/android/server/am/ProcessRecord;->mSuccessor:Lcom/android/server/am/ProcessRecord;

    .line 15696
    iput-object v4, v3, Lcom/android/server/am/ProcessRecord;->mSuccessorStartRunnable:Ljava/lang/Runnable;

    .line 15697
    iput-object v4, p1, Lcom/android/server/am/ProcessRecord;->mPredecessor:Lcom/android/server/am/ProcessRecord;

    :cond_7
    if-eqz p3, :cond_8

    return v2

    .line 15708
    :cond_8
    iget-object p3, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object p3, p3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget v3, p1, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-virtual {p0, p3, v3}, Lcom/android/server/am/ActivityManagerService;->needToBlockImsRequest(Ljava/lang/String;I)Z

    move-result p3

    if-eqz p3, :cond_9

    const-string p3, "ActivityManager"

    .line 15709
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "[IMS-AM] cleanUpApplicationRecordLocked() Clean up ["

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v4, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v4, v4, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v4, "] of non-active user ["

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v4, p1, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, "]"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {p3, v3}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 15713
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v3, Lcom/android/server/am/ActivityManagerService$24;

    invoke-direct {v3, p0, p1}, Lcom/android/server/am/ActivityManagerService$24;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;)V

    invoke-virtual {p3, v3}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    move p3, v1

    goto :goto_5

    :cond_9
    move p3, v2

    .line 15722
    :goto_5
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->isPersistent()Z

    move-result v3

    if-eqz v3, :cond_b

    iget-boolean v3, p1, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-nez v3, :cond_b

    if-eqz p3, :cond_a

    goto :goto_6

    .line 15730
    :cond_a
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->isRemoved()Z

    move-result p3

    if-nez p3, :cond_d

    .line 15734
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    invoke-virtual {p3, p1}, Ljava/util/ArrayList;->indexOf(Ljava/lang/Object;)I

    move-result p3

    if-gez p3, :cond_d

    .line 15735
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    invoke-virtual {p3, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    move p7, v1

    goto :goto_7

    :cond_b
    :goto_6
    if-nez p6, :cond_c

    .line 15727
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object p6, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget v3, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {p3, p6, v3, p1}, Lcom/android/server/am/ProcessList;->removeProcessNameLocked(Ljava/lang/String;ILcom/android/server/am/ProcessRecord;)Lcom/android/server/am/ProcessRecord;

    .line 15729
    :cond_c
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getWindowProcessController()Lcom/android/server/wm/WindowProcessController;

    move-result-object p6

    invoke-virtual {p3, p6}, Lcom/android/server/wm/ActivityTaskManagerInternal;->clearHeavyWeightProcessIfEquals(Lcom/android/server/wm/WindowProcessController;)V

    .line 15741
    :cond_d
    :goto_7
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    invoke-virtual {p3, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 15743
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getWindowProcessController()Lcom/android/server/wm/WindowProcessController;

    move-result-object p6

    invoke-virtual {p3, p6}, Lcom/android/server/wm/ActivityTaskManagerInternal;->onCleanUpApplicationRecord(Lcom/android/server/wm/WindowProcessController;)V

    .line 15744
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {p3, p1}, Lcom/android/server/am/ProcessList;->noteProcessDiedLocked(Lcom/android/server/am/ProcessRecord;)V

    if-eqz p7, :cond_f

    if-eqz p4, :cond_f

    .line 15746
    iget-boolean p3, p1, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-nez p3, :cond_f

    if-nez v0, :cond_f

    if-gez p5, :cond_e

    .line 15750
    invoke-static {p2}, Lcom/android/server/am/ProcessList;->remove(I)V

    .line 15755
    :cond_e
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 p3, 0x39

    invoke-virtual {p2, p3, p1}, Landroid/os/Handler;->removeMessages(ILjava/lang/Object;)V

    .line 15757
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {p2, p1}, Lcom/android/server/am/ProcessList;->addProcessNameLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 15758
    invoke-virtual {p1, v2}, Lcom/android/server/am/ProcessRecord;->setPendingStart(Z)V

    .line 15760
    iput-boolean v2, p1, Lcom/android/server/am/ProcessRecord;->mIsRemovedName:Z

    .line 15762
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    new-instance p2, Lcom/android/server/am/HostingRecord;

    const-string/jumbo p3, "restart"

    iget-object p4, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-direct {p2, p3, p4}, Lcom/android/server/am/HostingRecord;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    invoke-virtual {p0, p1, p2, v2}, Lcom/android/server/am/ProcessList;->startProcessLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/HostingRecord;I)V

    return v1

    :cond_f
    if-lez p2, :cond_11

    .line 15766
    sget p3, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-eq p2, p3, :cond_11

    .line 15768
    invoke-virtual {p0, p2, p1}, Lcom/android/server/am/ActivityManagerService;->removePidLocked(ILcom/android/server/am/ProcessRecord;)Z

    .line 15769
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 p3, 0x14

    invoke-virtual {p2, p3, p1}, Landroid/os/Handler;->removeMessages(ILjava/lang/Object;)V

    .line 15770
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    iget-object p3, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget-object p4, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget p4, p4, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {p2, p3, p4}, Lcom/android/server/am/BatteryStatsService;->noteProcessFinish(Ljava/lang/String;I)V

    .line 15771
    iget-boolean p2, p1, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-eqz p2, :cond_10

    .line 15772
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    iget p2, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    iget-object p3, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget p3, p3, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {p0, p2, p3}, Lcom/android/server/am/BatteryStatsService;->removeIsolatedUid(II)V

    .line 15774
    :cond_10
    invoke-virtual {p1, v2}, Lcom/android/server/am/ProcessRecord;->setPid(I)V

    :cond_11
    return v2

    :catchall_0
    move-exception p0

    .line 15658
    :try_start_1
    monitor-exit v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p0
.end method

.method public final cleanupDisabledPackageComponentsLocked(Ljava/lang/String;I[Ljava/lang/String;)V
    .locals 14

    move-object v0, p0

    move-object v8, p1

    move/from16 v9, p2

    move-object/from16 v1, p3

    .line 4997
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v2

    if-nez v1, :cond_0

    return-void

    .line 5006
    :cond_0
    array-length v3, v1

    const/4 v10, 0x1

    sub-int/2addr v3, v10

    const/4 v11, 0x0

    const/4 v4, 0x0

    move v6, v4

    move-object v5, v11

    :goto_0
    if-ltz v3, :cond_8

    .line 5007
    aget-object v7, v1, v3

    .line 5009
    invoke-virtual {v7, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v12

    const/4 v13, -0x1

    if-eqz v12, :cond_4

    if-eq v9, v13, :cond_1

    move v6, v9

    goto :goto_1

    :cond_1
    move v6, v4

    .line 5012
    :goto_1
    :try_start_0
    invoke-interface {v2, p1, v6}, Landroid/content/pm/IPackageManager;->getApplicationEnabledSetting(Ljava/lang/String;I)I

    move-result v6
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    if-eq v6, v10, :cond_2

    if-eqz v6, :cond_2

    move v6, v10

    goto :goto_2

    :cond_2
    move v6, v4

    :goto_2
    if-eqz v6, :cond_7

    .line 5027
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mExt:Lcom/android/server/am/ActivityManagerServiceExt;

    invoke-virtual {v1, p1}, Lcom/android/server/am/ActivityManagerServiceExt;->removeLongLivePackageWhenUninstalledLocked(Ljava/lang/String;)Z

    .line 5029
    sget-boolean v1, Lcom/samsung/android/rune/CoreRune;->FW_DEDICATED_MEMORY:Z

    if-eqz v1, :cond_3

    .line 5030
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mExt:Lcom/android/server/am/ActivityManagerServiceExt;

    invoke-virtual {v1, p1, v9}, Lcom/android/server/am/ActivityManagerServiceExt;->removeLongLiveTaskLocked(Ljava/lang/String;I)V

    :cond_3
    move-object v12, v11

    goto :goto_4

    :catch_0
    return-void

    .line 5037
    :cond_4
    :try_start_1
    new-instance v12, Landroid/content/ComponentName;

    invoke-direct {v12, p1, v7}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    if-eq v9, v13, :cond_5

    move v13, v9

    goto :goto_3

    :cond_5
    move v13, v4

    :goto_3
    invoke-interface {v2, v12, v13}, Landroid/content/pm/IPackageManager;->getComponentEnabledSetting(Landroid/content/ComponentName;I)I

    move-result v12
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_1

    if-eq v12, v10, :cond_7

    if-eqz v12, :cond_7

    if-nez v5, :cond_6

    .line 5047
    new-instance v5, Landroid/util/ArraySet;

    array-length v12, v1

    invoke-direct {v5, v12}, Landroid/util/ArraySet;-><init>(I)V

    .line 5049
    :cond_6
    invoke-interface {v5, v7}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    :cond_7
    add-int/lit8 v3, v3, -0x1

    goto :goto_0

    :catch_1
    return-void

    :cond_8
    move-object v12, v5

    :goto_4
    if-nez v6, :cond_9

    if-nez v12, :cond_9

    return-void

    .line 5059
    :cond_9
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    invoke-virtual {v1, p1, v12, v9, v2}, Lcom/android/server/wm/ActivityTaskManagerInternal;->cleanupDisabledPackageComponents(Ljava/lang/String;Ljava/util/Set;IZ)V

    .line 5063
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x1

    move-object v2, p1

    move-object v3, v12

    move/from16 v4, p2

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActiveServices;->bringDownDisabledPackageServicesLocked(Ljava/lang/String;Ljava/util/Set;IZZZ)Z

    .line 5068
    new-instance v13, Ljava/util/ArrayList;

    invoke-direct {v13}, Ljava/util/ArrayList;-><init>()V

    .line 5069
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    invoke-virtual {v1}, Lcom/android/server/am/ContentProviderHelper;->getProviderMap()Lcom/android/server/am/ProviderMap;

    move-result-object v1

    const/4 v4, 0x1

    move/from16 v6, p2

    move-object v7, v13

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ProviderMap;->collectPackageProvidersLocked(Ljava/lang/String;Ljava/util/Set;ZZILjava/util/ArrayList;)Z

    .line 5071
    invoke-virtual {v13}, Ljava/util/ArrayList;->size()I

    move-result v1

    sub-int/2addr v1, v10

    :goto_5
    if-ltz v1, :cond_a

    .line 5072
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    invoke-virtual {v13, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ContentProviderRecord;

    invoke-virtual {v2, v11, v3, v10}, Lcom/android/server/am/ContentProviderHelper;->removeDyingProviderLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ContentProviderRecord;Z)Z

    add-int/lit8 v1, v1, -0x1

    goto :goto_5

    .line 5076
    :cond_a
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v1, v1

    sub-int/2addr v1, v10

    :goto_6
    if-ltz v1, :cond_b

    .line 5077
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    aget-object v2, v2, v1

    invoke-virtual {v2, p1, v12, v9}, Lcom/android/server/am/BroadcastQueue;->cleanupDisabledPackageReceiversLocked(Ljava/lang/String;Ljava/util/Set;I)Z

    add-int/lit8 v1, v1, -0x1

    goto :goto_6

    :cond_b
    return-void
.end method

.method public clearApplicationUserData(Ljava/lang/String;ZLandroid/content/pm/IPackageDataObserver;I)Z
    .locals 20

    move-object/from16 v9, p0

    move-object/from16 v0, p1

    move-object/from16 v8, p3

    move/from16 v1, p4

    const-string v2, "clearApplicationUserData"

    .line 4222
    invoke-virtual {v9, v2}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 4223
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v7

    .line 4224
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v6

    .line 4225
    iget-object v10, v9, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    const/4 v14, 0x0

    const/4 v15, 0x2

    const-string v16, "clearApplicationUserData"

    const/16 v17, 0x0

    move v11, v6

    move v12, v7

    move/from16 v13, p4

    invoke-virtual/range {v10 .. v17}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result v10

    .line 4229
    invoke-virtual {v9, v0, v1}, Lcom/android/server/am/ActivityManagerService;->isApplicationClearDataDisabled(Ljava/lang/String;I)Z

    move-result v2

    const/4 v11, 0x0

    if-eqz v2, :cond_0

    return v11

    .line 4238
    :cond_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v12

    .line 4240
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v14

    .line 4243
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal;

    move-result-object v2

    invoke-virtual {v2, v10, v0}, Landroid/content/pm/PackageManagerInternal;->isPackageDataProtected(ILjava/lang/String;)Z

    move-result v2

    const/4 v15, 0x1

    if-eqz v2, :cond_2

    const-string v2, "android.permission.MANAGE_USERS"

    .line 4245
    invoke-static {v2, v7}, Landroid/app/ActivityManager;->checkUidPermission(Ljava/lang/String;I)I

    move-result v2

    if-eqz v2, :cond_1

    move v2, v11

    goto :goto_0

    .line 4248
    :cond_1
    new-instance v1, Ljava/lang/SecurityException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Cannot clear data for a protected package: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_3

    :cond_2
    move v2, v15

    :goto_0
    const/4 v3, -0x1

    if-eqz v2, :cond_6

    const-wide/16 v4, 0x2000

    .line 4258
    :try_start_1
    invoke-interface {v14, v0, v4, v5, v10}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;JI)Landroid/content/pm/ApplicationInfo;

    move-result-object v4
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_3

    goto :goto_1

    :catch_0
    const/4 v4, 0x0

    :goto_1
    if-eqz v4, :cond_3

    .line 4263
    :try_start_2
    iget v2, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    if-eq v2, v7, :cond_4

    :cond_3
    const-string v2, "android.permission.CLEAR_APP_USER_DATA"

    .line 4264
    invoke-static {v2, v6, v7, v3, v15}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v2

    if-nez v2, :cond_5

    :cond_4
    move v2, v15

    goto :goto_2

    :cond_5
    move v2, v11

    :goto_2
    move-object v5, v4

    goto :goto_3

    :cond_6
    const/4 v5, 0x0

    :goto_3
    if-eqz v2, :cond_13

    .line 4275
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal;

    move-result-object v2

    .line 4276
    invoke-virtual {v2, v0, v10}, Landroid/content/pm/PackageManagerInternal;->hasInstantApplicationMetadata(Ljava/lang/String;I)Z

    move-result v2

    if-nez v5, :cond_7

    if-nez v2, :cond_7

    move v4, v15

    goto :goto_4

    :cond_7
    move v4, v11

    :goto_4
    if-eqz v5, :cond_8

    .line 4279
    invoke-virtual {v5}, Landroid/content/pm/ApplicationInfo;->isInstantApp()Z

    move-result v16

    if-nez v16, :cond_9

    :cond_8
    if-eqz v2, :cond_a

    :cond_9
    move/from16 v16, v15

    goto :goto_5

    :cond_a
    move/from16 v16, v11

    :goto_5
    const-string v2, "android.permission.ACCESS_INSTANT_APPS"

    .line 4281
    invoke-static {v2, v6, v7, v3, v15}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v2

    if-nez v2, :cond_b

    move v2, v15

    goto :goto_6

    :cond_b
    move v2, v11

    :goto_6
    if-nez v4, :cond_11

    if-eqz v16, :cond_c

    if-nez v2, :cond_c

    goto/16 :goto_9

    .line 4298
    :cond_c
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_3

    if-eqz v5, :cond_d

    .line 4300
    :try_start_3
    iget v2, v5, Landroid/content/pm/ApplicationInfo;->uid:I

    const-string v3, "clear data"

    invoke-virtual {v9, v0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;ILjava/lang/String;)V

    .line 4301
    iget-object v2, v9, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {v2, v0, v10}, Lcom/android/server/wm/ActivityTaskManagerInternal;->removeRecentTasksByPackageName(Ljava/lang/String;I)V

    .line 4303
    invoke-static {}, Lcom/android/server/am/MARsPolicyManager;->getInstance()Lcom/android/server/am/MARsPolicyManager;

    move-result-object v2

    invoke-virtual {v2}, Lcom/android/server/am/MARsPolicyManager;->isChinaPolicyEnabled()Z

    move-result v2

    if-eqz v2, :cond_d

    .line 4304
    invoke-static {}, Lcom/android/server/am/MARsPolicyManager;->getInstance()Lcom/android/server/am/MARsPolicyManager;

    move-result-object v2

    invoke-virtual {v2, v0, v1}, Lcom/android/server/am/MARsPolicyManager;->isAutoRunBlockedApp(Ljava/lang/String;I)Z

    move-result v2

    if-eqz v2, :cond_d

    .line 4305
    invoke-static {}, Lcom/android/server/am/MARsPolicyManager;->getInstance()Lcom/android/server/am/MARsPolicyManager;

    move-result-object v2

    const-string v3, "clear data"

    const-string v4, "UserClearData"

    invoke-virtual {v2, v0, v1, v3, v4}, Lcom/android/server/am/MARsPolicyManager;->addRestrictListAvoidAssoicationLaunch(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V

    .line 4309
    :cond_d
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 4311
    new-instance v4, Lcom/android/server/am/ActivityManagerService$8;
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_3

    move-object v1, v4

    move-object/from16 v2, p0

    move-object v3, v5

    move-object v11, v4

    move v4, v10

    move-object v15, v5

    move/from16 v5, v16

    move/from16 p4, v6

    move v6, v7

    move-wide/from16 v18, v12

    move v12, v7

    move/from16 v7, p4

    move-object/from16 v8, p3

    :try_start_5
    invoke-direct/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService$8;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/content/pm/ApplicationInfo;IZIILandroid/content/pm/IPackageDataObserver;)V
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_2

    .line 4353
    :try_start_6
    invoke-interface {v14, v0, v11, v10}, Landroid/content/pm/IPackageManager;->clearApplicationUserData(Ljava/lang/String;Landroid/content/pm/IPackageDataObserver;I)V

    if-eqz v15, :cond_10

    if-nez p2, :cond_f

    .line 4361
    iget-object v1, v9, Lcom/android/server/am/ActivityManagerService;->mUgmInternal:Lcom/android/server/uri/UriGrantsManagerInternal;

    const/4 v2, 0x1

    const/4 v3, 0x0

    invoke-interface {v1, v0, v10, v2, v3}, Lcom/android/server/uri/UriGrantsManagerInternal;->removeUriPermissionsForPackage(Ljava/lang/String;IZZ)V

    .line 4365
    invoke-static {}, Landroid/app/NotificationManager;->getService()Landroid/app/INotificationManager;

    move-result-object v1

    .line 4366
    iget v2, v15, Landroid/content/pm/ApplicationInfo;->uid:I

    if-ne v12, v2, :cond_e

    const/4 v11, 0x1

    goto :goto_7

    :cond_e
    const/4 v11, 0x0

    :goto_7
    invoke-interface {v1, v0, v2, v11}, Landroid/app/INotificationManager;->clearData(Ljava/lang/String;IZ)V

    .line 4370
    :cond_f
    const-class v0, Lcom/android/server/job/JobSchedulerInternal;

    invoke-static {v0}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v0

    move-object v1, v0

    check-cast v1, Lcom/android/server/job/JobSchedulerInternal;

    .line 4372
    iget v2, v15, Landroid/content/pm/ApplicationInfo;->uid:I

    const/4 v3, 0x1

    const/16 v4, 0xd

    const/16 v5, 0x8

    const-string v6, "clear data"

    invoke-interface/range {v1 .. v6}, Lcom/android/server/job/JobSchedulerInternal;->cancelJobsForUid(IZIILjava/lang/String;)V

    .line 4377
    const-class v0, Lcom/android/server/AlarmManagerInternal;

    invoke-static {v0}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/AlarmManagerInternal;

    .line 4378
    iget v1, v15, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-interface {v0, v1}, Lcom/android/server/AlarmManagerInternal;->removeAlarmsForUid(I)V
    :try_end_6
    .catch Landroid/os/RemoteException; {:try_start_6 .. :try_end_6} :catch_1
    .catchall {:try_start_6 .. :try_end_6} :catchall_2

    .line 4383
    :catch_1
    :cond_10
    invoke-static/range {v18 .. v19}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    const/4 v0, 0x1

    return v0

    :catchall_0
    move-exception v0

    move-wide/from16 v18, v12

    .line 4309
    :goto_8
    :try_start_7
    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    :try_start_8
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :catchall_1
    move-exception v0

    goto :goto_8

    :cond_11
    :goto_9
    move-wide/from16 v18, v12

    const-string v1, "ActivityManager"

    .line 4287
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Invalid packageName: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_2

    if-eqz v8, :cond_12

    const/4 v1, 0x0

    .line 4290
    :try_start_9
    invoke-interface {v8, v0, v1}, Landroid/content/pm/IPackageDataObserver;->onRemoveCompleted(Ljava/lang/String;Z)V
    :try_end_9
    .catch Landroid/os/RemoteException; {:try_start_9 .. :try_end_9} :catch_2
    .catchall {:try_start_9 .. :try_end_9} :catchall_2

    goto :goto_a

    :catch_2
    :try_start_a
    const-string v0, "ActivityManager"

    const-string v1, "Observer no longer exists."

    .line 4292
    invoke-static {v0, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_2

    .line 4383
    :cond_12
    :goto_a
    invoke-static/range {v18 .. v19}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    const/4 v0, 0x0

    return v0

    :cond_13
    move/from16 p4, v6

    move-wide/from16 v18, v12

    .line 4269
    :try_start_b
    new-instance v1, Ljava/lang/SecurityException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "PID "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move/from16 v3, p4

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, " does not have permission "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, "android.permission.CLEAR_APP_USER_DATA"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, " to clear data of package "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_2

    :catchall_2
    move-exception v0

    goto :goto_b

    :catchall_3
    move-exception v0

    move-wide/from16 v18, v12

    .line 4383
    :goto_b
    invoke-static/range {v18 .. v19}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4384
    throw v0
.end method

.method public final clearBroadcastQueueForUserLocked(I)Z
    .locals 4

    .line 5085
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v0, v0

    add-int/lit8 v0, v0, -0x1

    const/4 v1, 0x0

    :goto_0
    if-ltz v0, :cond_0

    .line 5086
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    aget-object v2, v2, v0

    const/4 v3, 0x0

    invoke-virtual {v2, v3, v3, p1}, Lcom/android/server/am/BroadcastQueue;->cleanupDisabledPackageReceiversLocked(Ljava/lang/String;Ljava/util/Set;I)Z

    move-result v2

    or-int/2addr v1, v2

    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    :cond_0
    return v1
.end method

.method public clearIgnoreDeliveryGroupPolicy(Ljava/lang/String;)V
    .locals 2

    .line 22610
    invoke-static {p1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    const-string v0, "android.permission.DUMP"

    const-string/jumbo v1, "waitForBroadcastBarrier()"

    .line 22611
    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 22612
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDeliveryGroupPolicyIgnoredActions:Landroid/util/ArraySet;

    monitor-enter v0

    .line 22613
    :try_start_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mDeliveryGroupPolicyIgnoredActions:Landroid/util/ArraySet;

    invoke-virtual {p0, p1}, Landroid/util/ArraySet;->remove(Ljava/lang/Object;)Z

    .line 22614
    monitor-exit v0

    return-void

    :catchall_0
    move-exception p0

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw p0
.end method

.method public clearLongLiveTask(I)Z
    .locals 2

    .line 24265
    sget-boolean v0, Lcom/samsung/android/rune/CoreRune;->FW_DEDICATED_MEMORY:Z

    const/4 v1, 0x0

    if-nez v0, :cond_0

    return v1

    :cond_0
    const-string v0, "clearLongLiveTask"

    .line 24269
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkLongLivePermissions(Ljava/lang/String;)V

    .line 24270
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mExt:Lcom/android/server/am/ActivityManagerServiceExt;

    invoke-virtual {p0, p1, v1}, Lcom/android/server/am/ActivityManagerServiceExt;->setLongLiveTask(IZ)V

    const/4 p0, 0x1

    return p0
.end method

.method public clearOomAdjObserver()V
    .locals 2

    .line 3772
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjObserverLock:Ljava/lang/Object;

    monitor-enter v0

    const/4 v1, -0x1

    .line 3773
    :try_start_0
    iput v1, p0, Lcom/android/server/am/ActivityManagerService;->mCurOomAdjUid:I

    const/4 v1, 0x0

    .line 3774
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mCurOomAdjObserver:Lcom/android/server/am/ActivityManagerService$OomAdjObserver;

    .line 3775
    monitor-exit v0

    return-void

    :catchall_0
    move-exception p0

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw p0
.end method

.method public final clearPendingBackup(I)V
    .locals 2

    .line 16336
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 16337
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTargets:Landroid/util/SparseArray;

    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->indexOfKey(I)I

    move-result p1

    if-ltz p1, :cond_1

    .line 16339
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTargets:Landroid/util/SparseArray;

    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/BackupRecord;

    if-eqz v0, :cond_0

    .line 16340
    iget-object v0, v0, Lcom/android/server/am/BackupRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v0, :cond_0

    .line 16341
    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->mProfile:Lcom/android/server/am/ProcessProfileRecord;

    const/4 v1, 0x4

    invoke-virtual {v0, v1}, Lcom/android/server/am/ProcessProfileRecord;->clearHostingComponentType(I)V

    .line 16344
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTargets:Landroid/util/SparseArray;

    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->removeAt(I)V

    .line 16346
    :cond_1
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 16348
    const-class p0, Lcom/android/server/job/JobSchedulerInternal;

    invoke-static {p0}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object p0

    check-cast p0, Lcom/android/server/job/JobSchedulerInternal;

    .line 16349
    invoke-interface {p0}, Lcom/android/server/job/JobSchedulerInternal;->clearAllBackingUpUids()V

    return-void

    :catchall_0
    move-exception p1

    .line 16346
    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public final clearProcessForegroundLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 6

    const/4 v2, 0x0

    const/4 v3, 0x0

    const/4 v4, 0x0

    const/4 v5, 0x0

    move-object v0, p0

    move-object v1, p1

    .line 19416
    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->updateProcessForegroundLocked(Lcom/android/server/am/ProcessRecord;ZIZZ)V

    return-void
.end method

.method public clearRestrictionInfo(Ljava/util/List;)Z
    .locals 0

    .line 24029
    invoke-static {}, Lcom/android/server/am/MARsPolicyManager;->getInstance()Lcom/android/server/am/MARsPolicyManager;

    move-result-object p0

    invoke-virtual {p0, p1}, Lcom/android/server/am/MARsPolicyManager;->clearRestrictionInfo(Ljava/util/List;)Z

    move-result p0

    return p0
.end method

.method public clearTTSPkgInfo()V
    .locals 0

    .line 24492
    sget-boolean p0, Lcom/android/server/am/MARsPolicyManager;->MARs_ENABLE:Z

    if-eqz p0, :cond_0

    .line 24493
    invoke-static {}, Lcom/android/server/am/MARsPolicyManager;->getInstance()Lcom/android/server/am/MARsPolicyManager;

    move-result-object p0

    invoke-virtual {p0}, Lcom/android/server/am/MARsPolicyManager;->clearTTSPkgInfo()V

    :cond_0
    return-void
.end method

.method public closeSystemDialogs(Ljava/lang/String;)V
    .locals 0

    .line 4754
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {p0, p1}, Lcom/android/server/wm/ActivityTaskManagerInternal;->closeSystemDialogs(Ljava/lang/String;)V

    return-void
.end method

.method public closeSystemDialogsInDisplay(Ljava/lang/String;I)V
    .locals 0

    .line 4761
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {p0, p1, p2}, Lcom/android/server/wm/ActivityTaskManagerInternal;->closeSystemDialogs(Ljava/lang/String;I)V

    return-void
.end method

.method public collectProcesses(Ljava/io/PrintWriter;IZ[Ljava/lang/String;)Ljava/util/ArrayList;
    .locals 0

    .line 13777
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter p1

    .line 13778
    :try_start_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {p0, p2, p3, p4}, Lcom/android/server/am/ProcessList;->collectProcessesLOSP(IZ[Ljava/lang/String;)Ljava/util/ArrayList;

    move-result-object p0

    monitor-exit p1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return-object p0

    :catchall_0
    move-exception p0

    .line 13779
    :try_start_1
    monitor-exit p1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p0
.end method

.method public final collectReceiverComponents(Landroid/content/Intent;Ljava/lang/String;I[I[I)Ljava/util/List;
    .locals 20

    move-object/from16 v0, p0

    move-object/from16 v1, p4

    move-object/from16 v2, p5

    .line 16930
    array-length v3, v1

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    :goto_0
    const/4 v10, 0x1

    if-ge v6, v3, :cond_10

    aget v14, v1, v6

    const/16 v11, 0x7d0

    move/from16 v15, p3

    if-ne v15, v11, :cond_0

    .line 16932
    iget-object v11, v0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    const-string/jumbo v12, "no_debugging_features"

    .line 16933
    invoke-virtual {v11, v12, v14}, Lcom/android/server/am/UserController;->hasUserRestriction(Ljava/lang/String;I)Z

    move-result v11

    if-eqz v11, :cond_0

    goto/16 :goto_8

    .line 16937
    :cond_0
    iget-object v11, v0, Lcom/android/server/am/ActivityManagerService;->mPackageManagerInt:Landroid/content/pm/PackageManagerInternal;

    const v12, 0x10000400

    int-to-long v12, v12

    const/16 v18, 0x1

    move-wide/from16 v16, v12

    move-object/from16 v12, p1

    move-object/from16 v13, p2

    move/from16 v19, v14

    move-wide/from16 v14, v16

    move/from16 v16, p3

    move/from16 v17, v19

    invoke-virtual/range {v11 .. v18}, Landroid/content/pm/PackageManagerInternal;->queryIntentReceivers(Landroid/content/Intent;Ljava/lang/String;JIIZ)Ljava/util/List;

    move-result-object v15

    if-eqz v19, :cond_2

    if-eqz v15, :cond_2

    const/4 v11, 0x0

    .line 16942
    :goto_1
    invoke-interface {v15}, Ljava/util/List;->size()I

    move-result v12

    if-ge v11, v12, :cond_2

    .line 16943
    invoke-interface {v15, v11}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Landroid/content/pm/ResolveInfo;

    .line 16944
    iget-object v12, v12, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget v12, v12, Landroid/content/pm/ActivityInfo;->flags:I

    const/high16 v13, 0x20000000

    and-int/2addr v12, v13

    if-eqz v12, :cond_1

    .line 16945
    invoke-interface {v15, v11}, Ljava/util/List;->remove(I)Ljava/lang/Object;

    add-int/lit8 v11, v11, -0x1

    :cond_1
    add-int/2addr v11, v10

    goto :goto_1

    :cond_2
    if-eqz v15, :cond_5

    .line 16952
    invoke-interface {v15}, Ljava/util/List;->size()I

    move-result v11

    sub-int/2addr v11, v10

    move v14, v11

    :goto_2
    if-ltz v14, :cond_5

    .line 16953
    invoke-interface {v15, v14}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v11

    move-object v13, v11

    check-cast v13, Landroid/content/pm/ResolveInfo;

    .line 16954
    iget-object v11, v0, Lcom/android/server/am/ActivityManagerService;->mComponentAliasResolver:Lcom/android/server/am/ComponentAliasResolver;

    const/16 v18, 0x1

    const v16, 0x10000400

    move-object/from16 v12, p1

    move v4, v14

    move-object/from16 v14, p2

    move-object v5, v15

    move/from16 v15, v16

    move/from16 v16, v19

    move/from16 v17, p3

    .line 16955
    invoke-virtual/range {v11 .. v18}, Lcom/android/server/am/ComponentAliasResolver;->resolveReceiver(Landroid/content/Intent;Landroid/content/pm/ResolveInfo;Ljava/lang/String;IIIZ)Lcom/android/server/am/ComponentAliasResolver$Resolution;

    move-result-object v11

    if-nez v11, :cond_3

    .line 16959
    invoke-interface {v5, v4}, Ljava/util/List;->remove(I)Ljava/lang/Object;

    goto :goto_3

    .line 16962
    :cond_3
    invoke-virtual {v11}, Lcom/android/server/am/ComponentAliasResolver$Resolution;->isAlias()Z

    move-result v12

    if-eqz v12, :cond_4

    .line 16963
    invoke-virtual {v11}, Lcom/android/server/am/ComponentAliasResolver$Resolution;->getTarget()Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Landroid/content/pm/ResolveInfo;

    invoke-interface {v5, v4, v11}, Ljava/util/List;->set(ILjava/lang/Object;)Ljava/lang/Object;

    :cond_4
    :goto_3
    add-int/lit8 v14, v4, -0x1

    move-object v15, v5

    goto :goto_2

    :cond_5
    move-object v5, v15

    if-eqz v5, :cond_6

    .line 16967
    invoke-interface {v5}, Ljava/util/List;->size()I

    move-result v4

    if-nez v4, :cond_6

    const/4 v15, 0x0

    goto :goto_4

    :cond_6
    move-object v15, v5

    :goto_4
    if-nez v7, :cond_7

    move-object v7, v15

    goto/16 :goto_8

    :cond_7
    if-eqz v15, :cond_f

    const/high16 v4, 0x40000000    # 2.0f

    if-nez v8, :cond_b

    const/4 v5, 0x0

    .line 16981
    :goto_5
    invoke-interface {v7}, Ljava/util/List;->size()I

    move-result v8

    if-ge v5, v8, :cond_a

    .line 16982
    invoke-interface {v7, v5}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Landroid/content/pm/ResolveInfo;

    .line 16983
    iget-object v11, v8, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget v11, v11, Landroid/content/pm/ActivityInfo;->flags:I

    and-int/2addr v11, v4

    if-eqz v11, :cond_9

    .line 16984
    new-instance v11, Landroid/content/ComponentName;

    iget-object v8, v8, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v12, v8, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;

    iget-object v8, v8, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    invoke-direct {v11, v12, v8}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    if-nez v9, :cond_8

    .line 16987
    new-instance v9, Ljava/util/HashSet;

    invoke-direct {v9}, Ljava/util/HashSet;-><init>()V

    .line 16989
    :cond_8
    invoke-virtual {v9, v11}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    :cond_9
    add-int/lit8 v5, v5, 0x1

    goto :goto_5

    :cond_a
    move v8, v10

    :cond_b
    const/4 v5, 0x0

    .line 16995
    :goto_6
    invoke-interface {v15}, Ljava/util/List;->size()I

    move-result v10

    if-ge v5, v10, :cond_f

    .line 16996
    invoke-interface {v15, v5}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Landroid/content/pm/ResolveInfo;

    .line 16997
    iget-object v11, v10, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget v11, v11, Landroid/content/pm/ActivityInfo;->flags:I

    and-int/2addr v11, v4

    if-eqz v11, :cond_d

    .line 16998
    new-instance v11, Landroid/content/ComponentName;

    iget-object v12, v10, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v13, v12, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;

    iget-object v12, v12, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    invoke-direct {v11, v13, v12}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    if-nez v9, :cond_c

    .line 17001
    new-instance v9, Ljava/util/HashSet;

    invoke-direct {v9}, Ljava/util/HashSet;-><init>()V

    .line 17003
    :cond_c
    invoke-virtual {v9, v11}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z

    move-result v12

    if-nez v12, :cond_e

    .line 17004
    invoke-virtual {v9, v11}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 17005
    invoke-interface {v7, v10}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    goto :goto_7

    .line 17008
    :cond_d
    invoke-interface {v7, v10}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    :cond_e
    :goto_7
    add-int/lit8 v5, v5, 0x1

    goto :goto_6

    :cond_f
    :goto_8
    add-int/lit8 v6, v6, 0x1

    goto/16 :goto_0

    :cond_10
    if-eqz v7, :cond_12

    if-eqz v2, :cond_12

    .line 17014
    invoke-interface {v7}, Ljava/util/List;->size()I

    move-result v0

    sub-int/2addr v0, v10

    :goto_9
    if-ltz v0, :cond_12

    .line 17016
    invoke-interface {v7, v0}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/content/pm/ResolveInfo;

    iget-object v1, v1, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v1, v1, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v1, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 17015
    invoke-static {v1}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v1

    const/16 v3, 0x2710

    if-lt v1, v3, :cond_11

    .line 17018
    invoke-static {v2, v1}, Ljava/util/Arrays;->binarySearch([II)I

    move-result v1

    if-gez v1, :cond_11

    .line 17019
    invoke-interface {v7, v0}, Ljava/util/List;->remove(I)Ljava/lang/Object;

    :cond_11
    add-int/lit8 v0, v0, -0x1

    goto :goto_9

    :cond_12
    return-object v7
.end method

.method public compatibilityInfoForPackage(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/CompatibilityInfo;
    .locals 0

    .line 3590
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {p0, p1}, Lcom/android/server/wm/ActivityTaskManagerInternal;->compatibilityInfoForPackage(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/CompatibilityInfo;

    move-result-object p0

    return-object p0
.end method

.method public crashApplicationWithType(IILjava/lang/String;ILjava/lang/String;ZI)V
    .locals 9

    const/4 v8, 0x0

    move-object v0, p0

    move v1, p1

    move v2, p2

    move-object v3, p3

    move v4, p4

    move-object v5, p5

    move v6, p6

    move/from16 v7, p7

    .line 3883
    invoke-virtual/range {v0 .. v8}, Lcom/android/server/am/ActivityManagerService;->crashApplicationWithTypeWithExtras(IILjava/lang/String;ILjava/lang/String;ZILandroid/os/Bundle;)V

    return-void
.end method

.method public crashApplicationWithTypeWithExtras(IILjava/lang/String;ILjava/lang/String;ZILandroid/os/Bundle;)V
    .locals 11

    move-object v1, p0

    const-string v0, "android.permission.FORCE_STOP_PACKAGES"

    .line 3891
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_0

    .line 3901
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 3902
    :try_start_0
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mAppErrors:Lcom/android/server/am/AppErrors;

    move v3, p1

    move v4, p2

    move-object v5, p3

    move v6, p4

    move-object/from16 v7, p5

    move/from16 v8, p6

    move/from16 v9, p7

    move-object/from16 v10, p8

    invoke-virtual/range {v2 .. v10}, Lcom/android/server/am/AppErrors;->scheduleAppCrashLocked(IILjava/lang/String;ILjava/lang/String;ZILandroid/os/Bundle;)V

    .line 3904
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 3893
    :cond_0
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Permission Denial: crashApplication() from pid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3894
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ", uid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3895
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " requires "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "android.permission.FORCE_STOP_PACKAGES"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "ActivityManager"

    .line 3897
    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 3898
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1
.end method

.method public final demoteSystemServerRenderThread(I)V
    .locals 0

    const/16 p0, 0xa

    .line 9892
    invoke-static {p1, p0}, Landroid/os/Process;->setThreadPriority(II)V

    return-void
.end method

.method public dismissUserSwitchingDialog(I)V
    .locals 0

    .line 23745
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {p0, p1}, Lcom/android/server/am/UserController;->dismissUserSwitchingDialog(I)V

    return-void
.end method

.method public dispatchOomAdjObserver(Ljava/lang/String;)V
    .locals 1

    .line 3755
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjObserverLock:Ljava/lang/Object;

    monitor-enter v0

    .line 3756
    :try_start_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mCurOomAdjObserver:Lcom/android/server/am/ActivityManagerService$OomAdjObserver;

    .line 3757
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-eqz p0, :cond_0

    .line 3760
    invoke-interface {p0, p1}, Lcom/android/server/am/ActivityManagerService$OomAdjObserver;->onOomAdjMessage(Ljava/lang/String;)V

    :cond_0
    return-void

    :catchall_0
    move-exception p0

    .line 3757
    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw p0
.end method

.method public final doDump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;Z)V
    .locals 29
    .annotation build Ldalvik/annotation/optimization/NeverCompile;
    .end annotation

    move-object/from16 v13, p0

    move-object/from16 v12, p1

    move-object/from16 v14, p2

    move-object/from16 v15, p3

    .line 12255
    iget-object v0, v13, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-string v1, "ActivityManager"

    invoke-static {v0, v1, v14}, Lcom/android/internal/util/DumpUtils;->checkDumpAndUsageStatsPermission(Landroid/content/Context;Ljava/lang/String;Ljava/io/PrintWriter;)Z

    move-result v0

    if-nez v0, :cond_0

    return-void

    :cond_0
    const/4 v1, -0x1

    const/4 v11, 0x0

    const/4 v10, 0x0

    move v7, v1

    move/from16 v17, v7

    move v2, v10

    move v8, v2

    move v9, v8

    move/from16 v16, v9

    move/from16 v18, v16

    move/from16 v19, v18

    move/from16 v20, v19

    move/from16 v21, v20

    move-object v6, v11

    .line 12269
    :goto_0
    array-length v0, v15

    const/4 v5, 0x1

    if-ge v2, v0, :cond_13

    .line 12270
    aget-object v0, v15, v2

    if-eqz v0, :cond_13

    .line 12271
    invoke-virtual {v0}, Ljava/lang/String;->length()I

    move-result v3

    if-lez v3, :cond_13

    invoke-virtual {v0, v10}, Ljava/lang/String;->charAt(I)C

    move-result v3

    const/16 v4, 0x2d

    if-eq v3, v4, :cond_1

    goto/16 :goto_2

    :cond_1
    add-int/lit8 v2, v2, 0x1

    const-string v3, "-a"

    .line 12275
    invoke-virtual {v3, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_2

    move/from16 v20, v5

    goto :goto_0

    :cond_2
    const-string v3, "-c"

    .line 12277
    invoke-virtual {v3, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_3

    :goto_1
    move/from16 v18, v5

    goto :goto_0

    :cond_3
    const-string v3, "-v"

    .line 12279
    invoke-virtual {v3, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_4

    move v8, v5

    goto :goto_0

    :cond_4
    const-string v3, "-f"

    .line 12281
    invoke-virtual {v3, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_5

    move v9, v5

    goto :goto_0

    :cond_5
    const-string v3, "-p"

    .line 12283
    invoke-virtual {v3, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_7

    .line 12284
    array-length v0, v15

    if-ge v2, v0, :cond_6

    .line 12285
    aget-object v6, v15, v2

    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    :cond_6
    const-string v0, "Error: -p option requires package argument"

    .line 12288
    invoke-virtual {v14, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    return-void

    :cond_7
    const-string v3, "--checkin"

    .line 12292
    invoke-virtual {v3, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_8

    move/from16 v16, v5

    move/from16 v21, v16

    goto :goto_0

    :cond_8
    const-string v3, "-C"

    .line 12294
    invoke-virtual {v3, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_9

    move/from16 v21, v5

    goto :goto_0

    :cond_9
    const-string v3, "--normal-priority"

    .line 12296
    invoke-virtual {v3, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_a

    move/from16 v19, v5

    goto :goto_0

    :cond_a
    const-string v3, "--user"

    .line 12298
    invoke-virtual {v3, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_d

    .line 12299
    array-length v0, v15

    if-ge v2, v0, :cond_c

    .line 12300
    aget-object v0, v15, v2

    invoke-static {v0}, Landroid/os/UserHandle;->parseUserArg(Ljava/lang/String;)I

    move-result v0

    const/4 v3, -0x2

    if-ne v0, v3, :cond_b

    .line 12302
    iget-object v0, v13, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v0}, Lcom/android/server/am/UserController;->getCurrentUserId()I

    move-result v0

    :cond_b
    move v7, v0

    add-int/lit8 v2, v2, 0x1

    goto/16 :goto_0

    :cond_c
    const-string v0, "Error: --user option requires user id argument"

    .line 12306
    invoke-virtual {v14, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    return-void

    :cond_d
    const-string v3, "-d"

    .line 12309
    invoke-virtual {v3, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_10

    .line 12310
    array-length v0, v15

    if-ge v2, v0, :cond_f

    .line 12311
    aget-object v0, v15, v2

    invoke-static {v0}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v0

    if-ne v0, v1, :cond_e

    const-string v0, "Error: -d cannot be used with INVALID_DISPLAY"

    .line 12313
    invoke-virtual {v14, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    return-void

    :cond_e
    add-int/lit8 v2, v2, 0x1

    move/from16 v17, v0

    goto/16 :goto_1

    :cond_f
    const-string v0, "Error: -d option requires display argument"

    .line 12318
    invoke-virtual {v14, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    return-void

    :cond_10
    const-string v1, "-h"

    .line 12322
    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_11

    .line 12323
    invoke-static {v14, v5}, Lcom/android/server/am/ActivityManagerShellCommand;->dumpHelp(Ljava/io/PrintWriter;Z)V

    return-void

    .line 12327
    :cond_11
    iget-object v1, v13, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    iget-object v1, v1, Lcom/android/server/wm/WindowManagerService;->mExt:Lcom/android/server/wm/WindowManagerServiceExt;

    invoke-virtual {v1, v14, v15, v2, v0}, Lcom/android/server/wm/WindowManagerServiceExt;->executeShellCommand(Ljava/io/PrintWriter;[Ljava/lang/String;ILjava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_12

    return-void

    .line 12331
    :cond_12
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Unknown argument: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "; use -h for help"

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v14, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    return-void

    :cond_13
    :goto_2
    if-eqz v20, :cond_14

    .line 12338
    :try_start_0
    new-instance v0, Landroid/content/Intent;

    invoke-direct {v0}, Landroid/content/Intent;-><init>()V

    const-string v3, "com.samsung.android.da.daagent"

    const-string v4, "com.samsung.android.da.daagent.service.DADebugService"

    .line 12339
    invoke-virtual {v0, v3, v4}, Landroid/content/Intent;->setClassName(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;

    .line 12340
    iget-object v3, v13, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    sget-object v4, Landroid/os/UserHandle;->OWNER:Landroid/os/UserHandle;

    invoke-virtual {v3, v0, v4}, Landroid/content/Context;->startServiceAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)Landroid/content/ComponentName;
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_3

    :catch_0
    move-exception v0

    .line 12342
    invoke-virtual {v0}, Ljava/lang/Exception;->printStackTrace()V

    :cond_14
    :goto_3
    if-eqz v20, :cond_15

    .line 12349
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v3

    :try_start_1
    const-string v0, "content://com.samsung.knox.securefolder.externalprovider"

    .line 12352
    invoke-static {v0}, Landroid/net/Uri;->parse(Ljava/lang/String;)Landroid/net/Uri;

    move-result-object v0

    .line 12353
    iget-object v1, v13, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v1

    const-string v10, "dumpStart"

    invoke-virtual {v1, v0, v10, v11, v11}, Landroid/content/ContentResolver;->call(Landroid/net/Uri;Ljava/lang/String;Ljava/lang/String;Landroid/os/Bundle;)Landroid/os/Bundle;
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_4

    :catchall_0
    move-exception v0

    goto :goto_5

    :catch_1
    move-exception v0

    :try_start_2
    const-string v1, "ActivityManager"

    const-string v10, "No process found for: com.samsung.knox.securefolder"

    .line 12355
    invoke-static {v1, v10}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 12356
    invoke-virtual {v0}, Ljava/lang/Exception;->printStackTrace()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 12358
    :goto_4
    invoke-static {v3, v4}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_6

    :goto_5
    invoke-static {v3, v4}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 12359
    throw v0

    :cond_15
    :goto_6
    if-eqz v20, :cond_16

    .line 12366
    :try_start_3
    new-instance v0, Landroid/content/Intent;

    invoke-direct {v0}, Landroid/content/Intent;-><init>()V

    const-string v1, "com.samsung.klmsagent"

    const-string v3, "com.samsung.klmsagent.service.KLMDebugService"

    .line 12367
    invoke-virtual {v0, v1, v3}, Landroid/content/Intent;->setClassName(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;

    .line 12368
    iget-object v1, v13, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    sget-object v3, Landroid/os/UserHandle;->OWNER:Landroid/os/UserHandle;

    invoke-virtual {v1, v0, v3}, Landroid/content/Context;->startServiceAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)Landroid/content/ComponentName;
    :try_end_3
    .catch Ljava/lang/Exception; {:try_start_3 .. :try_end_3} :catch_2

    goto :goto_7

    :catch_2
    move-exception v0

    .line 12370
    invoke-virtual {v0}, Ljava/lang/Exception;->printStackTrace()V

    .line 12375
    :cond_16
    :goto_7
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v24

    const/4 v0, 0x2

    if-eqz p4, :cond_29

    .line 12378
    new-instance v1, Landroid/util/proto/ProtoOutputStream;

    invoke-direct {v1, v12}, Landroid/util/proto/ProtoOutputStream;-><init>(Ljava/io/FileDescriptor;)V

    .line 12379
    array-length v3, v15

    if-ge v2, v3, :cond_17

    aget-object v3, v15, v2

    goto :goto_8

    :cond_17
    const-string v3, ""

    :goto_8
    add-int/2addr v2, v5

    const-string v4, "activities"

    .line 12382
    invoke-virtual {v4, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_27

    const-string v4, "a"

    invoke-virtual {v4, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_18

    goto/16 :goto_f

    :cond_18
    const-string v4, "broadcasts"

    .line 12385
    invoke-virtual {v4, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_26

    const-string v4, "b"

    invoke-virtual {v4, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_19

    goto/16 :goto_e

    :cond_19
    const-string/jumbo v4, "provider"

    .line 12390
    invoke-virtual {v4, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_1c

    .line 12393
    array-length v3, v15

    if-lt v2, v3, :cond_1a

    .line 12395
    sget-object v0, Lcom/android/server/am/ActivityManagerService;->EMPTY_STRING_ARRAY:[Ljava/lang/String;

    goto :goto_9

    .line 12397
    :cond_1a
    aget-object v11, v15, v2

    add-int/2addr v2, v5

    .line 12399
    array-length v3, v15

    sub-int/2addr v3, v2

    new-array v3, v3, [Ljava/lang/String;

    .line 12400
    array-length v4, v15

    if-le v4, v0, :cond_1b

    array-length v0, v15

    sub-int/2addr v0, v2

    const/4 v4, 0x0

    invoke-static {v15, v2, v3, v4, v0}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    :cond_1b
    move-object v0, v3

    .line 12403
    :goto_9
    iget-object v2, v13, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    invoke-virtual {v2, v12, v14, v11, v0}, Lcom/android/server/am/ContentProviderHelper;->dumpProviderProto(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_28

    .line 12404
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "No providers match: "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v14, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    const-string v0, "Use -h for help."

    .line 12405
    invoke-virtual {v14, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_10

    :cond_1c
    const-string/jumbo v0, "service"

    .line 12407
    invoke-virtual {v0, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    const-wide v7, 0x10b00000001L

    if-eqz v0, :cond_1d

    .line 12409
    iget-object v0, v13, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, v1, v7, v8}, Lcom/android/server/am/ActiveServices;->dumpDebug(Landroid/util/proto/ProtoOutputStream;J)V

    goto/16 :goto_10

    :cond_1d
    const-string/jumbo v0, "processes"

    .line 12410
    invoke-virtual {v0, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_24

    const-string/jumbo v0, "p"

    invoke-virtual {v0, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1e

    goto/16 :goto_d

    :cond_1e
    const-string v0, "app-restrictions"

    .line 12421
    invoke-virtual {v0, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_23

    const/4 v0, 0x0

    .line 12424
    :goto_a
    array-length v2, v15

    if-ge v0, v2, :cond_21

    const-string v2, "--uid"

    .line 12425
    aget-object v3, v15, v0

    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_20

    add-int/2addr v0, v5

    .line 12426
    array-length v2, v15

    if-ge v0, v2, :cond_1f

    .line 12428
    :try_start_4
    aget-object v0, v15, v0

    invoke-static {v0}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v0
    :try_end_4
    .catch Ljava/lang/NumberFormatException; {:try_start_4 .. :try_end_4} :catch_3

    goto :goto_b

    :catch_3
    :cond_1f
    move v10, v5

    const/4 v0, -0x1

    goto :goto_c

    :cond_20
    add-int/lit8 v0, v0, 0x1

    goto :goto_a

    :cond_21
    const/4 v0, -0x1

    :goto_b
    const/4 v10, 0x0

    :goto_c
    if-eqz v10, :cond_22

    const-string v0, "Invalid --uid argument"

    .line 12439
    invoke-virtual {v14, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    const-string v0, "Use -h for help."

    .line 12440
    invoke-virtual {v14, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_10

    .line 12442
    :cond_22
    invoke-virtual {v13, v1, v0}, Lcom/android/server/am/ActivityManagerService;->dumpAppRestrictionController(Landroid/util/proto/ProtoOutputStream;I)V

    goto/16 :goto_10

    .line 12446
    :cond_23
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 12447
    :try_start_5
    invoke-virtual {v1, v7, v8}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    move-result-wide v2

    .line 12448
    iget-object v0, v13, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {v0, v1}, Lcom/android/server/wm/ActivityTaskManagerInternal;->writeActivitiesToProto(Landroid/util/proto/ProtoOutputStream;)V

    .line 12449
    invoke-virtual {v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    const-wide v2, 0x10b00000002L

    .line 12451
    invoke-virtual {v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    move-result-wide v2

    .line 12452
    invoke-virtual {v13, v1}, Lcom/android/server/am/ActivityManagerService;->writeBroadcastsToProtoLocked(Landroid/util/proto/ProtoOutputStream;)V

    .line 12453
    invoke-virtual {v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    const-wide v2, 0x10b00000003L

    .line 12455
    invoke-virtual {v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    move-result-wide v2

    .line 12456
    iget-object v0, v13, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, v1, v7, v8}, Lcom/android/server/am/ActiveServices;->dumpDebug(Landroid/util/proto/ProtoOutputStream;J)V

    .line 12458
    invoke-virtual {v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    const-wide v2, 0x10b00000004L

    .line 12460
    invoke-virtual {v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    move-result-wide v2

    .line 12461
    iget-object v4, v13, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v4
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_2

    .line 12462
    :try_start_6
    iget-object v0, v13, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v0, v1, v6}, Lcom/android/server/am/ProcessList;->writeProcessesToProtoLSP(Landroid/util/proto/ProtoOutputStream;Ljava/lang/String;)V

    .line 12463
    monitor-exit v4
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    :try_start_7
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 12464
    invoke-virtual {v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 12465
    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_2

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    goto :goto_10

    :catchall_1
    move-exception v0

    .line 12463
    :try_start_8
    monitor-exit v4
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_1

    :try_start_9
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v0

    :catchall_2
    move-exception v0

    .line 12465
    monitor-exit p0
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_2

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 12411
    :cond_24
    :goto_d
    array-length v0, v15

    if-ge v2, v0, :cond_25

    .line 12412
    aget-object v6, v15, v2

    .line 12416
    :cond_25
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 12417
    :try_start_a
    iget-object v2, v13, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v2
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_4

    .line 12418
    :try_start_b
    iget-object v0, v13, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v0, v1, v6}, Lcom/android/server/am/ProcessList;->writeProcessesToProtoLSP(Landroid/util/proto/ProtoOutputStream;Ljava/lang/String;)V

    .line 12419
    monitor-exit v2
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_3

    :try_start_c
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 12420
    monitor-exit p0
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_4

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    goto :goto_10

    :catchall_3
    move-exception v0

    .line 12419
    :try_start_d
    monitor-exit v2
    :try_end_d
    .catchall {:try_start_d .. :try_end_d} :catchall_3

    :try_start_e
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v0

    :catchall_4
    move-exception v0

    .line 12420
    monitor-exit p0
    :try_end_e
    .catchall {:try_start_e .. :try_end_e} :catchall_4

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 12387
    :cond_26
    :goto_e
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 12388
    :try_start_f
    invoke-virtual {v13, v1}, Lcom/android/server/am/ActivityManagerService;->writeBroadcastsToProtoLocked(Landroid/util/proto/ProtoOutputStream;)V

    .line 12389
    monitor-exit p0
    :try_end_f
    .catchall {:try_start_f .. :try_end_f} :catchall_5

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    goto :goto_10

    :catchall_5
    move-exception v0

    :try_start_10
    monitor-exit p0
    :try_end_10
    .catchall {:try_start_10 .. :try_end_10} :catchall_5

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 12384
    :cond_27
    :goto_f
    iget-object v0, v13, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {v0, v1}, Lcom/android/server/wm/ActivityTaskManagerInternal;->writeActivitiesToProto(Landroid/util/proto/ProtoOutputStream;)V

    .line 12467
    :cond_28
    :goto_10
    invoke-virtual {v1}, Landroid/util/proto/ProtoOutputStream;->flush()V

    .line 12468
    invoke-static/range {v24 .. v25}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return-void

    .line 12472
    :cond_29
    invoke-virtual {v13, v6}, Lcom/android/server/am/ActivityManagerService;->getAppId(Ljava/lang/String;)I

    move-result v26

    .line 12475
    array-length v1, v15

    if-ge v2, v1, :cond_64

    .line 12476
    aget-object v10, v15, v2

    add-int/lit8 v4, v2, 0x1

    const-string v1, "activities"

    .line 12478
    invoke-virtual {v1, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_61

    const-string v1, "a"

    invoke-virtual {v1, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_61

    const-string/jumbo v1, "lastanr"

    .line 12479
    invoke-virtual {v1, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_61

    const-string/jumbo v1, "lastanr-traces"

    invoke-virtual {v1, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_61

    const-string/jumbo v1, "starter"

    .line 12480
    invoke-virtual {v1, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_61

    const-string v1, "containers"

    invoke-virtual {v1, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_61

    const-string/jumbo v1, "recents"

    .line 12481
    invoke-virtual {v1, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_61

    const-string/jumbo v1, "r"

    invoke-virtual {v1, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_61

    const-string/jumbo v1, "top-resumed"

    .line 12482
    invoke-virtual {v1, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_61

    const-string/jumbo v1, "visible"

    .line 12483
    invoke-virtual {v1, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_61

    .line 12484
    invoke-static {v10}, Lcom/android/server/wm/ActivityTaskManagerService;->isMultiTaskingDumpsysCommand(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_2a

    goto/16 :goto_26

    :cond_2a
    const-string v1, "binder-proxies"

    .line 12487
    invoke-virtual {v1, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_2c

    .line 12488
    array-length v0, v15

    if-lt v4, v0, :cond_2b

    const/4 v1, 0x0

    .line 12489
    invoke-virtual {v13, v14, v1}, Lcom/android/server/am/ActivityManagerService;->dumpBinderProxies(Ljava/io/PrintWriter;I)V

    move/from16 v22, v1

    move v0, v4

    move-object/from16 v27, v6

    goto/16 :goto_27

    .line 12491
    :cond_2b
    aget-object v0, v15, v4

    add-int/lit8 v4, v4, 0x1

    .line 12494
    invoke-static {}, Ljava/lang/System;->gc()V

    .line 12495
    invoke-static {}, Ljava/lang/System;->runFinalization()V

    .line 12496
    invoke-static {}, Ljava/lang/System;->gc()V

    .line 12497
    invoke-static {v0}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v0

    invoke-static {v0}, Lcom/android/internal/os/BinderInternal;->nGetBinderProxyCount(I)I

    move-result v0

    invoke-virtual {v14, v0}, Ljava/io/PrintWriter;->println(I)V

    :goto_11
    const/4 v10, 0x0

    goto/16 :goto_28

    :cond_2c
    const-string v1, "allowed-associations"

    .line 12499
    invoke-virtual {v1, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_2e

    .line 12500
    array-length v0, v15

    if-ge v4, v0, :cond_2d

    .line 12501
    aget-object v6, v15, v4

    add-int/lit8 v4, v4, 0x1

    :cond_2d
    move v0, v4

    move-object v8, v6

    .line 12504
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    const/4 v6, 0x1

    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object/from16 v4, p3

    move v5, v0

    move-object v7, v8

    .line 12505
    :try_start_11
    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpAllowedAssociationsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 12506
    monitor-exit p0
    :try_end_11
    .catchall {:try_start_11 .. :try_end_11} :catchall_6

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    :goto_12
    move v4, v0

    move-object v6, v8

    goto :goto_11

    :catchall_6
    move-exception v0

    :try_start_12
    monitor-exit p0
    :try_end_12
    .catchall {:try_start_12 .. :try_end_12} :catchall_6

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :cond_2e
    const-string v1, "broadcasts"

    .line 12507
    invoke-virtual {v1, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_5f

    const-string v1, "b"

    invoke-virtual {v1, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_2f

    goto/16 :goto_25

    :cond_2f
    const-string v1, "broadcast-stats"

    .line 12515
    invoke-virtual {v1, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_32

    .line 12516
    array-length v0, v15

    if-ge v4, v0, :cond_30

    .line 12517
    aget-object v6, v15, v4

    add-int/lit8 v4, v4, 0x1

    :cond_30
    move v0, v4

    move-object v8, v6

    .line 12520
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    if-eqz v21, :cond_31

    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object/from16 v4, p3

    move v5, v0

    move/from16 v6, v16

    move-object v7, v8

    .line 12522
    :try_start_13
    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpBroadcastStatsCheckinLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    goto :goto_13

    :cond_31
    const/4 v6, 0x1

    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object/from16 v4, p3

    move v5, v0

    move-object v7, v8

    .line 12525
    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpBroadcastStatsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 12527
    :goto_13
    monitor-exit p0
    :try_end_13
    .catchall {:try_start_13 .. :try_end_13} :catchall_7

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    goto :goto_12

    :catchall_7
    move-exception v0

    :try_start_14
    monitor-exit p0
    :try_end_14
    .catchall {:try_start_14 .. :try_end_14} :catchall_7

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :cond_32
    const-string v1, "intents"

    .line 12528
    invoke-virtual {v1, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_5d

    const-string v1, "i"

    invoke-virtual {v1, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_33

    goto/16 :goto_23

    :cond_33
    const-string/jumbo v1, "processes"

    .line 12534
    invoke-virtual {v1, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_5b

    const-string/jumbo v1, "p"

    invoke-virtual {v1, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_34

    goto/16 :goto_22

    :cond_34
    const-string/jumbo v1, "oom"

    .line 12545
    invoke-virtual {v1, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_5a

    const-string/jumbo v1, "o"

    invoke-virtual {v1, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_35

    goto/16 :goto_21

    :cond_35
    const-string/jumbo v1, "lmk"

    .line 12549
    invoke-virtual {v1, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_36

    .line 12550
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 12551
    :try_start_15
    invoke-virtual {v13, v14}, Lcom/android/server/am/ActivityManagerService;->dumpLmkLocked(Ljava/io/PrintWriter;)Z

    .line 12552
    monitor-exit p0
    :try_end_15
    .catchall {:try_start_15 .. :try_end_15} :catchall_8

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    :goto_14
    move v0, v4

    move-object/from16 v27, v6

    const/16 v22, 0x0

    goto/16 :goto_27

    :catchall_8
    move-exception v0

    :try_start_16
    monitor-exit p0
    :try_end_16
    .catchall {:try_start_16 .. :try_end_16} :catchall_8

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :cond_36
    const-string/jumbo v1, "lru"

    .line 12553
    invoke-virtual {v1, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_37

    .line 12554
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 12555
    :try_start_17
    iget-object v0, v13, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v0, v14, v6, v11}, Lcom/android/server/am/ProcessList;->dumpLruLocked(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;)Z

    .line 12556
    monitor-exit p0
    :try_end_17
    .catchall {:try_start_17 .. :try_end_17} :catchall_9

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    goto :goto_14

    :catchall_9
    move-exception v0

    :try_start_18
    monitor-exit p0
    :try_end_18
    .catchall {:try_start_18 .. :try_end_18} :catchall_9

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :cond_37
    const-string/jumbo v1, "permissions"

    .line 12557
    invoke-virtual {v1, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_59

    const-string/jumbo v1, "perm"

    invoke-virtual {v1, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_38

    goto/16 :goto_20

    :cond_38
    const-string/jumbo v1, "provider"

    .line 12559
    invoke-virtual {v1, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_3c

    .line 12562
    array-length v1, v15

    if-lt v4, v1, :cond_39

    .line 12564
    sget-object v0, Lcom/android/server/am/ActivityManagerService;->EMPTY_STRING_ARRAY:[Ljava/lang/String;

    move-object v5, v0

    goto :goto_15

    .line 12566
    :cond_39
    aget-object v11, v15, v4

    add-int/lit8 v4, v4, 0x1

    .line 12568
    array-length v1, v15

    sub-int/2addr v1, v4

    new-array v1, v1, [Ljava/lang/String;

    .line 12569
    array-length v2, v15

    if-le v2, v0, :cond_3a

    array-length v0, v15

    sub-int/2addr v0, v4

    const/4 v2, 0x0

    invoke-static {v15, v4, v1, v2, v0}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    :cond_3a
    move-object v5, v1

    :goto_15
    move v0, v4

    .line 12571
    iget-object v1, v13, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    const/4 v7, 0x0

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object v4, v11

    move-object/from16 v27, v6

    move v6, v7

    move/from16 v7, v20

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ContentProviderHelper;->dumpProvider(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZ)Z

    move-result v1

    if-nez v1, :cond_3b

    .line 12572
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "No providers match: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v14, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    const-string v1, "Use -h for help."

    .line 12573
    invoke-virtual {v14, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    :cond_3b
    move v4, v0

    :goto_16
    move-object/from16 v6, v27

    goto/16 :goto_11

    :cond_3c
    move-object/from16 v27, v6

    const-string/jumbo v1, "providers"

    .line 12575
    invoke-virtual {v1, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_58

    const-string/jumbo v1, "prov"

    invoke-virtual {v1, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_3d

    goto/16 :goto_1f

    :cond_3d
    const-string/jumbo v1, "service"

    .line 12579
    invoke-virtual {v1, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_42

    .line 12582
    array-length v1, v15

    if-lt v4, v1, :cond_3e

    .line 12584
    sget-object v0, Lcom/android/server/am/ActivityManagerService;->EMPTY_STRING_ARRAY:[Ljava/lang/String;

    move-object v6, v0

    move v9, v4

    move-object v0, v11

    goto :goto_17

    .line 12586
    :cond_3e
    aget-object v1, v15, v4

    add-int/lit8 v4, v4, 0x1

    .line 12588
    array-length v2, v15

    sub-int/2addr v2, v4

    new-array v2, v2, [Ljava/lang/String;

    .line 12589
    array-length v3, v15

    if-le v3, v0, :cond_3f

    array-length v0, v15

    sub-int/2addr v0, v4

    const/4 v3, 0x0

    invoke-static {v15, v4, v2, v3, v0}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    :cond_3f
    move-object v0, v1

    move-object v6, v2

    move v9, v4

    :goto_17
    const/4 v1, -0x1

    if-ne v7, v1, :cond_40

    move-object v5, v11

    goto :goto_18

    .line 12592
    :cond_40
    filled-new-array {v7}, [I

    move-result-object v1

    move-object v5, v1

    .line 12593
    :goto_18
    iget-object v1, v13, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    const/4 v7, 0x0

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object v4, v0

    move/from16 v8, v20

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActiveServices;->dumpService(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[I[Ljava/lang/String;IZ)Z

    move-result v1

    if-nez v1, :cond_41

    .line 12594
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "No services match: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v14, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    const-string v0, "Use -h for help."

    .line 12595
    invoke-virtual {v14, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    :cond_41
    move v4, v9

    goto :goto_16

    :cond_42
    const-string/jumbo v1, "package"

    .line 12597
    invoke-virtual {v1, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_45

    .line 12599
    array-length v1, v15

    if-lt v4, v1, :cond_43

    const-string/jumbo v0, "package: no package name specified"

    .line 12600
    invoke-virtual {v14, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    const-string v0, "Use -h for help."

    .line 12601
    invoke-virtual {v14, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    move v10, v4

    move-object/from16 v6, v27

    const/4 v5, 0x0

    goto :goto_1a

    .line 12603
    :cond_43
    aget-object v6, v15, v4

    add-int/lit8 v4, v4, 0x1

    .line 12605
    array-length v1, v15

    sub-int/2addr v1, v4

    new-array v1, v1, [Ljava/lang/String;

    .line 12606
    array-length v2, v15

    if-le v2, v0, :cond_44

    array-length v0, v15

    sub-int/2addr v0, v4

    const/4 v3, 0x0

    invoke-static {v15, v4, v1, v3, v0}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    goto :goto_19

    :cond_44
    const/4 v3, 0x0

    :goto_19
    move-object v15, v1

    move v10, v3

    :goto_1a
    move v4, v10

    move v10, v5

    goto/16 :goto_28

    :cond_45
    const/4 v3, 0x0

    const-string v0, "associations"

    .line 12612
    invoke-virtual {v0, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_57

    const-string v0, "as"

    invoke-virtual {v0, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_46

    goto/16 :goto_1e

    :cond_46
    const-string/jumbo v0, "settings"

    .line 12616
    invoke-virtual {v0, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_47

    .line 12617
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 12618
    :try_start_19
    iget-object v0, v13, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    invoke-virtual {v0, v14}, Lcom/android/server/am/ActivityManagerConstants;->dump(Ljava/io/PrintWriter;)V

    .line 12619
    monitor-exit p0
    :try_end_19
    .catchall {:try_start_19 .. :try_end_19} :catchall_b

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 12620
    iget-object v1, v13, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v1

    .line 12621
    :try_start_1a
    iget-object v0, v13, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    invoke-virtual {v0, v14}, Lcom/android/server/am/OomAdjuster;->dumpCachedAppOptimizerSettings(Ljava/io/PrintWriter;)V

    .line 12622
    iget-object v0, v13, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    invoke-virtual {v0, v14}, Lcom/android/server/am/OomAdjuster;->dumpCacheOomRankerSettings(Ljava/io/PrintWriter;)V

    .line 12623
    monitor-exit v1
    :try_end_1a
    .catchall {:try_start_1a .. :try_end_1a} :catchall_a

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    goto :goto_1b

    :catchall_a
    move-exception v0

    :try_start_1b
    monitor-exit v1
    :try_end_1b
    .catchall {:try_start_1b .. :try_end_1b} :catchall_a

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v0

    :catchall_b
    move-exception v0

    .line 12619
    :try_start_1c
    monitor-exit p0
    :try_end_1c
    .catchall {:try_start_1c .. :try_end_1c} :catchall_b

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :cond_47
    const-string/jumbo v0, "services"

    .line 12624
    invoke-virtual {v0, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_55

    const-string/jumbo v0, "s"

    invoke-virtual {v0, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_48

    goto/16 :goto_1d

    :cond_48
    const-string/jumbo v0, "locks"

    .line 12638
    invoke-virtual {v0, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_49

    .line 12639
    invoke-static/range {p1 .. p3}, Lcom/android/server/LockGuard;->dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V

    :goto_1b
    move/from16 v22, v3

    move v0, v4

    goto/16 :goto_27

    :cond_49
    const-string/jumbo v0, "users"

    .line 12640
    invoke-virtual {v0, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_4a

    .line 12641
    invoke-virtual {v13, v14}, Lcom/android/server/am/ActivityManagerService;->dumpUsers(Ljava/io/PrintWriter;)V

    goto :goto_1b

    :cond_4a
    const-string v0, "exit-info"

    .line 12642
    invoke-virtual {v0, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_4c

    .line 12643
    array-length v0, v15

    if-ge v4, v0, :cond_4b

    .line 12644
    aget-object v6, v15, v4

    add-int/lit8 v4, v4, 0x1

    goto :goto_1c

    :cond_4b
    move-object/from16 v6, v27

    .line 12647
    :goto_1c
    iget-object v0, v13, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v0, v0, Lcom/android/server/am/ProcessList;->mAppExitInfoTracker:Lcom/android/server/am/AppExitInfoTracker;

    invoke-virtual {v0, v14, v6}, Lcom/android/server/am/AppExitInfoTracker;->dumpHistoryProcessExitInfo(Ljava/io/PrintWriter;Ljava/lang/String;)V

    move v10, v3

    goto/16 :goto_28

    :cond_4c
    const-string v0, "component-alias"

    .line 12648
    invoke-virtual {v0, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_4d

    .line 12649
    iget-object v0, v13, Lcom/android/server/am/ActivityManagerService;->mComponentAliasResolver:Lcom/android/server/am/ComponentAliasResolver;

    invoke-virtual {v0, v14}, Lcom/android/server/am/ComponentAliasResolver;->dump(Ljava/io/PrintWriter;)V

    goto :goto_1b

    :cond_4d
    const-string/jumbo v0, "mars"

    .line 12651
    invoke-virtual {v0, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_4e

    .line 12652
    invoke-static {}, Lcom/android/server/am/MARsPolicyManager;->getInstance()Lcom/android/server/am/MARsPolicyManager;

    move-result-object v0

    invoke-virtual {v0, v12, v14, v15}, Lcom/android/server/am/MARsPolicyManager;->dumpMARsCommand(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V

    goto :goto_1b

    :cond_4e
    const-string v0, "freecess"

    .line 12653
    invoke-virtual {v0, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_4f

    .line 12654
    invoke-static {}, Lcom/android/server/am/FreecessController;->getInstance()Lcom/android/server/am/FreecessController;

    move-result-object v0

    invoke-virtual {v0, v12, v14, v15}, Lcom/android/server/am/FreecessController;->dumpFreecessCommand(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V

    goto :goto_1b

    :cond_4f
    const-string/jumbo v0, "lmkdset"

    .line 12657
    invoke-virtual {v0, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_50

    iget-object v0, v13, Lcom/android/server/am/ActivityManagerService;->mDynamicHiddenApp:Lcom/android/server/am/DynamicHiddenApp;

    if-eqz v0, :cond_50

    .line 12658
    invoke-virtual {v0, v14}, Lcom/android/server/am/DynamicHiddenApp;->dumpLMKDParameter(Ljava/io/PrintWriter;)V

    goto :goto_1b

    :cond_50
    const-string v0, "genai_reclaim_mode"

    .line 12661
    invoke-virtual {v0, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_51

    iget-object v0, v13, Lcom/android/server/am/ActivityManagerService;->mDynamicHiddenApp:Lcom/android/server/am/DynamicHiddenApp;

    if-eqz v0, :cond_51

    .line 12662
    invoke-virtual {v0, v14, v15}, Lcom/android/server/am/DynamicHiddenApp;->dumpGenAIReclaimMode(Ljava/io/PrintWriter;[Ljava/lang/String;)V

    goto :goto_1b

    :cond_51
    const-string/jumbo v0, "pageboost"

    .line 12666
    invoke-virtual {v0, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_52

    .line 12667
    invoke-static/range {p2 .. p3}, Lcom/android/server/am/Pageboost;->dumpInfo(Ljava/io/PrintWriter;[Ljava/lang/String;)V

    goto/16 :goto_1b

    .line 12671
    :cond_52
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->isPmmEnabled()Z

    move-result v0

    if-eqz v0, :cond_54

    const-string/jumbo v0, "kpm"

    invoke-virtual {v0, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_54

    .line 12672
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 12673
    :try_start_1d
    iget-object v0, v13, Lcom/android/server/am/ActivityManagerService;->mKillPolicyManager:Lcom/android/server/am/KillPolicyManager;

    if-eqz v0, :cond_53

    .line 12674
    invoke-virtual {v0, v14, v15}, Lcom/android/server/am/KillPolicyManager;->dump(Ljava/io/PrintWriter;[Ljava/lang/String;)V

    .line 12675
    :cond_53
    monitor-exit p0
    :try_end_1d
    .catchall {:try_start_1d .. :try_end_1d} :catchall_c

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    goto/16 :goto_1b

    :catchall_c
    move-exception v0

    :try_start_1e
    monitor-exit p0
    :try_end_1e
    .catchall {:try_start_1e .. :try_end_1e} :catchall_c

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 12679
    :cond_54
    iget-object v1, v13, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    move-object/from16 v2, p1

    move/from16 v22, v3

    move-object/from16 v3, p2

    move v0, v4

    move-object v4, v10

    move v6, v5

    move-object/from16 v5, p3

    move v12, v6

    move v6, v0

    move/from16 v23, v7

    move/from16 v7, v20

    move-object/from16 v28, v10

    move/from16 v10, v17

    move/from16 v11, v23

    invoke-virtual/range {v1 .. v11}, Lcom/android/server/wm/ActivityTaskManagerInternal;->dumpActivity(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZZZII)Z

    move-result v1

    if-nez v1, :cond_62

    .line 12681
    new-instance v1, Lcom/android/server/am/ActivityManagerShellCommand;

    invoke-direct {v1, v13, v12}, Lcom/android/server/am/ActivityManagerShellCommand;-><init>(Lcom/android/server/am/ActivityManagerService;Z)V

    const/4 v3, 0x0

    const/4 v5, 0x0

    const/4 v7, 0x0

    .line 12682
    new-instance v8, Landroid/os/ResultReceiver;

    const/4 v2, 0x0

    invoke-direct {v8, v2}, Landroid/os/ResultReceiver;-><init>(Landroid/os/Handler;)V

    move-object/from16 v2, p0

    move-object/from16 v4, p1

    move-object/from16 v6, p3

    invoke-virtual/range {v1 .. v8}, Landroid/os/ShellCommand;->exec(Landroid/os/Binder;Ljava/io/FileDescriptor;Ljava/io/FileDescriptor;Ljava/io/FileDescriptor;[Ljava/lang/String;Landroid/os/ShellCallback;Landroid/os/ResultReceiver;)I

    move-result v1

    if-gez v1, :cond_62

    .line 12685
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Bad activity command, or no activities match: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-object/from16 v2, v28

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v14, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    const-string v1, "Use -h for help."

    .line 12686
    invoke-virtual {v14, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_27

    :cond_55
    :goto_1d
    move/from16 v22, v3

    move v0, v4

    if-eqz v18, :cond_56

    .line 12627
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 12628
    :try_start_1f
    iget-object v1, v13, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    const/4 v6, 0x1

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object/from16 v4, p3

    move v5, v0

    move-object/from16 v7, v27

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActiveServices;->newServiceDumperLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)Lcom/android/server/am/ActiveServices$ServiceDumper;

    move-result-object v1

    .line 12630
    monitor-exit p0
    :try_end_1f
    .catchall {:try_start_1f .. :try_end_1f} :catchall_d

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 12631
    invoke-virtual {v1}, Lcom/android/server/am/ActiveServices$ServiceDumper;->dumpWithClient()V

    goto/16 :goto_27

    :catchall_d
    move-exception v0

    .line 12630
    :try_start_20
    monitor-exit p0
    :try_end_20
    .catchall {:try_start_20 .. :try_end_20} :catchall_d

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    .line 12633
    :cond_56
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 12634
    :try_start_21
    iget-object v1, v13, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    const/4 v6, 0x1

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object/from16 v4, p3

    move v5, v0

    move-object/from16 v7, v27

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActiveServices;->newServiceDumperLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)Lcom/android/server/am/ActiveServices$ServiceDumper;

    move-result-object v1

    .line 12635
    invoke-virtual {v1}, Lcom/android/server/am/ActiveServices$ServiceDumper;->dumpLocked()V

    .line 12636
    monitor-exit p0
    :try_end_21
    .catchall {:try_start_21 .. :try_end_21} :catchall_e

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    goto/16 :goto_27

    :catchall_e
    move-exception v0

    :try_start_22
    monitor-exit p0
    :try_end_22
    .catchall {:try_start_22 .. :try_end_22} :catchall_e

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :cond_57
    :goto_1e
    move/from16 v22, v3

    move v0, v4

    .line 12613
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    const/4 v6, 0x1

    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object/from16 v4, p3

    move v5, v0

    move/from16 v7, v18

    move-object/from16 v8, v27

    .line 12614
    :try_start_23
    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->dumpAssociationsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V

    .line 12615
    monitor-exit p0
    :try_end_23
    .catchall {:try_start_23 .. :try_end_23} :catchall_f

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    goto/16 :goto_27

    :catchall_f
    move-exception v0

    :try_start_24
    monitor-exit p0
    :try_end_24
    .catchall {:try_start_24 .. :try_end_24} :catchall_f

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :cond_58
    :goto_1f
    move v0, v4

    const/16 v22, 0x0

    .line 12576
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 12577
    :try_start_25
    iget-object v1, v13, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    const/4 v6, 0x1

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object/from16 v4, p3

    move v5, v0

    move-object/from16 v7, v27

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ContentProviderHelper;->dumpProvidersLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 12578
    monitor-exit p0
    :try_end_25
    .catchall {:try_start_25 .. :try_end_25} :catchall_10

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    goto/16 :goto_27

    :catchall_10
    move-exception v0

    :try_start_26
    monitor-exit p0
    :try_end_26
    .catchall {:try_start_26 .. :try_end_26} :catchall_10

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :cond_59
    :goto_20
    move v0, v4

    move-object/from16 v27, v6

    const/16 v22, 0x0

    const/4 v6, 0x1

    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object/from16 v4, p3

    move v5, v0

    move-object/from16 v7, v27

    .line 12558
    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpPermissions(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    goto/16 :goto_27

    :cond_5a
    :goto_21
    move v0, v4

    move-object/from16 v27, v6

    const/16 v22, 0x0

    .line 12546
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 12547
    :try_start_27
    iget-object v1, v13, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/4 v4, 0x0

    const/4 v7, 0x1

    const/4 v9, 0x1

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object/from16 v5, p3

    move v6, v0

    move-object/from16 v8, v27

    invoke-virtual/range {v1 .. v9}, Lcom/android/server/am/ProcessList;->dumpOomLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Z[Ljava/lang/String;IZLjava/lang/String;Z)Z

    .line 12548
    monitor-exit p0
    :try_end_27
    .catchall {:try_start_27 .. :try_end_27} :catchall_11

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    goto/16 :goto_27

    :catchall_11
    move-exception v0

    :try_start_28
    monitor-exit p0
    :try_end_28
    .catchall {:try_start_28 .. :try_end_28} :catchall_11

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :cond_5b
    :goto_22
    move v0, v4

    move-object/from16 v27, v6

    const/16 v22, 0x0

    .line 12535
    array-length v1, v15

    if-ge v0, v1, :cond_5c

    .line 12536
    aget-object v6, v15, v0

    add-int/lit8 v4, v0, 0x1

    move v0, v4

    move-object/from16 v27, v6

    .line 12539
    :cond_5c
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 12540
    :try_start_29
    iget-object v9, v13, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v9
    :try_end_29
    .catchall {:try_start_29 .. :try_end_29} :catchall_13

    .line 12541
    :try_start_2a
    iget-object v1, v13, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/4 v6, 0x1

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object/from16 v4, p3

    move v5, v0

    move-object/from16 v7, v27

    move/from16 v8, v26

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ProcessList;->dumpProcessesLSP(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;I)V

    .line 12543
    monitor-exit v9
    :try_end_2a
    .catchall {:try_start_2a .. :try_end_2a} :catchall_12

    :try_start_2b
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 12544
    monitor-exit p0
    :try_end_2b
    .catchall {:try_start_2b .. :try_end_2b} :catchall_13

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    goto/16 :goto_27

    :catchall_12
    move-exception v0

    .line 12543
    :try_start_2c
    monitor-exit v9
    :try_end_2c
    .catchall {:try_start_2c .. :try_end_2c} :catchall_12

    :try_start_2d
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v0

    :catchall_13
    move-exception v0

    .line 12544
    monitor-exit p0
    :try_end_2d
    .catchall {:try_start_2d .. :try_end_2d} :catchall_13

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :cond_5d
    :goto_23
    move v0, v4

    move v12, v5

    move-object/from16 v27, v6

    const/16 v22, 0x0

    .line 12529
    array-length v1, v15

    if-ge v0, v1, :cond_5e

    .line 12530
    aget-object v6, v15, v0

    add-int/lit8 v4, v0, 0x1

    goto :goto_24

    :cond_5e
    move v4, v0

    move-object/from16 v6, v27

    .line 12533
    :goto_24
    iget-object v0, v13, Lcom/android/server/am/ActivityManagerService;->mPendingIntentController:Lcom/android/server/am/PendingIntentController;

    invoke-virtual {v0, v14, v12, v6}, Lcom/android/server/am/PendingIntentController;->dumpPendingIntents(Ljava/io/PrintWriter;ZLjava/lang/String;)V

    move/from16 v10, v22

    goto :goto_28

    :cond_5f
    :goto_25
    move v0, v4

    move-object/from16 v27, v6

    const/16 v22, 0x0

    .line 12508
    array-length v1, v15

    if-ge v0, v1, :cond_60

    .line 12509
    aget-object v6, v15, v0

    add-int/lit8 v4, v0, 0x1

    move v0, v4

    move-object/from16 v27, v6

    .line 12512
    :cond_60
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    const/4 v6, 0x1

    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object/from16 v4, p3

    move v5, v0

    move-object/from16 v7, v27

    .line 12513
    :try_start_2e
    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpBroadcastsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 12514
    monitor-exit p0
    :try_end_2e
    .catchall {:try_start_2e .. :try_end_2e} :catchall_14

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    goto :goto_27

    :catchall_14
    move-exception v0

    :try_start_2f
    monitor-exit p0
    :try_end_2f
    .catchall {:try_start_2f .. :try_end_2f} :catchall_14

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :cond_61
    :goto_26
    move v0, v4

    move-object/from16 v27, v6

    move-object v2, v10

    const/16 v22, 0x0

    .line 12485
    iget-object v1, v13, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    const/4 v7, 0x1

    move-object/from16 v3, p1

    move-object/from16 v4, p2

    move-object/from16 v5, p3

    move v6, v0

    move/from16 v8, v18

    move-object/from16 v9, v27

    move/from16 v10, v17

    invoke-virtual/range {v1 .. v10}, Lcom/android/server/wm/ActivityTaskManagerInternal;->dump(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;I)V

    :cond_62
    :goto_27
    move v4, v0

    move/from16 v10, v22

    move-object/from16 v6, v27

    :goto_28
    if-nez v10, :cond_63

    .line 12691
    invoke-static/range {v24 .. v25}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return-void

    :cond_63
    move v5, v4

    move-object v7, v6

    move-object v4, v15

    goto :goto_29

    :cond_64
    move-object/from16 v27, v6

    move v5, v2

    move-object v4, v15

    move-object/from16 v7, v27

    :goto_29
    if-eqz v21, :cond_65

    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move/from16 v6, v16

    .line 12698
    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpBroadcastStatsCheckinLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    goto :goto_2b

    :cond_65
    if-eqz v18, :cond_66

    const/4 v12, 0x1

    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move/from16 v6, v20

    move/from16 v8, v17

    move/from16 v9, v18

    move/from16 v10, v19

    move/from16 v11, v26

    .line 12703
    invoke-virtual/range {v1 .. v12}, Lcom/android/server/am/ActivityManagerService;->dumpEverything(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;IZZIZ)V

    goto :goto_2a

    .line 12709
    :cond_66
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    const/4 v12, 0x0

    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move/from16 v6, v20

    move/from16 v8, v17

    move/from16 v9, v18

    move/from16 v10, v19

    move/from16 v11, v26

    .line 12710
    :try_start_30
    invoke-virtual/range {v1 .. v12}, Lcom/android/server/am/ActivityManagerService;->dumpEverything(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;IZZIZ)V

    .line 12712
    monitor-exit p0
    :try_end_30
    .catchall {:try_start_30 .. :try_end_30} :catchall_15

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    :goto_2a
    if-eqz v20, :cond_67

    .line 12715
    invoke-virtual {v13, v14}, Lcom/android/server/am/ActivityManagerService;->dumpAppRestrictionController(Ljava/io/PrintWriter;)V

    .line 12720
    :cond_67
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    if-eqz v20, :cond_68

    const-string v0, "-------------------------------------------------------------------------------"

    .line 12722
    invoke-virtual {v14, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12724
    :cond_68
    iget-object v0, v13, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskManagerService;->mExt:Lcom/android/server/wm/ActivityTaskManagerServiceExt;

    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskManagerServiceExt;->mPackageFeatureManagerService:Lcom/android/server/wm/PackageFeatureManagerService;

    invoke-virtual {v0, v14}, Lcom/android/server/wm/PackageFeatureManagerService;->dump(Ljava/io/PrintWriter;)V

    .line 12725
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 12729
    :goto_2b
    invoke-static/range {v24 .. v25}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return-void

    :catchall_15
    move-exception v0

    .line 12712
    :try_start_31
    monitor-exit p0
    :try_end_31
    .catchall {:try_start_31 .. :try_end_31} :catchall_15

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public final doStopUidLocked(ILcom/android/server/am/UidRecord;)V
    .locals 1

    .line 19692
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActiveServices;->stopInBackgroundLocked(I)V

    const v0, -0x7ffffffe

    .line 19693
    invoke-virtual {p0, p2, p1, v0}, Lcom/android/server/am/ActivityManagerService;->enqueueUidChangeLocked(Lcom/android/server/am/UidRecord;II)V

    return-void
.end method

.method public dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
    .locals 0

    .line 12019
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mPriorityDumper:Lcom/android/server/utils/PriorityDump$PriorityDumper;

    invoke-static {p0, p1, p2, p3}, Lcom/android/server/utils/PriorityDump;->dump(Lcom/android/server/utils/PriorityDump$PriorityDumper;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V

    return-void
.end method

.method public dumpActiveInstruments(Ljava/io/PrintWriter;Ljava/lang/String;Z)Z
    .locals 5

    .line 12888
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActiveInstrumentation:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-lez v0, :cond_3

    const/4 v1, 0x0

    move v2, v1

    :goto_0
    if-ge v1, v0, :cond_3

    .line 12892
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mActiveInstrumentation:Ljava/util/ArrayList;

    invoke-virtual {v3, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ActiveInstrumentation;

    if-eqz p2, :cond_0

    .line 12893
    iget-object v4, v3, Lcom/android/server/am/ActiveInstrumentation;->mClass:Landroid/content/ComponentName;

    invoke-virtual {v4}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v4, p2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_0

    iget-object v4, v3, Lcom/android/server/am/ActiveInstrumentation;->mTargetInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v4, v4, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 12894
    invoke-virtual {v4, p2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_0

    goto :goto_1

    :cond_0
    if-nez v2, :cond_2

    if-eqz p3, :cond_1

    .line 12899
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    :cond_1
    const-string p3, "  Active instrumentation:"

    .line 12901
    invoke-virtual {p1, p3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    const/4 p3, 0x1

    move v2, p3

    :cond_2
    const-string v4, "    Instrumentation #"

    .line 12905
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->print(I)V

    const-string v4, ": "

    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 12906
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    const-string v4, "      "

    .line 12907
    invoke-virtual {v3, p1, v4}, Lcom/android/server/am/ActiveInstrumentation;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    :goto_1
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    :cond_3
    return p3
.end method

.method public dumpAllResources(Landroid/os/ParcelFileDescriptor;Ljava/io/PrintWriter;)V
    .locals 8

    .line 20036
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    .line 20037
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 20038
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v1}, Lcom/android/server/am/ProcessList;->getLruProcessesLOSP()Ljava/util/ArrayList;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->addAll(Ljava/util/Collection;)Z

    .line 20039
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 20040
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result p0

    const/4 v1, 0x0

    move v2, v1

    :goto_0
    if-ge v2, p0, :cond_2

    .line 20041
    invoke-virtual {v0, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ProcessRecord;

    const-string v4, "Resources History for %s (%s)"

    .line 20042
    iget-object v5, v3, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget-object v6, v3, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v6, v6, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    filled-new-array {v5, v6}, [Ljava/lang/Object;

    move-result-object v5

    invoke-static {v4, v5}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {p2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20045
    iget-object v4, v3, Lcom/android/server/am/ProcessRecord;->mOptRecord:Lcom/android/server/am/ProcessCachedOptimizerRecord;

    invoke-virtual {v4}, Lcom/android/server/am/ProcessCachedOptimizerRecord;->isFrozen()Z

    move-result v4

    if-eqz v4, :cond_0

    const-string v3, "  Skipping frozen process"

    .line 20046
    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20047
    invoke-virtual {p2}, Ljava/io/PrintWriter;->flush()V

    goto :goto_2

    .line 20050
    :cond_0
    invoke-virtual {p2}, Ljava/io/PrintWriter;->flush()V

    .line 20052
    :try_start_1
    new-instance v4, Lcom/android/internal/os/TransferPipe;

    const-string v5, "  "

    invoke-direct {v4, v5}, Lcom/android/internal/os/TransferPipe;-><init>(Ljava/lang/String;)V
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_0

    .line 20054
    :try_start_2
    invoke-virtual {v3}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v5

    if-eqz v5, :cond_1

    .line 20056
    invoke-virtual {v3}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v3

    invoke-virtual {v4}, Lcom/android/internal/os/TransferPipe;->getWriteFd()Landroid/os/ParcelFileDescriptor;

    move-result-object v5

    const/4 v6, 0x0

    invoke-interface {v3, v5, v6}, Landroid/app/IApplicationThread;->dumpResources(Landroid/os/ParcelFileDescriptor;Landroid/os/RemoteCallback;)V

    .line 20057
    invoke-virtual {p1}, Landroid/os/ParcelFileDescriptor;->getFileDescriptor()Ljava/io/FileDescriptor;

    move-result-object v3

    const-wide/16 v5, 0x7d0

    invoke-virtual {v4, v3, v5, v6}, Lcom/android/internal/os/TransferPipe;->go(Ljava/io/FileDescriptor;J)V

    goto :goto_1

    :cond_1
    const-string v5, "  Resources history for %s (%s) failed, no thread"

    const/4 v6, 0x2

    new-array v6, v6, [Ljava/lang/Object;

    .line 20059
    iget-object v7, v3, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    aput-object v7, v6, v1

    iget-object v3, v3, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v3, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    const/4 v7, 0x1

    aput-object v3, v6, v7

    invoke-static {v5, v6}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 20065
    :goto_1
    :try_start_3
    invoke-virtual {v4}, Lcom/android/internal/os/TransferPipe;->kill()V

    goto :goto_2

    :catchall_0
    move-exception v3

    invoke-virtual {v4}, Lcom/android/internal/os/TransferPipe;->kill()V

    .line 20066
    throw v3
    :try_end_3
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_0

    :catch_0
    move-exception v3

    .line 20068
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/io/IOException;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20069
    invoke-virtual {p2}, Ljava/io/PrintWriter;->flush()V

    :goto_2
    add-int/lit8 v2, v2, 0x1

    goto/16 :goto_0

    :cond_2
    return-void

    :catchall_1
    move-exception p1

    .line 20039
    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public dumpAllowedAssociationsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V
    .locals 3

    const-string p1, "ACTIVITY MANAGER ALLOWED ASSOCIATION STATE (dumpsys activity allowed-associations)"

    .line 13491
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13493
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAllowedAssociations:Landroid/util/ArrayMap;

    const/4 p3, 0x0

    if-eqz p1, :cond_6

    move p1, p3

    move p4, p1

    .line 13494
    :goto_0
    iget-object p5, p0, Lcom/android/server/am/ActivityManagerService;->mAllowedAssociations:Landroid/util/ArrayMap;

    invoke-virtual {p5}, Landroid/util/ArrayMap;->size()I

    move-result p5

    if-ge p1, p5, :cond_5

    .line 13495
    iget-object p5, p0, Lcom/android/server/am/ActivityManagerService;->mAllowedAssociations:Landroid/util/ArrayMap;

    invoke-virtual {p5, p1}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object p5

    check-cast p5, Ljava/lang/String;

    .line 13496
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAllowedAssociations:Landroid/util/ArrayMap;

    .line 13497
    invoke-virtual {v0, p1}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ActivityManagerService$PackageAssociationInfo;

    invoke-virtual {v0}, Lcom/android/server/am/ActivityManagerService$PackageAssociationInfo;->getAllowedPackageAssociations()Landroid/util/ArraySet;

    move-result-object v0

    if-nez p4, :cond_0

    const-string p4, "  Allowed associations (by restricted package):"

    .line 13499
    invoke-virtual {p2, p4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    const/4 p4, 0x1

    :cond_0
    const-string v1, "  * "

    .line 13502
    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13503
    invoke-virtual {p2, p5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v1, ":"

    .line 13504
    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    move v1, p3

    .line 13505
    :goto_1
    invoke-virtual {v0}, Landroid/util/ArraySet;->size()I

    move-result v2

    if-ge v1, v2, :cond_3

    if-eqz p6, :cond_1

    .line 13506
    invoke-virtual {p5, p6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_1

    .line 13507
    invoke-virtual {v0, v1}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/String;

    invoke-virtual {v2, p6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_2

    :cond_1
    const-string v2, "      Allow: "

    .line 13508
    invoke-virtual {p2, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13509
    invoke-virtual {v0, v1}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/String;

    invoke-virtual {p2, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    :cond_2
    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    .line 13512
    :cond_3
    iget-object p5, p0, Lcom/android/server/am/ActivityManagerService;->mAllowedAssociations:Landroid/util/ArrayMap;

    invoke-virtual {p5, p1}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object p5

    check-cast p5, Lcom/android/server/am/ActivityManagerService$PackageAssociationInfo;

    invoke-virtual {p5}, Lcom/android/server/am/ActivityManagerService$PackageAssociationInfo;->isDebuggable()Z

    move-result p5

    if-eqz p5, :cond_4

    const-string p5, "      (debuggable)"

    .line 13513
    invoke-virtual {p2, p5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    :cond_4
    add-int/lit8 p1, p1, 0x1

    goto :goto_0

    :cond_5
    move p3, p4

    :cond_6
    if-nez p3, :cond_7

    const-string p0, "  (No association restrictions)"

    .line 13518
    invoke-virtual {p2, p0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    :cond_7
    return-void
.end method

.method public dumpAppRestrictionController(Landroid/util/proto/ProtoOutputStream;I)V
    .locals 0

    .line 12247
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mAppRestrictionController:Lcom/android/server/am/AppRestrictionController;

    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/AppRestrictionController;->dumpAsProto(Landroid/util/proto/ProtoOutputStream;I)V

    return-void
.end method

.method public final dumpAppRestrictionController(Ljava/io/PrintWriter;)V
    .locals 1

    const-string v0, "-------------------------------------------------------------------------------"

    .line 12242
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12243
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mAppRestrictionController:Lcom/android/server/am/AppRestrictionController;

    const-string v0, ""

    invoke-virtual {p0, p1, v0}, Lcom/android/server/am/AppRestrictionController;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    return-void
.end method

.method public final dumpApplicationMemoryUsage(Ljava/io/FileDescriptor;Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;[Ljava/lang/String;ZLjava/util/ArrayList;)V
    .locals 84
    .annotation build Ldalvik/annotation/optimization/NeverCompile;
    .end annotation

    move-object/from16 v1, p0

    move-object/from16 v0, p1

    move-object/from16 v15, p2

    move-object/from16 v10, p3

    move-object/from16 v11, p5

    .line 15016
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v2

    .line 15017
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v4

    const/4 v14, 0x3

    new-array v12, v14, [J

    const-wide v8, 0x10300000002L

    const-wide v6, 0x10300000001L

    const/16 v20, 0x2

    const-wide/16 v21, 0x0

    const/4 v14, 0x0

    if-nez v11, :cond_7

    .line 15023
    array-length v11, v10

    if-lez v11, :cond_6

    .line 15024
    aget-object v11, v10, v14

    .line 15025
    invoke-virtual {v11, v14}, Ljava/lang/String;->charAt(I)C

    move-result v11

    const/16 v13, 0x2d

    if-eq v11, v13, :cond_6

    .line 15026
    new-instance v11, Ljava/util/ArrayList;

    invoke-direct {v11}, Ljava/util/ArrayList;-><init>()V

    .line 15028
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V

    .line 15031
    :try_start_0
    aget-object v13, v10, v14

    invoke-static {v13}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v13
    :try_end_0
    .catch Ljava/lang/NumberFormatException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    :catch_0
    const/4 v13, -0x1

    .line 15035
    :goto_0
    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    new-instance v14, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda34;

    invoke-direct {v14, v13, v10, v11}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda34;-><init>(I[Ljava/lang/String;Ljava/util/ArrayList;)V

    invoke-virtual {v1, v14}, Lcom/android/server/am/AppProfiler;->forAllCpuStats(Ljava/util/function/Consumer;)V

    .line 15041
    invoke-virtual {v11}, Ljava/util/ArrayList;->size()I

    move-result v1

    if-lez v1, :cond_6

    .line 15042
    new-instance v1, Landroid/util/proto/ProtoOutputStream;

    invoke-direct {v1, v0}, Landroid/util/proto/ProtoOutputStream;-><init>(Ljava/io/FileDescriptor;)V

    .line 15044
    invoke-virtual {v1, v6, v7, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 15045
    invoke-virtual {v1, v8, v9, v4, v5}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 15047
    invoke-virtual {v11}, Ljava/util/ArrayList;->size()I

    move-result v0

    const/4 v2, 0x1

    sub-int/2addr v0, v2

    const/4 v2, 0x0

    :goto_1
    if-ltz v0, :cond_5

    .line 15048
    invoke-virtual {v11, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/internal/os/ProcessCpuTracker$Stats;

    .line 15049
    iget v4, v3, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    if-nez v2, :cond_0

    .line 15052
    new-instance v2, Landroid/os/Debug$MemoryInfo;

    invoke-direct {v2}, Landroid/os/Debug$MemoryInfo;-><init>()V

    .line 15054
    :cond_0
    iget-boolean v5, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDetails:Z

    if-nez v5, :cond_3

    if-nez p4, :cond_1

    iget-boolean v5, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->oomOnly:Z

    if-nez v5, :cond_1

    goto :goto_2

    :cond_1
    const/4 v5, 0x0

    .line 15059
    invoke-static {v4, v12, v5}, Landroid/os/Debug;->getPss(I[J[J)J

    move-result-wide v6

    cmp-long v5, v6, v21

    if-nez v5, :cond_2

    goto :goto_4

    :cond_2
    long-to-int v5, v6

    .line 15063
    iput v5, v2, Landroid/os/Debug$MemoryInfo;->nativePss:I

    const/4 v5, 0x0

    aget-wide v6, v12, v5

    long-to-int v5, v6

    .line 15064
    iput v5, v2, Landroid/os/Debug$MemoryInfo;->nativePrivateDirty:I

    aget-wide v5, v12, v20

    long-to-int v5, v5

    .line 15065
    iput v5, v2, Landroid/os/Debug$MemoryInfo;->nativeRss:I

    goto :goto_3

    .line 15055
    :cond_3
    :goto_2
    invoke-static {v4, v2}, Landroid/os/Debug;->getMemoryInfo(ILandroid/os/Debug$MemoryInfo;)Z

    move-result v5

    if-nez v5, :cond_4

    goto :goto_4

    :cond_4
    :goto_3
    const-wide v5, 0x20b00000003L

    .line 15068
    invoke-virtual {v1, v5, v6}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    move-result-wide v5

    const-wide v7, 0x10500000001L

    .line 15070
    invoke-virtual {v1, v7, v8, v4}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 15071
    iget-object v3, v3, Lcom/android/internal/os/ProcessCpuTracker$Stats;->baseName:Ljava/lang/String;

    const-wide v7, 0x10900000002L

    invoke-virtual {v1, v7, v8, v3}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    .line 15073
    iget-boolean v3, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDalvik:Z

    iget-boolean v4, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSummaryOnly:Z

    const-wide/16 v31, 0x0

    const-wide/16 v33, 0x0

    const-wide/16 v35, 0x0

    const-wide/16 v37, 0x0

    const-wide/16 v39, 0x0

    const-wide/16 v41, 0x0

    move-object/from16 v27, v1

    move-object/from16 v28, v2

    move/from16 v29, v3

    move/from16 v30, v4

    invoke-static/range {v27 .. v42}, Landroid/app/ActivityThread;->dumpMemInfoTable(Landroid/util/proto/ProtoOutputStream;Landroid/os/Debug$MemoryInfo;ZZJJJJJJ)V

    .line 15076
    invoke-virtual {v1, v5, v6}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    :goto_4
    add-int/lit8 v0, v0, -0x1

    goto :goto_1

    .line 15079
    :cond_5
    invoke-virtual {v1}, Landroid/util/proto/ProtoOutputStream;->flush()V

    return-void

    :cond_6
    const-string v0, "ActivityManager"

    .line 15084
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "No process found for: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/4 v2, 0x0

    aget-object v2, v10, v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void

    :cond_7
    if-nez p4, :cond_9

    .line 15088
    iget-boolean v13, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->oomOnly:Z

    if-nez v13, :cond_9

    invoke-virtual/range {p5 .. p5}, Ljava/util/ArrayList;->size()I

    move-result v13

    const/4 v14, 0x1

    if-eq v13, v14, :cond_8

    iget-boolean v13, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    if-nez v13, :cond_8

    iget-boolean v13, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->packages:Z

    if-eqz v13, :cond_a

    .line 15089
    :cond_8
    iput-boolean v14, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDetails:Z

    goto :goto_5

    :cond_9
    const/4 v14, 0x1

    .line 15091
    :cond_a
    :goto_5
    invoke-virtual/range {p5 .. p5}, Ljava/util/ArrayList;->size()I

    move-result v13

    if-le v13, v14, :cond_b

    .line 15092
    iget-boolean v14, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->packages:Z

    if-nez v14, :cond_b

    const/4 v14, 0x1

    goto :goto_6

    :cond_b
    const/4 v14, 0x0

    :goto_6
    if-eqz v14, :cond_c

    .line 15096
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V

    .line 15099
    :cond_c
    new-instance v8, Landroid/util/proto/ProtoOutputStream;

    invoke-direct {v8, v0}, Landroid/util/proto/ProtoOutputStream;-><init>(Ljava/io/FileDescriptor;)V

    .line 15101
    invoke-virtual {v8, v6, v7, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    const-wide v2, 0x10300000002L

    .line 15102
    invoke-virtual {v8, v2, v3, v4, v5}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 15104
    new-instance v9, Ljava/util/ArrayList;

    invoke-direct {v9}, Ljava/util/ArrayList;-><init>()V

    .line 15105
    new-instance v7, Landroid/util/SparseArray;

    invoke-direct {v7}, Landroid/util/SparseArray;-><init>()V

    const/16 v0, 0xf

    new-array v6, v0, [J

    .line 15107
    iget-boolean v2, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDalvik:Z

    if-eqz v2, :cond_d

    new-array v3, v0, [J

    goto :goto_7

    .line 15108
    :cond_d
    sget-object v3, Llibcore/util/EmptyArray;->LONG:[J

    :goto_7
    move-object v5, v3

    if-eqz v2, :cond_e

    new-array v3, v0, [J

    goto :goto_8

    .line 15110
    :cond_e
    sget-object v3, Llibcore/util/EmptyArray;->LONG:[J

    :goto_8
    move-object/from16 v43, v3

    if-eqz v2, :cond_f

    new-array v0, v0, [J

    goto :goto_9

    .line 15112
    :cond_f
    sget-object v0, Llibcore/util/EmptyArray;->LONG:[J

    :goto_9
    move-object/from16 v44, v0

    const/16 v4, 0x11

    new-array v3, v4, [J

    new-array v2, v4, [J

    new-array v10, v4, [J

    .line 15117
    sget-object v0, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_LABEL:[Ljava/lang/String;

    move/from16 v45, v14

    array-length v14, v0

    move-object/from16 p1, v10

    new-array v10, v14, [J

    .line 15118
    array-length v4, v0

    new-array v4, v4, [J

    move-object/from16 v47, v2

    .line 15119
    array-length v2, v0

    new-array v2, v2, [J

    .line 15120
    array-length v0, v0

    move-object/from16 v48, v10

    new-array v10, v0, [Ljava/util/ArrayList;

    const/16 v25, 0x1

    add-int/lit8 v13, v13, -0x1

    move-object/from16 v49, v10

    move v10, v13

    move-wide/from16 v50, v21

    const/4 v0, 0x0

    const/4 v13, 0x0

    :goto_a
    const/16 v52, 0x5

    const/16 v53, 0x8

    const/16 v54, 0x7

    const/16 v55, 0x6

    const/16 v56, 0x9

    const/16 v57, 0x4

    move/from16 v58, v14

    if-ltz v10, :cond_25

    .line 15129
    invoke-virtual {v11, v10}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v27

    move-object/from16 v14, v27

    check-cast v14, Lcom/android/server/am/ProcessRecord;

    move-object/from16 v60, v2

    .line 15137
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v2

    .line 15138
    :try_start_1
    invoke-virtual {v14}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v27

    .line 15139
    invoke-virtual {v14}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v11

    move-object/from16 v61, v3

    .line 15140
    iget-object v3, v14, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {v3}, Lcom/android/server/am/ProcessStateRecord;->getSetAdjWithServices()I

    move-result v3

    .line 15141
    invoke-virtual {v14}, Lcom/android/server/am/ProcessRecord;->hasActivities()Z

    move-result v62

    move/from16 v63, v10

    .line 15143
    iget v10, v14, Lcom/android/server/am/ProcessRecord;->uid:I

    .line 15145
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_3

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    if-nez v27, :cond_10

    move-object/from16 v24, v4

    :goto_b
    move-object v15, v5

    move-object/from16 v46, v6

    move-object/from16 v16, v8

    move-object/from16 v77, v9

    move-object/from16 v18, v12

    move-object/from16 v41, v47

    move/from16 v4, v58

    move-object/from16 v42, v60

    move-object/from16 v27, v61

    const/16 v1, 0x11

    const/4 v14, 0x3

    const/16 v19, 0x0

    const/16 v47, 0x0

    const-wide v60, 0x10500000001L

    const-wide v64, 0x10900000002L

    move-object v12, v7

    goto/16 :goto_1a

    :cond_10
    if-nez v13, :cond_11

    .line 15150
    new-instance v13, Landroid/os/Debug$MemoryInfo;

    invoke-direct {v13}, Landroid/os/Debug$MemoryInfo;-><init>()V

    .line 15155
    :cond_11
    iget-boolean v2, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDetails:Z

    if-nez v2, :cond_14

    if-nez p4, :cond_12

    iget-boolean v2, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->oomOnly:Z

    if-nez v2, :cond_12

    goto :goto_c

    .line 15165
    :cond_12
    invoke-static {}, Landroid/os/SystemClock;->currentThreadTimeMillis()J

    move-result-wide v28

    move/from16 v64, v3

    move-object/from16 v24, v4

    const/4 v2, 0x0

    .line 15166
    invoke-static {v11, v12, v2}, Landroid/os/Debug;->getPss(I[J[J)J

    move-result-wide v3

    cmp-long v30, v3, v21

    if-nez v30, :cond_13

    goto :goto_d

    :cond_13
    long-to-int v3, v3

    .line 15170
    iput v3, v13, Landroid/os/Debug$MemoryInfo;->dalvikPss:I

    .line 15171
    invoke-static {}, Landroid/os/SystemClock;->currentThreadTimeMillis()J

    move-result-wide v3

    move-wide/from16 v30, v3

    const/16 v26, 0x0

    aget-wide v2, v12, v26

    long-to-int v2, v2

    .line 15172
    iput v2, v13, Landroid/os/Debug$MemoryInfo;->dalvikPrivateDirty:I

    aget-wide v2, v12, v20

    long-to-int v2, v2

    .line 15173
    iput v2, v13, Landroid/os/Debug$MemoryInfo;->dalvikRss:I

    move/from16 v66, v0

    move-wide/from16 v70, v28

    move-wide/from16 v68, v30

    const/16 v67, 0x3

    goto :goto_e

    :cond_14
    :goto_c
    move/from16 v64, v3

    move-object/from16 v24, v4

    .line 15157
    invoke-static {}, Landroid/os/SystemClock;->currentThreadTimeMillis()J

    move-result-wide v2

    .line 15158
    invoke-static {v11, v13}, Landroid/os/Debug;->getMemoryInfo(ILandroid/os/Debug$MemoryInfo;)Z

    move-result v4

    if-nez v4, :cond_15

    :goto_d
    goto :goto_b

    .line 15161
    :cond_15
    invoke-static {}, Landroid/os/SystemClock;->currentThreadTimeMillis()J

    move-result-wide v28

    .line 15162
    iget-boolean v0, v13, Landroid/os/Debug$MemoryInfo;->hasSwappedOutPss:Z

    move/from16 v66, v0

    move-wide/from16 v70, v2

    move-wide/from16 v68, v28

    move/from16 v67, v57

    .line 15175
    :goto_e
    iget-boolean v0, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDetails:Z

    if-eqz v0, :cond_19

    .line 15176
    iget-boolean v0, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->localOnly:Z

    if-eqz v0, :cond_16

    const-wide v2, 0x20b00000004L

    .line 15177
    invoke-virtual {v8, v2, v3}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    move-result-wide v2

    move-object/from16 v72, v5

    const-wide v4, 0x10b00000001L

    .line 15178
    invoke-virtual {v8, v4, v5}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    move-result-wide v4

    move-object/from16 v74, v6

    move-object/from16 v73, v7

    const-wide v6, 0x10500000001L

    .line 15179
    invoke-virtual {v8, v6, v7, v11}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 15180
    iget-object v0, v14, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move/from16 v19, v11

    move-object/from16 v18, v12

    const-wide v11, 0x10900000002L

    invoke-virtual {v8, v11, v12, v0}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    .line 15181
    iget-boolean v0, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDalvik:Z

    iget-boolean v10, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSummaryOnly:Z

    const-wide/16 v31, 0x0

    const-wide/16 v33, 0x0

    const-wide/16 v35, 0x0

    const-wide/16 v37, 0x0

    const-wide/16 v39, 0x0

    const-wide/16 v41, 0x0

    move-object/from16 v27, v8

    move-object/from16 v28, v13

    move/from16 v29, v0

    move/from16 v30, v10

    invoke-static/range {v27 .. v42}, Landroid/app/ActivityThread;->dumpMemInfoTable(Landroid/util/proto/ProtoOutputStream;Landroid/os/Debug$MemoryInfo;ZZJJJJJJ)V

    .line 15183
    invoke-virtual {v8, v4, v5}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 15184
    invoke-virtual {v8, v2, v3}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    move-object/from16 v77, v9

    move-object/from16 v41, v47

    move-object/from16 v42, v60

    move-object/from16 v27, v61

    move-object/from16 v75, v72

    move-object/from16 v76, v73

    move-object/from16 v46, v74

    const/16 v47, 0x0

    move-wide/from16 v60, v6

    move-wide/from16 v82, v11

    move-object v12, v8

    move/from16 v11, v64

    move-wide/from16 v64, v82

    goto/16 :goto_12

    :cond_16
    move-object/from16 v72, v5

    move-object/from16 v74, v6

    move-object/from16 v73, v7

    move/from16 v19, v11

    move-object/from16 v18, v12

    const-wide v6, 0x10500000001L

    const-wide v11, 0x10900000002L

    .line 15187
    :try_start_2
    new-instance v16, Lcom/android/internal/os/ByteTransferPipe;

    invoke-direct/range {v16 .. v16}, Lcom/android/internal/os/ByteTransferPipe;-><init>()V

    .line 15189
    invoke-static {}, Lcom/android/server/am/FreecessController;->getInstance()Lcom/android/server/am/FreecessController;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/am/FreecessController;->getFreecessEnabled()Z

    move-result v17
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_4
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_3

    if-eqz v17, :cond_17

    .line 15194
    :try_start_3
    invoke-static {}, Lcom/android/server/am/FreecessController;->getInstance()Lcom/android/server/am/FreecessController;

    move-result-object v0

    const/4 v2, 0x1

    invoke-virtual {v0, v10, v2}, Lcom/android/server/am/FreecessController;->setIsDoingGC(IZ)V

    .line 15195
    invoke-static {}, Lcom/android/server/am/FreecessController;->getInstance()Lcom/android/server/am/FreecessController;

    move-result-object v0

    const-string v2, "DumpMemInfo"

    const-wide/16 v3, 0xbb8

    invoke-virtual {v0, v10, v2, v3, v4}, Lcom/android/server/am/FreecessController;->protectFreezePackage(ILjava/lang/String;J)Z

    .line 15198
    :cond_17
    invoke-virtual/range {v16 .. v16}, Lcom/android/internal/os/ByteTransferPipe;->getWriteFd()Landroid/os/ParcelFileDescriptor;

    move-result-object v3

    iget-boolean v5, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpFullDetails:Z

    iget-boolean v0, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDalvik:Z

    iget-boolean v4, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSummaryOnly:Z

    iget-boolean v2, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpUnreachable:Z
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    move/from16 v28, v2

    move-object/from16 v41, v47

    move-object/from16 v42, v60

    const/16 v47, 0x0

    move-object/from16 v2, v27

    move-object/from16 v27, v61

    move/from16 v11, v64

    move v12, v4

    move-object v4, v13

    move-object/from16 v75, v72

    move-wide/from16 v60, v6

    move-object/from16 v46, v74

    move v6, v0

    move-object/from16 v76, v73

    move v7, v12

    move-object v12, v8

    const-wide v64, 0x10900000002L

    move/from16 v8, v28

    move-object/from16 v77, v9

    move-object/from16 v9, p3

    :try_start_4
    invoke-interface/range {v2 .. v9}, Landroid/app/IApplicationThread;->dumpMemInfoProto(Landroid/os/ParcelFileDescriptor;Landroid/os/Debug$MemoryInfo;ZZZZ[Ljava/lang/String;)V

    .line 15201
    invoke-virtual/range {v16 .. v16}, Lcom/android/internal/os/ByteTransferPipe;->get()[B

    move-result-object v0

    const-wide v2, 0x20b00000004L

    invoke-virtual {v12, v2, v3, v0}, Landroid/util/proto/ProtoOutputStream;->write(J[B)V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 15203
    :try_start_5
    invoke-virtual/range {v16 .. v16}, Lcom/android/internal/os/ByteTransferPipe;->kill()V

    if-eqz v17, :cond_1a

    .line 15206
    invoke-static {}, Lcom/android/server/am/FreecessController;->getInstance()Lcom/android/server/am/FreecessController;

    move-result-object v0

    const/4 v2, 0x0

    invoke-virtual {v0, v10, v2}, Lcom/android/server/am/FreecessController;->setIsDoingGC(IZ)V

    goto/16 :goto_12

    :catchall_0
    move-exception v0

    goto :goto_f

    :catchall_1
    move-exception v0

    move-object/from16 v77, v9

    move-object/from16 v41, v47

    move-object/from16 v42, v60

    move-object/from16 v27, v61

    move-object/from16 v75, v72

    move-object/from16 v76, v73

    move-object/from16 v46, v74

    const/16 v47, 0x0

    move-wide/from16 v60, v6

    move-wide/from16 v82, v11

    move-object v12, v8

    move/from16 v11, v64

    move-wide/from16 v64, v82

    .line 15203
    :goto_f
    invoke-virtual/range {v16 .. v16}, Lcom/android/internal/os/ByteTransferPipe;->kill()V

    if-eqz v17, :cond_18

    .line 15206
    invoke-static {}, Lcom/android/server/am/FreecessController;->getInstance()Lcom/android/server/am/FreecessController;

    move-result-object v2

    const/4 v3, 0x0

    invoke-virtual {v2, v10, v3}, Lcom/android/server/am/FreecessController;->setIsDoingGC(IZ)V

    .line 15209
    :cond_18
    throw v0
    :try_end_5
    .catch Ljava/io/IOException; {:try_start_5 .. :try_end_5} :catch_2
    .catch Landroid/os/RemoteException; {:try_start_5 .. :try_end_5} :catch_1

    :catch_1
    move-exception v0

    goto :goto_10

    :catch_2
    move-exception v0

    goto :goto_11

    :catch_3
    move-exception v0

    move-object/from16 v77, v9

    move-object/from16 v41, v47

    move-object/from16 v42, v60

    move-object/from16 v27, v61

    move-object/from16 v75, v72

    move-object/from16 v76, v73

    move-object/from16 v46, v74

    const/16 v47, 0x0

    move-wide/from16 v60, v6

    move-wide/from16 v82, v11

    move-object v12, v8

    move/from16 v11, v64

    move-wide/from16 v64, v82

    :goto_10
    const-string v2, "ActivityManager"

    const-string v3, "Got RemoteException!"

    .line 15213
    invoke-static {v2, v3, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    goto :goto_12

    :catch_4
    move-exception v0

    move-object/from16 v77, v9

    move-object/from16 v41, v47

    move-object/from16 v42, v60

    move-object/from16 v27, v61

    move-object/from16 v75, v72

    move-object/from16 v76, v73

    move-object/from16 v46, v74

    const/16 v47, 0x0

    move-wide/from16 v60, v6

    move-wide/from16 v82, v11

    move-object v12, v8

    move/from16 v11, v64

    move-wide/from16 v64, v82

    :goto_11
    const-string v2, "ActivityManager"

    const-string v3, "Got IOException!"

    .line 15211
    invoke-static {v2, v3, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    goto :goto_12

    :cond_19
    move-object/from16 v75, v5

    move-object/from16 v46, v6

    move-object/from16 v76, v7

    move-object/from16 v77, v9

    move/from16 v19, v11

    move-object/from16 v18, v12

    move-object/from16 v41, v47

    move-object/from16 v42, v60

    move-object/from16 v27, v61

    move/from16 v11, v64

    const/16 v47, 0x0

    const-wide v60, 0x10500000001L

    const-wide v64, 0x10900000002L

    move-object v12, v8

    .line 15218
    :cond_1a
    :goto_12
    invoke-virtual {v13}, Landroid/os/Debug$MemoryInfo;->getTotalPss()I

    move-result v0

    int-to-long v2, v0

    .line 15219
    invoke-virtual {v13}, Landroid/os/Debug$MemoryInfo;->getTotalUss()I

    move-result v0

    int-to-long v4, v0

    .line 15220
    invoke-virtual {v13}, Landroid/os/Debug$MemoryInfo;->getTotalRss()I

    move-result v0

    int-to-long v6, v0

    .line 15221
    invoke-virtual {v13}, Landroid/os/Debug$MemoryInfo;->getTotalSwappedOutPss()I

    move-result v0

    int-to-long v8, v0

    .line 15223
    iget-object v10, v1, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v10

    .line 15224
    :try_start_6
    invoke-virtual {v14}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v0

    if-eqz v0, :cond_1b

    iget-object v0, v14, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {v0}, Lcom/android/server/am/ProcessStateRecord;->getSetAdjWithServices()I

    move-result v0

    if-ne v11, v0, :cond_1b

    .line 15226
    iget-object v0, v14, Lcom/android/server/am/ProcessRecord;->mProfile:Lcom/android/server/am/ProcessProfileRecord;

    const/16 v35, 0x1

    sub-long v37, v68, v70

    move-object/from16 v28, v0

    move-wide/from16 v29, v2

    move-wide/from16 v31, v4

    move-wide/from16 v33, v6

    move/from16 v36, v67

    invoke-virtual/range {v28 .. v38}, Lcom/android/server/am/ProcessProfileRecord;->addPss(JJJZIJ)V

    .line 15228
    invoke-virtual {v14}, Lcom/android/server/am/ProcessRecord;->getPkgList()Lcom/android/server/am/PackageList;

    move-result-object v0

    move-object/from16 v16, v12

    new-instance v12, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda35;

    move-object/from16 v28, v12

    move-object/from16 v29, v14

    move-wide/from16 v30, v2

    move-wide/from16 v32, v4

    move-wide/from16 v34, v6

    move/from16 v36, v67

    move-wide/from16 v37, v68

    move-wide/from16 v39, v70

    invoke-direct/range {v28 .. v40}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda35;-><init>(Lcom/android/server/am/ProcessRecord;JJJIJJ)V

    invoke-virtual {v0, v12}, Lcom/android/server/am/PackageList;->forEachPackageProcessStats(Ljava/util/function/Consumer;)V

    goto :goto_13

    :cond_1b
    move-object/from16 v16, v12

    .line 15239
    :goto_13
    monitor-exit v10
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_2

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 15241
    iget-boolean v0, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    if-nez v0, :cond_23

    aget-wide v4, v46, v56

    add-long/2addr v4, v2

    aput-wide v4, v46, v56

    const/16 v17, 0xa

    aget-wide v4, v46, v17

    add-long/2addr v4, v8

    aput-wide v4, v46, v17

    const/16 v0, 0xb

    aget-wide v4, v46, v0

    add-long/2addr v4, v6

    aput-wide v4, v46, v0

    .line 15245
    new-instance v0, Lcom/android/server/am/ActivityManagerService$MemItem;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    iget-object v5, v14, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v5, " (pid "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move/from16 v5, v19

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    if-eqz v62, :cond_1c

    const-string v10, " / activities)"

    goto :goto_14

    :cond_1c
    const-string v10, ")"

    .line 15246
    :goto_14
    invoke-virtual {v4, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v29

    iget-object v4, v14, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget v10, v14, Lcom/android/server/am/ProcessRecord;->userId:I

    move-object/from16 v28, v0

    move-object/from16 v30, v4

    move-wide/from16 v31, v2

    move-wide/from16 v33, v8

    move-wide/from16 v35, v6

    move/from16 v37, v5

    move/from16 v38, v10

    move/from16 v39, v62

    invoke-direct/range {v28 .. v39}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJJIIZ)V

    move-object/from16 v14, v77

    .line 15248
    invoke-virtual {v14, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    move-object/from16 v12, v76

    .line 15249
    invoke-virtual {v12, v5, v0}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    const/16 v19, 0x0

    aget-wide v4, v46, v19

    .line 15251
    iget v10, v13, Landroid/os/Debug$MemoryInfo;->nativePss:I

    int-to-long v14, v10

    add-long/2addr v4, v14

    aput-wide v4, v46, v19

    const/4 v4, 0x1

    aget-wide v14, v46, v4

    .line 15252
    iget v5, v13, Landroid/os/Debug$MemoryInfo;->nativeSwappedOutPss:I

    move-wide/from16 v28, v6

    int-to-long v5, v5

    add-long/2addr v14, v5

    aput-wide v14, v46, v4

    aget-wide v4, v46, v20

    .line 15253
    iget v6, v13, Landroid/os/Debug$MemoryInfo;->nativeRss:I

    int-to-long v6, v6

    add-long/2addr v4, v6

    aput-wide v4, v46, v20

    const/4 v14, 0x3

    aget-wide v4, v46, v14

    .line 15254
    iget v6, v13, Landroid/os/Debug$MemoryInfo;->dalvikPss:I

    int-to-long v6, v6

    add-long/2addr v4, v6

    aput-wide v4, v46, v14

    aget-wide v4, v46, v57

    .line 15255
    iget v6, v13, Landroid/os/Debug$MemoryInfo;->dalvikSwappedOutPss:I

    int-to-long v6, v6

    add-long/2addr v4, v6

    aput-wide v4, v46, v57

    aget-wide v4, v46, v52

    .line 15256
    iget v6, v13, Landroid/os/Debug$MemoryInfo;->dalvikRss:I

    int-to-long v6, v6

    add-long/2addr v4, v6

    aput-wide v4, v46, v52

    move/from16 v5, v19

    move-object/from16 v15, v75

    .line 15257
    :goto_15
    array-length v4, v15

    if-ge v5, v4, :cond_1d

    .line 15258
    aget-wide v6, v15, v5

    add-int/lit8 v4, v5, 0x11

    invoke-virtual {v13, v4}, Landroid/os/Debug$MemoryInfo;->getOtherPss(I)I

    move-result v10

    move-object/from16 v17, v0

    int-to-long v0, v10

    add-long/2addr v6, v0

    aput-wide v6, v15, v5

    .line 15259
    aget-wide v0, v43, v5

    .line 15260
    invoke-virtual {v13, v4}, Landroid/os/Debug$MemoryInfo;->getOtherSwappedOutPss(I)I

    move-result v6

    int-to-long v6, v6

    add-long/2addr v0, v6

    aput-wide v0, v43, v5

    .line 15261
    aget-wide v0, v44, v5

    invoke-virtual {v13, v4}, Landroid/os/Debug$MemoryInfo;->getOtherRss(I)I

    move-result v4

    int-to-long v6, v4

    add-long/2addr v0, v6

    aput-wide v0, v44, v5

    add-int/lit8 v5, v5, 0x1

    move-object/from16 v1, p0

    move-object/from16 v0, v17

    goto :goto_15

    :cond_1d
    move-object/from16 v17, v0

    aget-wide v0, v46, v55

    .line 15263
    iget v4, v13, Landroid/os/Debug$MemoryInfo;->otherPss:I

    int-to-long v4, v4

    add-long/2addr v0, v4

    aput-wide v0, v46, v55

    aget-wide v0, v46, v53

    .line 15264
    iget v4, v13, Landroid/os/Debug$MemoryInfo;->otherRss:I

    int-to-long v4, v4

    add-long/2addr v0, v4

    aput-wide v0, v46, v53

    aget-wide v0, v46, v54

    .line 15265
    iget v4, v13, Landroid/os/Debug$MemoryInfo;->otherSwappedOutPss:I

    int-to-long v4, v4

    add-long/2addr v0, v4

    aput-wide v0, v46, v54

    move/from16 v5, v19

    const/16 v1, 0x11

    :goto_16
    if-ge v5, v1, :cond_1e

    .line 15267
    invoke-virtual {v13, v5}, Landroid/os/Debug$MemoryInfo;->getOtherPss(I)I

    move-result v0

    int-to-long v6, v0

    .line 15268
    aget-wide v30, v27, v5

    add-long v30, v30, v6

    aput-wide v30, v27, v5

    aget-wide v30, v46, v55

    sub-long v30, v30, v6

    aput-wide v30, v46, v55

    .line 15270
    invoke-virtual {v13, v5}, Landroid/os/Debug$MemoryInfo;->getOtherSwappedOutPss(I)I

    move-result v0

    int-to-long v6, v0

    .line 15271
    aget-wide v30, v41, v5

    add-long v30, v30, v6

    aput-wide v30, v41, v5

    aget-wide v30, v46, v54

    sub-long v30, v30, v6

    aput-wide v30, v46, v54

    .line 15273
    invoke-virtual {v13, v5}, Landroid/os/Debug$MemoryInfo;->getOtherRss(I)I

    move-result v0

    int-to-long v6, v0

    .line 15274
    aget-wide v30, p1, v5

    add-long v30, v30, v6

    aput-wide v30, p1, v5

    aget-wide v30, v46, v53

    sub-long v30, v30, v6

    aput-wide v30, v46, v53

    add-int/lit8 v5, v5, 0x1

    goto :goto_16

    :cond_1e
    const/16 v0, 0x384

    move-wide/from16 v6, v50

    if-lt v11, v0, :cond_1f

    add-long v50, v6, v2

    :cond_1f
    move/from16 v5, v19

    move/from16 v4, v58

    :goto_17
    if-ge v5, v4, :cond_24

    add-int/lit8 v0, v4, -0x1

    if-eq v5, v0, :cond_21

    .line 15284
    sget-object v0, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_ADJ:[I

    aget v6, v0, v5

    if-lt v11, v6, :cond_20

    add-int/lit8 v6, v5, 0x1

    aget v0, v0, v6

    if-ge v11, v0, :cond_20

    goto :goto_18

    :cond_20
    add-int/lit8 v5, v5, 0x1

    goto :goto_17

    .line 15287
    :cond_21
    :goto_18
    aget-wide v6, v48, v5

    add-long/2addr v6, v2

    aput-wide v6, v48, v5

    .line 15288
    aget-wide v2, v24, v5

    add-long/2addr v2, v8

    aput-wide v2, v24, v5

    .line 15289
    aget-object v0, v49, v5

    if-nez v0, :cond_22

    .line 15290
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    aput-object v0, v49, v5

    .line 15292
    :cond_22
    aget-object v0, v49, v5

    move-object/from16 v2, v17

    invoke-virtual {v0, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 15293
    aget-wide v2, v42, v5

    add-long v2, v2, v28

    aput-wide v2, v42, v5

    goto :goto_19

    :cond_23
    move-wide/from16 v6, v50

    move/from16 v4, v58

    move-object/from16 v15, v75

    move-object/from16 v12, v76

    const/16 v1, 0x11

    const/4 v14, 0x3

    const/16 v19, 0x0

    move-wide/from16 v50, v6

    :cond_24
    :goto_19
    move/from16 v0, v66

    :goto_1a
    add-int/lit8 v10, v63, -0x1

    move-object/from16 v1, p0

    move-object/from16 v11, p5

    move v14, v4

    move-object v7, v12

    move-object v5, v15

    move-object/from16 v8, v16

    move-object/from16 v12, v18

    move-object/from16 v4, v24

    move-object/from16 v3, v27

    move-object/from16 v47, v41

    move-object/from16 v2, v42

    move-object/from16 v6, v46

    move-object/from16 v9, v77

    move-object/from16 v15, p2

    goto/16 :goto_a

    :catchall_2
    move-exception v0

    .line 15239
    :try_start_7
    monitor-exit v10
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_2

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v0

    :catchall_3
    move-exception v0

    .line 15145
    :try_start_8
    monitor-exit v2
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_3

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v0

    :cond_25
    move-object/from16 v42, v2

    move-object/from16 v27, v3

    move-object/from16 v24, v4

    move-object v15, v5

    move-object/from16 v46, v6

    move-object/from16 v16, v8

    move-object/from16 v77, v9

    move-object/from16 v18, v12

    move-object/from16 v41, v47

    move/from16 v4, v58

    const/16 v1, 0x11

    const/4 v14, 0x3

    const/16 v17, 0xa

    const/16 v19, 0x0

    move-object v12, v7

    move-wide/from16 v6, v50

    if-eqz v45, :cond_37

    const/4 v13, 0x1

    new-array v2, v13, [Landroid/os/Debug$MemoryInfo;

    move/from16 v23, v4

    move-object v4, v2

    move-object/from16 v11, p0

    .line 15305
    iget-object v10, v11, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    new-instance v9, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda36;

    move-object v2, v9

    move-object v3, v12

    move/from16 v5, p4

    move-wide v7, v6

    move-object/from16 v6, p2

    move-wide/from16 v78, v7

    move-object/from16 v7, v18

    move-object/from16 v8, v46

    move-object v12, v9

    move-object/from16 v9, v77

    move-object/from16 v25, p1

    move-object v1, v10

    move-object/from16 v26, v48

    move-object/from16 v28, v49

    move-object v10, v15

    move-object/from16 v11, v43

    move/from16 v35, v0

    move-object v0, v12

    move-object/from16 p1, v16

    move-object/from16 v12, v44

    move/from16 v36, v13

    move-object/from16 v13, v27

    move/from16 v37, v14

    move/from16 v80, v23

    move-object/from16 v38, v77

    move/from16 v23, v19

    move-object/from16 v14, v41

    move-object/from16 v81, v15

    move-object/from16 v15, v25

    move-object/from16 v16, v26

    move-object/from16 v17, v24

    move-object/from16 v18, v28

    move-object/from16 v19, v42

    invoke-direct/range {v2 .. v19}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda36;-><init>(Landroid/util/SparseArray;[Landroid/os/Debug$MemoryInfo;ZLcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;[J[JLjava/util/ArrayList;[J[J[J[J[J[J[J[J[Ljava/util/ArrayList;[J)V

    invoke-virtual {v1, v0}, Lcom/android/server/am/AppProfiler;->forAllCpuStats(Ljava/util/function/Consumer;)V

    .line 15376
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    .line 15378
    new-instance v11, Lcom/android/server/am/ActivityManagerService$MemItem;

    const-string v2, "Native"

    const-string v3, "Native"

    aget-wide v4, v46, v23

    aget-wide v6, v46, v36

    aget-wide v8, v46, v20

    const/4 v10, -0x1

    move-object v1, v11

    invoke-direct/range {v1 .. v10}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJJI)V

    invoke-virtual {v0, v11}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 15381
    new-instance v1, Lcom/android/server/am/ActivityManagerService$MemItem;

    const-string v59, "Dalvik"

    const-string v60, "Dalvik"

    aget-wide v61, v46, v37

    aget-wide v63, v46, v57

    aget-wide v65, v46, v52

    const/16 v67, -0x2

    move-object/from16 v58, v1

    invoke-direct/range {v58 .. v67}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJJI)V

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 15383
    new-instance v1, Lcom/android/server/am/ActivityManagerService$MemItem;

    const-string v3, "Unknown"

    const-string v4, "Unknown"

    aget-wide v5, v46, v55

    aget-wide v7, v46, v54

    aget-wide v9, v46, v53

    const/4 v11, -0x3

    move-object v2, v1

    invoke-direct/range {v2 .. v11}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJJI)V

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    move/from16 v14, v23

    const/16 v1, 0x11

    :goto_1b
    if-ge v14, v1, :cond_26

    .line 15386
    invoke-static {v14}, Landroid/os/Debug$MemoryInfo;->getOtherLabel(I)Ljava/lang/String;

    move-result-object v60

    .line 15387
    new-instance v2, Lcom/android/server/am/ActivityManagerService$MemItem;

    aget-wide v61, v27, v14

    aget-wide v63, v41, v14

    aget-wide v65, v25, v14

    move-object/from16 v58, v2

    move-object/from16 v59, v60

    move/from16 v67, v14

    invoke-direct/range {v58 .. v67}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJJI)V

    invoke-virtual {v0, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    add-int/lit8 v14, v14, 0x1

    goto :goto_1b

    :cond_26
    move-object/from16 v3, v81

    .line 15389
    array-length v1, v3

    const/16 v14, 0xc

    if-lez v1, :cond_2b

    .line 15391
    invoke-virtual {v0}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :cond_27
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_2b

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ActivityManagerService$MemItem;

    .line 15393
    iget v4, v2, Lcom/android/server/am/ActivityManagerService$MemItem;->id:I

    const/4 v5, -0x2

    if-ne v4, v5, :cond_28

    move/from16 v4, v23

    move/from16 v6, v37

    :goto_1c
    const/16 v5, 0xa

    goto :goto_1d

    :cond_28
    if-nez v4, :cond_29

    move/from16 v6, v56

    move/from16 v4, v57

    goto :goto_1c

    :cond_29
    const/16 v5, 0xa

    if-ne v4, v5, :cond_2a

    move v4, v5

    move v6, v14

    goto :goto_1d

    :cond_2a
    if-ne v4, v14, :cond_27

    const/16 v4, 0xd

    const/16 v6, 0xe

    .line 15408
    :goto_1d
    new-instance v7, Ljava/util/ArrayList;

    invoke-direct {v7}, Ljava/util/ArrayList;-><init>()V

    iput-object v7, v2, Lcom/android/server/am/ActivityManagerService$MemItem;->subitems:Ljava/util/ArrayList;

    :goto_1e
    if-gt v4, v6, :cond_27

    add-int/lit8 v7, v4, 0x11

    .line 15410
    invoke-static {v7}, Landroid/os/Debug$MemoryInfo;->getOtherLabel(I)Ljava/lang/String;

    move-result-object v60

    .line 15412
    iget-object v7, v2, Lcom/android/server/am/ActivityManagerService$MemItem;->subitems:Ljava/util/ArrayList;

    new-instance v8, Lcom/android/server/am/ActivityManagerService$MemItem;

    aget-wide v61, v3, v4

    aget-wide v63, v43, v4

    aget-wide v65, v44, v4

    move-object/from16 v58, v8

    move-object/from16 v59, v60

    move/from16 v67, v4

    invoke-direct/range {v58 .. v67}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJJI)V

    invoke-virtual {v7, v8}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    add-int/lit8 v4, v4, 0x1

    goto :goto_1e

    :cond_2b
    const/16 v5, 0xa

    .line 15418
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    move/from16 v2, v23

    move/from16 v3, v80

    :goto_1f
    if-ge v2, v3, :cond_2e

    .line 15420
    aget-wide v60, v26, v2

    cmp-long v4, v60, v21

    if-eqz v4, :cond_2d

    move-object/from16 v4, p2

    .line 15421
    iget-boolean v6, v4, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    if-eqz v6, :cond_2c

    sget-object v6, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_COMPACT_LABEL:[Ljava/lang/String;

    aget-object v6, v6, v2

    goto :goto_20

    .line 15422
    :cond_2c
    sget-object v6, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_LABEL:[Ljava/lang/String;

    aget-object v6, v6, v2

    :goto_20
    move-object/from16 v59, v6

    .line 15423
    new-instance v6, Lcom/android/server/am/ActivityManagerService$MemItem;

    aget-wide v62, v24, v2

    aget-wide v64, v42, v2

    sget-object v7, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_ADJ:[I

    aget v66, v7, v2

    move-object/from16 v57, v6

    move-object/from16 v58, v59

    invoke-direct/range {v57 .. v66}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJJI)V

    .line 15425
    aget-object v7, v28, v2

    iput-object v7, v6, Lcom/android/server/am/ActivityManagerService$MemItem;->subitems:Ljava/util/ArrayList;

    .line 15426
    invoke-virtual {v1, v6}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_21

    :cond_2d
    move-object/from16 v4, p2

    :goto_21
    add-int/lit8 v2, v2, 0x1

    goto :goto_1f

    :cond_2e
    move-object/from16 v4, p2

    .line 15430
    iget-boolean v2, v4, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->oomOnly:Z

    if-nez v2, :cond_2f

    const-wide v28, 0x20b0000001dL

    const-string/jumbo v30, "proc"

    const/16 v32, 0x1

    const/16 v33, 0x0

    const/16 v34, 0x0

    move-object/from16 v27, p1

    move-object/from16 v31, v38

    .line 15431
    invoke-static/range {v27 .. v34}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Landroid/util/proto/ProtoOutputStream;JLjava/lang/String;Ljava/util/ArrayList;ZZZ)V

    :cond_2f
    const-wide v28, 0x20b0000001eL

    const-string/jumbo v30, "oom"

    const/16 v32, 0x0

    const/16 v33, 0x0

    const/16 v34, 0x0

    move-object/from16 v27, p1

    move-object/from16 v31, v1

    .line 15434
    invoke-static/range {v27 .. v34}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Landroid/util/proto/ProtoOutputStream;JLjava/lang/String;Ljava/util/ArrayList;ZZZ)V

    if-nez p4, :cond_30

    .line 15436
    iget-boolean v2, v4, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->oomOnly:Z

    if-nez v2, :cond_30

    const-wide v28, 0x20b0000001fL

    const-string v30, "cat"

    const/16 v32, 0x1

    const/16 v33, 0x0

    const/16 v34, 0x0

    move-object/from16 v27, p1

    move-object/from16 v31, v0

    .line 15437
    invoke-static/range {v27 .. v34}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Landroid/util/proto/ProtoOutputStream;JLjava/lang/String;Ljava/util/ArrayList;ZZZ)V

    .line 15441
    :cond_30
    iget-boolean v2, v4, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSwapPss:Z

    if-eqz v2, :cond_31

    if-eqz v35, :cond_31

    aget-wide v2, v46, v5

    cmp-long v2, v2, v21

    if-eqz v2, :cond_31

    move/from16 v2, v36

    goto :goto_22

    :cond_31
    move/from16 v2, v23

    :goto_22
    iput-boolean v2, v4, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSwapPss:Z

    .line 15442
    iget-boolean v3, v4, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->oomOnly:Z

    if-nez v3, :cond_32

    const-wide v28, 0x20b00000005L

    const-string/jumbo v30, "proc"

    const/16 v32, 0x1

    const/16 v33, 0x1

    move-object/from16 v27, p1

    move-object/from16 v31, v38

    move/from16 v34, v2

    .line 15443
    invoke-static/range {v27 .. v34}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Landroid/util/proto/ProtoOutputStream;JLjava/lang/String;Ljava/util/ArrayList;ZZZ)V

    :cond_32
    const-wide v28, 0x20b00000006L

    const-string/jumbo v30, "oom"

    const/16 v32, 0x0

    const/16 v33, 0x1

    .line 15446
    iget-boolean v2, v4, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSwapPss:Z

    move-object/from16 v27, p1

    move-object/from16 v31, v1

    move/from16 v34, v2

    invoke-static/range {v27 .. v34}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Landroid/util/proto/ProtoOutputStream;JLjava/lang/String;Ljava/util/ArrayList;ZZZ)V

    if-nez p4, :cond_33

    .line 15448
    iget-boolean v1, v4, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->oomOnly:Z

    if-nez v1, :cond_33

    const-wide v28, 0x20b00000007L

    const-string v30, "cat"

    const/16 v32, 0x1

    const/16 v33, 0x1

    .line 15449
    iget-boolean v1, v4, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSwapPss:Z

    move-object/from16 v27, p1

    move-object/from16 v31, v0

    move/from16 v34, v1

    invoke-static/range {v27 .. v34}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Landroid/util/proto/ProtoOutputStream;JLjava/lang/String;Ljava/util/ArrayList;ZZZ)V

    .line 15452
    :cond_33
    new-instance v0, Lcom/android/internal/util/MemInfoReader;

    invoke-direct {v0}, Lcom/android/internal/util/MemInfoReader;-><init>()V

    .line 15453
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->readMemInfo()V

    aget-wide v1, v46, v14

    cmp-long v1, v1, v21

    const-wide/16 v2, 0x400

    if-lez v1, :cond_34

    move-object/from16 v1, p0

    .line 15455
    iget-object v4, v1, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    iget-object v4, v4, Lcom/android/server/am/ProcessStatsService;->mLock:Ljava/lang/Object;

    monitor-enter v4

    .line 15456
    :try_start_9
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeKb()J

    move-result-wide v25

    .line 15457
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getFreeSizeKb()J

    move-result-wide v27

    .line 15458
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getZramTotalSizeKb()J

    move-result-wide v29

    .line 15459
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getKernelUsedSizeKb()J

    move-result-wide v31

    mul-long v57, v25, v2

    mul-long v59, v27, v2

    mul-long v61, v29, v2

    mul-long v63, v31, v2

    aget-wide v6, v46, v14

    mul-long v65, v6, v2

    .line 15460
    invoke-static/range {v57 .. v66}, Lcom/android/server/am/EventLogTags;->writeAmMeminfo(JJJJJ)V

    .line 15462
    iget-object v6, v1, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    aget-wide v33, v46, v14

    move-object/from16 v24, v6

    invoke-virtual/range {v24 .. v34}, Lcom/android/server/am/ProcessStatsService;->addSysMemUsageLocked(JJJJJ)V

    .line 15464
    monitor-exit v4

    goto :goto_23

    :catchall_4
    move-exception v0

    monitor-exit v4
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_4

    throw v0

    :cond_34
    move-object/from16 v1, p0

    :goto_23
    if-nez p4, :cond_35

    const-wide v6, 0x10300000008L

    .line 15467
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getTotalSizeKb()J

    move-result-wide v8

    move-object/from16 v4, p1

    invoke-virtual {v4, v6, v7, v8, v9}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 15468
    iget-object v6, v1, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {v6}, Lcom/android/server/am/AppProfiler;->getLastMemoryLevelLocked()I

    move-result v6

    const-wide v7, 0x10e00000009L

    invoke-virtual {v4, v7, v8, v6}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    const-wide v6, 0x1030000000aL

    move-wide/from16 v8, v78

    .line 15469
    invoke-virtual {v4, v6, v7, v8, v9}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    const-wide v6, 0x1030000000bL

    .line 15470
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeKb()J

    move-result-wide v10

    invoke-virtual {v4, v6, v7, v10, v11}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    const-wide v6, 0x1030000000cL

    .line 15471
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getFreeSizeKb()J

    move-result-wide v10

    invoke-virtual {v4, v6, v7, v10, v11}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    goto :goto_24

    :cond_35
    move-object/from16 v4, p1

    move-wide/from16 v8, v78

    .line 15473
    :goto_24
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getTotalSizeKb()J

    move-result-wide v6

    aget-wide v10, v46, v56

    aget-wide v12, v46, v5

    sub-long/2addr v10, v12

    sub-long/2addr v6, v10

    .line 15475
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getFreeSizeKb()J

    move-result-wide v10

    sub-long/2addr v6, v10

    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeKb()J

    move-result-wide v10

    sub-long/2addr v6, v10

    .line 15476
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getKernelUsedSizeKb()J

    move-result-wide v10

    sub-long/2addr v6, v10

    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getZramTotalSizeKb()J

    move-result-wide v10

    sub-long/2addr v6, v10

    aget-wide v10, v46, v56

    sub-long/2addr v10, v8

    const-wide v8, 0x1030000000dL

    .line 15477
    invoke-virtual {v4, v8, v9, v10, v11}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    const-wide v8, 0x1030000000eL

    .line 15478
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getKernelUsedSizeKb()J

    move-result-wide v10

    invoke-virtual {v4, v8, v9, v10, v11}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    const-wide v8, 0x1030000000fL

    .line 15479
    invoke-virtual {v4, v8, v9, v6, v7}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    if-nez p4, :cond_38

    .line 15481
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getZramTotalSizeKb()J

    move-result-wide v5

    cmp-long v5, v5, v21

    if-eqz v5, :cond_36

    const-wide v5, 0x10300000010L

    .line 15482
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getZramTotalSizeKb()J

    move-result-wide v7

    invoke-virtual {v4, v5, v6, v7, v8}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 15484
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getSwapTotalSizeKb()J

    move-result-wide v5

    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getSwapFreeSizeKb()J

    move-result-wide v7

    sub-long/2addr v5, v7

    const-wide v7, 0x10300000011L

    .line 15483
    invoke-virtual {v4, v7, v8, v5, v6}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    const-wide v5, 0x10300000012L

    .line 15485
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getSwapTotalSizeKb()J

    move-result-wide v7

    invoke-virtual {v4, v5, v6, v7, v8}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 15487
    :cond_36
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->getKsmInfo()[J

    move-result-object v0

    .line 15488
    aget-wide v5, v0, v36

    const-wide v7, 0x10300000013L

    invoke-virtual {v4, v7, v8, v5, v6}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    const-wide v5, 0x10300000014L

    .line 15489
    aget-wide v7, v0, v23

    invoke-virtual {v4, v5, v6, v7, v8}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    const-wide v5, 0x10300000015L

    .line 15490
    aget-wide v7, v0, v20

    invoke-virtual {v4, v5, v6, v7, v8}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    const-wide v5, 0x10300000016L

    .line 15491
    aget-wide v7, v0, v37

    invoke-virtual {v4, v5, v6, v7, v8}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    const-wide v5, 0x10500000017L

    .line 15493
    invoke-static {}, Landroid/app/ActivityManager;->staticGetMemoryClass()I

    move-result v0

    invoke-virtual {v4, v5, v6, v0}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    const-wide v5, 0x10500000018L

    .line 15494
    invoke-static {}, Landroid/app/ActivityManager;->staticGetLargeMemoryClass()I

    move-result v0

    invoke-virtual {v4, v5, v6, v0}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 15495
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/16 v5, 0x3e7

    .line 15496
    invoke-virtual {v0, v5}, Lcom/android/server/am/ProcessList;->getMemLevel(I)J

    move-result-wide v5

    div-long/2addr v5, v2

    const-wide v2, 0x10300000019L

    .line 15495
    invoke-virtual {v4, v2, v3, v5, v6}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 15497
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 15498
    invoke-virtual {v0}, Lcom/android/server/am/ProcessList;->getCachedRestoreThresholdKb()J

    move-result-wide v0

    const-wide v2, 0x1030000001aL

    .line 15497
    invoke-virtual {v4, v2, v3, v0, v1}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    const-wide v0, 0x1080000001bL

    .line 15500
    invoke-static {}, Landroid/app/ActivityManager;->isLowRamDeviceStatic()Z

    move-result v2

    invoke-virtual {v4, v0, v1, v2}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    const-wide v0, 0x1080000001cL

    .line 15501
    invoke-static {}, Landroid/app/ActivityManager;->isHighEndGfx()Z

    move-result v2

    invoke-virtual {v4, v0, v1, v2}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    goto :goto_25

    :cond_37
    move-object/from16 v4, v16

    .line 15505
    :cond_38
    :goto_25
    invoke-virtual {v4}, Landroid/util/proto/ProtoOutputStream;->flush()V

    return-void
.end method

.method public final dumpApplicationMemoryUsage(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;[Ljava/lang/String;ZLjava/util/ArrayList;Ljava/io/PrintWriter;)V
    .locals 88
    .annotation build Ldalvik/annotation/optimization/NeverCompile;
    .end annotation

    move-object/from16 v9, p0

    move-object/from16 v15, p2

    move-object/from16 v13, p4

    move-object/from16 v11, p5

    move-object/from16 v10, p7

    .line 14323
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v3

    .line 14324
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v5

    const/4 v14, 0x3

    new-array v12, v14, [J

    const/4 v0, 0x0

    const/16 v30, 0x2

    const-wide/16 v31, 0x0

    const/4 v8, 0x0

    if-nez v10, :cond_9

    const-string v1, "N/A"

    .line 14330
    array-length v2, v11

    if-lez v2, :cond_8

    .line 14331
    aget-object v1, v11, v8

    .line 14332
    invoke-virtual {v1, v8}, Ljava/lang/String;->charAt(I)C

    move-result v2

    const/16 v10, 0x2d

    if-eq v2, v10, :cond_8

    .line 14333
    new-instance v14, Ljava/util/ArrayList;

    invoke-direct {v14}, Ljava/util/ArrayList;-><init>()V

    .line 14335
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V

    .line 14338
    :try_start_0
    aget-object v2, v11, v8

    invoke-static {v2}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v2
    :try_end_0
    .catch Ljava/lang/NumberFormatException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    :catch_0
    const/4 v2, -0x1

    .line 14342
    :goto_0
    iget-object v10, v9, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    new-instance v7, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda29;

    invoke-direct {v7, v2, v11, v14}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda29;-><init>(I[Ljava/lang/String;Ljava/util/ArrayList;)V

    invoke-virtual {v10, v7}, Lcom/android/server/am/AppProfiler;->forAllCpuStats(Ljava/util/function/Consumer;)V

    .line 14348
    invoke-virtual {v14}, Ljava/util/ArrayList;->size()I

    move-result v2

    if-lez v2, :cond_8

    .line 14349
    iget-boolean v7, v13, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    iget-boolean v10, v13, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    move-object/from16 v1, p0

    move-object/from16 v2, p2

    const/4 v9, 0x1

    move v11, v8

    move v8, v10

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->dumpApplicationMemoryUsageHeader(Ljava/io/PrintWriter;JJZZ)V

    .line 14352
    invoke-virtual {v14}, Ljava/util/ArrayList;->size()I

    move-result v1

    sub-int/2addr v1, v9

    move v7, v1

    move-object v1, v0

    :goto_1
    if-ltz v7, :cond_7

    .line 14353
    invoke-virtual {v14, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/internal/os/ProcessCpuTracker$Stats;

    .line 14354
    iget v9, v2, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    if-nez v1, :cond_0

    .line 14356
    new-instance v1, Landroid/os/Debug$MemoryInfo;

    invoke-direct {v1}, Landroid/os/Debug$MemoryInfo;-><init>()V

    .line 14358
    :cond_0
    iget-boolean v3, v13, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDetails:Z

    if-nez v3, :cond_3

    if-nez p6, :cond_1

    iget-boolean v3, v13, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->oomOnly:Z

    if-nez v3, :cond_1

    goto :goto_2

    .line 14363
    :cond_1
    invoke-static {v9, v12, v0}, Landroid/os/Debug;->getPss(I[J[J)J

    move-result-wide v3

    cmp-long v5, v3, v31

    if-nez v5, :cond_2

    goto :goto_3

    :cond_2
    long-to-int v3, v3

    .line 14367
    iput v3, v1, Landroid/os/Debug$MemoryInfo;->nativePss:I

    aget-wide v3, v12, v11

    long-to-int v3, v3

    .line 14368
    iput v3, v1, Landroid/os/Debug$MemoryInfo;->nativePrivateDirty:I

    aget-wide v3, v12, v30

    long-to-int v3, v3

    .line 14369
    iput v3, v1, Landroid/os/Debug$MemoryInfo;->nativeRss:I

    goto :goto_4

    .line 14359
    :cond_3
    :goto_2
    invoke-static {v9, v1}, Landroid/os/Debug;->getMemoryInfo(ILandroid/os/Debug$MemoryInfo;)Z

    move-result v3

    if-nez v3, :cond_4

    :goto_3
    move-object/from16 v23, v1

    move/from16 v24, v7

    move-object/from16 v34, v12

    move-object v15, v13

    move-object/from16 v22, v14

    goto :goto_5

    .line 14371
    :cond_4
    :goto_4
    iget-boolean v3, v13, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    if-nez v3, :cond_5

    iget-boolean v3, v13, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDetails:Z

    if-eqz v3, :cond_5

    .line 14372
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "\n** MEMINFO in pid "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, " ["

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v4, v2, Lcom/android/internal/os/ProcessCpuTracker$Stats;->baseName:Ljava/lang/String;

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v4, "] **"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v15, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14375
    :cond_5
    iget-boolean v3, v13, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    iget-boolean v4, v13, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpFullDetails:Z

    iget-boolean v5, v13, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDalvik:Z

    iget-boolean v6, v13, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSummaryOnly:Z

    iget-object v8, v2, Lcom/android/internal/os/ProcessCpuTracker$Stats;->baseName:Ljava/lang/String;

    const-wide/16 v16, 0x0

    move/from16 v21, v9

    move-wide/from16 v9, v16

    move-object v2, v12

    move-wide/from16 v11, v16

    move-object/from16 v22, v14

    move-wide/from16 v13, v16

    move-wide/from16 v15, v16

    const-wide/16 v17, 0x0

    const-wide/16 v19, 0x0

    move-object/from16 v23, v1

    move-object/from16 v1, p2

    move-object/from16 v34, v2

    move-object/from16 v2, v23

    move/from16 v24, v7

    move/from16 v7, v21

    invoke-static/range {v1 .. v20}, Landroid/app/ActivityThread;->dumpMemInfoTable(Ljava/io/PrintWriter;Landroid/os/Debug$MemoryInfo;ZZZZILjava/lang/String;JJJJJJ)V

    move-object/from16 v15, p4

    .line 14378
    iget-boolean v1, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    if-eqz v1, :cond_6

    .line 14379
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    :cond_6
    :goto_5
    add-int/lit8 v7, v24, -0x1

    move-object v13, v15

    move-object/from16 v14, v22

    move-object/from16 v1, v23

    move-object/from16 v12, v34

    const/4 v11, 0x0

    move-object/from16 v15, p2

    goto/16 :goto_1

    :cond_7
    return-void

    .line 14386
    :cond_8
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "No process found for: "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    move-object/from16 v13, p2

    invoke-virtual {v13, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    return-void

    :cond_9
    move-object/from16 v34, v12

    const/4 v12, 0x1

    move-object/from16 v87, v15

    move-object v15, v13

    move-object/from16 v13, v87

    if-nez p6, :cond_b

    .line 14390
    iget-boolean v1, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->oomOnly:Z

    if-nez v1, :cond_b

    invoke-virtual/range {p7 .. p7}, Ljava/util/ArrayList;->size()I

    move-result v1

    if-eq v1, v12, :cond_a

    iget-boolean v1, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    if-nez v1, :cond_a

    iget-boolean v1, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->packages:Z

    if-eqz v1, :cond_b

    .line 14391
    :cond_a
    iput-boolean v12, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDetails:Z

    .line 14393
    :cond_b
    invoke-virtual/range {p7 .. p7}, Ljava/util/ArrayList;->size()I

    move-result v8

    .line 14394
    iget-boolean v1, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    if-nez v1, :cond_c

    if-le v8, v12, :cond_c

    iget-boolean v1, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->packages:Z

    if-nez v1, :cond_c

    move/from16 v35, v12

    goto :goto_6

    :cond_c
    const/16 v35, 0x0

    :goto_6
    if-eqz v35, :cond_d

    .line 14398
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V

    .line 14401
    :cond_d
    iget-boolean v7, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    iget-boolean v2, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    move-object/from16 v1, p0

    move/from16 v16, v2

    move-object/from16 v2, p2

    move/from16 v17, v8

    move/from16 v8, v16

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->dumpApplicationMemoryUsageHeader(Ljava/io/PrintWriter;JJZZ)V

    .line 14403
    new-instance v8, Ljava/util/ArrayList;

    invoke-direct {v8}, Ljava/util/ArrayList;-><init>()V

    .line 14404
    new-instance v1, Landroid/util/SparseArray;

    invoke-direct {v1}, Landroid/util/SparseArray;-><init>()V

    const/16 v2, 0xf

    new-array v7, v2, [J

    .line 14406
    iget-boolean v3, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDalvik:Z

    if-eqz v3, :cond_e

    new-array v4, v2, [J

    goto :goto_7

    .line 14407
    :cond_e
    sget-object v4, Llibcore/util/EmptyArray;->LONG:[J

    :goto_7
    if-eqz v3, :cond_f

    new-array v5, v2, [J

    goto :goto_8

    .line 14409
    :cond_f
    sget-object v5, Llibcore/util/EmptyArray;->LONG:[J

    :goto_8
    if-eqz v3, :cond_10

    new-array v3, v2, [J

    goto :goto_9

    .line 14411
    :cond_10
    sget-object v3, Llibcore/util/EmptyArray;->LONG:[J

    :goto_9
    const/16 v6, 0x11

    new-array v2, v6, [J

    new-array v12, v6, [J

    move-object/from16 v36, v2

    new-array v2, v6, [J

    const/4 v6, 0x4

    move-object/from16 v38, v2

    new-array v2, v6, [J

    .line 14417
    sget-object v0, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_LABEL:[Ljava/lang/String;

    array-length v6, v0

    move-object/from16 v40, v3

    new-array v3, v6, [J

    .line 14418
    array-length v14, v0

    new-array v14, v14, [J

    .line 14419
    array-length v11, v0

    new-array v11, v11, [J

    .line 14420
    array-length v0, v0

    move-object/from16 v41, v3

    new-array v3, v0, [Ljava/util/ArrayList;

    const/16 v16, 0x1

    add-int/lit8 v0, v17, -0x1

    move-object/from16 v42, v3

    move-wide/from16 v43, v31

    const/16 v29, 0x0

    move v3, v0

    const/4 v0, 0x0

    :goto_a
    const/16 v45, 0x5

    const/16 v46, 0x8

    const/16 v47, 0x7

    const/16 v48, 0x6

    move/from16 v49, v6

    const/16 v50, 0xd

    const/16 v52, 0x9

    if-ltz v3, :cond_29

    .line 14431
    invoke-virtual {v10, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v17

    move-object/from16 v6, v17

    check-cast v6, Lcom/android/server/am/ProcessRecord;

    .line 14439
    iget-object v10, v9, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v10

    .line 14440
    :try_start_1
    invoke-virtual {v6}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v17

    move/from16 v66, v3

    .line 14441
    invoke-virtual {v6}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v3

    move-object/from16 v53, v11

    .line 14442
    iget-object v11, v6, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {v11}, Lcom/android/server/am/ProcessStateRecord;->getSetAdjWithServices()I

    move-result v11

    .line 14443
    invoke-virtual {v6}, Lcom/android/server/am/ProcessRecord;->hasActivities()Z

    move-result v67

    move-object/from16 v68, v5

    .line 14445
    iget v5, v6, Lcom/android/server/am/ProcessRecord;->uid:I

    .line 14447
    monitor-exit v10
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_4

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    if-eqz v17, :cond_28

    if-nez v0, :cond_11

    .line 14450
    new-instance v0, Landroid/os/Debug$MemoryInfo;

    invoke-direct {v0}, Landroid/os/Debug$MemoryInfo;-><init>()V

    :cond_11
    move-object v10, v0

    .line 14457
    iget-boolean v0, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDetails:Z

    if-nez v0, :cond_14

    if-nez p6, :cond_12

    iget-boolean v0, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->oomOnly:Z

    if-nez v0, :cond_12

    goto :goto_b

    .line 14469
    :cond_12
    invoke-static {}, Landroid/os/SystemClock;->currentThreadTimeMillis()J

    move-result-wide v20

    move-object/from16 v69, v4

    move-object/from16 v18, v12

    move-object/from16 v4, v34

    move/from16 v34, v11

    .line 14470
    invoke-static {v3, v4, v2}, Landroid/os/Debug;->getPss(I[J[J)J

    move-result-wide v11

    cmp-long v0, v11, v31

    if-nez v0, :cond_13

    move-object/from16 v70, v1

    const/4 v1, 0x0

    const/4 v11, 0x1

    goto :goto_c

    :cond_13
    long-to-int v0, v11

    .line 14474
    iput v0, v10, Landroid/os/Debug$MemoryInfo;->dalvikPss:I

    .line 14475
    invoke-static {}, Landroid/os/SystemClock;->currentThreadTimeMillis()J

    move-result-wide v11

    move-object/from16 v70, v1

    move-wide/from16 v22, v11

    const/4 v1, 0x0

    aget-wide v11, v4, v1

    long-to-int v0, v11

    .line 14476
    iput v0, v10, Landroid/os/Debug$MemoryInfo;->dalvikPrivateDirty:I

    aget-wide v11, v4, v30

    long-to-int v0, v11

    .line 14477
    iput v0, v10, Landroid/os/Debug$MemoryInfo;->dalvikRss:I

    const/4 v11, 0x1

    aget-wide v24, v2, v11

    aget-wide v26, v2, v30

    move-object/from16 p3, v2

    move-wide/from16 v76, v20

    move-wide/from16 v74, v22

    move-wide/from16 v1, v24

    move-wide/from16 v71, v26

    move/from16 v73, v29

    const/16 v65, 0x3

    goto :goto_d

    :cond_14
    :goto_b
    move-object/from16 v70, v1

    move-object/from16 v69, v4

    move-object/from16 v18, v12

    move-object/from16 v4, v34

    const/4 v1, 0x0

    move/from16 v34, v11

    const/4 v11, 0x1

    .line 14459
    invoke-static {}, Landroid/os/SystemClock;->currentThreadTimeMillis()J

    move-result-wide v20

    .line 14460
    invoke-static {v3, v10}, Landroid/os/Debug;->getMemoryInfo(ILandroid/os/Debug$MemoryInfo;)Z

    move-result v0

    if-nez v0, :cond_15

    :goto_c
    move-object/from16 p3, v2

    move-object/from16 v81, v4

    move-object/from16 v86, v7

    move-object/from16 v83, v8

    move-object v0, v10

    move-object/from16 v80, v14

    move-object/from16 v78, v18

    move/from16 v3, v49

    move-object/from16 v34, v53

    move-object/from16 v5, v69

    goto/16 :goto_19

    .line 14463
    :cond_15
    invoke-static {}, Landroid/os/SystemClock;->currentThreadTimeMillis()J

    move-result-wide v22

    .line 14464
    iget-boolean v0, v10, Landroid/os/Debug$MemoryInfo;->hasSwappedOutPss:Z

    const/16 v12, 0xe

    .line 14465
    invoke-virtual {v10, v12}, Landroid/os/Debug$MemoryInfo;->getOtherPrivate(I)I

    move-result v11

    int-to-long v11, v11

    move/from16 v24, v0

    const/16 v1, 0xf

    .line 14466
    invoke-virtual {v10, v1}, Landroid/os/Debug$MemoryInfo;->getOtherPrivate(I)I

    move-result v0

    move-object/from16 p3, v2

    int-to-long v1, v0

    move-wide/from16 v71, v1

    move-wide v1, v11

    move-wide/from16 v76, v20

    move-wide/from16 v74, v22

    move/from16 v73, v24

    const/16 v65, 0x4

    .line 14481
    :goto_d
    iget-boolean v0, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    if-nez v0, :cond_16

    iget-boolean v0, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDetails:Z

    if-eqz v0, :cond_16

    .line 14482
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "\n** MEMINFO in pid "

    invoke-virtual {v0, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v11, " ["

    invoke-virtual {v0, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v11, v6, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v0, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v11, "] **"

    invoke-virtual {v0, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v13, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14484
    :cond_16
    iget-boolean v0, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDetails:Z

    if-eqz v0, :cond_1c

    .line 14485
    iget-boolean v0, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->localOnly:Z

    if-eqz v0, :cond_18

    .line 14486
    iget-boolean v12, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    move-object/from16 v78, v18

    const/4 v5, 0x1

    iget-boolean v0, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpFullDetails:Z

    move-object v11, v13

    move v13, v0

    iget-boolean v0, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDalvik:Z

    move-object/from16 v80, v14

    const/16 v79, 0x3

    move v14, v0

    iget-boolean v0, v15, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSummaryOnly:Z

    move-object/from16 v81, v4

    move-object v4, v15

    move v15, v0

    iget-object v0, v6, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v17, v0

    const-wide/16 v18, 0x0

    const-wide/16 v20, 0x0

    const-wide/16 v22, 0x0

    const-wide/16 v24, 0x0

    const-wide/16 v26, 0x0

    const-wide/16 v28, 0x0

    move-object/from16 v82, v10

    move-object/from16 v10, p2

    move-wide/from16 v84, v1

    move-object/from16 v83, v8

    move-object v8, v11

    move/from16 v1, v34

    move-object/from16 v34, v53

    move-object/from16 v11, v82

    move/from16 v16, v3

    invoke-static/range {v10 .. v29}, Landroid/app/ActivityThread;->dumpMemInfoTable(Ljava/io/PrintWriter;Landroid/os/Debug$MemoryInfo;ZZZZILjava/lang/String;JJJJJJ)V

    .line 14488
    iget-boolean v0, v4, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    if-eqz v0, :cond_17

    .line 14489
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    :cond_17
    move-object/from16 v12, p1

    goto/16 :goto_12

    :cond_18
    move-wide/from16 v84, v1

    move-object/from16 v81, v4

    move-object/from16 v83, v8

    move-object/from16 v82, v10

    move-object v8, v13

    move-object/from16 v80, v14

    move-object v4, v15

    move-object/from16 v78, v18

    move/from16 v1, v34

    move-object/from16 v34, v53

    const/4 v2, 0x1

    const/16 v79, 0x3

    .line 14492
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->flush()V

    .line 14494
    :try_start_2
    new-instance v15, Lcom/android/internal/os/TransferPipe;

    invoke-direct {v15}, Lcom/android/internal/os/TransferPipe;-><init>()V

    .line 14496
    invoke-static {}, Lcom/android/server/am/FreecessController;->getInstance()Lcom/android/server/am/FreecessController;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/am/FreecessController;->getFreecessEnabled()Z

    move-result v19
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_4
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_3

    if-eqz v19, :cond_19

    .line 14501
    :try_start_3
    invoke-static {}, Lcom/android/server/am/FreecessController;->getInstance()Lcom/android/server/am/FreecessController;

    move-result-object v0

    invoke-virtual {v0, v5, v2}, Lcom/android/server/am/FreecessController;->setIsDoingGC(IZ)V

    .line 14502
    invoke-static {}, Lcom/android/server/am/FreecessController;->getInstance()Lcom/android/server/am/FreecessController;

    move-result-object v0

    const-string v10, "DumpMemInfo"

    const-wide/16 v11, 0xbb8

    invoke-virtual {v0, v5, v10, v11, v12}, Lcom/android/server/am/FreecessController;->protectFreezePackage(ILjava/lang/String;J)Z

    .line 14505
    :cond_19
    invoke-virtual {v15}, Lcom/android/internal/os/TransferPipe;->getWriteFd()Landroid/os/ParcelFileDescriptor;

    move-result-object v11

    iget-boolean v13, v4, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    iget-boolean v14, v4, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpFullDetails:Z

    iget-boolean v0, v4, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDalvik:Z

    iget-boolean v12, v4, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSummaryOnly:Z

    iget-boolean v10, v4, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpUnreachable:Z
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    move/from16 v18, v10

    move-object/from16 v10, v17

    move/from16 v16, v12

    move-object/from16 v12, v82

    move-object v2, v15

    move v15, v0

    move/from16 v17, v18

    move-object/from16 v18, p5

    :try_start_4
    invoke-interface/range {v10 .. v18}, Landroid/app/IApplicationThread;->dumpMemInfo(Landroid/os/ParcelFileDescriptor;Landroid/os/Debug$MemoryInfo;ZZZZZ[Ljava/lang/String;)V

    .line 14508
    iget-boolean v0, v4, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpUnreachable:Z
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    if-eqz v0, :cond_1a

    const-wide/16 v10, 0x7530

    goto :goto_e

    :cond_1a
    const-wide/16 v10, 0x1388

    :goto_e
    move-object/from16 v12, p1

    :try_start_5
    invoke-virtual {v2, v12, v10, v11}, Lcom/android/internal/os/TransferPipe;->go(Ljava/io/FileDescriptor;J)V
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    .line 14510
    :try_start_6
    invoke-virtual {v2}, Lcom/android/internal/os/TransferPipe;->kill()V

    if-eqz v19, :cond_1d

    .line 14513
    invoke-static {}, Lcom/android/server/am/FreecessController;->getInstance()Lcom/android/server/am/FreecessController;

    move-result-object v0

    const/4 v2, 0x0

    invoke-virtual {v0, v5, v2}, Lcom/android/server/am/FreecessController;->setIsDoingGC(IZ)V

    goto/16 :goto_12

    :catchall_0
    move-exception v0

    goto :goto_f

    :catchall_1
    move-exception v0

    move-object/from16 v12, p1

    goto :goto_f

    :catchall_2
    move-exception v0

    move-object/from16 v12, p1

    move-object v2, v15

    .line 14510
    :goto_f
    invoke-virtual {v2}, Lcom/android/internal/os/TransferPipe;->kill()V

    if-eqz v19, :cond_1b

    .line 14513
    invoke-static {}, Lcom/android/server/am/FreecessController;->getInstance()Lcom/android/server/am/FreecessController;

    move-result-object v2

    const/4 v10, 0x0

    invoke-virtual {v2, v5, v10}, Lcom/android/server/am/FreecessController;->setIsDoingGC(IZ)V

    .line 14516
    :cond_1b
    throw v0
    :try_end_6
    .catch Ljava/io/IOException; {:try_start_6 .. :try_end_6} :catch_2
    .catch Landroid/os/RemoteException; {:try_start_6 .. :try_end_6} :catch_1

    :catch_1
    move-exception v0

    goto :goto_10

    :catch_2
    move-exception v0

    goto :goto_11

    :catch_3
    move-exception v0

    move-object/from16 v12, p1

    .line 14523
    :goto_10
    iget-boolean v2, v4, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    if-nez v2, :cond_1d

    .line 14524
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Got RemoteException! "

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v8, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14525
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->flush()V

    goto :goto_12

    :catch_4
    move-exception v0

    move-object/from16 v12, p1

    .line 14518
    :goto_11
    iget-boolean v2, v4, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    if-nez v2, :cond_1d

    .line 14519
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Got IoException! "

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v8, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14520
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->flush()V

    goto :goto_12

    :cond_1c
    move-object/from16 v12, p1

    move-wide/from16 v84, v1

    move-object/from16 v81, v4

    move-object/from16 v83, v8

    move-object/from16 v82, v10

    move-object v8, v13

    move-object/from16 v80, v14

    move-object v4, v15

    move-object/from16 v78, v18

    move/from16 v1, v34

    move-object/from16 v34, v53

    const/16 v79, 0x3

    .line 14531
    :cond_1d
    :goto_12
    invoke-virtual/range {v82 .. v82}, Landroid/os/Debug$MemoryInfo;->getTotalPss()I

    move-result v0

    int-to-long v10, v0

    .line 14532
    invoke-virtual/range {v82 .. v82}, Landroid/os/Debug$MemoryInfo;->getTotalUss()I

    move-result v0

    int-to-long v13, v0

    .line 14533
    invoke-virtual/range {v82 .. v82}, Landroid/os/Debug$MemoryInfo;->getTotalRss()I

    move-result v0

    move v5, v3

    int-to-long v2, v0

    .line 14534
    invoke-virtual/range {v82 .. v82}, Landroid/os/Debug$MemoryInfo;->getTotalSwappedOutPss()I

    move-result v0

    move-object/from16 v86, v7

    int-to-long v7, v0

    .line 14536
    iget-object v15, v9, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v15

    .line 14537
    :try_start_7
    invoke-virtual {v6}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v0

    if-eqz v0, :cond_1e

    iget-object v0, v6, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {v0}, Lcom/android/server/am/ProcessStateRecord;->getSetAdjWithServices()I

    move-result v0

    if-ne v1, v0, :cond_1e

    .line 14539
    iget-object v0, v6, Lcom/android/server/am/ProcessRecord;->mProfile:Lcom/android/server/am/ProcessProfileRecord;

    const/16 v61, 0x1

    sub-long v63, v74, v76

    move-object/from16 v54, v0

    move-wide/from16 v55, v10

    move-wide/from16 v57, v13

    move-wide/from16 v59, v2

    move/from16 v62, v65

    invoke-virtual/range {v54 .. v64}, Lcom/android/server/am/ProcessProfileRecord;->addPss(JJJZIJ)V

    .line 14541
    invoke-virtual {v6}, Lcom/android/server/am/ProcessRecord;->getPkgList()Lcom/android/server/am/PackageList;

    move-result-object v0

    new-instance v12, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda30;

    move-object/from16 v53, v12

    move-object/from16 v54, v6

    move-wide/from16 v55, v10

    move-wide/from16 v57, v13

    move-wide/from16 v59, v2

    move/from16 v61, v65

    move-wide/from16 v62, v74

    move-wide/from16 v64, v76

    invoke-direct/range {v53 .. v65}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda30;-><init>(Lcom/android/server/am/ProcessRecord;JJJIJJ)V

    invoke-virtual {v0, v12}, Lcom/android/server/am/PackageList;->forEachPackageProcessStats(Ljava/util/function/Consumer;)V

    .line 14553
    :cond_1e
    monitor-exit v15
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_3

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 14555
    iget-boolean v0, v4, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    if-nez v0, :cond_26

    aget-wide v12, v86, v52

    add-long/2addr v12, v10

    aput-wide v12, v86, v52

    const/16 v12, 0xa

    aget-wide v13, v86, v12

    add-long/2addr v13, v7

    aput-wide v13, v86, v12

    const/16 v0, 0xb

    aget-wide v12, v86, v0

    add-long/2addr v12, v2

    aput-wide v12, v86, v0

    aget-wide v12, v86, v50

    add-long v12, v12, v84

    aput-wide v12, v86, v50

    const/16 v51, 0xe

    aget-wide v12, v86, v51

    add-long v12, v12, v71

    aput-wide v12, v86, v51

    .line 14561
    new-instance v0, Lcom/android/server/am/ActivityManagerService$MemItem;

    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V

    iget-object v13, v6, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v13, " (pid "

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v12, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    if-eqz v67, :cond_1f

    const-string v13, " / activities)"

    goto :goto_13

    :cond_1f
    const-string v13, ")"

    .line 14562
    :goto_13
    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v54

    iget-object v12, v6, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget v6, v6, Lcom/android/server/am/ProcessRecord;->userId:I

    move-object/from16 v53, v0

    move-object/from16 v55, v12

    move-wide/from16 v56, v10

    move-wide/from16 v58, v7

    move-wide/from16 v60, v2

    move/from16 v62, v5

    move/from16 v63, v6

    move/from16 v64, v67

    invoke-direct/range {v53 .. v64}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJJIIZ)V

    move-object/from16 v6, v83

    .line 14564
    invoke-virtual {v6, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    move-object/from16 v13, v70

    .line 14565
    invoke-virtual {v13, v5, v0}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    const/4 v5, 0x0

    aget-wide v14, v86, v5

    move-object/from16 v12, v82

    .line 14567
    iget v5, v12, Landroid/os/Debug$MemoryInfo;->nativePss:I

    int-to-long v4, v5

    add-long/2addr v14, v4

    const/4 v4, 0x0

    aput-wide v14, v86, v4

    const/4 v4, 0x1

    aget-wide v14, v86, v4

    .line 14568
    iget v5, v12, Landroid/os/Debug$MemoryInfo;->nativeSwappedOutPss:I

    int-to-long v5, v5

    add-long/2addr v14, v5

    aput-wide v14, v86, v4

    aget-wide v4, v86, v30

    .line 14569
    iget v6, v12, Landroid/os/Debug$MemoryInfo;->nativeRss:I

    int-to-long v14, v6

    add-long/2addr v4, v14

    aput-wide v4, v86, v30

    aget-wide v4, v86, v79

    .line 14570
    iget v6, v12, Landroid/os/Debug$MemoryInfo;->dalvikPss:I

    int-to-long v14, v6

    add-long/2addr v4, v14

    aput-wide v4, v86, v79

    const/4 v4, 0x4

    aget-wide v5, v86, v4

    .line 14571
    iget v14, v12, Landroid/os/Debug$MemoryInfo;->dalvikSwappedOutPss:I

    int-to-long v14, v14

    add-long/2addr v5, v14

    aput-wide v5, v86, v4

    aget-wide v4, v86, v45

    .line 14572
    iget v6, v12, Landroid/os/Debug$MemoryInfo;->dalvikRss:I

    int-to-long v14, v6

    add-long/2addr v4, v14

    aput-wide v4, v86, v45

    move-object/from16 v5, v69

    const/4 v4, 0x0

    .line 14573
    :goto_14
    array-length v6, v5

    if-ge v4, v6, :cond_20

    .line 14574
    aget-wide v14, v5, v4

    add-int/lit8 v6, v4, 0x11

    move-object/from16 v70, v13

    invoke-virtual {v12, v6}, Landroid/os/Debug$MemoryInfo;->getOtherPss(I)I

    move-result v13

    move-wide/from16 v16, v2

    int-to-long v2, v13

    add-long/2addr v14, v2

    aput-wide v14, v5, v4

    .line 14575
    aget-wide v2, v68, v4

    .line 14576
    invoke-virtual {v12, v6}, Landroid/os/Debug$MemoryInfo;->getOtherSwappedOutPss(I)I

    move-result v13

    int-to-long v13, v13

    add-long/2addr v2, v13

    aput-wide v2, v68, v4

    .line 14577
    aget-wide v2, v40, v4

    invoke-virtual {v12, v6}, Landroid/os/Debug$MemoryInfo;->getOtherRss(I)I

    move-result v6

    int-to-long v13, v6

    add-long/2addr v2, v13

    aput-wide v2, v40, v4

    add-int/lit8 v4, v4, 0x1

    move-wide/from16 v2, v16

    move-object/from16 v13, v70

    goto :goto_14

    :cond_20
    move-wide/from16 v16, v2

    move-object/from16 v70, v13

    aget-wide v2, v86, v48

    .line 14579
    iget v4, v12, Landroid/os/Debug$MemoryInfo;->otherPss:I

    int-to-long v13, v4

    add-long/2addr v2, v13

    aput-wide v2, v86, v48

    aget-wide v2, v86, v46

    .line 14580
    iget v4, v12, Landroid/os/Debug$MemoryInfo;->otherRss:I

    int-to-long v13, v4

    add-long/2addr v2, v13

    aput-wide v2, v86, v46

    aget-wide v2, v86, v47

    .line 14581
    iget v4, v12, Landroid/os/Debug$MemoryInfo;->otherSwappedOutPss:I

    int-to-long v13, v4

    add-long/2addr v2, v13

    aput-wide v2, v86, v47

    const/4 v2, 0x0

    :goto_15
    const/16 v3, 0x11

    if-ge v2, v3, :cond_21

    .line 14583
    invoke-virtual {v12, v2}, Landroid/os/Debug$MemoryInfo;->getOtherPss(I)I

    move-result v3

    int-to-long v3, v3

    .line 14584
    aget-wide v13, v36, v2

    add-long/2addr v13, v3

    aput-wide v13, v36, v2

    aget-wide v13, v86, v48

    sub-long/2addr v13, v3

    aput-wide v13, v86, v48

    .line 14586
    invoke-virtual {v12, v2}, Landroid/os/Debug$MemoryInfo;->getOtherSwappedOutPss(I)I

    move-result v3

    int-to-long v3, v3

    .line 14587
    aget-wide v13, v78, v2

    add-long/2addr v13, v3

    aput-wide v13, v78, v2

    aget-wide v13, v86, v47

    sub-long/2addr v13, v3

    aput-wide v13, v86, v47

    .line 14589
    invoke-virtual {v12, v2}, Landroid/os/Debug$MemoryInfo;->getOtherRss(I)I

    move-result v3

    int-to-long v3, v3

    .line 14590
    aget-wide v13, v38, v2

    add-long/2addr v13, v3

    aput-wide v13, v38, v2

    aget-wide v13, v86, v46

    sub-long/2addr v13, v3

    aput-wide v13, v86, v46

    add-int/lit8 v2, v2, 0x1

    goto :goto_15

    :cond_21
    const/16 v2, 0x384

    if-lt v1, v2, :cond_22

    add-long v43, v43, v10

    :cond_22
    move/from16 v3, v49

    const/4 v2, 0x0

    :goto_16
    if-ge v2, v3, :cond_27

    add-int/lit8 v6, v3, -0x1

    if-eq v2, v6, :cond_24

    .line 14600
    sget-object v4, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_ADJ:[I

    aget v6, v4, v2

    if-lt v1, v6, :cond_23

    add-int/lit8 v6, v2, 0x1

    aget v4, v4, v6

    if-ge v1, v4, :cond_23

    goto :goto_17

    :cond_23
    add-int/lit8 v2, v2, 0x1

    goto :goto_16

    .line 14603
    :cond_24
    :goto_17
    aget-wide v13, v41, v2

    add-long/2addr v13, v10

    aput-wide v13, v41, v2

    .line 14604
    aget-wide v10, v80, v2

    add-long/2addr v10, v7

    aput-wide v10, v80, v2

    .line 14605
    aget-object v1, v42, v2

    if-nez v1, :cond_25

    .line 14606
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    aput-object v1, v42, v2

    .line 14608
    :cond_25
    aget-object v1, v42, v2

    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 14609
    aget-wide v0, v34, v2

    add-long v0, v0, v16

    aput-wide v0, v34, v2

    goto :goto_18

    :cond_26
    move/from16 v3, v49

    move-object/from16 v5, v69

    move-object/from16 v12, v82

    :cond_27
    :goto_18
    move-object v0, v12

    move/from16 v29, v73

    goto :goto_1a

    :catchall_3
    move-exception v0

    .line 14553
    :try_start_8
    monitor-exit v15
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_3

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v0

    :cond_28
    move-object/from16 v70, v1

    move-object/from16 p3, v2

    move-object v5, v4

    move-object/from16 v86, v7

    move-object/from16 v83, v8

    move-object/from16 v78, v12

    move-object/from16 v80, v14

    move-object/from16 v81, v34

    move/from16 v3, v49

    move-object/from16 v34, v53

    :goto_19
    const/16 v79, 0x3

    :goto_1a
    add-int/lit8 v1, v66, -0x1

    move-object/from16 v13, p2

    move-object/from16 v2, p3

    move-object/from16 v15, p4

    move-object/from16 v10, p7

    move v6, v3

    move-object v4, v5

    move-object/from16 v11, v34

    move-object/from16 v5, v68

    move-object/from16 v12, v78

    move-object/from16 v14, v80

    move-object/from16 v34, v81

    move-object/from16 v8, v83

    move-object/from16 v7, v86

    move v3, v1

    move-object/from16 v1, v70

    goto/16 :goto_a

    :catchall_4
    move-exception v0

    .line 14447
    :try_start_9
    monitor-exit v10
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_4

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v0

    :cond_29
    move-object/from16 v70, v1

    move-object/from16 p3, v2

    move-object/from16 v68, v5

    move-object/from16 v86, v7

    move-object/from16 v83, v8

    move-object/from16 v78, v12

    move-object/from16 v80, v14

    move-object/from16 v81, v34

    move/from16 v3, v49

    const/16 v51, 0xe

    const/16 v79, 0x3

    move-object v5, v4

    move-object/from16 v34, v11

    if-eqz v35, :cond_53

    const/4 v1, 0x1

    new-array v12, v1, [Landroid/os/Debug$MemoryInfo;

    .line 14622
    iget-object v0, v9, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    new-instance v1, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda31;

    move-object v10, v1

    move-object/from16 v11, v70

    move/from16 v13, p6

    move-object/from16 v14, p4

    move-object/from16 v15, v81

    move-object/from16 v16, p3

    move-object/from16 v17, v86

    move-object/from16 v18, v83

    move-object/from16 v19, v5

    move-object/from16 v20, v68

    move-object/from16 v21, v40

    move-object/from16 v22, v36

    move-object/from16 v23, v78

    move-object/from16 v24, v38

    move-object/from16 v25, v41

    move-object/from16 v26, v80

    move-object/from16 v27, v42

    move-object/from16 v28, v34

    invoke-direct/range {v10 .. v28}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda31;-><init>(Landroid/util/SparseArray;[Landroid/os/Debug$MemoryInfo;ZLcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;[J[J[JLjava/util/ArrayList;[J[J[J[J[J[J[J[J[Ljava/util/ArrayList;[J)V

    invoke-virtual {v0, v1}, Lcom/android/server/am/AppProfiler;->forAllCpuStats(Ljava/util/function/Consumer;)V

    .line 14701
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    .line 14703
    new-instance v1, Lcom/android/server/am/ActivityManagerService$MemItem;

    const-string v11, "Native"

    const-string v12, "Native"

    const/4 v2, 0x0

    aget-wide v13, v86, v2

    const/4 v4, 0x1

    aget-wide v15, v86, v4

    aget-wide v17, v86, v30

    const/16 v19, -0x1

    move-object v10, v1

    invoke-direct/range {v10 .. v19}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJJI)V

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 14706
    new-instance v1, Lcom/android/server/am/ActivityManagerService$MemItem;

    const-string v54, "Dalvik"

    const-string v55, "Dalvik"

    aget-wide v56, v86, v79

    const/4 v6, 0x4

    aget-wide v58, v86, v6

    aget-wide v60, v86, v45

    const/16 v62, -0x2

    move-object/from16 v53, v1

    invoke-direct/range {v53 .. v62}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJJI)V

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 14708
    new-instance v1, Lcom/android/server/am/ActivityManagerService$MemItem;

    const-string v11, "Unknown"

    const-string v12, "Unknown"

    aget-wide v13, v86, v48

    aget-wide v15, v86, v47

    aget-wide v17, v86, v46

    const/16 v19, -0x3

    move-object v10, v1

    invoke-direct/range {v10 .. v19}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJJI)V

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    move v8, v2

    const/16 v1, 0x11

    :goto_1b
    if-ge v8, v1, :cond_2a

    .line 14711
    invoke-static {v8}, Landroid/os/Debug$MemoryInfo;->getOtherLabel(I)Ljava/lang/String;

    move-result-object v55

    .line 14712
    new-instance v7, Lcom/android/server/am/ActivityManagerService$MemItem;

    aget-wide v56, v36, v8

    aget-wide v58, v78, v8

    aget-wide v60, v38, v8

    move-object/from16 v53, v7

    move-object/from16 v54, v55

    move/from16 v62, v8

    invoke-direct/range {v53 .. v62}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJJI)V

    invoke-virtual {v0, v7}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    add-int/lit8 v8, v8, 0x1

    goto :goto_1b

    .line 14714
    :cond_2a
    array-length v1, v5

    const/16 v10, 0xc

    if-lez v1, :cond_2f

    .line 14716
    invoke-virtual {v0}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :cond_2b
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v7

    if-eqz v7, :cond_2f

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/am/ActivityManagerService$MemItem;

    .line 14718
    iget v8, v7, Lcom/android/server/am/ActivityManagerService$MemItem;->id:I

    const/4 v11, -0x2

    if-ne v8, v11, :cond_2c

    move v8, v2

    move/from16 v14, v79

    :goto_1c
    const/16 v11, 0xa

    goto :goto_1d

    :cond_2c
    if-nez v8, :cond_2d

    move v8, v6

    move/from16 v14, v52

    goto :goto_1c

    :cond_2d
    const/16 v11, 0xa

    if-ne v8, v11, :cond_2e

    move v14, v10

    move v8, v11

    goto :goto_1d

    :cond_2e
    if-ne v8, v10, :cond_2b

    move/from16 v8, v50

    move/from16 v14, v51

    .line 14733
    :goto_1d
    new-instance v12, Ljava/util/ArrayList;

    invoke-direct {v12}, Ljava/util/ArrayList;-><init>()V

    iput-object v12, v7, Lcom/android/server/am/ActivityManagerService$MemItem;->subitems:Ljava/util/ArrayList;

    :goto_1e
    if-gt v8, v14, :cond_2b

    add-int/lit8 v12, v8, 0x11

    .line 14735
    invoke-static {v12}, Landroid/os/Debug$MemoryInfo;->getOtherLabel(I)Ljava/lang/String;

    move-result-object v17

    .line 14737
    iget-object v12, v7, Lcom/android/server/am/ActivityManagerService$MemItem;->subitems:Ljava/util/ArrayList;

    new-instance v13, Lcom/android/server/am/ActivityManagerService$MemItem;

    aget-wide v18, v5, v8

    aget-wide v20, v68, v8

    aget-wide v22, v40, v8

    move-object v15, v13

    move-object/from16 v16, v17

    move/from16 v24, v8

    invoke-direct/range {v15 .. v24}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJJI)V

    invoke-virtual {v12, v13}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    add-int/lit8 v8, v8, 0x1

    goto :goto_1e

    :cond_2f
    const/16 v11, 0xa

    .line 14743
    new-instance v12, Ljava/util/ArrayList;

    invoke-direct {v12}, Ljava/util/ArrayList;-><init>()V

    move v8, v2

    :goto_1f
    if-ge v8, v3, :cond_32

    .line 14745
    aget-wide v16, v41, v8

    cmp-long v1, v16, v31

    move-object/from16 v5, p4

    if-eqz v1, :cond_31

    .line 14746
    iget-boolean v1, v5, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    if-eqz v1, :cond_30

    sget-object v1, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_COMPACT_LABEL:[Ljava/lang/String;

    aget-object v1, v1, v8

    goto :goto_20

    .line 14747
    :cond_30
    sget-object v1, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_LABEL:[Ljava/lang/String;

    aget-object v1, v1, v8

    :goto_20
    move-object v15, v1

    .line 14748
    new-instance v1, Lcom/android/server/am/ActivityManagerService$MemItem;

    aget-wide v18, v80, v8

    aget-wide v20, v34, v8

    sget-object v6, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_ADJ:[I

    aget v22, v6, v8

    move-object v13, v1

    move-object v14, v15

    invoke-direct/range {v13 .. v22}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJJI)V

    .line 14750
    aget-object v6, v42, v8

    iput-object v6, v1, Lcom/android/server/am/ActivityManagerService$MemItem;->subitems:Ljava/util/ArrayList;

    .line 14751
    invoke-virtual {v12, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    :cond_31
    add-int/lit8 v8, v8, 0x1

    goto :goto_1f

    :cond_32
    move-object/from16 v5, p4

    .line 14754
    iget-boolean v1, v5, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    if-nez v1, :cond_33

    .line 14755
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    :cond_33
    if-nez p6, :cond_34

    .line 14757
    iget-boolean v1, v5, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->oomOnly:Z

    if-nez v1, :cond_34

    iget-boolean v1, v5, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    if-nez v1, :cond_34

    .line 14758
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    const-string v1, "Total RSS by process:"

    move-object/from16 v8, p2

    .line 14759
    invoke-virtual {v8, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    const-string v3, "  "

    const-string/jumbo v6, "proc"

    const/4 v7, 0x1

    .line 14760
    iget-boolean v13, v5, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    const/4 v14, 0x0

    const/4 v15, 0x0

    move/from16 v21, v2

    move-object/from16 v1, p2

    move/from16 v22, v4

    move-object v2, v3

    move-object v3, v6

    move-object v6, v5

    move-object/from16 v4, v83

    move v5, v7

    move/from16 v24, v11

    move/from16 v23, v51

    move-object/from16 v16, v83

    move-object v11, v6

    move v6, v13

    move-object/from16 v25, v86

    move v7, v14

    move-object v14, v8

    move-object/from16 v26, v16

    move v8, v15

    invoke-static/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;ZZZZ)V

    .line 14761
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    goto :goto_21

    :cond_34
    move-object/from16 v14, p2

    move/from16 v21, v2

    move/from16 v22, v4

    move/from16 v24, v11

    move/from16 v23, v51

    move-object/from16 v26, v83

    move-object/from16 v25, v86

    move-object v11, v5

    .line 14763
    :goto_21
    iget-boolean v1, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    if-nez v1, :cond_35

    const-string v1, "Total RSS by OOM adjustment:"

    .line 14764
    invoke-virtual {v14, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    :cond_35
    const-string v2, "  "

    const-string/jumbo v3, "oom"

    const/4 v5, 0x0

    .line 14766
    iget-boolean v6, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    const/4 v7, 0x0

    const/4 v8, 0x0

    move-object/from16 v1, p2

    move-object v4, v12

    invoke-static/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;ZZZZ)V

    if-nez p6, :cond_38

    .line 14767
    iget-boolean v1, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->oomOnly:Z

    if-nez v1, :cond_38

    if-eqz p8, :cond_36

    move-object/from16 v13, p8

    goto :goto_22

    :cond_36
    move-object v13, v14

    .line 14769
    :goto_22
    iget-boolean v1, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    if-nez v1, :cond_37

    .line 14770
    invoke-virtual {v13}, Ljava/io/PrintWriter;->println()V

    const-string v1, "Total RSS by category:"

    .line 14771
    invoke-virtual {v13, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    :cond_37
    const-string v1, "  "

    const-string v15, "cat"

    const/16 v17, 0x1

    .line 14773
    iget-boolean v2, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    const/16 v19, 0x0

    const/16 v20, 0x0

    move-object v8, v14

    move-object v14, v1

    move-object/from16 v16, v0

    move/from16 v18, v2

    invoke-static/range {v13 .. v20}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;ZZZZ)V

    goto :goto_23

    :cond_38
    move-object v8, v14

    .line 14775
    :goto_23
    iget-boolean v1, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSwapPss:Z

    if-eqz v1, :cond_39

    if-eqz v29, :cond_39

    aget-wide v1, v25, v24

    cmp-long v1, v1, v31

    if-eqz v1, :cond_39

    move/from16 v1, v22

    goto :goto_24

    :cond_39
    move/from16 v1, v21

    :goto_24
    iput-boolean v1, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSwapPss:Z

    if-nez p6, :cond_3a

    .line 14776
    iget-boolean v1, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->oomOnly:Z

    if-nez v1, :cond_3a

    iget-boolean v1, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    if-nez v1, :cond_3a

    .line 14777
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    const-string v1, "Total PSS by process:"

    .line 14778
    invoke-virtual {v8, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    const-string v2, "  "

    const-string/jumbo v3, "proc"

    const/4 v5, 0x1

    .line 14779
    iget-boolean v6, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    const/4 v7, 0x1

    iget-boolean v13, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSwapPss:Z

    move-object/from16 v1, p2

    move-object/from16 v4, v26

    move-object v15, v8

    move v8, v13

    invoke-static/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;ZZZZ)V

    .line 14781
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    goto :goto_25

    :cond_3a
    move-object v15, v8

    .line 14783
    :goto_25
    iget-boolean v1, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    if-nez v1, :cond_3b

    const-string v1, "Total PSS by OOM adjustment:"

    .line 14784
    invoke-virtual {v15, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    :cond_3b
    const-string v2, "  "

    const-string/jumbo v3, "oom"

    const/4 v5, 0x0

    .line 14786
    iget-boolean v6, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    const/4 v7, 0x1

    iget-boolean v8, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSwapPss:Z

    move-object/from16 v1, p2

    move-object v4, v12

    invoke-static/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;ZZZZ)V

    if-nez p6, :cond_3e

    .line 14787
    iget-boolean v1, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->oomOnly:Z

    if-nez v1, :cond_3e

    if-eqz p8, :cond_3c

    move-object/from16 v13, p8

    goto :goto_26

    :cond_3c
    move-object v13, v15

    .line 14789
    :goto_26
    iget-boolean v1, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    if-nez v1, :cond_3d

    .line 14790
    invoke-virtual {v13}, Ljava/io/PrintWriter;->println()V

    const-string v1, "Total PSS by category:"

    .line 14791
    invoke-virtual {v13, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    :cond_3d
    const-string v14, "  "

    const-string v1, "cat"

    const/16 v17, 0x1

    .line 14793
    iget-boolean v2, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    const/16 v19, 0x1

    iget-boolean v3, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSwapPss:Z

    move-object v4, v15

    move-object v15, v1

    move-object/from16 v16, v0

    move/from16 v18, v2

    move/from16 v20, v3

    invoke-static/range {v13 .. v20}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;ZZZZ)V

    goto :goto_27

    :cond_3e
    move-object v4, v15

    .line 14796
    :goto_27
    iget-boolean v0, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    if-nez v0, :cond_3f

    .line 14797
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 14799
    :cond_3f
    new-instance v0, Lcom/android/internal/util/MemInfoReader;

    invoke-direct {v0}, Lcom/android/internal/util/MemInfoReader;-><init>()V

    .line 14800
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->readMemInfo()V

    aget-wide v1, v25, v10

    cmp-long v1, v1, v31

    const-wide/16 v2, 0x400

    if-lez v1, :cond_40

    .line 14802
    iget-object v1, v9, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    iget-object v1, v1, Lcom/android/server/am/ProcessStatsService;->mLock:Ljava/lang/Object;

    monitor-enter v1

    .line 14803
    :try_start_a
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeKb()J

    move-result-wide v54

    .line 14804
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getFreeSizeKb()J

    move-result-wide v56

    .line 14805
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getZramTotalSizeKb()J

    move-result-wide v58

    .line 14806
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getKernelUsedSizeKb()J

    move-result-wide v60

    mul-long v33, v54, v2

    mul-long v35, v56, v2

    mul-long v37, v58, v2

    mul-long v39, v60, v2

    aget-wide v5, v25, v10

    mul-long v41, v5, v2

    .line 14807
    invoke-static/range {v33 .. v42}, Lcom/android/server/am/EventLogTags;->writeAmMeminfo(JJJJJ)V

    .line 14809
    iget-object v5, v9, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    aget-wide v62, v25, v10

    move-object/from16 v53, v5

    invoke-virtual/range {v53 .. v63}, Lcom/android/server/am/ProcessStatsService;->addSysMemUsageLocked(JJJJJ)V

    .line 14811
    monitor-exit v1

    goto :goto_28

    :catchall_5
    move-exception v0

    monitor-exit v1
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_5

    throw v0

    :cond_40
    :goto_28
    if-nez p6, :cond_42

    .line 14814
    iget-boolean v1, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    if-nez v1, :cond_41

    const-string v1, "Total RAM: "

    .line 14815
    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getTotalSizeKb()J

    move-result-wide v5

    invoke-static {v5, v6}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v1, " (status "

    .line 14816
    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14817
    iget-object v1, v9, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {v1, v4}, Lcom/android/server/am/AppProfiler;->dumpLastMemoryLevelLocked(Ljava/io/PrintWriter;)V

    const-string v1, " Free RAM: "

    .line 14818
    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14819
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeKb()J

    move-result-wide v5

    add-long v5, v43, v5

    .line 14820
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getFreeSizeKb()J

    move-result-wide v7

    add-long/2addr v5, v7

    .line 14819
    invoke-static {v5, v6}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v1, " ("

    .line 14821
    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14822
    invoke-static/range {v43 .. v44}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v1, " cached pss + "

    .line 14823
    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14824
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeKb()J

    move-result-wide v5

    invoke-static {v5, v6}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v1, " cached kernel + "

    .line 14825
    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14826
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getFreeSizeKb()J

    move-result-wide v5

    invoke-static {v5, v6}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v1, " free)"

    .line 14827
    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_29

    :cond_41
    const-string/jumbo v1, "ram,"

    .line 14829
    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getTotalSizeKb()J

    move-result-wide v5

    invoke-virtual {v4, v5, v6}, Ljava/io/PrintWriter;->print(J)V

    const-string v1, ","

    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14830
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeKb()J

    move-result-wide v5

    add-long v5, v43, v5

    .line 14831
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getFreeSizeKb()J

    move-result-wide v7

    add-long/2addr v5, v7

    .line 14830
    invoke-virtual {v4, v5, v6}, Ljava/io/PrintWriter;->print(J)V

    const-string v1, ","

    .line 14831
    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    aget-wide v5, v25, v52

    sub-long v5, v5, v43

    .line 14832
    invoke-virtual {v4, v5, v6}, Ljava/io/PrintWriter;->println(J)V

    .line 14835
    :cond_42
    :goto_29
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getKernelUsedSizeKb()J

    move-result-wide v5

    .line 14836
    invoke-static {}, Landroid/os/Debug;->getIonHeapsSizeKb()J

    move-result-wide v7

    .line 14837
    invoke-static {}, Landroid/os/Debug;->getIonPoolsSizeKb()J

    move-result-wide v12

    .line 14838
    invoke-static {}, Landroid/os/Debug;->getDmabufMappedSizeKb()J

    move-result-wide v14

    cmp-long v1, v7, v31

    if-ltz v1, :cond_43

    cmp-long v1, v12, v31

    if-ltz v1, :cond_43

    sub-long v16, v7, v14

    const-string v1, "      ION: "

    .line 14841
    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    add-long/2addr v7, v12

    .line 14842
    invoke-static {v7, v8}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v1, " ("

    .line 14843
    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14844
    invoke-static {v14, v15}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v1, " mapped + "

    .line 14845
    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14846
    invoke-static/range {v16 .. v17}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v1, " unmapped + "

    .line 14847
    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14848
    invoke-static {v12, v13}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v1, " pools)"

    .line 14849
    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    add-long v5, v5, v16

    aget-wide v7, v25, v52

    aget-wide v12, v25, v50

    sub-long/2addr v7, v12

    aput-wide v7, v25, v52

    add-long/2addr v7, v14

    aput-wide v7, v25, v52

    goto :goto_2a

    .line 14857
    :cond_43
    invoke-static {}, Landroid/os/Debug;->getDmabufTotalExportedKb()J

    move-result-wide v7

    cmp-long v1, v7, v31

    if-ltz v1, :cond_44

    sub-long v12, v7, v14

    const-string v1, "DMA-BUF: "

    .line 14860
    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14861
    invoke-static {v7, v8}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v1, " ("

    .line 14862
    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14863
    invoke-static {v14, v15}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v1, " mapped + "

    .line 14864
    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14865
    invoke-static {v12, v13}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v1, " unmapped)"

    .line 14866
    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    add-long/2addr v5, v12

    aget-wide v7, v25, v52

    aget-wide v12, v25, v50

    sub-long/2addr v7, v12

    aput-wide v7, v25, v52

    add-long/2addr v7, v14

    aput-wide v7, v25, v52

    .line 14876
    :cond_44
    invoke-static {}, Landroid/os/Debug;->getDmabufHeapTotalExportedKb()J

    move-result-wide v7

    cmp-long v1, v7, v31

    if-ltz v1, :cond_45

    const-string v1, "DMA-BUF Heaps: "

    .line 14878
    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14879
    invoke-static {v7, v8}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14882
    :cond_45
    invoke-static {}, Landroid/os/Debug;->getDmabufHeapPoolsSizeKb()J

    move-result-wide v7

    cmp-long v1, v7, v31

    if-ltz v1, :cond_46

    const-string v1, "DMA-BUF Heaps pool: "

    .line 14884
    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14885
    invoke-static {v7, v8}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14888
    :cond_46
    :goto_2a
    invoke-static {}, Landroid/os/Debug;->getGpuTotalUsageKb()J

    move-result-wide v7

    cmp-long v1, v7, v31

    if-ltz v1, :cond_48

    .line 14890
    invoke-static {}, Landroid/os/Debug;->getGpuPrivateMemoryKb()J

    move-result-wide v12

    cmp-long v1, v12, v31

    if-ltz v1, :cond_47

    sub-long v14, v7, v12

    const-string v1, "      GPU: "

    .line 14893
    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14894
    invoke-static {v7, v8}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v1, " ("

    .line 14895
    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14896
    invoke-static {v14, v15}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v1, " dmabuf + "

    .line 14897
    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14898
    invoke-static {v12, v13}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v1, " private)"

    .line 14899
    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    aget-wide v7, v25, v52

    aget-wide v14, v25, v23

    sub-long/2addr v7, v14

    aput-wide v7, v25, v52

    add-long/2addr v5, v12

    goto :goto_2b

    :cond_47
    const-string v1, "      GPU: "

    .line 14905
    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-static {v7, v8}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14911
    :cond_48
    :goto_2b
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getTotalSizeKb()J

    move-result-wide v7

    aget-wide v12, v25, v52

    aget-wide v14, v25, v24

    sub-long/2addr v12, v14

    sub-long/2addr v7, v12

    .line 14913
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getFreeSizeKb()J

    move-result-wide v12

    sub-long/2addr v7, v12

    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeKb()J

    move-result-wide v12

    sub-long/2addr v7, v12

    sub-long/2addr v7, v5

    .line 14914
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getZramTotalSizeKb()J

    move-result-wide v12

    sub-long/2addr v7, v12

    .line 14915
    iget-boolean v1, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    if-nez v1, :cond_49

    const-string v1, " Used RAM: "

    .line 14916
    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    aget-wide v12, v25, v52

    sub-long v12, v12, v43

    add-long/2addr v12, v5

    invoke-static {v12, v13}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v1, " ("

    .line 14917
    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    aget-wide v12, v25, v52

    sub-long v12, v12, v43

    .line 14918
    invoke-static {v12, v13}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v1, " used pss + "

    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14919
    invoke-static {v5, v6}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v1, " kernel)\n"

    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v1, " Lost RAM: "

    .line 14920
    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-static {v7, v8}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_2c

    :cond_49
    const-string/jumbo v1, "lostram,"

    .line 14922
    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {v4, v7, v8}, Ljava/io/PrintWriter;->println(J)V

    :goto_2c
    if-nez p6, :cond_53

    .line 14925
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getZramTotalSizeKb()J

    move-result-wide v5

    cmp-long v1, v5, v31

    if-eqz v1, :cond_4b

    .line 14926
    iget-boolean v1, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    if-nez v1, :cond_4a

    const-string v1, "     ZRAM: "

    .line 14927
    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14928
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getZramTotalSizeKb()J

    move-result-wide v5

    invoke-static {v5, v6}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v1, " physical used for "

    .line 14929
    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14930
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getSwapTotalSizeKb()J

    move-result-wide v5

    .line 14931
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getSwapFreeSizeKb()J

    move-result-wide v7

    sub-long/2addr v5, v7

    .line 14930
    invoke-static {v5, v6}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v1, " in swap ("

    .line 14932
    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14933
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getSwapTotalSizeKb()J

    move-result-wide v0

    invoke-static {v0, v1}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v0, " total swap)"

    .line 14934
    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_2d

    :cond_4a
    const-string/jumbo v1, "zram,"

    .line 14936
    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getZramTotalSizeKb()J

    move-result-wide v5

    invoke-virtual {v4, v5, v6}, Ljava/io/PrintWriter;->print(J)V

    const-string v1, ","

    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14937
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getSwapTotalSizeKb()J

    move-result-wide v5

    invoke-virtual {v4, v5, v6}, Ljava/io/PrintWriter;->print(J)V

    const-string v1, ","

    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14938
    invoke-virtual {v0}, Lcom/android/internal/util/MemInfoReader;->getSwapFreeSizeKb()J

    move-result-wide v0

    invoke-virtual {v4, v0, v1}, Ljava/io/PrintWriter;->println(J)V

    .line 14941
    :cond_4b
    :goto_2d
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->getKsmInfo()[J

    move-result-object v0

    .line 14942
    iget-boolean v1, v11, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    const/16 v5, 0x3e7

    if-nez v1, :cond_50

    .line 14943
    aget-wide v1, v0, v22

    cmp-long v1, v1, v31

    if-nez v1, :cond_4c

    aget-wide v1, v0, v21

    cmp-long v1, v1, v31

    if-nez v1, :cond_4c

    aget-wide v1, v0, v30

    cmp-long v1, v1, v31

    if-nez v1, :cond_4c

    aget-wide v1, v0, v79

    cmp-long v1, v1, v31

    if-eqz v1, :cond_4d

    :cond_4c
    const-string v1, "      KSM: "

    .line 14945
    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    aget-wide v1, v0, v22

    invoke-static {v1, v2}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v1, " saved from shared "

    .line 14946
    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14947
    aget-wide v1, v0, v21

    invoke-static {v1, v2}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v1, "           "

    .line 14948
    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    aget-wide v1, v0, v30

    invoke-static {v1, v2}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v1, " unshared; "

    .line 14949
    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14950
    aget-wide v0, v0, v79

    invoke-static {v0, v1}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v0, " volatile"

    .line 14951
    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    :cond_4d
    const-string v0, "   Tuning: "

    .line 14953
    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14954
    invoke-static {}, Landroid/app/ActivityManager;->staticGetMemoryClass()I

    move-result v0

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(I)V

    const-string v0, " (large "

    .line 14955
    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14956
    invoke-static {}, Landroid/app/ActivityManager;->staticGetLargeMemoryClass()I

    move-result v0

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(I)V

    const-string v0, "), oom "

    .line 14957
    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14958
    iget-object v0, v9, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 14959
    invoke-virtual {v0, v5}, Lcom/android/server/am/ProcessList;->getMemLevel(I)J

    move-result-wide v0

    const/16 v2, 0x400

    .line 14958
    invoke-static {v0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->stringifySize(JI)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v0, ", restore limit "

    .line 14960
    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14961
    iget-object v0, v9, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v0}, Lcom/android/server/am/ProcessList;->getCachedRestoreThresholdKb()J

    move-result-wide v0

    invoke-static {v0, v1}, Lcom/android/server/am/ActivityManagerService;->stringifyKBSize(J)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14962
    invoke-static {}, Landroid/app/ActivityManager;->isLowRamDeviceStatic()Z

    move-result v0

    if-eqz v0, :cond_4e

    const-string v0, " (low-ram)"

    .line 14963
    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14965
    :cond_4e
    invoke-static {}, Landroid/app/ActivityManager;->isHighEndGfx()Z

    move-result v0

    if-eqz v0, :cond_4f

    const-string v0, " (high-end-gfx)"

    .line 14966
    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14968
    :cond_4f
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    goto :goto_2e

    :cond_50
    const-string/jumbo v1, "ksm,"

    .line 14970
    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    aget-wide v6, v0, v22

    invoke-virtual {v4, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    const-string v1, ","

    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14971
    aget-wide v6, v0, v21

    invoke-virtual {v4, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    const-string v1, ","

    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    aget-wide v6, v0, v30

    invoke-virtual {v4, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    const-string v1, ","

    .line 14972
    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    aget-wide v0, v0, v79

    invoke-virtual {v4, v0, v1}, Ljava/io/PrintWriter;->println(J)V

    const-string/jumbo v0, "tuning,"

    .line 14973
    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14974
    invoke-static {}, Landroid/app/ActivityManager;->staticGetMemoryClass()I

    move-result v0

    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(I)V

    const/16 v0, 0x2c

    .line 14975
    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(C)V

    .line 14976
    invoke-static {}, Landroid/app/ActivityManager;->staticGetLargeMemoryClass()I

    move-result v1

    invoke-virtual {v4, v1}, Ljava/io/PrintWriter;->print(I)V

    .line 14977
    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(C)V

    .line 14978
    iget-object v0, v9, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v0, v5}, Lcom/android/server/am/ProcessList;->getMemLevel(I)J

    move-result-wide v0

    div-long/2addr v0, v2

    invoke-virtual {v4, v0, v1}, Ljava/io/PrintWriter;->print(J)V

    .line 14979
    invoke-static {}, Landroid/app/ActivityManager;->isLowRamDeviceStatic()Z

    move-result v0

    if-eqz v0, :cond_51

    const-string v0, ",low-ram"

    .line 14980
    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14982
    :cond_51
    invoke-static {}, Landroid/app/ActivityManager;->isHighEndGfx()Z

    move-result v0

    if-eqz v0, :cond_52

    const-string v0, ",high-end-gfx"

    .line 14983
    invoke-virtual {v4, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14985
    :cond_52
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    :cond_53
    :goto_2e
    return-void
.end method

.method public final dumpApplicationMemoryUsage(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;ZLjava/io/PrintWriter;Z)V
    .locals 17
    .annotation build Ldalvik/annotation/optimization/NeverCompile;
    .end annotation

    move-object/from16 v3, p2

    move-object/from16 v0, p4

    const-string v1, "  ex> --fd system_server"

    const-string v2, "A process name is required to output fd info."

    const-string v4, "  ex> --maps system_server"

    const-string v5, "A process name is required to output maps."

    .line 14153
    new-instance v8, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;

    const/4 v6, 0x0

    invoke-direct {v8, v6}, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;-><init>(Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions-IA;)V

    const/4 v7, 0x0

    .line 14154
    iput-boolean v7, v8, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDetails:Z

    .line 14155
    iput-boolean v7, v8, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpFullDetails:Z

    .line 14156
    iput-boolean v7, v8, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDalvik:Z

    .line 14157
    iput-boolean v7, v8, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSummaryOnly:Z

    .line 14158
    iput-boolean v7, v8, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpUnreachable:Z

    .line 14159
    iput-boolean v7, v8, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->oomOnly:Z

    .line 14160
    iput-boolean v7, v8, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    .line 14161
    iput-boolean v7, v8, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->localOnly:Z

    .line 14162
    iput-boolean v7, v8, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->packages:Z

    .line 14163
    iput-boolean v7, v8, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    .line 14164
    iput-boolean v7, v8, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSwapPss:Z

    move/from16 v9, p7

    .line 14165
    iput-boolean v9, v8, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpProto:Z

    .line 14167
    sget-boolean v9, Lcom/android/server/am/ActivityManagerService;->USER_BUILD:Z

    if-eqz v9, :cond_1

    sget-boolean v9, Lcom/android/server/am/ActivityManagerService;->DEBUG_LEVEL_LOW:Z

    if-eqz v9, :cond_1

    sget-boolean v9, Lcom/android/server/am/ActivityManagerService;->SHIP_BUILD:Z

    if-nez v9, :cond_0

    goto :goto_0

    :cond_0
    move v9, v7

    goto :goto_1

    :cond_1
    :goto_0
    const/4 v9, 0x1

    :goto_1
    move-object v14, v6

    move-object v15, v14

    move v11, v7

    move v12, v11

    move v13, v12

    .line 14174
    :goto_2
    array-length v6, v0

    if-ge v11, v6, :cond_15

    .line 14175
    aget-object v6, v0, v11

    if-eqz v6, :cond_15

    .line 14176
    invoke-virtual {v6}, Ljava/lang/String;->length()I

    move-result v16

    if-lez v16, :cond_15

    invoke-virtual {v6, v7}, Ljava/lang/String;->charAt(I)C

    move-result v10

    const/16 v7, 0x2d

    if-eq v10, v7, :cond_2

    goto/16 :goto_6

    :cond_2
    add-int/lit8 v11, v11, 0x1

    const-string v7, "-a"

    .line 14180
    invoke-virtual {v7, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v7

    if-eqz v7, :cond_3

    const/4 v7, 0x1

    .line 14181
    iput-boolean v7, v8, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDetails:Z

    .line 14182
    iput-boolean v7, v8, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpFullDetails:Z

    .line 14183
    iput-boolean v7, v8, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDalvik:Z

    .line 14184
    iput-boolean v7, v8, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSwapPss:Z

    goto/16 :goto_5

    :cond_3
    const/4 v7, 0x1

    const-string v10, "-d"

    .line 14185
    invoke-virtual {v10, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v10

    if-eqz v10, :cond_4

    .line 14186
    iput-boolean v7, v8, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDalvik:Z

    goto/16 :goto_5

    :cond_4
    const-string v10, "-c"

    .line 14187
    invoke-virtual {v10, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v10

    if-eqz v10, :cond_5

    .line 14188
    iput-boolean v7, v8, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCompact:Z

    goto/16 :goto_5

    :cond_5
    const-string v10, "-s"

    .line 14189
    invoke-virtual {v10, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v10

    if-eqz v10, :cond_6

    .line 14190
    iput-boolean v7, v8, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpDetails:Z

    .line 14191
    iput-boolean v7, v8, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSummaryOnly:Z

    goto/16 :goto_5

    :cond_6
    const-string v10, "-S"

    .line 14192
    invoke-virtual {v10, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v10

    if-eqz v10, :cond_7

    .line 14193
    iput-boolean v7, v8, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpSwapPss:Z

    goto/16 :goto_5

    :cond_7
    const-string v10, "--unreachable"

    .line 14194
    invoke-virtual {v10, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v10

    if-eqz v10, :cond_8

    .line 14195
    iput-boolean v7, v8, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpUnreachable:Z

    goto/16 :goto_5

    :cond_8
    const-string v10, "--oom"

    .line 14196
    invoke-virtual {v10, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v10

    if-eqz v10, :cond_9

    .line 14197
    iput-boolean v7, v8, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->oomOnly:Z

    goto/16 :goto_5

    :cond_9
    const-string v10, "--local"

    .line 14198
    invoke-virtual {v10, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v10

    if-eqz v10, :cond_a

    .line 14199
    iput-boolean v7, v8, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->localOnly:Z

    goto/16 :goto_5

    :cond_a
    const-string v10, "--package"

    .line 14200
    invoke-virtual {v10, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v10

    if-eqz v10, :cond_b

    .line 14201
    iput-boolean v7, v8, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->packages:Z

    goto/16 :goto_5

    :cond_b
    const-string v10, "--checkin"

    .line 14202
    invoke-virtual {v10, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v10

    if-eqz v10, :cond_c

    .line 14203
    iput-boolean v7, v8, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->isCheckinRequest:Z

    goto/16 :goto_5

    :cond_c
    const-string v10, "--proto"

    .line 14204
    invoke-virtual {v10, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v10

    if-eqz v10, :cond_d

    .line 14205
    iput-boolean v7, v8, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpProto:Z

    goto/16 :goto_5

    :cond_d
    if-eqz v9, :cond_10

    const-string v10, "--maps"

    .line 14206
    invoke-virtual {v10, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v10

    if-eqz v10, :cond_10

    .line 14208
    :try_start_0
    aget-object v14, v0, v11

    if-eqz v14, :cond_f

    .line 14209
    invoke-virtual {v14}, Ljava/lang/String;->length()I

    move-result v6

    if-gtz v6, :cond_e

    goto :goto_3

    .line 14214
    :cond_e
    filled-new-array {v14}, [Ljava/lang/String;

    move-result-object v6

    .line 14215
    invoke-static {v6}, Landroid/os/Process;->getPidsForCommands([Ljava/lang/String;)[I

    move-result-object v6

    const/4 v10, 0x0

    .line 14216
    aget v6, v6, v10

    invoke-static {v6}, Ljava/lang/String;->valueOf(I)Ljava/lang/String;

    move-result-object v15

    add-int/lit8 v11, v11, 0x1

    move v12, v7

    goto/16 :goto_5

    .line 14210
    :cond_f
    :goto_3
    invoke-virtual {v3, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14211
    invoke-virtual {v3, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
    :try_end_0
    .catch Ljava/lang/ArrayIndexOutOfBoundsException; {:try_start_0 .. :try_end_0} :catch_0

    return-void

    .line 14220
    :catch_0
    invoke-virtual {v3, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14221
    invoke-virtual {v3, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    return-void

    :cond_10
    if-eqz v9, :cond_13

    const-string v10, "--fd"

    .line 14224
    invoke-virtual {v10, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v10

    if-eqz v10, :cond_13

    .line 14226
    :try_start_1
    aget-object v14, v0, v11

    if-eqz v14, :cond_12

    .line 14227
    invoke-virtual {v14}, Ljava/lang/String;->length()I

    move-result v6

    if-gtz v6, :cond_11

    goto :goto_4

    .line 14232
    :cond_11
    filled-new-array {v14}, [Ljava/lang/String;

    move-result-object v6

    .line 14233
    invoke-static {v6}, Landroid/os/Process;->getPidsForCommands([Ljava/lang/String;)[I

    move-result-object v6

    const/4 v10, 0x0

    .line 14234
    aget v6, v6, v10

    invoke-static {v6}, Ljava/lang/String;->valueOf(I)Ljava/lang/String;

    move-result-object v15

    add-int/lit8 v11, v11, 0x1

    move v13, v7

    goto :goto_5

    .line 14228
    :cond_12
    :goto_4
    invoke-virtual {v3, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14229
    invoke-virtual {v3, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
    :try_end_1
    .catch Ljava/lang/ArrayIndexOutOfBoundsException; {:try_start_1 .. :try_end_1} :catch_1

    return-void

    .line 14238
    :catch_1
    invoke-virtual {v3, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14239
    invoke-virtual {v3, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    return-void

    :cond_13
    const-string v10, "-h"

    .line 14242
    invoke-virtual {v10, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v10

    if-eqz v10, :cond_14

    const-string/jumbo v0, "meminfo dump options: [-a] [-d] [-c] [-s] [--oom] [process]"

    .line 14243
    invoke-virtual {v3, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    const-string v0, "  -a: include all available information for each process."

    .line 14244
    invoke-virtual {v3, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    const-string v0, "  -d: include dalvik details."

    .line 14245
    invoke-virtual {v3, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    const-string v0, "  -c: dump in a compact machine-parseable representation."

    .line 14246
    invoke-virtual {v3, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    const-string v0, "  -s: dump only summary of application memory usage."

    .line 14247
    invoke-virtual {v3, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    const-string v0, "  -S: dump also SwapPss."

    .line 14248
    invoke-virtual {v3, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    const-string v0, "  --oom: only show processes organized by oom adj."

    .line 14249
    invoke-virtual {v3, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    const-string v0, "  --local: only collect details locally, don\'t call process."

    .line 14250
    invoke-virtual {v3, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    const-string v0, "  --package: interpret process arg as package, dumping all"

    .line 14251
    invoke-virtual {v3, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    const-string v0, "             processes that have loaded that package."

    .line 14252
    invoke-virtual {v3, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    const-string v0, "  --checkin: dump data for a checkin"

    .line 14253
    invoke-virtual {v3, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    const-string v0, "  --proto: dump data to proto"

    .line 14254
    invoke-virtual {v3, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    const-string v0, "If [process] is specified it can be the name or "

    .line 14255
    invoke-virtual {v3, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    const-string/jumbo v0, "pid of a specific process to dump."

    .line 14256
    invoke-virtual {v3, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    return-void

    .line 14259
    :cond_14
    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Unknown argument: "

    invoke-virtual {v10, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v10, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v6, "; use -h for help"

    invoke-virtual {v10, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v3, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    :goto_5
    const/4 v7, 0x0

    goto/16 :goto_2

    :cond_15
    :goto_6
    const-string v1, "])====="

    const-string v2, "["

    const-string v4, "/proc/"

    if-eqz v9, :cond_19

    if-eqz v12, :cond_19

    .line 14264
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v4, "/maps"

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 14265
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "=====PRINT MAPS("

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v3, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14270
    :try_start_2
    new-instance v1, Ljava/io/BufferedReader;

    new-instance v2, Ljava/io/FileReader;

    invoke-direct {v2, v0}, Ljava/io/FileReader;-><init>(Ljava/lang/String;)V

    invoke-direct {v1, v2}, Ljava/io/BufferedReader;-><init>(Ljava/io/Reader;)V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_3
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 14271
    :goto_7
    :try_start_3
    invoke-virtual {v1}, Ljava/io/BufferedReader;->readLine()Ljava/lang/String;

    move-result-object v0

    if-eqz v0, :cond_16

    .line 14272
    invoke-virtual {v3, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
    :try_end_3
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_2
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    goto :goto_7

    .line 14279
    :cond_16
    :try_start_4
    invoke-virtual {v1}, Ljava/io/BufferedReader;->close()V
    :try_end_4
    .catch Ljava/io/IOException; {:try_start_4 .. :try_end_4} :catch_4

    goto :goto_9

    :catchall_0
    move-exception v0

    move-object v6, v1

    goto :goto_a

    :catch_2
    move-exception v0

    move-object v6, v1

    goto :goto_8

    :catchall_1
    move-exception v0

    move-object v1, v0

    const/4 v6, 0x0

    goto :goto_b

    :catch_3
    move-exception v0

    const/4 v6, 0x0

    .line 14275
    :goto_8
    :try_start_5
    invoke-virtual {v0}, Ljava/io/IOException;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v3, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_2

    if-eqz v6, :cond_17

    .line 14279
    :try_start_6
    invoke-virtual {v6}, Ljava/io/BufferedReader;->close()V
    :try_end_6
    .catch Ljava/io/IOException; {:try_start_6 .. :try_end_6} :catch_4

    goto :goto_9

    :catch_4
    move-exception v0

    move-object v1, v0

    .line 14282
    invoke-virtual {v1}, Ljava/io/IOException;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v3, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    :cond_17
    :goto_9
    return-void

    :catchall_2
    move-exception v0

    :goto_a
    move-object v1, v0

    :goto_b
    if-eqz v6, :cond_18

    .line 14279
    :try_start_7
    invoke-virtual {v6}, Ljava/io/BufferedReader;->close()V
    :try_end_7
    .catch Ljava/io/IOException; {:try_start_7 .. :try_end_7} :catch_5

    goto :goto_c

    :catch_5
    move-exception v0

    move-object v2, v0

    .line 14282
    invoke-virtual {v2}, Ljava/io/IOException;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v3, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14284
    :cond_18
    :goto_c
    throw v1

    :cond_19
    if-eqz v9, :cond_1b

    if-eqz v13, :cond_1b

    .line 14289
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v4, "/fd"

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 14290
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "=====PRINT FD INFO("

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v3, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14292
    :try_start_8
    new-instance v1, Ljava/io/File;

    invoke-direct {v1, v0}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    invoke-virtual {v1}, Ljava/io/File;->listFiles()[Ljava/io/File;

    move-result-object v0

    .line 14293
    array-length v1, v0

    const/4 v7, 0x0

    :goto_d
    if-ge v7, v1, :cond_1a

    aget-object v2, v0, v7
    :try_end_8
    .catch Ljava/lang/NullPointerException; {:try_start_8 .. :try_end_8} :catch_7

    .line 14295
    :try_start_9
    new-instance v4, Ljava/io/File;

    invoke-virtual {v2}, Ljava/io/File;->getAbsolutePath()Ljava/lang/String;

    move-result-object v5

    invoke-static {v5}, Landroid/system/Os;->readlink(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v5

    invoke-direct {v4, v5}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    .line 14296
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v2}, Ljava/io/File;->getName()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v6, " -> "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/io/File;->getAbsolutePath()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v5, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
    :try_end_9
    .catch Ljava/lang/Exception; {:try_start_9 .. :try_end_9} :catch_6

    goto :goto_e

    .line 14298
    :catch_6
    :try_start_a
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v2}, Ljava/io/File;->getName()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, " -> readlink error"

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v3, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
    :try_end_a
    .catch Ljava/lang/NullPointerException; {:try_start_a .. :try_end_a} :catch_7

    :goto_e
    add-int/lit8 v7, v7, 0x1

    goto :goto_d

    :catch_7
    move-exception v0

    const-string v1, "Can not get FD info..."

    .line 14302
    invoke-virtual {v3, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14303
    invoke-virtual {v0}, Ljava/lang/NullPointerException;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v3, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    :cond_1a
    return-void

    .line 14308
    :cond_1b
    array-length v1, v0

    sub-int/2addr v1, v11

    new-array v9, v1, [Ljava/lang/String;

    .line 14309
    array-length v1, v0

    sub-int/2addr v1, v11

    const/4 v2, 0x0

    invoke-static {v0, v11, v9, v2, v1}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 14311
    iget-boolean v1, v8, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->packages:Z

    move-object/from16 v2, p0

    invoke-virtual {v2, v3, v11, v1, v0}, Lcom/android/server/am/ActivityManagerService;->collectProcesses(Ljava/io/PrintWriter;IZ[Ljava/lang/String;)Ljava/util/ArrayList;

    move-result-object v11

    .line 14312
    iget-boolean v0, v8, Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;->dumpProto:Z

    if-eqz v0, :cond_1c

    move-object/from16 v6, p0

    move-object/from16 v7, p1

    move/from16 v10, p5

    .line 14313
    invoke-virtual/range {v6 .. v11}, Lcom/android/server/am/ActivityManagerService;->dumpApplicationMemoryUsage(Ljava/io/FileDescriptor;Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;[Ljava/lang/String;ZLjava/util/ArrayList;)V

    goto :goto_f

    :cond_1c
    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object/from16 v4, p3

    move-object v5, v8

    move-object v6, v9

    move/from16 v7, p5

    move-object v8, v11

    move-object/from16 v9, p6

    .line 14315
    invoke-virtual/range {v1 .. v9}, Lcom/android/server/am/ActivityManagerService;->dumpApplicationMemoryUsage(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$MemoryUsageDumpOptions;[Ljava/lang/String;ZLjava/util/ArrayList;Ljava/io/PrintWriter;)V

    :goto_f
    return-void
.end method

.method public final dumpApplicationMemoryUsageHeader(Ljava/io/PrintWriter;JJZZ)V
    .locals 0

    if-eqz p7, :cond_0

    const-string/jumbo p0, "version,"

    .line 14072
    invoke-virtual {p1, p0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const/4 p0, 0x1

    invoke-virtual {p1, p0}, Ljava/io/PrintWriter;->println(I)V

    :cond_0
    if-nez p6, :cond_2

    if-eqz p7, :cond_1

    goto :goto_0

    :cond_1
    const-string p0, "Applications Memory Usage (in Kilobytes):"

    .line 14078
    invoke-virtual {p1, p0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14079
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string p6, "Uptime: "

    invoke-virtual {p0, p6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, p2, p3}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string p2, " Realtime: "

    invoke-virtual {p0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, p4, p5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-virtual {p1, p0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_1

    :cond_2
    :goto_0
    const-string/jumbo p0, "time,"

    .line 14076
    invoke-virtual {p1, p0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, p2, p3}, Ljava/io/PrintWriter;->print(J)V

    const-string p0, ","

    invoke-virtual {p1, p0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, p4, p5}, Ljava/io/PrintWriter;->println(J)V

    :goto_1
    return-void
.end method

.method public dumpAssociationsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V
    .locals 17

    move-object/from16 v0, p0

    move-object/from16 v1, p2

    move-object/from16 v2, p7

    const-string v3, "ACTIVITY MANAGER ASSOCIATIONS (dumpsys activity associations)"

    .line 12734
    invoke-virtual {v1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    const/4 v3, 0x0

    if-eqz v2, :cond_0

    .line 12738
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v4

    const-wide/32 v5, 0x400000

    .line 12740
    :try_start_0
    invoke-interface {v4, v2, v5, v6, v3}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;JI)I

    move-result v4
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    :catch_0
    :cond_0
    move v4, v3

    .line 12747
    :goto_0
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v5

    .line 12749
    iget-object v7, v0, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    invoke-virtual {v7}, Landroid/util/SparseArray;->size()I

    move-result v7

    move v8, v3

    move v9, v8

    :goto_1
    if-ge v8, v7, :cond_b

    .line 12750
    iget-object v10, v0, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    .line 12751
    invoke-virtual {v10, v8}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Landroid/util/ArrayMap;

    .line 12752
    invoke-virtual {v10}, Landroid/util/ArrayMap;->size()I

    move-result v11

    move v12, v3

    :goto_2
    if-ge v12, v11, :cond_a

    .line 12754
    invoke-virtual {v10, v12}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Landroid/util/SparseArray;

    .line 12755
    invoke-virtual {v13}, Landroid/util/SparseArray;->size()I

    move-result v14

    move v15, v3

    :goto_3
    if-ge v15, v14, :cond_9

    .line 12756
    invoke-virtual {v13, v15}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v16

    move-object/from16 v3, v16

    check-cast v3, Landroid/util/ArrayMap;

    .line 12757
    invoke-virtual {v3}, Landroid/util/ArrayMap;->size()I

    move-result v0

    move/from16 p3, v7

    const/4 v7, 0x0

    :goto_4
    if-ge v7, v0, :cond_8

    .line 12758
    invoke-virtual {v3, v7}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v16

    move/from16 p4, v0

    move-object/from16 v0, v16

    check-cast v0, Lcom/android/server/am/ActivityManagerService$Association;

    move-object/from16 p5, v3

    if-eqz v2, :cond_1

    .line 12760
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService$Association;->mTargetComponent:Landroid/content/ComponentName;

    invoke-virtual {v3}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v3, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_1

    iget v3, v0, Lcom/android/server/am/ActivityManagerService$Association;->mSourceUid:I

    .line 12761
    invoke-static {v3}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v3

    if-eq v3, v4, :cond_1

    move-object/from16 p6, v10

    move-object v2, v13

    move/from16 v16, v14

    const/4 v10, 0x0

    goto/16 :goto_8

    :cond_1
    const-string v3, "  "

    .line 12766
    invoke-virtual {v1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 12767
    iget-object v9, v0, Lcom/android/server/am/ActivityManagerService$Association;->mTargetProcess:Ljava/lang/String;

    invoke-virtual {v1, v9}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v9, "/"

    .line 12768
    invoke-virtual {v1, v9}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 12769
    iget v2, v0, Lcom/android/server/am/ActivityManagerService$Association;->mTargetUid:I

    invoke-static {v1, v2}, Landroid/os/UserHandle;->formatUid(Ljava/io/PrintWriter;I)V

    const-string v2, " <- "

    .line 12770
    invoke-virtual {v1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 12771
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService$Association;->mSourceProcess:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 12772
    invoke-virtual {v1, v9}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 12773
    iget v2, v0, Lcom/android/server/am/ActivityManagerService$Association;->mSourceUid:I

    invoke-static {v1, v2}, Landroid/os/UserHandle;->formatUid(Ljava/io/PrintWriter;I)V

    .line 12774
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    const-string v2, "    via "

    .line 12775
    invoke-virtual {v1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 12776
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService$Association;->mTargetComponent:Landroid/content/ComponentName;

    invoke-virtual {v2}, Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 12777
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    const-string v2, "    "

    .line 12778
    invoke-virtual {v1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 p6, v10

    .line 12779
    iget-wide v9, v0, Lcom/android/server/am/ActivityManagerService$Association;->mTime:J

    .line 12780
    iget v2, v0, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    if-lez v2, :cond_2

    move-object v2, v13

    move/from16 v16, v14

    .line 12781
    iget-wide v13, v0, Lcom/android/server/am/ActivityManagerService$Association;->mStartTime:J

    sub-long v13, v5, v13

    add-long/2addr v9, v13

    goto :goto_5

    :cond_2
    move-object v2, v13

    move/from16 v16, v14

    .line 12783
    :goto_5
    invoke-static {v9, v10, v1}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    const-string v9, " ("

    .line 12784
    invoke-virtual {v1, v9}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 12785
    iget v9, v0, Lcom/android/server/am/ActivityManagerService$Association;->mCount:I

    invoke-virtual {v1, v9}, Ljava/io/PrintWriter;->print(I)V

    const-string v9, " times)"

    .line 12786
    invoke-virtual {v1, v9}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 12787
    invoke-virtual {v1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const/4 v3, 0x0

    .line 12788
    :goto_6
    iget-object v9, v0, Lcom/android/server/am/ActivityManagerService$Association;->mStateTimes:[J

    array-length v10, v9

    if-ge v3, v10, :cond_6

    .line 12789
    aget-wide v9, v9, v3

    .line 12790
    iget v13, v0, Lcom/android/server/am/ActivityManagerService$Association;->mLastState:I

    const/4 v14, 0x0

    sub-int/2addr v13, v14

    if-ne v13, v3, :cond_3

    .line 12791
    iget-wide v13, v0, Lcom/android/server/am/ActivityManagerService$Association;->mLastStateUptime:J

    sub-long v13, v5, v13

    add-long/2addr v9, v13

    :cond_3
    const-wide/16 v13, 0x0

    cmp-long v13, v9, v13

    if-eqz v13, :cond_4

    const-string v13, " "

    .line 12794
    invoke-virtual {v1, v13}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    add-int/lit8 v13, v3, 0x0

    .line 12795
    invoke-static {v13}, Lcom/android/server/am/ProcessList;->makeProcStateString(I)Ljava/lang/String;

    move-result-object v13

    invoke-virtual {v1, v13}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v13, "="

    .line 12797
    invoke-virtual {v1, v13}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 12798
    invoke-static {v9, v10, v1}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 12799
    iget v9, v0, Lcom/android/server/am/ActivityManagerService$Association;->mLastState:I

    const/4 v10, 0x0

    sub-int/2addr v9, v10

    if-ne v9, v3, :cond_5

    const-string v9, "*"

    .line 12800
    invoke-virtual {v1, v9}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    goto :goto_7

    :cond_4
    const/4 v10, 0x0

    :cond_5
    :goto_7
    add-int/lit8 v3, v3, 0x1

    goto :goto_6

    :cond_6
    const/4 v10, 0x0

    .line 12804
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 12805
    iget v3, v0, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    if-lez v3, :cond_7

    const-string v3, "    Currently active: "

    .line 12806
    invoke-virtual {v1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 12807
    iget-wide v13, v0, Lcom/android/server/am/ActivityManagerService$Association;->mStartTime:J

    sub-long v13, v5, v13

    invoke-static {v13, v14, v1}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 12808
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    :cond_7
    const/4 v0, 0x1

    move v9, v0

    :goto_8
    add-int/lit8 v7, v7, 0x1

    move/from16 v0, p4

    move-object/from16 v3, p5

    move-object/from16 v10, p6

    move-object v13, v2

    move/from16 v14, v16

    move-object/from16 v2, p7

    goto/16 :goto_4

    :cond_8
    move-object/from16 p6, v10

    move-object v2, v13

    move/from16 v16, v14

    const/4 v10, 0x0

    add-int/lit8 v15, v15, 0x1

    move-object/from16 v0, p0

    move/from16 v7, p3

    move v3, v10

    move-object/from16 v10, p6

    move-object/from16 v2, p7

    goto/16 :goto_3

    :cond_9
    move/from16 p3, v7

    move-object/from16 p6, v10

    move v10, v3

    add-int/lit8 v12, v12, 0x1

    move-object/from16 v0, p0

    move-object/from16 v2, p7

    move-object/from16 v10, p6

    goto/16 :goto_2

    :cond_a
    move v10, v3

    move/from16 p3, v7

    add-int/lit8 v8, v8, 0x1

    move-object/from16 v0, p0

    move-object/from16 v2, p7

    goto/16 :goto_1

    :cond_b
    if-nez v9, :cond_c

    const-string v0, "  (nothing)"

    .line 12817
    invoke-virtual {v1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    :cond_c
    return-void
.end method

.method public final dumpBinderCacheContents(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
    .locals 6

    const/4 v0, 0x0

    .line 13822
    invoke-virtual {p0, p2, v0, v0, p3}, Lcom/android/server/am/ActivityManagerService;->collectProcesses(Ljava/io/PrintWriter;IZ[Ljava/lang/String;)Ljava/util/ArrayList;

    move-result-object p0

    if-nez p0, :cond_0

    .line 13824
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string p1, "No process found for: "

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    aget-object p1, p3, v0

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-virtual {p2, p0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    return-void

    :cond_0
    const-string v0, "Per-process Binder Cache Contents"

    .line 13828
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13830
    invoke-virtual {p0}, Ljava/util/ArrayList;->size()I

    move-result v0

    add-int/lit8 v0, v0, -0x1

    :goto_0
    if-ltz v0, :cond_2

    .line 13831
    invoke-virtual {p0, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 13832
    invoke-virtual {v1}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v2

    .line 13833
    invoke-virtual {v1}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v3

    if-eqz v3, :cond_1

    .line 13835
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "\n\n** Cache info for pid "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, " ["

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "] **"

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {p2, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13836
    invoke-virtual {p2}, Ljava/io/PrintWriter;->flush()V

    .line 13838
    :try_start_0
    new-instance v2, Lcom/android/internal/os/TransferPipe;

    invoke-direct {v2}, Lcom/android/internal/os/TransferPipe;-><init>()V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_1
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 13840
    :try_start_1
    invoke-virtual {v2}, Lcom/android/internal/os/TransferPipe;->getWriteFd()Landroid/os/ParcelFileDescriptor;

    move-result-object v4

    invoke-interface {v3, v4, p3}, Landroid/app/IApplicationThread;->dumpCacheInfo(Landroid/os/ParcelFileDescriptor;[Ljava/lang/String;)V

    .line 13841
    invoke-virtual {v2, p1}, Lcom/android/internal/os/TransferPipe;->go(Ljava/io/FileDescriptor;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 13843
    :try_start_2
    invoke-virtual {v2}, Lcom/android/internal/os/TransferPipe;->kill()V

    goto :goto_1

    :catchall_0
    move-exception v3

    invoke-virtual {v2}, Lcom/android/internal/os/TransferPipe;->kill()V

    .line 13844
    throw v3
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_1
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0

    .line 13849
    :catch_0
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Got a RemoteException while dumping the app "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13850
    invoke-virtual {p2}, Ljava/io/PrintWriter;->flush()V

    goto :goto_1

    .line 13846
    :catch_1
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Failure while dumping the app "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13847
    invoke-virtual {p2}, Ljava/io/PrintWriter;->flush()V

    :cond_1
    :goto_1
    add-int/lit8 v0, v0, -0x1

    goto/16 :goto_0

    :cond_2
    return-void
.end method

.method public dumpBinderProxies(Ljava/io/PrintWriter;I)V
    .locals 2

    const-string v0, "ACTIVITY MANAGER BINDER PROXY STATE (dumpsys activity binder-proxies)"

    .line 12872
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12873
    invoke-static {}, Landroid/os/BinderProxy;->getProxyCount()I

    move-result v0

    if-lt v0, p2, :cond_0

    const-string p2, "Top proxy interface names held by SYSTEM"

    .line 12875
    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->dumpBinderProxyInterfaceCounts(Ljava/io/PrintWriter;Ljava/lang/String;)V

    goto :goto_0

    .line 12878
    :cond_0
    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Not dumping proxy interface counts because size ("

    invoke-virtual {p2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12879
    invoke-static {v0}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, ") looks reasonable"

    invoke-virtual {p2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    .line 12878
    invoke-virtual {p1, p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 12880
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    :goto_0
    const-string p2, "  Counts of Binder Proxies held by SYSTEM"

    .line 12882
    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->dumpBinderProxiesCounts(Ljava/io/PrintWriter;Ljava/lang/String;)Z

    return-void
.end method

.method public dumpBinderProxiesCounts(Ljava/io/PrintWriter;Ljava/lang/String;)Z
    .locals 5

    .line 12844
    invoke-static {}, Lcom/android/internal/os/BinderInternal;->nGetBinderProxyPerUidCounts()Landroid/util/SparseIntArray;

    move-result-object v0

    const/4 v1, 0x0

    if-eqz v0, :cond_3

    .line 12846
    invoke-virtual {p1, p2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    move p2, v1

    .line 12847
    :goto_0
    invoke-virtual {v0}, Landroid/util/SparseIntArray;->size()I

    move-result v2

    if-ge p2, v2, :cond_2

    .line 12848
    invoke-virtual {v0, p2}, Landroid/util/SparseIntArray;->keyAt(I)I

    move-result v2

    .line 12849
    invoke-virtual {v0, p2}, Landroid/util/SparseIntArray;->valueAt(I)I

    move-result v3

    const-string v4, "    UID "

    .line 12850
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 12851
    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(I)V

    const-string v4, ", binder count = "

    .line 12852
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 12853
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(I)V

    const-string v3, ", package(s)= "

    .line 12854
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 12855
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v3}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v3

    invoke-virtual {v3, v2}, Landroid/content/pm/PackageManager;->getPackagesForUid(I)[Ljava/lang/String;

    move-result-object v2

    if-eqz v2, :cond_0

    move v3, v1

    .line 12857
    :goto_1
    array-length v4, v2

    if-ge v3, v4, :cond_1

    .line 12858
    aget-object v4, v2, v3

    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v4, "; "

    .line 12859
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    add-int/lit8 v3, v3, 0x1

    goto :goto_1

    :cond_0
    const-string v2, "NO PACKAGE NAME FOUND"

    .line 12862
    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 12864
    :cond_1
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    add-int/lit8 p2, p2, 0x1

    goto :goto_0

    :cond_2
    const/4 p0, 0x1

    return p0

    :cond_3
    return v1
.end method

.method public dumpBinderProxyInterfaceCounts(Ljava/io/PrintWriter;Ljava/lang/String;)V
    .locals 3

    const/16 p0, 0x32

    .line 12835
    invoke-static {p0}, Landroid/os/BinderProxy;->getSortedInterfaceCounts(I)[Landroid/os/BinderProxy$InterfaceCount;

    move-result-object p0

    .line 12837
    invoke-virtual {p1, p2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    const/4 p2, 0x0

    .line 12838
    :goto_0
    array-length v0, p0

    if-ge p2, v0, :cond_0

    .line 12839
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "    #"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    add-int/lit8 v1, p2, 0x1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, ": "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    aget-object p2, p0, p2

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-virtual {p1, p2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    move p2, v1

    goto :goto_0

    :cond_0
    return-void
.end method

.method public dumpBroadcastStatsCheckinLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V
    .locals 0
    .annotation build Ldalvik/annotation/optimization/NeverCompile;
    .end annotation

    .line 13725
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mCurBroadcastStats:Lcom/android/server/am/BroadcastStats;

    if-nez p1, :cond_0

    return-void

    .line 13729
    :cond_0
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mLastBroadcastStats:Lcom/android/server/am/BroadcastStats;

    const/4 p3, 0x0

    if-eqz p1, :cond_1

    .line 13730
    invoke-virtual {p1, p2, p6}, Lcom/android/server/am/BroadcastStats;->dumpCheckinStats(Ljava/io/PrintWriter;Ljava/lang/String;)V

    if-eqz p5, :cond_1

    .line 13732
    iput-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mLastBroadcastStats:Lcom/android/server/am/BroadcastStats;

    return-void

    .line 13736
    :cond_1
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mCurBroadcastStats:Lcom/android/server/am/BroadcastStats;

    invoke-virtual {p1, p2, p6}, Lcom/android/server/am/BroadcastStats;->dumpCheckinStats(Ljava/io/PrintWriter;Ljava/lang/String;)V

    if-eqz p5, :cond_2

    .line 13738
    iput-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mCurBroadcastStats:Lcom/android/server/am/BroadcastStats;

    :cond_2
    return-void
.end method

.method public dumpBroadcastStatsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V
    .locals 6
    .annotation build Ldalvik/annotation/optimization/NeverCompile;
    .end annotation

    .line 13691
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mCurBroadcastStats:Lcom/android/server/am/BroadcastStats;

    if-nez p1, :cond_0

    return-void

    :cond_0
    const-string p1, "ACTIVITY MANAGER BROADCAST STATS STATE (dumpsys activity broadcast-stats)"

    .line 13695
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13696
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide p3

    .line 13697
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mLastBroadcastStats:Lcom/android/server/am/BroadcastStats;

    const-string p5, "    (nothing)"

    const-string v0, "    "

    const-string v1, " uptime):"

    if-eqz p1, :cond_2

    const-string p1, "  Last stats (from "

    .line 13698
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13699
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mLastBroadcastStats:Lcom/android/server/am/BroadcastStats;

    iget-wide v2, p1, Lcom/android/server/am/BroadcastStats;->mStartRealtime:J

    invoke-static {v2, v3, p3, p4, p2}, Landroid/util/TimeUtils;->formatDuration(JJLjava/io/PrintWriter;)V

    const-string p1, " to "

    .line 13700
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13701
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mLastBroadcastStats:Lcom/android/server/am/BroadcastStats;

    iget-wide v2, p1, Lcom/android/server/am/BroadcastStats;->mEndRealtime:J

    invoke-static {v2, v3, p3, p4, p2}, Landroid/util/TimeUtils;->formatDuration(JJLjava/io/PrintWriter;)V

    const-string p1, ", "

    .line 13702
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13703
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mLastBroadcastStats:Lcom/android/server/am/BroadcastStats;

    iget-wide v2, p1, Lcom/android/server/am/BroadcastStats;->mEndUptime:J

    iget-wide v4, p1, Lcom/android/server/am/BroadcastStats;->mStartUptime:J

    sub-long/2addr v2, v4

    invoke-static {v2, v3, p2}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 13705
    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13706
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mLastBroadcastStats:Lcom/android/server/am/BroadcastStats;

    invoke-virtual {p1, p2, v0, p6}, Lcom/android/server/am/BroadcastStats;->dumpStats(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;)Z

    move-result p1

    if-nez p1, :cond_1

    .line 13707
    invoke-virtual {p2, p5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13709
    :cond_1
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    :cond_2
    const-string p1, "  Current stats (from "

    .line 13711
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13712
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mCurBroadcastStats:Lcom/android/server/am/BroadcastStats;

    iget-wide v2, p1, Lcom/android/server/am/BroadcastStats;->mStartRealtime:J

    invoke-static {v2, v3, p3, p4, p2}, Landroid/util/TimeUtils;->formatDuration(JJLjava/io/PrintWriter;)V

    const-string p1, " to now, "

    .line 13713
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13714
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide p3

    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mCurBroadcastStats:Lcom/android/server/am/BroadcastStats;

    iget-wide v2, p1, Lcom/android/server/am/BroadcastStats;->mStartUptime:J

    sub-long/2addr p3, v2

    invoke-static {p3, p4, p2}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 13716
    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13717
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mCurBroadcastStats:Lcom/android/server/am/BroadcastStats;

    invoke-virtual {p0, p2, v0, p6}, Lcom/android/server/am/BroadcastStats;->dumpStats(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;)Z

    move-result p0

    if-nez p0, :cond_3

    .line 13718
    invoke-virtual {p2, p5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    :cond_3
    return-void
.end method

.method public dumpBroadcastsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V
    .locals 26
    .annotation build Ldalvik/annotation/optimization/NeverCompile;
    .end annotation

    move-object/from16 v0, p0

    move-object/from16 v11, p2

    move-object/from16 v12, p3

    move/from16 v13, p4

    const/4 v14, 0x1

    const/4 v15, 0x1

    const-string v1, "history"

    move-object/from16 v2, p6

    .line 13533
    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    const/4 v3, 0x0

    const/16 v16, 0x1

    if-eqz v1, :cond_1

    .line 13534
    array-length v1, v12

    if-ge v13, v1, :cond_0

    const-string v1, "-s"

    aget-object v2, v12, v13

    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_0

    const/4 v1, 0x0

    goto :goto_0

    :cond_0
    move/from16 v1, p5

    :goto_0
    move/from16 v17, v1

    move-object v2, v3

    move/from16 v18, v16

    goto :goto_1

    :cond_1
    move/from16 v17, p5

    const/16 v18, 0x0

    :goto_1
    const-string/jumbo v1, "receivers"

    .line 13540
    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    const/4 v4, -0x1

    if-eqz v1, :cond_6

    add-int/lit8 v1, v13, 0x2

    .line 13543
    array-length v2, v12

    if-gt v1, v2, :cond_5

    move v2, v4

    move v1, v13

    .line 13544
    :goto_2
    array-length v5, v12

    if-ge v1, v5, :cond_4

    .line 13545
    aget-object v2, v12, v1

    .line 13546
    invoke-virtual {v2}, Ljava/lang/String;->hashCode()I

    const-string v5, "--uid"

    invoke-virtual {v2, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-nez v5, :cond_2

    .line 13554
    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v0

    filled-new-array {v0, v2}, [Ljava/lang/Object;

    move-result-object v0

    const-string v1, "Invalid argument at index %d: %s\n"

    invoke-virtual {v11, v1, v0}, Ljava/io/PrintWriter;->printf(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintWriter;

    return-void

    :cond_2
    add-int/lit8 v1, v1, 0x1

    .line 13548
    invoke-static {v11, v12, v1, v4}, Lcom/android/server/am/ActivityManagerService;->getIntArg(Ljava/io/PrintWriter;[Ljava/lang/String;II)I

    move-result v2

    if-ne v2, v4, :cond_3

    return-void

    :cond_3
    add-int/lit8 v1, v1, 0x1

    goto :goto_2

    :cond_4
    move-object v9, v3

    goto :goto_3

    :cond_5
    move-object v9, v3

    move v2, v4

    :goto_3
    move/from16 v19, v16

    goto :goto_4

    :cond_6
    move-object v9, v2

    move v2, v4

    const/16 v19, 0x0

    :goto_4
    const-string v1, "ACTIVITY MANAGER BROADCAST STATE (dumpsys activity broadcasts)"

    .line 13566
    invoke-virtual {v11, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    const-string v8, "    "

    if-nez v18, :cond_f

    if-eqz v17, :cond_f

    .line 13568
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->size()I

    move-result v1

    if-lez v1, :cond_c

    .line 13570
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v1

    const/4 v3, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    .line 13571
    :cond_7
    :goto_5
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v7

    if-eqz v7, :cond_b

    .line 13572
    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/am/ReceiverList;

    if-eqz v9, :cond_8

    .line 13573
    iget-object v10, v7, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v10, :cond_7

    iget-object v10, v10, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v10, v10, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 13574
    invoke-virtual {v9, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v10

    if-nez v10, :cond_8

    goto :goto_5

    :cond_8
    if-eq v2, v4, :cond_9

    .line 13577
    iget-object v10, v7, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;

    iget v10, v10, Lcom/android/server/am/ProcessRecord;->uid:I

    if-eq v2, v10, :cond_9

    goto :goto_5

    :cond_9
    if-nez v6, :cond_a

    const-string v3, "  Registered Receivers:"

    .line 13585
    invoke-virtual {v11, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    move/from16 v3, v16

    move v5, v3

    move v6, v5

    :cond_a
    const-string v10, "  * "

    .line 13590
    invoke-virtual {v11, v10}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {v11, v7}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 13591
    invoke-virtual {v7, v11, v8}, Lcom/android/server/am/ReceiverList;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    goto :goto_5

    :cond_b
    move v10, v3

    move/from16 v21, v5

    goto :goto_6

    :cond_c
    if-eqz v19, :cond_d

    const-string v1, "  (no registered receivers)"

    .line 13595
    invoke-virtual {v11, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    :cond_d
    const/4 v10, 0x0

    const/16 v21, 0x0

    :goto_6
    if-nez v19, :cond_10

    .line 13600
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mReceiverResolver:Lcom/android/server/IntentResolver;

    if-eqz v10, :cond_e

    const-string v2, "\n  Receiver Resolver Table:"

    goto :goto_7

    :cond_e
    const-string v2, "  Receiver Resolver Table:"

    :goto_7
    move-object v3, v2

    const-string v4, "    "

    const/4 v6, 0x0

    const/4 v7, 0x0

    move-object/from16 v2, p2

    move-object v5, v9

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/IntentResolver;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)Z

    move-result v1

    if-eqz v1, :cond_10

    move/from16 v10, v16

    move/from16 v21, v10

    goto :goto_8

    :cond_f
    const/4 v10, 0x0

    const/16 v21, 0x0

    :cond_10
    :goto_8
    if-nez v19, :cond_11

    .line 13610
    iget-object v7, v0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v6, v7

    const/4 v5, 0x0

    :goto_9
    if-ge v5, v6, :cond_11

    aget-object v1, v7, v5

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object/from16 v4, p3

    move/from16 v22, v5

    move/from16 v5, p4

    move/from16 v23, v6

    move v6, v14

    move-object/from16 v24, v7

    move v7, v15

    move-object v14, v8

    move/from16 v8, v17

    move-object/from16 v25, v9

    const/4 v15, 0x0

    .line 13611
    invoke-virtual/range {v1 .. v10}, Lcom/android/server/am/BroadcastQueue;->dumpLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZZLjava/lang/String;Z)Z

    move-result v10

    or-int v21, v21, v10

    add-int/lit8 v5, v22, 0x1

    move-object v8, v14

    move/from16 v6, v23

    move-object/from16 v7, v24

    const/4 v14, 0x1

    const/4 v15, 0x1

    goto :goto_9

    :cond_11
    move-object v14, v8

    move-object/from16 v25, v9

    const/4 v15, 0x0

    if-nez v18, :cond_17

    if-nez v19, :cond_17

    .line 13619
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    if-eqz v1, :cond_17

    if-nez v25, :cond_17

    move v10, v15

    .line 13620
    :goto_a
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    if-ge v10, v1, :cond_17

    .line 13622
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    const-string v1, "  Sticky broadcasts for user "

    .line 13626
    invoke-virtual {v11, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13627
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    invoke-virtual {v1, v10}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v1

    invoke-virtual {v11, v1}, Ljava/io/PrintWriter;->print(I)V

    const-string v1, ":"

    invoke-virtual {v11, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13628
    new-instance v8, Ljava/lang/StringBuilder;

    const/16 v2, 0x80

    invoke-direct {v8, v2}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 13630
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    invoke-virtual {v2, v10}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/util/ArrayMap;

    invoke-virtual {v2}, Landroid/util/ArrayMap;->entrySet()Ljava/util/Set;

    move-result-object v2

    invoke-interface {v2}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v9

    :goto_b
    invoke-interface {v9}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_16

    invoke-interface {v9}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/Map$Entry;

    const-string v3, "  * Sticky action "

    .line 13631
    invoke-virtual {v11, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/lang/String;

    invoke-virtual {v11, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    if-eqz v17, :cond_14

    .line 13633
    invoke-virtual {v11, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13634
    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v2

    move-object v12, v2

    check-cast v12, Ljava/util/ArrayList;

    .line 13635
    invoke-virtual {v12}, Ljava/util/ArrayList;->size()I

    move-result v13

    move v7, v15

    :goto_c
    if-ge v7, v13, :cond_15

    .line 13637
    invoke-virtual {v12, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ActivityManagerService$StickyBroadcast;

    iget-object v6, v2, Lcom/android/server/am/ActivityManagerService$StickyBroadcast;->intent:Landroid/content/Intent;

    .line 13638
    invoke-virtual {v12, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ActivityManagerService$StickyBroadcast;

    iget-boolean v5, v2, Lcom/android/server/am/ActivityManagerService$StickyBroadcast;->deferUntilActive:Z

    .line 13639
    invoke-virtual {v8, v15}, Ljava/lang/StringBuilder;->setLength(I)V

    const-string v2, "    Intent: "

    .line 13640
    invoke-virtual {v8, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/4 v4, 0x0

    const/16 v20, 0x1

    const/16 v21, 0x0

    const/16 v22, 0x0

    move-object v2, v6

    move-object v3, v8

    move/from16 v23, v5

    move/from16 v5, v20

    move-object/from16 v20, v6

    move/from16 v6, v21

    move v15, v7

    move/from16 v7, v22

    .line 13641
    invoke-virtual/range {v2 .. v7}, Landroid/content/Intent;->toShortString(Ljava/lang/StringBuilder;ZZZZ)V

    .line 13642
    invoke-virtual {v11, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    if-eqz v23, :cond_12

    const-string v2, " [D]"

    .line 13644
    invoke-virtual {v11, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13646
    :cond_12
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    const-string v2, "      originalCallingUid: "

    .line 13647
    invoke-virtual {v11, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13648
    invoke-virtual {v12, v15}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ActivityManagerService$StickyBroadcast;

    iget v2, v2, Lcom/android/server/am/ActivityManagerService$StickyBroadcast;->originalCallingUid:I

    invoke-virtual {v11, v2}, Ljava/io/PrintWriter;->println(I)V

    .line 13649
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 13650
    invoke-virtual/range {v20 .. v20}, Landroid/content/Intent;->getExtras()Landroid/os/Bundle;

    move-result-object v2

    if-eqz v2, :cond_13

    const-string v3, "      extras: "

    .line 13652
    invoke-virtual {v11, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13653
    invoke-virtual {v11, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    :cond_13
    add-int/lit8 v7, v15, 0x1

    const/4 v15, 0x0

    goto :goto_c

    :cond_14
    const-string v2, ""

    .line 13657
    invoke-virtual {v11, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    :cond_15
    const/4 v15, 0x0

    goto/16 :goto_b

    :cond_16
    add-int/lit8 v10, v10, 0x1

    move/from16 v21, v16

    const/4 v15, 0x0

    goto/16 :goto_a

    :cond_17
    if-nez v18, :cond_18

    if-nez v19, :cond_18

    .line 13665
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mExt:Lcom/android/server/am/ActivityManagerServiceExt;

    invoke-virtual {v1, v11}, Lcom/android/server/am/ActivityManagerServiceExt;->dumpBrAllowList(Ljava/io/PrintWriter;)V

    :cond_18
    if-nez v18, :cond_19

    .line 13668
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mExt:Lcom/android/server/am/ActivityManagerServiceExt;

    invoke-virtual {v1, v11}, Lcom/android/server/am/ActivityManagerServiceExt;->dumpBroadcastRecordCount(Ljava/io/PrintWriter;)V

    :cond_19
    if-nez v18, :cond_1b

    if-nez v19, :cond_1b

    if-eqz v17, :cond_1b

    .line 13673
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 13674
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v2, v1

    const/4 v10, 0x0

    :goto_d
    if-ge v10, v2, :cond_1a

    aget-object v3, v1, v10

    .line 13675
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  Queue "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Lcom/android/server/am/BroadcastQueue;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v5, ": "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Lcom/android/server/am/BroadcastQueue;->describeStateLocked()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v11, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    add-int/lit8 v10, v10, 0x1

    goto :goto_d

    :cond_1a
    const-string v1, "  mHandler:"

    .line 13677
    invoke-virtual {v11, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13678
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v1, Landroid/util/PrintWriterPrinter;

    invoke-direct {v1, v11}, Landroid/util/PrintWriterPrinter;-><init>(Ljava/io/PrintWriter;)V

    invoke-virtual {v0, v1, v14}, Landroid/os/Handler;->dump(Landroid/util/Printer;Ljava/lang/String;)V

    goto :goto_e

    :cond_1b
    move/from16 v16, v21

    :goto_e
    if-nez v16, :cond_1c

    const-string v0, "  (nothing)"

    .line 13684
    invoke-virtual {v11, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    :cond_1c
    return-void
.end method

.method public final dumpDbInfo(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
    .locals 6

    const/4 v0, 0x0

    .line 13857
    invoke-virtual {p0, p2, v0, v0, p3}, Lcom/android/server/am/ActivityManagerService;->collectProcesses(Ljava/io/PrintWriter;IZ[Ljava/lang/String;)Ljava/util/ArrayList;

    move-result-object p0

    if-nez p0, :cond_0

    .line 13859
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string p1, "No process found for: "

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    aget-object p1, p3, v0

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-virtual {p2, p0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    return-void

    :cond_0
    const-string v0, "Applications Database Info:"

    .line 13863
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13865
    invoke-virtual {p0}, Ljava/util/ArrayList;->size()I

    move-result v0

    add-int/lit8 v0, v0, -0x1

    :goto_0
    if-ltz v0, :cond_2

    .line 13866
    invoke-virtual {p0, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 13867
    invoke-virtual {v1}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v2

    .line 13868
    invoke-virtual {v1}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v3

    if-eqz v3, :cond_1

    .line 13870
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "\n** Database info for pid "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, " ["

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "] **"

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {p2, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13871
    invoke-virtual {p2}, Ljava/io/PrintWriter;->flush()V

    .line 13873
    :try_start_0
    new-instance v2, Lcom/android/internal/os/TransferPipe;

    invoke-direct {v2}, Lcom/android/internal/os/TransferPipe;-><init>()V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_1
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 13875
    :try_start_1
    invoke-virtual {v2}, Lcom/android/internal/os/TransferPipe;->getWriteFd()Landroid/os/ParcelFileDescriptor;

    move-result-object v4

    invoke-interface {v3, v4, p3}, Landroid/app/IApplicationThread;->dumpDbInfo(Landroid/os/ParcelFileDescriptor;[Ljava/lang/String;)V

    .line 13876
    invoke-virtual {v2, p1}, Lcom/android/internal/os/TransferPipe;->go(Ljava/io/FileDescriptor;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 13878
    :try_start_2
    invoke-virtual {v2}, Lcom/android/internal/os/TransferPipe;->kill()V

    goto :goto_1

    :catchall_0
    move-exception v3

    invoke-virtual {v2}, Lcom/android/internal/os/TransferPipe;->kill()V

    .line 13879
    throw v3
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_1
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0

    .line 13884
    :catch_0
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Got a RemoteException while dumping the app "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13885
    invoke-virtual {p2}, Ljava/io/PrintWriter;->flush()V

    goto :goto_1

    .line 13881
    :catch_1
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Failure while dumping the app: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13882
    invoke-virtual {p2}, Ljava/io/PrintWriter;->flush()V

    :cond_1
    :goto_1
    add-int/lit8 v0, v0, -0x1

    goto/16 :goto_0

    :cond_2
    return-void
.end method

.method public dumpDeliveryGroupPolicyIgnoredActions(Landroid/util/IndentingPrintWriter;)V
    .locals 1

    .line 22627
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDeliveryGroupPolicyIgnoredActions:Landroid/util/ArraySet;

    monitor-enter v0

    .line 22628
    :try_start_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mDeliveryGroupPolicyIgnoredActions:Landroid/util/ArraySet;

    invoke-virtual {p1, p0}, Landroid/util/IndentingPrintWriter;->println(Ljava/lang/Object;)V

    .line 22629
    monitor-exit v0

    return-void

    :catchall_0
    move-exception p0

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw p0
.end method

.method public final dumpEverything(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;IZZIZ)V
    .locals 20

    move-object/from16 v9, p0

    move-object/from16 v0, p1

    move-object/from16 v8, p2

    move/from16 v15, p5

    move-object/from16 v14, p6

    .line 12028
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 12029
    :try_start_0
    iget-object v1, v9, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    invoke-virtual {v1, v8}, Lcom/android/server/am/ActivityManagerConstants;->dump(Ljava/io/PrintWriter;)V

    .line 12030
    iget-object v1, v9, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_3

    .line 12031
    :try_start_1
    iget-object v2, v9, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    invoke-virtual {v2, v8}, Lcom/android/server/am/OomAdjuster;->dumpCachedAppOptimizerSettings(Ljava/io/PrintWriter;)V

    .line 12032
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_2

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 12033
    iget-object v1, v9, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    invoke-virtual {v1, v8}, Lcom/android/server/am/OomAdjuster;->dumpCacheOomRankerSettings(Ljava/io/PrintWriter;)V

    .line 12034
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    if-eqz v15, :cond_0

    const-string v1, "-------------------------------------------------------------------------------"

    .line 12036
    invoke-virtual {v8, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12039
    :cond_0
    invoke-virtual/range {p0 .. p6}, Lcom/android/server/am/ActivityManagerService;->dumpAllowedAssociationsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 12040
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    if-eqz v15, :cond_1

    const-string v1, "-------------------------------------------------------------------------------"

    .line 12042
    invoke-virtual {v8, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12045
    :cond_1
    iget-object v1, v9, Lcom/android/server/am/ActivityManagerService;->mPendingIntentController:Lcom/android/server/am/PendingIntentController;

    invoke-virtual {v1, v8, v15, v14}, Lcom/android/server/am/PendingIntentController;->dumpPendingIntents(Ljava/io/PrintWriter;ZLjava/lang/String;)V

    .line 12046
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    if-eqz v15, :cond_2

    const-string v1, "-------------------------------------------------------------------------------"

    .line 12048
    invoke-virtual {v8, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12050
    :cond_2
    invoke-virtual/range {p0 .. p6}, Lcom/android/server/am/ActivityManagerService;->dumpBroadcastsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 12051
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    if-eqz v15, :cond_3

    const-string v1, "-------------------------------------------------------------------------------"

    .line 12053
    invoke-virtual {v8, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    :cond_3
    if-nez v15, :cond_4

    if-eqz v14, :cond_5

    .line 12056
    :cond_4
    invoke-virtual/range {p0 .. p6}, Lcom/android/server/am/ActivityManagerService;->dumpBroadcastStatsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 12057
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    if-eqz v15, :cond_5

    const-string v1, "-------------------------------------------------------------------------------"

    .line 12059
    invoke-virtual {v8, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12062
    :cond_5
    iget-object v1, v9, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object/from16 v4, p3

    move/from16 v5, p4

    move/from16 v6, p5

    move-object/from16 v7, p6

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ContentProviderHelper;->dumpProvidersLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 12063
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    if-eqz v15, :cond_6

    const-string v1, "-------------------------------------------------------------------------------"

    .line 12065
    invoke-virtual {v8, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12067
    :cond_6
    invoke-virtual/range {p0 .. p6}, Lcom/android/server/am/ActivityManagerService;->dumpPermissions(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 12068
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 12069
    iget-object v1, v9, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object/from16 v4, p3

    move/from16 v5, p4

    move/from16 v6, p5

    move-object/from16 v7, p6

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActiveServices;->newServiceDumperLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)Lcom/android/server/am/ActiveServices$ServiceDumper;

    move-result-object v1

    if-nez p8, :cond_8

    if-eqz v15, :cond_7

    const-string v2, "-------------------------------------------------------------------------------"

    .line 12072
    invoke-virtual {v8, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12074
    :cond_7
    invoke-virtual {v1}, Lcom/android/server/am/ActiveServices$ServiceDumper;->dumpLocked()V

    .line 12076
    :cond_8
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_3

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    if-eqz p8, :cond_a

    if-eqz v15, :cond_9

    const-string v2, "-------------------------------------------------------------------------------"

    .line 12082
    invoke-virtual {v8, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12084
    :cond_9
    invoke-virtual {v1}, Lcom/android/server/am/ActiveServices$ServiceDumper;->dumpWithClient()V

    :cond_a
    if-nez v14, :cond_c

    if-eqz p11, :cond_c

    .line 12093
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    if-eqz v15, :cond_b

    const-string v1, "-------------------------------------------------------------------------------"

    .line 12095
    invoke-virtual {v8, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    :cond_b
    const/16 v1, 0x1770

    .line 12097
    invoke-virtual {v9, v8, v1}, Lcom/android/server/am/ActivityManagerService;->dumpBinderProxies(Ljava/io/PrintWriter;I)V

    .line 12099
    :cond_c
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 12100
    :try_start_3
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    if-eqz v15, :cond_d

    const-string v1, "-------------------------------------------------------------------------------"

    .line 12102
    invoke-virtual {v8, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12104
    :cond_d
    iget-object v10, v9, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    const-string/jumbo v11, "recents"

    move-object/from16 v12, p1

    move-object/from16 v13, p2

    move-object v7, v14

    move-object/from16 v14, p3

    move v6, v15

    move/from16 v15, p4

    move/from16 v16, p5

    move/from16 v17, p8

    move-object/from16 v18, p6

    move/from16 v19, p7

    invoke-virtual/range {v10 .. v19}, Lcom/android/server/wm/ActivityTaskManagerInternal;->dump(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;I)V

    .line 12106
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    if-eqz v6, :cond_e

    const-string v1, "-------------------------------------------------------------------------------"

    .line 12108
    invoke-virtual {v8, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12110
    :cond_e
    iget-object v10, v9, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    const-string/jumbo v11, "lastanr"

    move-object/from16 v12, p1

    move-object/from16 v13, p2

    move-object/from16 v14, p3

    move/from16 v15, p4

    move/from16 v16, p5

    move/from16 v17, p8

    move-object/from16 v18, p6

    move/from16 v19, p7

    invoke-virtual/range {v10 .. v19}, Lcom/android/server/wm/ActivityTaskManagerInternal;->dump(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;I)V

    .line 12112
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    if-eqz v6, :cond_f

    const-string v1, "-------------------------------------------------------------------------------"

    .line 12114
    invoke-virtual {v8, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12116
    :cond_f
    iget-object v10, v9, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    const-string/jumbo v11, "starter"

    move-object/from16 v12, p1

    move-object/from16 v13, p2

    move-object/from16 v14, p3

    move/from16 v15, p4

    move/from16 v16, p5

    move/from16 v17, p8

    move-object/from16 v18, p6

    move/from16 v19, p7

    invoke-virtual/range {v10 .. v19}, Lcom/android/server/wm/ActivityTaskManagerInternal;->dump(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;I)V

    if-nez v7, :cond_11

    .line 12119
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    if-eqz v6, :cond_10

    const-string v1, "-------------------------------------------------------------------------------"

    .line 12121
    invoke-virtual {v8, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12123
    :cond_10
    iget-object v10, v9, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    const-string v11, "containers"

    move-object/from16 v12, p1

    move-object/from16 v13, p2

    move-object/from16 v14, p3

    move/from16 v15, p4

    move/from16 v16, p5

    move/from16 v17, p8

    move-object/from16 v18, p6

    move/from16 v19, p7

    invoke-virtual/range {v10 .. v19}, Lcom/android/server/wm/ActivityTaskManagerInternal;->dump(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;I)V

    :cond_11
    if-nez p9, :cond_13

    .line 12129
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    if-eqz v6, :cond_12

    const-string v1, "-------------------------------------------------------------------------------"

    .line 12131
    invoke-virtual {v8, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12133
    :cond_12
    iget-object v10, v9, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    const-string v11, "activities"

    move-object/from16 v12, p1

    move-object/from16 v13, p2

    move-object/from16 v14, p3

    move/from16 v15, p4

    move/from16 v16, p5

    move/from16 v17, p8

    move-object/from16 v18, p6

    move/from16 v19, p7

    invoke-virtual/range {v10 .. v19}, Lcom/android/server/wm/ActivityTaskManagerInternal;->dump(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;I)V

    .line 12136
    :cond_13
    iget-object v1, v9, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    if-lez v1, :cond_15

    .line 12137
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    if-eqz v6, :cond_14

    const-string v1, "-------------------------------------------------------------------------------"

    .line 12139
    invoke-virtual {v8, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    :cond_14
    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object/from16 v4, p3

    move/from16 v5, p4

    move v15, v6

    move/from16 v6, p5

    move-object v14, v7

    move/from16 v7, p8

    move-object v13, v8

    move-object/from16 v8, p6

    .line 12141
    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->dumpAssociationsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V

    goto :goto_0

    :cond_15
    move v15, v6

    move-object v14, v7

    move-object v13, v8

    .line 12143
    :goto_0
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    if-eqz v15, :cond_16

    const-string v1, "-------------------------------------------------------------------------------"

    .line 12145
    invoke-virtual {v13, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12146
    iget-object v1, v9, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v1, v1, Lcom/android/server/am/ProcessList;->mAppExitInfoTracker:Lcom/android/server/am/AppExitInfoTracker;

    invoke-virtual {v1, v13, v14}, Lcom/android/server/am/AppExitInfoTracker;->dumpHistoryProcessExitInfo(Ljava/io/PrintWriter;Ljava/lang/String;)V

    :cond_16
    if-nez v14, :cond_19

    .line 12149
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    if-eqz v15, :cond_17

    const-string v1, "-------------------------------------------------------------------------------"

    .line 12151
    invoke-virtual {v13, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12153
    :cond_17
    iget-object v1, v9, Lcom/android/server/am/ActivityManagerService;->mOomAdjProfiler:Lcom/android/server/am/OomAdjProfiler;

    invoke-virtual {v1, v13}, Lcom/android/server/am/OomAdjProfiler;->dump(Ljava/io/PrintWriter;)V

    .line 12154
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    if-eqz v15, :cond_18

    const-string v1, "-------------------------------------------------------------------------------"

    .line 12156
    invoke-virtual {v13, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12158
    :cond_18
    invoke-virtual {v9, v13}, Lcom/android/server/am/ActivityManagerService;->dumpLmkLocked(Ljava/io/PrintWriter;)Z

    .line 12160
    :cond_19
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    if-eqz v15, :cond_1a

    const-string v1, "-------------------------------------------------------------------------------"

    .line 12162
    invoke-virtual {v13, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12166
    :cond_1a
    sget-boolean v1, Lcom/android/server/am/MARsPolicyManager;->MARs_ENABLE:Z

    if-eqz v1, :cond_1d

    .line 12167
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    if-eqz v15, :cond_1b

    const-string v1, "-------------------------------------------------------------------------------"

    .line 12169
    invoke-virtual {v13, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12171
    :cond_1b
    invoke-static {}, Lcom/android/server/am/MARsPolicyManager;->getInstance()Lcom/android/server/am/MARsPolicyManager;

    move-result-object v1

    invoke-virtual {v1, v0, v13}, Lcom/android/server/am/MARsPolicyManager;->dumpMARs(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;)V

    .line 12172
    invoke-static {}, Lcom/android/server/am/MARsPolicyManager;->getInstance()Lcom/android/server/am/MARsPolicyManager;

    move-result-object v1

    invoke-virtual {v1, v0, v13}, Lcom/android/server/am/MARsPolicyManager;->dumpMARsHistory(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;)V

    .line 12173
    invoke-static {}, Lcom/android/server/am/mars/database/MARsComponentTracker;->getInstance()Lcom/android/server/am/mars/database/MARsComponentTracker;

    move-result-object v1

    invoke-virtual {v1}, Lcom/android/server/am/mars/database/MARsComponentTracker;->getEnabled()Z

    move-result v1

    if-eqz v1, :cond_1c

    .line 12174
    invoke-static {}, Lcom/android/server/am/mars/database/MARsComponentTracker;->getInstance()Lcom/android/server/am/mars/database/MARsComponentTracker;

    move-result-object v1

    invoke-virtual {v1, v0, v13}, Lcom/android/server/am/mars/database/MARsComponentTracker;->dumpMARsCTHistory(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;)V

    .line 12177
    :cond_1c
    invoke-static {}, Lcom/android/server/am/FreecessController;->getInstance()Lcom/android/server/am/FreecessController;

    move-result-object v1

    invoke-virtual {v1}, Lcom/android/server/am/FreecessController;->getFreecessEnabled()Z

    move-result v1

    if-eqz v1, :cond_1d

    .line 12178
    invoke-static {}, Lcom/android/server/am/FreecessController;->getInstance()Lcom/android/server/am/FreecessController;

    move-result-object v1

    invoke-virtual {v1, v0, v13}, Lcom/android/server/am/FreecessController;->dumpFreecess(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;)V

    .line 12183
    :cond_1d
    iget-object v10, v9, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v10
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 12184
    :try_start_4
    iget-object v1, v9, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object/from16 v4, p3

    move/from16 v5, p4

    move/from16 v6, p5

    move-object/from16 v7, p6

    move/from16 v8, p10

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ProcessList;->dumpProcessesLSP(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;I)V

    .line 12185
    monitor-exit v10
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 12186
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    if-eqz v15, :cond_1e

    const-string v1, "-------------------------------------------------------------------------------"

    .line 12188
    invoke-virtual {v13, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12190
    :cond_1e
    invoke-virtual {v9, v13}, Lcom/android/server/am/ActivityManagerService;->dumpUsers(Ljava/io/PrintWriter;)V

    .line 12194
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    if-eqz v15, :cond_1f

    const-string v1, "-------------------------------------------------------------------------------"

    .line 12196
    invoke-virtual {v13, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12198
    :cond_1f
    iget-object v1, v9, Lcom/android/server/am/ActivityManagerService;->mExt:Lcom/android/server/am/ActivityManagerServiceExt;

    invoke-virtual {v1, v0, v13, v15}, Lcom/android/server/am/ActivityManagerServiceExt;->dumpLocaleChangedHistoryLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Z)V

    .line 12201
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    if-eqz v15, :cond_20

    const-string v1, "-------------------------------------------------------------------------------"

    .line 12203
    invoke-virtual {v13, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12205
    :cond_20
    iget-object v1, v9, Lcom/android/server/am/ActivityManagerService;->mExt:Lcom/android/server/am/ActivityManagerServiceExt;

    invoke-virtual {v1, v0, v13}, Lcom/android/server/am/ActivityManagerServiceExt;->dumpMetaDataLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;)V

    .line 12208
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    if-eqz v15, :cond_21

    const-string v1, "-------------------------------------------------------------------------------"

    .line 12210
    invoke-virtual {v13, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12212
    :cond_21
    iget-object v10, v9, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    const-string/jumbo v11, "multitasking"

    move-object/from16 v12, p1

    move-object v1, v13

    move-object/from16 v13, p2

    move-object/from16 v14, p3

    move v2, v15

    move/from16 v15, p4

    move/from16 v16, p5

    move/from16 v17, p8

    move-object/from16 v18, p6

    move/from16 v19, p7

    invoke-virtual/range {v10 .. v19}, Lcom/android/server/wm/ActivityTaskManagerInternal;->dump(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;I)V

    .line 12226
    iget-object v3, v9, Lcom/android/server/am/ActivityManagerService;->mExt:Lcom/android/server/am/ActivityManagerServiceExt;

    invoke-virtual {v3, v0, v1, v2}, Lcom/android/server/am/ActivityManagerServiceExt;->dumpLongLivePackageLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Z)V

    .line 12230
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    if-eqz v2, :cond_22

    const-string v0, "-------------------------------------------------------------------------------"

    .line 12232
    invoke-virtual {v1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12234
    :cond_22
    iget-object v0, v9, Lcom/android/server/am/ActivityManagerService;->mComponentAliasResolver:Lcom/android/server/am/ComponentAliasResolver;

    invoke-virtual {v0, v1}, Lcom/android/server/am/ComponentAliasResolver;->dump(Ljava/io/PrintWriter;)V

    .line 12235
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :catchall_0
    move-exception v0

    .line 12185
    :try_start_6
    monitor-exit v10
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    :try_start_7
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v0

    :catchall_1
    move-exception v0

    .line 12235
    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :catchall_2
    move-exception v0

    .line 12032
    :try_start_8
    monitor-exit v1
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_2

    :try_start_9
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v0

    :catchall_3
    move-exception v0

    .line 12076
    monitor-exit p0
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_3

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public final dumpGraphicsHardwareUsage(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
    .locals 6

    const/4 v0, 0x0

    .line 13784
    invoke-virtual {p0, p2, v0, v0, p3}, Lcom/android/server/am/ActivityManagerService;->collectProcesses(Ljava/io/PrintWriter;IZ[Ljava/lang/String;)Ljava/util/ArrayList;

    move-result-object p0

    if-nez p0, :cond_0

    .line 13786
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string p1, "No process found for: "

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    aget-object p1, p3, v0

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-virtual {p2, p0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    return-void

    .line 13790
    :cond_0
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v0

    .line 13791
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v2

    const-string v4, "Applications Graphics Acceleration Info:"

    .line 13792
    invoke-virtual {p2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13793
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Uptime: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v0, v1}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v0, " Realtime: "

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v2, v3}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13795
    invoke-virtual {p0}, Ljava/util/ArrayList;->size()I

    move-result v0

    add-int/lit8 v0, v0, -0x1

    :goto_0
    if-ltz v0, :cond_2

    .line 13796
    invoke-virtual {p0, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 13797
    invoke-virtual {v1}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v2

    .line 13798
    invoke-virtual {v1}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v3

    if-eqz v3, :cond_1

    .line 13800
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "\n** Graphics info for pid "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, " ["

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "] **"

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {p2, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13801
    invoke-virtual {p2}, Ljava/io/PrintWriter;->flush()V

    .line 13803
    :try_start_0
    new-instance v2, Lcom/android/internal/os/TransferPipe;

    invoke-direct {v2}, Lcom/android/internal/os/TransferPipe;-><init>()V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_1
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 13805
    :try_start_1
    invoke-virtual {v2}, Lcom/android/internal/os/TransferPipe;->getWriteFd()Landroid/os/ParcelFileDescriptor;

    move-result-object v4

    invoke-interface {v3, v4, p3}, Landroid/app/IApplicationThread;->dumpGfxInfo(Landroid/os/ParcelFileDescriptor;[Ljava/lang/String;)V

    .line 13806
    invoke-virtual {v2, p1}, Lcom/android/internal/os/TransferPipe;->go(Ljava/io/FileDescriptor;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 13808
    :try_start_2
    invoke-virtual {v2}, Lcom/android/internal/os/TransferPipe;->kill()V

    goto :goto_1

    :catchall_0
    move-exception v3

    invoke-virtual {v2}, Lcom/android/internal/os/TransferPipe;->kill()V

    .line 13809
    throw v3
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_1
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0

    .line 13814
    :catch_0
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Got a RemoteException while dumping the app "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13815
    invoke-virtual {p2}, Ljava/io/PrintWriter;->flush()V

    goto :goto_1

    .line 13811
    :catch_1
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Failure while dumping the app: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13812
    invoke-virtual {p2}, Ljava/io/PrintWriter;->flush()V

    :cond_1
    :goto_1
    add-int/lit8 v0, v0, -0x1

    goto/16 :goto_0

    :cond_2
    return-void
.end method

.method public dumpHeap(Ljava/lang/String;IZZZLjava/lang/String;Landroid/os/ParcelFileDescriptor;Landroid/os/RemoteCallback;)Z
    .locals 7

    :try_start_0
    const-string v0, "android.permission.SET_ACTIVITY_WATCHER"

    .line 19960
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_3

    if-eqz p7, :cond_2

    .line 19970
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    :try_start_1
    const-string v0, "dumpHeap"

    .line 19971
    invoke-virtual {p0, p1, p2, v0}, Lcom/android/server/am/ActivityManagerService;->findProcessLOSP(Ljava/lang/String;ILjava/lang/String;)Lcom/android/server/am/ProcessRecord;

    move-result-object p2

    if-eqz p2, :cond_1

    .line 19973
    invoke-virtual {p2}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v0

    if-eqz v0, :cond_1

    .line 19977
    sget-boolean p1, Lcom/android/server/am/MARsPolicyManager;->MARs_ENABLE:Z

    if-eqz p1, :cond_0

    invoke-static {}, Lcom/android/server/am/FreecessController;->getInstance()Lcom/android/server/am/FreecessController;

    move-result-object p1

    invoke-virtual {p1}, Lcom/android/server/am/FreecessController;->getFreecessEnabled()Z

    move-result p1

    if-eqz p1, :cond_0

    .line 19978
    invoke-static {}, Lcom/android/server/am/FreecessController;->getInstance()Lcom/android/server/am/FreecessController;

    move-result-object p1

    iget v1, p2, Lcom/android/server/am/ProcessRecord;->uid:I

    const-string v2, "dumpHeap"

    const-wide/16 v3, 0x7530

    invoke-virtual {p1, v1, v2, v3, v4}, Lcom/android/server/am/FreecessController;->protectFreezePackage(ILjava/lang/String;J)Z

    .line 19980
    :cond_0
    invoke-virtual {p0, p2}, Lcom/android/server/am/ActivityManagerService;->enforceDebuggable(Lcom/android/server/am/ProcessRecord;)V

    .line 19982
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    iget-object p1, p1, Lcom/android/server/am/OomAdjuster;->mCachedAppOptimizer:Lcom/android/server/am/CachedAppOptimizer;

    const/4 p2, 0x0

    invoke-virtual {p1, p2}, Lcom/android/server/am/CachedAppOptimizer;->enableFreezer(Z)Z

    .line 19984
    new-instance v6, Landroid/os/RemoteCallback;

    new-instance p1, Lcom/android/server/am/ActivityManagerService$25;

    invoke-direct {p1, p0, p8}, Lcom/android/server/am/ActivityManagerService$25;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/os/RemoteCallback;)V

    const/4 p2, 0x0

    invoke-direct {v6, p1, p2}, Landroid/os/RemoteCallback;-><init>(Landroid/os/RemoteCallback$OnResultListener;Landroid/os/Handler;)V

    move v1, p3

    move v2, p4

    move v3, p5

    move-object v4, p6

    move-object v5, p7

    .line 19993
    invoke-interface/range {v0 .. v6}, Landroid/app/IApplicationThread;->dumpHeap(ZZZLjava/lang/String;Landroid/os/ParcelFileDescriptor;Landroid/os/RemoteCallback;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 19995
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 20000
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    const/4 p0, 0x1

    return p0

    :catchall_0
    move-exception p1

    move-object p7, p2

    goto :goto_0

    .line 19974
    :cond_1
    :try_start_3
    new-instance p2, Ljava/lang/IllegalArgumentException;

    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string p4, "Unknown process: "

    invoke-virtual {p3, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p2, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p2

    :catchall_1
    move-exception p1

    .line 19996
    :goto_0
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1

    .line 19967
    :cond_2
    new-instance p0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo p1, "null fd"

    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 19962
    :cond_3
    new-instance p0, Ljava/lang/SecurityException;

    const-string p1, "Requires permission android.permission.SET_ACTIVITY_WATCHER"

    invoke-direct {p0, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p0
    :try_end_4
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_0
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    :catchall_2
    move-exception p0

    goto :goto_1

    .line 19998
    :catch_0
    :try_start_5
    new-instance p0, Ljava/lang/IllegalStateException;

    const-string p1, "Process disappeared"

    invoke-direct {p0, p1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_2

    :goto_1
    if-eqz p7, :cond_4

    .line 20002
    :try_start_6
    invoke-virtual {p7}, Landroid/os/ParcelFileDescriptor;->close()V
    :try_end_6
    .catch Ljava/io/IOException; {:try_start_6 .. :try_end_6} :catch_1

    .line 20006
    :catch_1
    :cond_4
    throw p0
.end method

.method public dumpHeapFinished(Ljava/lang/String;)V
    .locals 1

    .line 20102
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    invoke-virtual {p0, p1, v0}, Lcom/android/server/am/AppProfiler;->dumpHeapFinished(Ljava/lang/String;I)V

    return-void
.end method

.method public dumpLmkLocked(Ljava/io/PrintWriter;)Z
    .locals 4

    const-string v0, "ACTIVITY MANAGER LMK KILLS (dumpsys activity lmk)"

    .line 13347
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    const/16 v0, 0x3e9

    .line 13348
    invoke-static {v0, v0}, Lcom/android/server/am/ProcessList;->getLmkdKillCount(II)Ljava/lang/Integer;

    move-result-object v0

    const/4 v1, 0x0

    if-nez v0, :cond_0

    return v1

    .line 13353
    :cond_0
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "  Total number of kills: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    const/16 v0, 0x3e7

    .line 13355
    invoke-virtual {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->reportLmkKillAtOrBelow(Ljava/io/PrintWriter;I)Z

    move-result v0

    if-eqz v0, :cond_1

    const/16 v0, 0x384

    .line 13356
    invoke-virtual {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->reportLmkKillAtOrBelow(Ljava/io/PrintWriter;I)Z

    move-result v0

    if-eqz v0, :cond_1

    const/16 v0, 0x35c

    .line 13357
    invoke-virtual {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->reportLmkKillAtOrBelow(Ljava/io/PrintWriter;I)Z

    move-result v0

    if-eqz v0, :cond_1

    const/16 v0, 0x352

    .line 13358
    invoke-virtual {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->reportLmkKillAtOrBelow(Ljava/io/PrintWriter;I)Z

    move-result v0

    if-eqz v0, :cond_1

    const/16 v0, 0x320

    .line 13359
    invoke-virtual {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->reportLmkKillAtOrBelow(Ljava/io/PrintWriter;I)Z

    move-result v0

    if-eqz v0, :cond_1

    const/16 v0, 0x2bc

    .line 13360
    invoke-virtual {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->reportLmkKillAtOrBelow(Ljava/io/PrintWriter;I)Z

    move-result v0

    if-eqz v0, :cond_1

    const/16 v0, 0x258

    .line 13361
    invoke-virtual {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->reportLmkKillAtOrBelow(Ljava/io/PrintWriter;I)Z

    move-result v0

    if-eqz v0, :cond_1

    const/16 v0, 0x1f4

    .line 13362
    invoke-virtual {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->reportLmkKillAtOrBelow(Ljava/io/PrintWriter;I)Z

    move-result v0

    if-eqz v0, :cond_1

    const/16 v0, 0x190

    .line 13363
    invoke-virtual {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->reportLmkKillAtOrBelow(Ljava/io/PrintWriter;I)Z

    move-result v0

    if-eqz v0, :cond_1

    const/16 v0, 0x15e

    .line 13365
    invoke-virtual {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->reportLmkKillAtOrBelow(Ljava/io/PrintWriter;I)Z

    move-result v0

    if-eqz v0, :cond_1

    const/16 v0, 0x12c

    .line 13366
    invoke-virtual {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->reportLmkKillAtOrBelow(Ljava/io/PrintWriter;I)Z

    move-result v0

    if-eqz v0, :cond_1

    const/16 v0, 0xfa

    .line 13367
    invoke-virtual {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->reportLmkKillAtOrBelow(Ljava/io/PrintWriter;I)Z

    move-result v0

    if-eqz v0, :cond_1

    const/16 v0, 0xe1

    .line 13368
    invoke-virtual {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->reportLmkKillAtOrBelow(Ljava/io/PrintWriter;I)Z

    move-result v0

    if-eqz v0, :cond_1

    const/16 v0, 0xc8

    .line 13369
    invoke-virtual {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->reportLmkKillAtOrBelow(Ljava/io/PrintWriter;I)Z

    move-result v0

    if-eqz v0, :cond_1

    const/16 v0, 0x64

    .line 13370
    invoke-virtual {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->reportLmkKillAtOrBelow(Ljava/io/PrintWriter;I)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 13371
    invoke-virtual {p0, p1, v1}, Lcom/android/server/am/ActivityManagerService;->reportLmkKillAtOrBelow(Ljava/io/PrintWriter;I)Z

    move-result p0

    if-eqz p0, :cond_1

    const/4 v1, 0x1

    :cond_1
    return v1
.end method

.method public dumpOtherProcessesInfoLSP(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;ZLjava/lang/String;IIZ)V
    .locals 14
    .annotation build Ldalvik/annotation/optimization/NeverCompile;
    .end annotation

    move-object v0, p0

    move-object/from16 v10, p2

    move-object/from16 v11, p4

    const/4 v12, 0x0

    const/4 v13, 0x1

    if-nez p3, :cond_1

    if-eqz v11, :cond_0

    goto :goto_0

    :cond_0
    move/from16 v4, p7

    goto/16 :goto_6

    .line 12918
    :cond_1
    :goto_0
    new-instance v1, Landroid/util/SparseArray;

    invoke-direct {v1}, Landroid/util/SparseArray;-><init>()V

    .line 12919
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v2

    .line 12921
    :try_start_0
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v3}, Lcom/android/server/am/ActivityManagerService$PidMap;->size()I

    move-result v3

    move/from16 v4, p7

    move v5, v12

    move v6, v5

    :goto_1
    if-ge v5, v3, :cond_5

    .line 12922
    iget-object v7, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v7, v5}, Lcom/android/server/am/ActivityManagerService$PidMap;->valueAt(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v7

    .line 12923
    invoke-virtual {v7}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v8

    invoke-virtual {v1, v8, v7}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    if-eqz v11, :cond_2

    .line 12924
    invoke-virtual {v7}, Lcom/android/server/am/ProcessRecord;->getPkgList()Lcom/android/server/am/PackageList;

    move-result-object v7

    invoke-virtual {v7, v11}, Lcom/android/server/am/PackageList;->containsKey(Ljava/lang/Object;)Z

    move-result v7

    if-nez v7, :cond_2

    goto :goto_2

    :cond_2
    if-nez v6, :cond_4

    if-eqz v4, :cond_3

    .line 12928
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    :cond_3
    const-string v4, "  PID mappings:"

    .line 12930
    invoke-virtual {v10, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    move v4, v13

    move v6, v4

    :cond_4
    const-string v7, "    PID #"

    .line 12933
    invoke-virtual {v10, v7}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v7, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v7, v5}, Lcom/android/server/am/ActivityManagerService$PidMap;->keyAt(I)I

    move-result v7

    invoke-virtual {v10, v7}, Ljava/io/PrintWriter;->print(I)V

    const-string v7, ": "

    .line 12934
    invoke-virtual {v10, v7}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v7, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v7, v5}, Lcom/android/server/am/ActivityManagerService$PidMap;->valueAt(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v7

    invoke-virtual {v10, v7}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    :goto_2
    add-int/lit8 v5, v5, 0x1

    goto :goto_1

    .line 12936
    :cond_5
    monitor-exit v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_3

    .line 12938
    sget-object v3, Lcom/android/server/am/ActivityManagerService;->sActiveProcessInfoSelfLocked:Landroid/util/SparseArray;

    monitor-enter v3

    .line 12940
    :try_start_1
    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    move-result v2

    move v5, v12

    move v6, v5

    :goto_3
    if-ge v5, v2, :cond_a

    .line 12941
    sget-object v7, Lcom/android/server/am/ActivityManagerService;->sActiveProcessInfoSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v7, v5}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Landroid/content/pm/ProcessInfo;

    .line 12942
    invoke-virtual {v7, v5}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v9

    invoke-virtual {v1, v9}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/am/ProcessRecord;

    if-eqz v9, :cond_6

    if-eqz v11, :cond_6

    .line 12944
    invoke-virtual {v9}, Lcom/android/server/am/ProcessRecord;->getPkgList()Lcom/android/server/am/PackageList;

    move-result-object v9

    invoke-virtual {v9, v11}, Lcom/android/server/am/PackageList;->containsKey(Ljava/lang/Object;)Z

    move-result v9

    if-nez v9, :cond_6

    goto :goto_5

    :cond_6
    if-nez v6, :cond_8

    if-eqz v4, :cond_7

    .line 12948
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    :cond_7
    const-string v4, "  Active process infos:"

    .line 12950
    invoke-virtual {v10, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    move v4, v13

    move v6, v4

    :cond_8
    const-string v9, "    Pinfo PID #"

    .line 12953
    invoke-virtual {v10, v9}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {v7, v5}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v7

    invoke-virtual {v10, v7}, Ljava/io/PrintWriter;->print(I)V

    const-string v7, ":"

    .line 12954
    invoke-virtual {v10, v7}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    const-string v7, "      name="

    .line 12955
    invoke-virtual {v10, v7}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v7, v8, Landroid/content/pm/ProcessInfo;->name:Ljava/lang/String;

    invoke-virtual {v10, v7}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12956
    iget-object v7, v8, Landroid/content/pm/ProcessInfo;->deniedPermissions:Landroid/util/ArraySet;

    if-eqz v7, :cond_9

    move v7, v12

    .line 12957
    :goto_4
    iget-object v9, v8, Landroid/content/pm/ProcessInfo;->deniedPermissions:Landroid/util/ArraySet;

    invoke-virtual {v9}, Landroid/util/ArraySet;->size()I

    move-result v9

    if-ge v7, v9, :cond_9

    const-string v9, "      deny: "

    .line 12958
    invoke-virtual {v10, v9}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 12959
    iget-object v9, v8, Landroid/content/pm/ProcessInfo;->deniedPermissions:Landroid/util/ArraySet;

    invoke-virtual {v9, v7}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Ljava/lang/String;

    invoke-virtual {v10, v9}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    add-int/lit8 v7, v7, 0x1

    goto :goto_4

    :cond_9
    :goto_5
    add-int/lit8 v5, v5, 0x1

    goto :goto_3

    .line 12963
    :cond_a
    monitor-exit v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_2

    :goto_6
    if-eqz p3, :cond_b

    .line 12967
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mPhantomProcessList:Lcom/android/server/am/PhantomProcessList;

    const-string v2, "  "

    invoke-virtual {v1, v10, v2}, Lcom/android/server/am/PhantomProcessList;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 12970
    :cond_b
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mImportantProcesses:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    if-lez v1, :cond_11

    .line 12971
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v1

    .line 12973
    :try_start_2
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mImportantProcesses:Landroid/util/SparseArray;

    invoke-virtual {v2}, Landroid/util/SparseArray;->size()I

    move-result v2

    move v3, v12

    move v5, v3

    :goto_7
    if-ge v3, v2, :cond_10

    .line 12974
    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    iget-object v7, v0, Lcom/android/server/am/ActivityManagerService;->mImportantProcesses:Landroid/util/SparseArray;

    invoke-virtual {v7, v3}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/am/ActivityManagerService$ImportanceToken;

    iget v7, v7, Lcom/android/server/am/ActivityManagerService$ImportanceToken;->pid:I

    invoke-virtual {v6, v7}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v6

    if-eqz v11, :cond_c

    if-eqz v6, :cond_f

    .line 12976
    invoke-virtual {v6}, Lcom/android/server/am/ProcessRecord;->getPkgList()Lcom/android/server/am/PackageList;

    move-result-object v6

    invoke-virtual {v6, v11}, Lcom/android/server/am/PackageList;->containsKey(Ljava/lang/Object;)Z

    move-result v6

    if-nez v6, :cond_c

    goto :goto_8

    :cond_c
    if-nez v5, :cond_e

    if-eqz v4, :cond_d

    .line 12980
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    :cond_d
    const-string v4, "  Foreground Processes:"

    .line 12982
    invoke-virtual {v10, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    move v4, v13

    move v5, v4

    :cond_e
    const-string v6, "    PID #"

    .line 12985
    invoke-virtual {v10, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mImportantProcesses:Landroid/util/SparseArray;

    invoke-virtual {v6, v3}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v6

    invoke-virtual {v10, v6}, Ljava/io/PrintWriter;->print(I)V

    const-string v6, ": "

    .line 12986
    invoke-virtual {v10, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mImportantProcesses:Landroid/util/SparseArray;

    invoke-virtual {v6, v3}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v6

    invoke-virtual {v10, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    :cond_f
    :goto_8
    add-int/lit8 v3, v3, 0x1

    goto :goto_7

    .line 12988
    :cond_10
    monitor-exit v1

    goto :goto_9

    :catchall_0
    move-exception v0

    monitor-exit v1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v0

    .line 12991
    :cond_11
    :goto_9
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    if-lez v1, :cond_13

    if-eqz v4, :cond_12

    .line 12992
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    :cond_12
    const-string v1, "  Persisent processes that are starting:"

    .line 12994
    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12995
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    const-string v4, "    "

    const-string v5, "Starting Norm"

    const-string v6, "Restarting PERS"

    move-object/from16 v1, p2

    move-object v2, p0

    move-object/from16 v7, p4

    invoke-static/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpProcessList(Ljava/io/PrintWriter;Lcom/android/server/am/ActivityManagerService;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I

    move v4, v13

    .line 12999
    :cond_13
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v1, v1, Lcom/android/server/am/ProcessList;->mRemovedProcesses:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    if-lez v1, :cond_15

    if-eqz v4, :cond_14

    .line 13000
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    :cond_14
    const-string v1, "  Processes that are being removed:"

    .line 13002
    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13003
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v3, v1, Lcom/android/server/am/ProcessList;->mRemovedProcesses:Ljava/util/ArrayList;

    const-string v4, "    "

    const-string v5, "Removed Norm"

    const-string v6, "Removed PERS"

    move-object/from16 v1, p2

    move-object v2, p0

    move-object/from16 v7, p4

    invoke-static/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpProcessList(Ljava/io/PrintWriter;Lcom/android/server/am/ActivityManagerService;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I

    move v4, v13

    .line 13007
    :cond_15
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    if-lez v1, :cond_17

    if-eqz v4, :cond_16

    .line 13008
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    :cond_16
    const-string v1, "  Processes that are on old until the system is ready:"

    .line 13010
    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13011
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    const-string v4, "    "

    const-string v5, "OnHold Norm"

    const-string v6, "OnHold PERS"

    move-object/from16 v1, p2

    move-object v2, p0

    move-object/from16 v7, p4

    invoke-static/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpProcessList(Ljava/io/PrintWriter;Lcom/android/server/am/ActivityManagerService;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I

    move v4, v13

    .line 13015
    :cond_17
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mAppErrors:Lcom/android/server/am/AppErrors;

    move-object v2, p1

    invoke-virtual {v1, p1, v10, v4, v11}, Lcom/android/server/am/AppErrors;->dumpLPr(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;ZLjava/lang/String;)Z

    move-result v7

    .line 13017
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    .line 13018
    invoke-virtual {v3}, Lcom/android/server/am/AppProfiler;->getTestPssMode()Z

    move-result v8

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mWakefulness:Ljava/util/concurrent/atomic/AtomicInteger;

    invoke-virtual {v3}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    move-result v9

    move-object/from16 v3, p2

    move/from16 v4, p3

    move-object/from16 v5, p4

    move/from16 v6, p5

    .line 13017
    invoke-virtual/range {v1 .. v9}, Lcom/android/server/wm/ActivityTaskManagerInternal;->dumpForProcesses(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;ZLjava/lang/String;IZZI)Z

    move-result v1

    if-eqz p3, :cond_19

    .line 13020
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v2, v2, Lcom/android/server/am/ProcessList;->mPendingStarts:Landroid/util/LongSparseArray;

    invoke-virtual {v2}, Landroid/util/LongSparseArray;->size()I

    move-result v2

    if-lez v2, :cond_19

    if-eqz v1, :cond_18

    .line 13021
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    :cond_18
    const-string v1, "  mPendingStarts: "

    .line 13023
    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13024
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v1, v1, Lcom/android/server/am/ProcessList;->mPendingStarts:Landroid/util/LongSparseArray;

    invoke-virtual {v1}, Landroid/util/LongSparseArray;->size()I

    move-result v1

    move v2, v12

    :goto_a
    if-ge v2, v1, :cond_1a

    .line 13025
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "    "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v4, v4, Lcom/android/server/am/ProcessList;->mPendingStarts:Landroid/util/LongSparseArray;

    invoke-virtual {v4, v2}, Landroid/util/LongSparseArray;->keyAt(I)J

    move-result-wide v4

    invoke-virtual {v3, v4, v5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v4, ": "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v4, v4, Lcom/android/server/am/ProcessList;->mPendingStarts:Landroid/util/LongSparseArray;

    .line 13026
    invoke-virtual {v4, v2}, Landroid/util/LongSparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    .line 13025
    invoke-virtual {v10, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    add-int/lit8 v2, v2, 0x1

    goto :goto_a

    :cond_19
    move v13, v1

    .line 13032
    :cond_1a
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  mProcessLimit: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget v2, v2, Lcom/android/server/am/ActivityManagerConstants;->MAX_CACHED_PROCESSES:I

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13033
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  mNumNonCachedProcs: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    iget v2, v2, Lcom/android/server/am/OomAdjuster;->mNumNonCachedProcs:I

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13034
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  mNumCachedHiddenProcs: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    iget v2, v2, Lcom/android/server/am/OomAdjuster;->mNumCachedHiddenProcs:I

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13035
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  mProcessLimitOverride(OverrideMaxCachedProcesses): "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    invoke-virtual {v2}, Lcom/android/server/am/ActivityManagerConstants;->getOverrideMaxCachedProcesses()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13037
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mDynamicHiddenApp:Lcom/android/server/am/DynamicHiddenApp;

    if-eqz v1, :cond_1d

    .line 13038
    invoke-virtual {v1, v10}, Lcom/android/server/am/DynamicHiddenApp;->dumpLMKDParameter(Ljava/io/PrintWriter;)V

    .line 13040
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->isPmmEnabled()Z

    move-result v1

    if-eqz v1, :cond_1b

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mKillPolicyManager:Lcom/android/server/am/KillPolicyManager;

    if-eqz v1, :cond_1b

    const/4 v2, 0x0

    .line 13041
    invoke-virtual {v1, v10, v2}, Lcom/android/server/am/KillPolicyManager;->dump(Ljava/io/PrintWriter;[Ljava/lang/String;)V

    .line 13044
    :cond_1b
    sget-boolean v1, Lcom/android/server/am/DynamicHiddenApp;->IS_HIGH_CAPACITY_RAM:Z

    if-eqz v1, :cond_1c

    const-string v1, "  IS_HIGH_CAPACITY_RAM: true"

    .line 13045
    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13047
    :cond_1c
    sget-boolean v1, Lcom/android/server/am/DynamicHiddenApp;->PICKED_ADJ_ENABLE:Z

    if-eqz v1, :cond_1d

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mDynamicHiddenApp:Lcom/android/server/am/DynamicHiddenApp;

    invoke-virtual {v1, v10}, Lcom/android/server/am/DynamicHiddenApp;->dumpMLList(Ljava/io/PrintWriter;)V

    :cond_1d
    if-eqz p3, :cond_1f

    .line 13053
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mUidObserverController:Lcom/android/server/am/UidObserverController;

    invoke-virtual {v1, v10, v11}, Lcom/android/server/am/UidObserverController;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 13055
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  mDeviceIdleAllowlist="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mDeviceIdleAllowlist:[I

    invoke-static {v2}, Ljava/util/Arrays;->toString([I)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13056
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  mDeviceIdleExceptIdleAllowlist="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mDeviceIdleExceptIdleAllowlist:[I

    .line 13057
    invoke-static {v2}, Ljava/util/Arrays;->toString([I)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    .line 13056
    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13058
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  mDeviceIdleTempAllowlist="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mDeviceIdleTempAllowlist:[I

    invoke-static {v2}, Ljava/util/Arrays;->toString([I)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13059
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mPendingTempAllowlist:Lcom/android/server/am/PendingTempAllowlists;

    invoke-virtual {v1}, Lcom/android/server/am/PendingTempAllowlists;->size()I

    move-result v1

    if-lez v1, :cond_1e

    const-string v1, "  mPendingTempAllowlist:"

    .line 13060
    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13061
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mPendingTempAllowlist:Lcom/android/server/am/PendingTempAllowlists;

    invoke-virtual {v1}, Lcom/android/server/am/PendingTempAllowlists;->size()I

    move-result v1

    move v2, v12

    :goto_b
    if-ge v2, v1, :cond_1e

    .line 13062
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mPendingTempAllowlist:Lcom/android/server/am/PendingTempAllowlists;

    invoke-virtual {v3, v2}, Lcom/android/server/am/PendingTempAllowlists;->valueAt(I)Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;

    move-result-object v3

    const-string v4, "    "

    .line 13063
    invoke-virtual {v10, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13064
    iget v4, v3, Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;->targetUid:I

    invoke-static {v10, v4}, Landroid/os/UserHandle;->formatUid(Ljava/io/PrintWriter;I)V

    const-string v4, ": "

    .line 13065
    invoke-virtual {v10, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13066
    iget-wide v4, v3, Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;->duration:J

    invoke-static {v4, v5, v10}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    const-string v4, " "

    .line 13067
    invoke-virtual {v10, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13068
    iget-object v4, v3, Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;->tag:Ljava/lang/String;

    invoke-virtual {v10, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    const-string v4, " "

    .line 13069
    invoke-virtual {v10, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13070
    iget v4, v3, Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;->type:I

    invoke-virtual {v10, v4}, Ljava/io/PrintWriter;->print(I)V

    const-string v4, " "

    .line 13071
    invoke-virtual {v10, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13072
    iget v4, v3, Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;->reasonCode:I

    invoke-virtual {v10, v4}, Ljava/io/PrintWriter;->print(I)V

    const-string v4, " "

    .line 13073
    invoke-virtual {v10, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13074
    iget v3, v3, Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;->callingUid:I

    invoke-virtual {v10, v3}, Ljava/io/PrintWriter;->print(I)V

    add-int/lit8 v2, v2, 0x1

    goto :goto_b

    :cond_1e
    const-string v1, "  mFgsStartTempAllowList:"

    .line 13077
    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13078
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v3

    .line 13079
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v5

    .line 13080
    iget-object v7, v0, Lcom/android/server/am/ActivityManagerService;->mFgsStartTempAllowList:Lcom/android/server/am/FgsTempAllowList;

    new-instance v8, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda26;

    move-object v1, v8

    move-object/from16 v2, p2

    invoke-direct/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda26;-><init>(Ljava/io/PrintWriter;JJ)V

    invoke-virtual {v7, v8}, Lcom/android/server/am/FgsTempAllowList;->forEach(Ljava/util/function/BiConsumer;)V

    .line 13092
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v1, v1, Lcom/android/server/am/ProcessList;->mAppsInBackgroundRestricted:Landroid/util/ArraySet;

    invoke-virtual {v1}, Landroid/util/ArraySet;->isEmpty()Z

    move-result v1

    if-nez v1, :cond_1f

    const-string v1, "  Processes that are in background restricted:"

    .line 13093
    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13094
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v1, v1, Lcom/android/server/am/ProcessList;->mAppsInBackgroundRestricted:Landroid/util/ArraySet;

    invoke-virtual {v1}, Landroid/util/ArraySet;->size()I

    move-result v1

    move v2, v12

    :goto_c
    if-ge v2, v1, :cond_1f

    const-string v3, "%s #%2d: %s"

    const-string v4, "    "

    .line 13096
    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v6, v6, Lcom/android/server/am/ProcessList;->mAppsInBackgroundRestricted:Landroid/util/ArraySet;

    .line 13097
    invoke-virtual {v6, v2}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/am/ProcessRecord;

    invoke-virtual {v6}, Lcom/android/server/am/ProcessRecord;->toString()Ljava/lang/String;

    move-result-object v6

    filled-new-array {v4, v5, v6}, [Ljava/lang/Object;

    move-result-object v4

    .line 13096
    invoke-static {v3, v4}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v10, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    add-int/lit8 v2, v2, 0x1

    goto :goto_c

    .line 13101
    :cond_1f
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    if-nez v1, :cond_20

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    if-nez v2, :cond_20

    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mDebugTransient:Z

    if-nez v2, :cond_20

    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z

    if-eqz v2, :cond_23

    :cond_20
    if-eqz v11, :cond_21

    .line 13103
    invoke-virtual {v11, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_21

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    .line 13104
    invoke-virtual {v11, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_23

    :cond_21
    if-eqz v13, :cond_22

    .line 13106
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    move v13, v12

    .line 13109
    :cond_22
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  mDebugApp="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "/orig="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, " mDebugTransient="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mDebugTransient:Z

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    const-string v2, " mOrigWaitForDebugger="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13114
    :cond_23
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    iget-object v1, v1, Lcom/android/server/am/AppProfiler;->mProfilerLock:Ljava/lang/Object;

    monitor-enter v1

    .line 13115
    :try_start_3
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {v2, v10, v13}, Lcom/android/server/am/AppProfiler;->dumpMemWatchProcessesLPf(Ljava/io/PrintWriter;Z)Z

    move-result v2

    .line 13116
    monitor-exit v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 13117
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mTrackAllocationApp:Ljava/lang/String;

    if-eqz v1, :cond_26

    if-eqz v11, :cond_24

    .line 13118
    invoke-virtual {v11, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_26

    :cond_24
    if-eqz v2, :cond_25

    .line 13120
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    goto :goto_d

    :cond_25
    move v12, v2

    .line 13123
    :goto_d
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  mTrackAllocationApp="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mTrackAllocationApp:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    move v2, v12

    .line 13126
    :cond_26
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {v1, v10, v11, v2}, Lcom/android/server/am/AppProfiler;->dumpProfileDataLocked(Ljava/io/PrintWriter;Ljava/lang/String;Z)Z

    move-result v1

    .line 13127
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mNativeDebuggingApp:Ljava/lang/String;

    if-eqz v2, :cond_29

    if-eqz v11, :cond_27

    .line 13128
    invoke-virtual {v11, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_29

    :cond_27
    if-eqz v1, :cond_28

    .line 13130
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 13133
    :cond_28
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  mNativeDebuggingApp="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mNativeDebuggingApp:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    :cond_29
    if-nez v11, :cond_2b

    .line 13137
    iget-boolean v1, v0, Lcom/android/server/am/ActivityManagerService;->mAlwaysFinishActivities:Z

    if-eqz v1, :cond_2a

    .line 13138
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  mAlwaysFinishActivities="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mAlwaysFinishActivities:Z

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    :cond_2a
    if-eqz p3, :cond_2b

    .line 13141
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  Total persistent processes: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move/from16 v2, p6

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13142
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  mProcessesReady="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    const-string v2, " mSystemReady="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mSystemReady:Z

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    const-string v2, " mBooted="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    const-string v2, " mFactoryTest="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13146
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  mBooting="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mBooting:Z

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    const-string v2, " mCallFinishBooting="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mCallFinishBooting:Z

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    const-string v2, " mBootAnimationComplete="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mBootAnimationComplete:Z

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    const-string v1, "  mLastPowerCheckUptime="

    .line 13149
    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13150
    iget-wide v1, v0, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckUptime:J

    invoke-static {v1, v2, v10}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    const-string v1, ""

    .line 13151
    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13152
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    invoke-virtual {v1, v10}, Lcom/android/server/am/OomAdjuster;->dumpSequenceNumbersLocked(Ljava/io/PrintWriter;)V

    .line 13153
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    invoke-virtual {v1, v10}, Lcom/android/server/am/OomAdjuster;->dumpProcCountsLocked(Ljava/io/PrintWriter;)V

    .line 13154
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {v1, v10}, Lcom/android/server/am/AppProfiler;->dumpMemoryLevelsLocked(Ljava/io/PrintWriter;)V

    .line 13155
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v1

    const-string v3, "  mLastIdleTime="

    .line 13156
    invoke-virtual {v10, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13157
    iget-wide v3, v0, Lcom/android/server/am/ActivityManagerService;->mLastIdleTime:J

    invoke-static {v1, v2, v3, v4, v10}, Landroid/util/TimeUtils;->formatDuration(JJLjava/io/PrintWriter;)V

    const-string v3, " mLowRamSinceLastIdle="

    .line 13158
    invoke-virtual {v10, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13159
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    .line 13160
    invoke-virtual {v3, v1, v2}, Lcom/android/server/am/AppProfiler;->getLowRamTimeSinceIdleLPr(J)J

    move-result-wide v1

    .line 13159
    invoke-static {v1, v2, v10}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 13161
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 13163
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    const-string v1, "  ServiceManager statistics:"

    .line 13164
    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13165
    sget-object v1, Landroid/os/ServiceManager;->sStatLogger:Lcom/android/internal/util/StatLogger;

    const-string v2, "    "

    invoke-virtual {v1, v10, v2}, Lcom/android/internal/util/StatLogger;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 13166
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 13169
    :cond_2b
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  mForceBackgroundCheck="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mForceBackgroundCheck:Z

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13173
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  CUR_TRIM_EMPTY_PROCESSES:"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget v2, v2, Lcom/android/server/am/ActivityManagerConstants;->CUR_TRIM_EMPTY_PROCESSES:I

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v10, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13174
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  CUR_TRIM_CACHED_PROCESSES:"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget v0, v0, Lcom/android/server/am/ActivityManagerConstants;->CUR_TRIM_CACHED_PROCESSES:I

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v10, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13175
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "  TRIM_CRITICAL_THRESHOLD: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget v1, Lcom/android/server/am/ProcessList;->TRIM_CRITICAL_THRESHOLD:I

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v10, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13176
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "  TRIM_LOW_THRESHOLD: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget v1, Lcom/android/server/am/ProcessList;->TRIM_LOW_THRESHOLD:I

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v10, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    return-void

    :catchall_1
    move-exception v0

    .line 13116
    :try_start_4
    monitor-exit v1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    throw v0

    :catchall_2
    move-exception v0

    .line 12963
    :try_start_5
    monitor-exit v3
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_2

    throw v0

    :catchall_3
    move-exception v0

    .line 12936
    :try_start_6
    monitor-exit v2
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_3

    throw v0
.end method

.method public dumpPermissions(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V
    .locals 0

    const-string p1, "ACTIVITY MANAGER URI PERMISSIONS (dumpsys activity permissions)"

    .line 13745
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13747
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mUgmInternal:Lcom/android/server/uri/UriGrantsManagerInternal;

    invoke-interface {p0, p2, p5, p6}, Lcom/android/server/uri/UriGrantsManagerInternal;->dump(Ljava/io/PrintWriter;ZLjava/lang/String;)V

    return-void
.end method

.method public dumpProcessListForPPN(ILjava/util/function/BiFunction;)Ljava/util/List;
    .locals 30

    move-object/from16 v0, p0

    const/4 v1, 0x0

    const/4 v2, 0x0

    .line 8231
    invoke-virtual {v0, v1, v2, v2, v1}, Lcom/android/server/am/ActivityManagerService;->collectProcesses(Ljava/io/PrintWriter;IZ[Ljava/lang/String;)Ljava/util/ArrayList;

    move-result-object v1

    if-eqz v1, :cond_d

    .line 8232
    invoke-interface {v1}, Ljava/util/List;->isEmpty()Z

    move-result v3

    if-eqz v3, :cond_0

    goto/16 :goto_7

    .line 8235
    :cond_0
    invoke-static {}, Lcom/android/server/chimera/PerProcessNandswap;->getInstance()Lcom/android/server/chimera/PerProcessNandswap;

    move-result-object v3

    .line 8237
    sget-object v4, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_LABEL:[Ljava/lang/String;

    array-length v4, v4

    .line 8238
    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v5

    .line 8239
    new-array v6, v4, [J

    .line 8240
    new-array v7, v4, [Ljava/util/ArrayList;

    .line 8241
    new-instance v8, Landroid/util/SparseArray;

    invoke-direct {v8}, Landroid/util/SparseArray;-><init>()V

    .line 8243
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v9

    move v11, v2

    :goto_0
    if-ge v11, v5, :cond_a

    .line 8246
    invoke-interface {v1, v11}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v14

    check-cast v14, Lcom/android/server/am/ProcessRecord;

    .line 8247
    iget-object v15, v14, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    .line 8248
    invoke-virtual {v14}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v12

    .line 8249
    iget-object v13, v14, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {v13}, Lcom/android/server/am/ProcessStateRecord;->getSetAdjWithServices()I

    move-result v13

    .line 8250
    invoke-static {v12}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v14

    move-object/from16 v2, p2

    invoke-interface {v2, v3, v14}, Ljava/util/function/BiFunction;->apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v14

    check-cast v14, [J

    if-nez v14, :cond_2

    move-object/from16 v19, v1

    :cond_1
    :goto_1
    move-object/from16 v29, v3

    const/16 v18, 0x0

    goto/16 :goto_5

    :cond_2
    move-object/from16 v19, v1

    const/16 v18, 0x0

    .line 8254
    aget-wide v1, v14, v18

    long-to-int v1, v1

    const/4 v2, 0x1

    .line 8255
    aget-wide v20, v14, v2

    sub-long v27, v9, v20

    if-nez v12, :cond_3

    :goto_2
    goto :goto_1

    .line 8260
    :cond_3
    invoke-static {v12}, Lcom/android/server/chimera/PerProcessNandswap;->getWritebackSizePid(I)[J

    move-result-object v14

    if-nez v14, :cond_4

    goto :goto_2

    .line 8265
    :cond_4
    aget-wide v20, v14, v2

    const-wide/16 v16, 0x0

    cmp-long v16, v20, v16

    move/from16 v2, p1

    if-nez v16, :cond_5

    if-eq v1, v2, :cond_1

    .line 8266
    :cond_5
    new-instance v2, Lcom/android/server/chimera/PerProcessNandswap$MemoryItem;

    move-object/from16 v29, v3

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v3, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v15, " (pid "

    invoke-virtual {v3, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v15, ")"

    invoke-virtual {v3, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v21

    const/16 v18, 0x0

    aget-wide v22, v14, v18

    const/4 v3, 0x1

    aget-wide v24, v14, v3

    move-object/from16 v20, v2

    move/from16 v26, v1

    invoke-direct/range {v20 .. v28}, Lcom/android/server/chimera/PerProcessNandswap$MemoryItem;-><init>(Ljava/lang/String;JJIJ)V

    .line 8268
    invoke-virtual {v8, v12, v2}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    move/from16 v1, v18

    :goto_3
    if-ge v1, v4, :cond_9

    add-int/lit8 v3, v4, -0x1

    if-eq v1, v3, :cond_7

    .line 8271
    sget-object v3, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_ADJ:[I

    aget v12, v3, v1

    if-lt v13, v12, :cond_6

    add-int/lit8 v12, v1, 0x1

    aget v3, v3, v12

    if-ge v13, v3, :cond_6

    goto :goto_4

    :cond_6
    add-int/lit8 v1, v1, 0x1

    goto :goto_3

    .line 8274
    :cond_7
    :goto_4
    aget-wide v12, v6, v1

    const/4 v3, 0x1

    aget-wide v14, v14, v3

    add-long/2addr v12, v14

    aput-wide v12, v6, v1

    .line 8275
    aget-object v3, v7, v1

    if-nez v3, :cond_8

    .line 8276
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    aput-object v3, v7, v1

    .line 8278
    :cond_8
    aget-object v1, v7, v1

    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    :cond_9
    :goto_5
    add-int/lit8 v11, v11, 0x1

    move/from16 v2, v18

    move-object/from16 v1, v19

    move-object/from16 v3, v29

    goto/16 :goto_0

    :cond_a
    move/from16 v18, v2

    .line 8286
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    new-instance v1, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda44;

    invoke-direct {v1, v8, v6, v7}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda44;-><init>(Landroid/util/SparseArray;[J[Ljava/util/ArrayList;)V

    invoke-virtual {v0, v1}, Lcom/android/server/am/AppProfiler;->forAllCpuStats(Ljava/util/function/Consumer;)V

    .line 8304
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    :goto_6
    if-ge v2, v4, :cond_c

    .line 8306
    aget-wide v22, v6, v2

    const-wide/16 v8, 0x0

    cmp-long v1, v22, v8

    if-eqz v1, :cond_b

    .line 8307
    sget-object v1, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_LABEL:[Ljava/lang/String;

    aget-object v19, v1, v2

    .line 8308
    new-instance v1, Lcom/android/server/chimera/PerProcessNandswap$MemoryItem;

    const-wide/16 v20, 0x0

    const/16 v24, 0x0

    const-wide/16 v25, -0x1

    move-object/from16 v18, v1

    invoke-direct/range {v18 .. v26}, Lcom/android/server/chimera/PerProcessNandswap$MemoryItem;-><init>(Ljava/lang/String;JJIJ)V

    .line 8309
    aget-object v3, v7, v2

    iput-object v3, v1, Lcom/android/server/chimera/PerProcessNandswap$MemoryItem;->subitems:Ljava/util/ArrayList;

    .line 8310
    invoke-interface {v0, v1}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    :cond_b
    add-int/lit8 v2, v2, 0x1

    goto :goto_6

    :cond_c
    return-object v0

    .line 8233
    :cond_d
    :goto_7
    invoke-static {}, Ljava/util/Collections;->emptyList()Ljava/util/List;

    move-result-object v0

    return-object v0
.end method

.method public dumpResources(Ljava/lang/String;Landroid/os/ParcelFileDescriptor;Landroid/os/RemoteCallback;)Z
    .locals 2

    .line 20018
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    :try_start_0
    const-string v0, "dumpResources"

    const/4 v1, -0x2

    .line 20019
    invoke-virtual {p0, p1, v1, v0}, Lcom/android/server/am/ActivityManagerService;->findProcessLOSP(Ljava/lang/String;ILjava/lang/String;)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    if-eqz v0, :cond_0

    .line 20021
    invoke-virtual {v0}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v0

    if-eqz v0, :cond_0

    .line 20024
    invoke-interface {v0, p2, p3}, Landroid/app/IApplicationThread;->dumpResources(Landroid/os/ParcelFileDescriptor;Landroid/os/RemoteCallback;)V

    .line 20025
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    const/4 p0, 0x1

    return p0

    .line 20022
    :cond_0
    :try_start_1
    new-instance p2, Ljava/lang/IllegalArgumentException;

    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "Unknown process: "

    invoke-virtual {p3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p2, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p2

    :catchall_0
    move-exception p1

    .line 20026
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public final dumpUsers(Ljava/io/PrintWriter;)V
    .locals 1

    const-string v0, "ACTIVITY MANAGER USERS (dumpsys activity users)"

    .line 13182
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13183
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {p0, p1}, Lcom/android/server/am/UserController;->dump(Ljava/io/PrintWriter;)V

    return-void
.end method

.method public enableAppFreezer(Z)Z
    .locals 2

    .line 23634
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    const/16 v1, 0x3e8

    if-eq v0, v1, :cond_1

    .line 23637
    sget-boolean v1, Landroid/os/Build;->IS_DEBUGGABLE:Z

    if-eqz v1, :cond_0

    goto :goto_0

    .line 23640
    :cond_0
    new-instance p0, Ljava/lang/SecurityException;

    new-instance p1, Ljava/lang/StringBuilder;

    invoke-direct {p1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Caller uid "

    invoke-virtual {p1, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v0, " cannot set freezer state "

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p0, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 23638
    :cond_1
    :goto_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    iget-object p0, p0, Lcom/android/server/am/OomAdjuster;->mCachedAppOptimizer:Lcom/android/server/am/CachedAppOptimizer;

    invoke-virtual {p0, p1}, Lcom/android/server/am/CachedAppOptimizer;->enableFreezer(Z)Z

    move-result p0

    return p0
.end method

.method public enableFgsNotificationRateLimit(Z)Z
    .locals 2

    const-string v0, "android.permission.WRITE_DEVICE_CONFIG"

    const-string v1, "enableFgsNotificationRateLimit"

    .line 23650
    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 23652
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 23653
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActiveServices;->enableFgsNotificationRateLimitLocked(Z)Z

    move-result p1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return p1

    :catchall_0
    move-exception p1

    .line 23654
    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public final enforceAllowedToStartOrBindServiceIfSdkSandbox(Landroid/content/Intent;)V
    .locals 0

    .line 3631
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result p0

    invoke-static {p0}, Landroid/os/Process;->isSdkSandboxUid(I)Z

    move-result p0

    if-eqz p0, :cond_1

    .line 3632
    const-class p0, Lcom/android/server/sdksandbox/SdkSandboxManagerLocal;

    .line 3633
    invoke-static {p0}, Lcom/android/server/LocalManagerRegistry;->getManager(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object p0

    check-cast p0, Lcom/android/server/sdksandbox/SdkSandboxManagerLocal;

    if-eqz p0, :cond_0

    .line 3635
    invoke-interface {p0, p1}, Lcom/android/server/sdksandbox/SdkSandboxManagerLocal;->enforceAllowedToStartOrBindService(Landroid/content/Intent;)V

    goto :goto_0

    .line 3637
    :cond_0
    new-instance p0, Ljava/lang/IllegalStateException;

    const-string p1, "SdkSandboxManagerLocal not found when checking whether SDK sandbox uid may start or bind to a service."

    invoke-direct {p0, p1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p0

    :cond_1
    :goto_0
    return-void
.end method

.method public enforceBroadcastOptionPermissionsInternal(Landroid/app/BroadcastOptions;I)V
    .locals 1

    if-eqz p1, :cond_1

    const/16 v0, 0x3e8

    if-eq p2, v0, :cond_1

    .line 17129
    invoke-virtual {p1}, Landroid/app/BroadcastOptions;->isAlarmBroadcast()Z

    move-result p2

    if-nez p2, :cond_0

    .line 17137
    invoke-virtual {p1}, Landroid/app/BroadcastOptions;->isInteractive()Z

    move-result p1

    if-eqz p1, :cond_1

    const-string p1, "android.permission.BROADCAST_OPTION_INTERACTIVE"

    const-string/jumbo p2, "setInteractive"

    .line 17138
    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    goto :goto_0

    .line 17134
    :cond_0
    new-instance p0, Ljava/lang/SecurityException;

    const-string p1, "Non-system callers may not flag broadcasts as alarm"

    invoke-direct {p0, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p0

    :cond_1
    :goto_0
    return-void
.end method

.method public enforceBroadcastOptionPermissionsInternal(Landroid/os/Bundle;I)V
    .locals 0

    .line 17122
    invoke-static {p1}, Landroid/app/BroadcastOptions;->fromBundleNullable(Landroid/os/Bundle;)Landroid/app/BroadcastOptions;

    move-result-object p1

    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->enforceBroadcastOptionPermissionsInternal(Landroid/app/BroadcastOptions;I)V

    return-void
.end method

.method public final varargs enforceCallingHasAtLeastOnePermission(Ljava/lang/String;[Ljava/lang/String;)V
    .locals 3

    .line 7492
    array-length v0, p2

    const/4 v1, 0x0

    :goto_0
    if-ge v1, v0, :cond_1

    aget-object v2, p2, v1

    .line 7493
    invoke-virtual {p0, v2}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v2

    if-nez v2, :cond_0

    return-void

    :cond_0
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 7498
    :cond_1
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "Permission Denial: "

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, " from pid="

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 7499
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result p1

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, ", uid="

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 7500
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result p1

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, " requires one of "

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 7501
    invoke-static {p2}, Ljava/util/Arrays;->toString([Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p1

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    const-string p1, "ActivityManager"

    .line 7502
    invoke-static {p1, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 7503
    new-instance p1, Ljava/lang/SecurityException;

    invoke-direct {p1, p0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method public final enforceCallingPackage(Ljava/lang/String;I)V
    .locals 3

    .line 3651
    invoke-static {p2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v0

    .line 3652
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal;

    move-result-object p0

    const-wide/16 v1, 0x0

    invoke-virtual {p0, p1, v1, v2, v0}, Landroid/content/pm/PackageManagerInternal;->getPackageUid(Ljava/lang/String;JI)I

    move-result p0

    if-ne p0, p2, :cond_0

    return-void

    .line 3655
    :cond_0
    new-instance p0, Ljava/lang/SecurityException;

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, " does not belong to uid "

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p0, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p0
.end method

.method public enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V
    .locals 1

    .line 7474
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result p0

    if-nez p0, :cond_0

    return-void

    .line 7479
    :cond_0
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "Permission Denial: "

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p2, " from pid="

    invoke-virtual {p0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 7480
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result p2

    invoke-virtual {p0, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p2, ", uid="

    invoke-virtual {p0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 7481
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result p2

    invoke-virtual {p0, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p2, " requires "

    invoke-virtual {p0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    const-string p1, "ActivityManager"

    .line 7483
    invoke-static {p1, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 7484
    new-instance p1, Ljava/lang/SecurityException;

    invoke-direct {p1, p0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method public final enforceDebuggable(Landroid/content/pm/ApplicationInfo;)V
    .locals 2

    .line 7433
    sget-boolean p0, Landroid/os/Build;->IS_DEBUGGABLE:Z

    if-nez p0, :cond_1

    iget p0, p1, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 p0, p0, 0x2

    if-eqz p0, :cond_0

    goto :goto_0

    .line 7434
    :cond_0
    new-instance p0, Ljava/lang/SecurityException;

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Process not debuggable: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object p1, p1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p0, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p0

    :cond_1
    :goto_0
    return-void
.end method

.method public final enforceDebuggable(Lcom/android/server/am/ProcessRecord;)V
    .locals 2

    .line 7421
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->isHeapDumpAllowed()Z

    move-result p0

    if-eqz p0, :cond_1

    .line 7422
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getProcessClassEnum()I

    move-result p0

    const/4 v0, 0x2

    if-eq p0, v0, :cond_0

    .line 7423
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getProcessClassEnum()I

    move-result p0

    const/4 v0, 0x3

    if-ne p0, v0, :cond_1

    :cond_0
    return-void

    .line 7427
    :cond_1
    sget-boolean p0, Landroid/os/Build;->IS_DEBUGGABLE:Z

    if-nez p0, :cond_3

    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->isDebuggable()Z

    move-result p0

    if-eqz p0, :cond_2

    goto :goto_0

    .line 7428
    :cond_2
    new-instance p0, Ljava/lang/SecurityException;

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Process not debuggable: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object p1, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object p1, p1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p0, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p0

    :cond_3
    :goto_0
    return-void
.end method

.method public enforceDumpPermissionForPackage(Ljava/lang/String;IILjava/lang/String;)I
    .locals 5

    .line 11881
    :try_start_0
    invoke-static {p3}, Landroid/os/Process;->isSdkSandboxUid(I)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 11882
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    invoke-interface {v0}, Landroid/content/pm/IPackageManager;->getSdkSandboxPackageName()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    if-eqz v0, :cond_0

    return p3

    :catch_0
    const-string v0, "ActivityManager"

    const-string v1, "Could not get SDK sandbox package name"

    .line 11886
    invoke-static {v0, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 11888
    :cond_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 11891
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPackageManagerInt:Landroid/content/pm/PackageManagerInternal;

    const-wide/32 v3, 0xc0000

    invoke-virtual {v2, p1, v3, v4, p2}, Landroid/content/pm/PackageManagerInternal;->getPackageUid(Ljava/lang/String;JI)I

    move-result p1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 11894
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11897
    invoke-static {p1}, Landroid/os/UserHandle;->getAppId(I)I

    move-result p2

    invoke-static {p3}, Landroid/os/UserHandle;->getAppId(I)I

    move-result p3

    if-eq p2, p3, :cond_1

    const-string p2, "android.permission.DUMP"

    .line 11900
    invoke-virtual {p0, p2, p4}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    :cond_1
    return p1

    :catchall_0
    move-exception p0

    .line 11894
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11895
    throw p0
.end method

.method public enforceNotIsolatedCaller(Ljava/lang/String;)V
    .locals 2

    .line 3601
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result p0

    invoke-static {p0}, Landroid/os/UserHandle;->isIsolated(I)Z

    move-result p0

    if-nez p0, :cond_0

    return-void

    .line 3602
    :cond_0
    new-instance p0, Ljava/lang/SecurityException;

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Isolated process not allowed to call "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p0, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p0
.end method

.method public enforceNotIsolatedOrSdkSandboxCaller(Ljava/lang/String;)V
    .locals 2

    .line 3615
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 3617
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result p0

    invoke-static {p0}, Landroid/os/Process;->isSdkSandboxUid(I)Z

    move-result p0

    if-nez p0, :cond_0

    return-void

    .line 3618
    :cond_0
    new-instance p0, Ljava/lang/SecurityException;

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "SDK sandbox process not allowed to call "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p0, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p0
.end method

.method public enforcePermission(Ljava/lang/String;IILjava/lang/String;)V
    .locals 1

    .line 7511
    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/am/ActivityManagerService;->checkPermission(Ljava/lang/String;II)I

    move-result p0

    if-nez p0, :cond_0

    return-void

    .line 7515
    :cond_0
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "Permission Denial: "

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p4, " from pid="

    invoke-virtual {p0, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p2, ", uid="

    invoke-virtual {p0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p2, " requires "

    invoke-virtual {p0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    const-string p1, "ActivityManager"

    .line 7517
    invoke-static {p1, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 7518
    new-instance p1, Ljava/lang/SecurityException;

    invoke-direct {p1, p0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method public final enforceWriteSettingsPermission(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
    .locals 4

    .line 19016
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    if-nez v0, :cond_0

    return-void

    .line 19024
    :cond_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v1

    .line 19025
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    invoke-virtual {v2, v3}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v2

    if-eqz v2, :cond_1

    .line 19027
    iget-object v2, v2, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    goto :goto_0

    :cond_1
    const/4 v2, 0x0

    .line 19029
    :goto_0
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-nez v2, :cond_2

    goto :goto_1

    :cond_2
    move-object p2, v2

    .line 19033
    :goto_1
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const/4 v1, 0x0

    invoke-static {p0, v0, p2, p3, v1}, Landroid/provider/Settings;->checkAndNoteWriteSettingsOperation(Landroid/content/Context;ILjava/lang/String;Ljava/lang/String;Z)Z

    move-result p0

    if-eqz p0, :cond_3

    return-void

    .line 19045
    :cond_3
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string p2, "Permission Denial: "

    invoke-virtual {p0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, " from pid="

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 19046
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result p1

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, ", uid="

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, " requires "

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, "android.permission.WRITE_SETTINGS"

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    const-string p1, "ActivityManager"

    .line 19049
    invoke-static {p1, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 19050
    new-instance p1, Ljava/lang/SecurityException;

    invoke-direct {p1, p0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p1

    :catchall_0
    move-exception p0

    .line 19029
    :try_start_1
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw p0
.end method

.method public enqueueOomAdjTargetLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 0

    .line 19527
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    invoke-virtual {p0, p1}, Lcom/android/server/am/OomAdjuster;->enqueueOomAdjTargetLocked(Lcom/android/server/am/ProcessRecord;)V

    return-void
.end method

.method public enqueueUidChangeLocked(Lcom/android/server/am/UidRecord;II)V
    .locals 11

    if-eqz p1, :cond_0

    .line 19358
    invoke-virtual {p1}, Lcom/android/server/am/UidRecord;->getUid()I

    move-result p2

    :cond_0
    if-ltz p2, :cond_e

    if-eqz p1, :cond_1

    .line 19364
    invoke-virtual {p1}, Lcom/android/server/am/UidRecord;->getSetProcState()I

    move-result v0

    goto :goto_0

    :cond_1
    const/16 v0, 0x14

    :goto_0
    move v10, v0

    if-eqz p1, :cond_2

    .line 19366
    invoke-virtual {p1}, Lcom/android/server/am/UidRecord;->getMinProcAdj()I

    move-result v0

    goto :goto_1

    :cond_2
    const/16 v0, -0x2710

    :goto_1
    move v5, v0

    if-eqz p1, :cond_3

    .line 19367
    iget-wide v0, p1, Lcom/android/server/am/UidRecord;->curProcStateSeq:J

    goto :goto_2

    :cond_3
    const-wide/16 v0, 0x0

    :goto_2
    move-wide v6, v0

    if-eqz p1, :cond_4

    .line 19368
    invoke-virtual {p1}, Lcom/android/server/am/UidRecord;->getSetCapability()I

    move-result v0

    goto :goto_3

    :cond_4
    const/4 v0, 0x0

    :goto_3
    move v8, v0

    if-eqz p1, :cond_5

    .line 19369
    invoke-virtual {p1}, Lcom/android/server/am/UidRecord;->isEphemeral()Z

    move-result v0

    goto :goto_4

    :cond_5
    invoke-virtual {p0, p2}, Lcom/android/server/am/ActivityManagerService;->isEphemeralLocked(I)Z

    move-result v0

    :goto_4
    move v9, v0

    if-eqz p1, :cond_6

    .line 19371
    invoke-virtual {p1}, Lcom/android/server/am/UidRecord;->isIdle()Z

    move-result v0

    if-eqz v0, :cond_6

    and-int/lit8 v0, p3, 0x2

    if-eqz v0, :cond_6

    .line 19372
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ProcessList;->killAppIfBgRestrictedAndCachedIdleLocked(Lcom/android/server/am/UidRecord;)V

    :cond_6
    if-eqz p1, :cond_7

    .line 19375
    invoke-virtual {p1}, Lcom/android/server/am/UidRecord;->isIdle()Z

    move-result v0

    if-nez v0, :cond_7

    and-int/lit8 v0, p3, 0x1

    if-eqz v0, :cond_7

    or-int/lit8 p3, p3, 0x2

    :cond_7
    move v3, p3

    .line 19380
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUidObserverController:Lcom/android/server/am/UidObserverController;

    if-nez p1, :cond_8

    const/4 p3, 0x0

    goto :goto_5

    .line 19381
    :cond_8
    iget-object p3, p1, Lcom/android/server/am/UidRecord;->pendingChange:Lcom/android/server/am/UidObserverController$ChangeRecord;

    :goto_5
    move-object v1, p3

    move v2, p2

    move v4, v10

    .line 19380
    invoke-virtual/range {v0 .. v9}, Lcom/android/server/am/UidObserverController;->enqueueUidChange(Lcom/android/server/am/UidObserverController$ChangeRecord;IIIIJIZ)I

    move-result p3

    if-eqz p1, :cond_9

    .line 19384
    invoke-virtual {p1, p3}, Lcom/android/server/am/UidRecord;->setLastReportedChange(I)V

    .line 19389
    :cond_9
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mLocalPowerManager:Landroid/os/PowerManagerInternal;

    if-eqz p1, :cond_d

    and-int/lit8 v0, p3, 0x4

    if-eqz v0, :cond_a

    .line 19393
    invoke-virtual {p1, p2}, Landroid/os/PowerManagerInternal;->uidActive(I)V

    :cond_a
    and-int/lit8 p1, p3, 0x2

    if-eqz p1, :cond_b

    .line 19396
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mLocalPowerManager:Landroid/os/PowerManagerInternal;

    invoke-virtual {p1, p2}, Landroid/os/PowerManagerInternal;->uidIdle(I)V

    :cond_b
    and-int/lit8 p1, p3, 0x1

    if-eqz p1, :cond_c

    .line 19399
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mLocalPowerManager:Landroid/os/PowerManagerInternal;

    invoke-virtual {p0, p2}, Landroid/os/PowerManagerInternal;->uidGone(I)V

    goto :goto_6

    :cond_c
    const/high16 p1, -0x80000000

    and-int/2addr p1, p3

    if-eqz p1, :cond_d

    .line 19401
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mLocalPowerManager:Landroid/os/PowerManagerInternal;

    invoke-virtual {p0, p2, v10}, Landroid/os/PowerManagerInternal;->updateUidProcState(II)V

    :cond_d
    :goto_6
    return-void

    .line 19360
    :cond_e
    new-instance p0, Ljava/lang/IllegalArgumentException;

    const-string p1, "No UidRecord or uid"

    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p0
.end method

.method public final ensureAllowedAssociations()V
    .locals 8

    .line 3058
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAllowedAssociations:Landroid/util/ArrayMap;

    if-nez v0, :cond_1

    .line 3060
    invoke-static {}, Lcom/android/server/SystemConfig;->getInstance()Lcom/android/server/SystemConfig;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/SystemConfig;->getAllowedAssociations()Landroid/util/ArrayMap;

    move-result-object v0

    .line 3061
    new-instance v1, Landroid/util/ArrayMap;

    invoke-virtual {v0}, Landroid/util/ArrayMap;->size()I

    move-result v2

    invoke-direct {v1, v2}, Landroid/util/ArrayMap;-><init>(I)V

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAllowedAssociations:Landroid/util/ArrayMap;

    .line 3062
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal;

    const/4 v1, 0x0

    move v2, v1

    .line 3063
    :goto_0
    invoke-virtual {v0}, Landroid/util/ArrayMap;->size()I

    move-result v3

    if-ge v2, v3, :cond_1

    .line 3064
    invoke-virtual {v0, v2}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/lang/String;

    .line 3065
    invoke-virtual {v0, v2}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/util/ArraySet;

    .line 3070
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v5

    const-wide/32 v6, 0x20000

    .line 3071
    invoke-interface {v5, v3, v6, v7, v1}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;JI)Landroid/content/pm/ApplicationInfo;

    move-result-object v5

    if-eqz v5, :cond_0

    .line 3073
    iget v5, v5, Landroid/content/pm/ApplicationInfo;->flags:I
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    and-int/lit8 v5, v5, 0x2

    if-eqz v5, :cond_0

    const/4 v5, 0x1

    goto :goto_1

    :catch_0
    :cond_0
    move v5, v1

    .line 3078
    :goto_1
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mAllowedAssociations:Landroid/util/ArrayMap;

    new-instance v7, Lcom/android/server/am/ActivityManagerService$PackageAssociationInfo;

    invoke-direct {v7, p0, v3, v4, v5}, Lcom/android/server/am/ActivityManagerService$PackageAssociationInfo;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/lang/String;Landroid/util/ArraySet;Z)V

    invoke-virtual {v6, v3, v7}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    :cond_1
    return-void
.end method

.method public final ensureBootCompleted()V
    .locals 4

    .line 6408
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 6409
    :try_start_0
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mBooting:Z

    const/4 v1, 0x0

    .line 6410
    iput-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mBooting:Z

    .line 6411
    iget-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    const/4 v3, 0x1

    if-nez v2, :cond_0

    move v1, v3

    .line 6412
    :cond_0
    iput-boolean v3, p0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    .line 6413
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    if-eqz v0, :cond_1

    const-string v0, "ActivityManager"

    .line 6418
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "!@AM_BOOT_PROGRESS , ensureBootCompleted "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/4 v3, 0x2

    invoke-static {v3}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v0, v2}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 6421
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->finishBooting()V

    :cond_1
    if-eqz v1, :cond_2

    .line 6425
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    iget-boolean p0, p0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    invoke-virtual {v0, p0}, Lcom/android/server/wm/ActivityTaskManagerInternal;->enableScreenAfterBoot(Z)V

    :cond_2
    return-void

    :catchall_0
    move-exception v0

    .line 6413
    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public final ensureCallingPkg([Ljava/lang/String;Ljava/lang/String;)V
    .locals 5

    .line 24126
    sget-boolean p0, Lcom/samsung/android/rune/CoreRune;->SAFE_DEBUG:Z

    if-eqz p0, :cond_0

    return-void

    .line 24131
    :cond_0
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object p0

    .line 24132
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 24131
    invoke-interface {p0, v0}, Landroid/content/pm/IPackageManager;->getPackagesForUid(I)[Ljava/lang/String;

    move-result-object p0

    if-eqz p1, :cond_3

    .line 24133
    array-length v0, p1

    if-lez v0, :cond_3

    if-eqz p0, :cond_3

    array-length v0, p0

    if-lez v0, :cond_3

    const/4 v0, 0x0

    move v1, v0

    .line 24135
    :goto_0
    array-length v2, p0

    if-ge v1, v2, :cond_3

    move v2, v0

    .line 24136
    :goto_1
    array-length v3, p1

    if-ge v2, v3, :cond_2

    .line 24137
    aget-object v3, p1, v2

    if-eqz v3, :cond_1

    aget-object v4, p0, v1

    .line 24138
    invoke-virtual {v3, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    if-eqz v3, :cond_1

    return-void

    :cond_1
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    :cond_2
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 24146
    :catch_0
    :cond_3
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string p1, "Permission Denial: "

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, " from pid="

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result p1

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, ", uid="

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 24147
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result p1

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    .line 24148
    new-instance p1, Ljava/lang/SecurityException;

    invoke-direct {p1, p0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method public final enterSafeMode()V
    .locals 1

    .line 10005
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 10008
    :try_start_0
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mSystemReady:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-nez v0, :cond_0

    .line 10010
    :try_start_1
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    invoke-interface {v0}, Landroid/content/pm/IPackageManager;->enterSafeMode()V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :catch_0
    :cond_0
    const/4 v0, 0x1

    .line 10015
    :try_start_2
    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mSafeMode:Z

    .line 10016
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :catchall_0
    move-exception v0

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public final filterNonExportedComponents(Landroid/content/Intent;IILjava/util/List;Lcom/android/server/compat/PlatformCompat;Ljava/lang/String;Ljava/lang/String;)V
    .locals 3

    if-eqz p4, :cond_7

    .line 15566
    invoke-virtual {p1}, Landroid/content/Intent;->getPackage()Ljava/lang/String;

    move-result-object p6

    if-nez p6, :cond_7

    .line 15567
    invoke-virtual {p1}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object p6

    if-nez p6, :cond_7

    .line 15568
    invoke-static {p2}, Landroid/app/ActivityManager;->canAccessUnexportedComponents(I)Z

    move-result p6

    if-eqz p6, :cond_0

    goto/16 :goto_3

    .line 15571
    :cond_0
    iget-object p6, p0, Lcom/android/server/am/ActivityManagerService;->mStrictModeCallbacks:Landroid/util/SparseArray;

    invoke-virtual {p6, p3}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object p6

    check-cast p6, Landroid/app/IUnsafeIntentStrictModeCallback;

    .line 15572
    invoke-interface {p4}, Ljava/util/List;->size()I

    move-result v0

    add-int/lit8 v0, v0, -0x1

    :goto_0
    if-ltz v0, :cond_7

    .line 15576
    invoke-interface {p4, v0}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v1

    instance-of v1, v1, Landroid/content/pm/ResolveInfo;

    if-eqz v1, :cond_2

    .line 15577
    invoke-interface {p4, v0}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/content/pm/ResolveInfo;

    .line 15578
    invoke-virtual {v1}, Landroid/content/pm/ResolveInfo;->getComponentInfo()Landroid/content/pm/ComponentInfo;

    move-result-object v2

    iget-boolean v2, v2, Landroid/content/pm/ComponentInfo;->exported:Z

    if-eqz v2, :cond_1

    goto :goto_2

    .line 15581
    :cond_1
    invoke-virtual {v1}, Landroid/content/pm/ResolveInfo;->getComponentInfo()Landroid/content/pm/ComponentInfo;

    move-result-object v1

    .line 15582
    invoke-virtual {v1}, Landroid/content/pm/ComponentInfo;->getComponentName()Landroid/content/ComponentName;

    move-result-object v1

    invoke-virtual {v1}, Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;

    goto :goto_1

    .line 15583
    :cond_2
    invoke-interface {p4, v0}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v1

    instance-of v1, v1, Lcom/android/server/am/BroadcastFilter;

    if-eqz v1, :cond_6

    .line 15584
    invoke-interface {p4, v0}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/BroadcastFilter;

    .line 15585
    iget-boolean v1, v1, Lcom/android/server/am/BroadcastFilter;->exported:Z

    if-eqz v1, :cond_3

    goto :goto_2

    :cond_3
    :goto_1
    if-eqz p6, :cond_4

    .line 15593
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v2, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda13;

    invoke-direct {v2, p0, p6, p1, p3}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda13;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/app/IUnsafeIntentStrictModeCallback;Landroid/content/Intent;I)V

    invoke-virtual {v1, v2}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    :cond_4
    const-wide/32 v1, 0xdabca61

    .line 15601
    invoke-virtual {p5, v1, v2, p2}, Lcom/android/server/compat/PlatformCompat;->isChangeEnabledByUid(JI)Z

    move-result v1

    const/4 v2, 0x2

    .line 15604
    invoke-static {v2, p2, p1, p7, v1}, Lcom/android/server/am/ActivityManagerUtils;->logUnsafeIntentEvent(IILandroid/content/Intent;Ljava/lang/String;Z)V

    if-nez v1, :cond_5

    return-void

    .line 15612
    :cond_5
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "filterNonExportedComponents remove "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-interface {p4, v0}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    const-string v2, "ActivityManager"

    invoke-static {v2, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 15615
    invoke-interface {p4, v0}, Ljava/util/List;->remove(I)Ljava/lang/Object;

    :cond_6
    :goto_2
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    :cond_7
    :goto_3
    return-void
.end method

.method public final findAppProcess(Landroid/os/IBinder;Ljava/lang/String;)Lcom/android/server/am/ProcessRecord;
    .locals 1

    if-nez p1, :cond_0

    const/4 p0, 0x0

    return-object p0

    .line 11375
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v0

    .line 11376
    :try_start_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/ProcessList;->findAppProcessLOSP(Landroid/os/IBinder;Ljava/lang/String;)Lcom/android/server/am/ProcessRecord;

    move-result-object p0

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return-object p0

    :catchall_0
    move-exception p0

    .line 11377
    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p0
.end method

.method public final findProcessLOSP(Ljava/lang/String;ILjava/lang/String;)Lcom/android/server/am/ProcessRecord;
    .locals 8

    .line 19922
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    const/4 v4, 0x1

    const/4 v5, 0x2

    const/4 v7, 0x0

    move v3, p2

    move-object v6, p3

    invoke-virtual/range {v0 .. v7}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p2

    const/4 p3, 0x0

    .line 19926
    :try_start_0
    invoke-static {p1}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v0

    .line 19927
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v1
    :try_end_0
    .catch Ljava/lang/NumberFormatException; {:try_start_0 .. :try_end_0} :catch_0

    .line 19928
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v2, v0}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object p3

    .line 19929
    monitor-exit v1

    goto :goto_0

    :catchall_0
    move-exception v0

    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    throw v0
    :try_end_2
    .catch Ljava/lang/NumberFormatException; {:try_start_2 .. :try_end_2} :catch_0

    :catch_0
    :goto_0
    if-nez p3, :cond_1

    .line 19934
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 19935
    invoke-virtual {p0}, Lcom/android/server/am/ProcessList;->getProcessNamesLOSP()Lcom/android/server/am/ProcessList$MyProcessMap;

    move-result-object p0

    invoke-virtual {p0}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object p0

    .line 19936
    invoke-virtual {p0, p1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p0

    check-cast p0, Landroid/util/SparseArray;

    if-eqz p0, :cond_1

    .line 19937
    invoke-virtual {p0}, Landroid/util/SparseArray;->size()I

    move-result p1

    if-lez p1, :cond_1

    const/4 p1, 0x0

    .line 19938
    invoke-virtual {p0, p1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object p1

    move-object p3, p1

    check-cast p3, Lcom/android/server/am/ProcessRecord;

    const/4 p1, -0x1

    if-eq p2, p1, :cond_1

    .line 19939
    iget p1, p3, Lcom/android/server/am/ProcessRecord;->userId:I

    if-eq p1, p2, :cond_1

    const/4 p1, 0x1

    .line 19940
    :goto_1
    invoke-virtual {p0}, Landroid/util/SparseArray;->size()I

    move-result v0

    if-ge p1, v0, :cond_1

    .line 19941
    invoke-virtual {p0, p1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ProcessRecord;

    .line 19942
    iget v1, v0, Lcom/android/server/am/ProcessRecord;->userId:I

    if-ne v1, p2, :cond_0

    move-object p3, v0

    goto :goto_2

    :cond_0
    add-int/lit8 p1, p1, 0x1

    goto :goto_1

    :cond_1
    :goto_2
    return-object p3
.end method

.method public final finishActivity(Landroid/os/IBinder;ILandroid/content/Intent;I)Z
    .locals 0

    .line 3857
    invoke-static {}, Landroid/app/ActivityClient;->getInstance()Landroid/app/ActivityClient;

    move-result-object p0

    invoke-virtual {p0, p1, p2, p3, p4}, Landroid/app/ActivityClient;->finishActivity(Landroid/os/IBinder;ILandroid/content/Intent;I)Z

    move-result p0

    return p0
.end method

.method public final finishAttachApplication(J)V
    .locals 4

    .line 5941
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    .line 5942
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    .line 5944
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget-boolean v2, v2, Lcom/android/server/am/ActivityManagerConstants;->mEnableWaitForFinishAttachApplication:Z

    if-nez v2, :cond_0

    .line 5945
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string p1, "Flag disabled. Ignoring finishAttachApplication from uid: "

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, ". pid: "

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    const-string p1, "ActivityManager"

    invoke-static {p1, p0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    return-void

    .line 5950
    :cond_0
    sget v2, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-ne v0, v2, :cond_1

    const/16 v2, 0x3e8

    if-ne v1, v2, :cond_1

    return-void

    .line 5954
    :cond_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 5956
    :try_start_0
    invoke-virtual {p0, p1, p2, v1, v0}, Lcom/android/server/am/ActivityManagerService;->finishAttachApplicationInner(JII)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 5958
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return-void

    :catchall_0
    move-exception p0

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5959
    throw p0
.end method

.method public final finishAttachApplicationInner(JII)V
    .locals 22

    move-object/from16 v7, p0

    move/from16 v0, p3

    move/from16 v3, p4

    .line 5797
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v1

    .line 5802
    iget-object v4, v7, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v4

    .line 5803
    :try_start_0
    iget-object v5, v7, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v5, v3}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v8

    .line 5804
    monitor-exit v4
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    const/4 v9, 0x1

    if-eqz v8, :cond_a

    .line 5806
    invoke-virtual {v8}, Lcom/android/server/am/ProcessRecord;->getStartUid()I

    move-result v4

    if-ne v4, v0, :cond_a

    invoke-virtual {v8}, Lcom/android/server/am/ProcessRecord;->getStartSeq()J

    move-result-wide v4

    cmp-long v4, v4, p1

    if-nez v4, :cond_a

    .line 5807
    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v4, 0x14

    invoke-virtual {v0, v4, v8}, Landroid/os/Handler;->removeMessages(ILjava/lang/Object;)V

    .line 5824
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    const/4 v4, 0x0

    .line 5826
    :try_start_1
    invoke-virtual {v8, v4}, Lcom/android/server/am/ProcessRecord;->setPendingFinishAttach(Z)V

    .line 5828
    iget-boolean v0, v7, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    if-nez v0, :cond_1

    iget-object v0, v8, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    invoke-virtual {v7, v0}, Lcom/android/server/am/ActivityManagerService;->isAllowedWhileBooting(Landroid/content/pm/ApplicationInfo;)Z

    move-result v0

    if-eqz v0, :cond_0

    goto :goto_0

    :cond_0
    move v0, v4

    goto :goto_1

    :cond_1
    :goto_0
    move v0, v9

    .line 5829
    :goto_1
    iget-object v5, v8, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    if-eqz v0, :cond_2

    .line 5836
    :try_start_2
    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {v8}, Lcom/android/server/am/ProcessRecord;->getWindowProcessController()Lcom/android/server/wm/WindowProcessController;

    move-result-object v6

    invoke-virtual {v0, v6}, Lcom/android/server/wm/ActivityTaskManagerInternal;->attachApplication(Lcom/android/server/wm/WindowProcessController;)Z

    move-result v0
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    move v6, v0

    move v0, v4

    goto :goto_2

    :catch_0
    move-exception v0

    :try_start_3
    const-string v6, "ActivityManager"

    .line 5838
    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Exception thrown launching activities in "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v10, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v6, v10, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    move v6, v4

    move v0, v9

    goto :goto_2

    :cond_2
    move v0, v4

    move v6, v0

    :goto_2
    if-nez v0, :cond_3

    .line 5846
    :try_start_4
    iget-object v10, v7, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v10, v8, v5}, Lcom/android/server/am/ActiveServices;->attachApplicationLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;)Z

    move-result v5

    or-int/2addr v6, v5

    const-string v5, "finishAttachApplicationInner: after mServices.attachApplicationLocked"

    .line 5847
    invoke-virtual {v7, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V
    :try_end_4
    .catch Ljava/lang/Exception; {:try_start_4 .. :try_end_4} :catch_1
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    goto :goto_3

    :catch_1
    move-exception v0

    :try_start_5
    const-string v5, "ActivityManager"

    .line 5850
    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Exception thrown starting services in "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v10, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v5, v10, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    move v0, v9

    :cond_3
    :goto_3
    if-nez v0, :cond_5

    .line 5858
    :try_start_6
    iget-object v5, v7, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v10, v5

    :goto_4
    if-ge v4, v10, :cond_4

    aget-object v11, v5, v4

    .line 5859
    invoke-virtual {v11, v8}, Lcom/android/server/am/BroadcastQueue;->onApplicationAttachedLocked(Lcom/android/server/am/ProcessRecord;)Z

    move-result v11

    or-int/2addr v6, v11

    add-int/lit8 v4, v4, 0x1

    goto :goto_4

    :cond_4
    const-string v4, "finishAttachApplicationInner: after dispatching broadcasts"

    .line 5861
    invoke-virtual {v7, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V
    :try_end_6
    .catch Lcom/android/server/am/BroadcastDeliveryFailedException; {:try_start_6 .. :try_end_6} :catch_2
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    goto :goto_5

    :catch_2
    move-exception v0

    :try_start_7
    const-string v4, "ActivityManager"

    .line 5865
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "Exception thrown dispatching broadcasts in "

    invoke-virtual {v5, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    move v0, v9

    .line 5871
    :cond_5
    :goto_5
    iget-object v4, v7, Lcom/android/server/am/ActivityManagerService;->mBackupTargets:Landroid/util/SparseArray;

    iget v5, v8, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-virtual {v4, v5}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/BackupRecord;

    if-nez v0, :cond_6

    if-eqz v4, :cond_6

    .line 5872
    iget-object v5, v4, Lcom/android/server/am/BackupRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-ne v5, v8, :cond_6

    .line 5878
    iget-object v5, v4, Lcom/android/server/am/BackupRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v5, v5, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    const/4 v10, 0x5

    invoke-virtual {v7, v5, v10}, Lcom/android/server/am/ActivityManagerService;->notifyPackageUse(Ljava/lang/String;I)V
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    .line 5881
    :try_start_8
    invoke-virtual {v8}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v5

    iget-object v10, v4, Lcom/android/server/am/BackupRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget v11, v4, Lcom/android/server/am/BackupRecord;->backupMode:I

    iget v12, v4, Lcom/android/server/am/BackupRecord;->userId:I

    iget v4, v4, Lcom/android/server/am/BackupRecord;->backupDestination:I

    invoke-interface {v5, v10, v11, v12, v4}, Landroid/app/IApplicationThread;->scheduleCreateBackupAgent(Landroid/content/pm/ApplicationInfo;III)V
    :try_end_8
    .catch Ljava/lang/Exception; {:try_start_8 .. :try_end_8} :catch_3
    .catchall {:try_start_8 .. :try_end_8} :catchall_0

    goto :goto_6

    :catch_3
    move-exception v0

    :try_start_9
    const-string v4, "ActivityManager"

    .line 5885
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "Exception thrown creating backup agent in "

    invoke-virtual {v5, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    move v0, v9

    :cond_6
    :goto_6
    if-eqz v0, :cond_7

    const-string v0, "error during init"

    const/4 v1, 0x7

    .line 5891
    invoke-virtual {v8, v0, v1, v9}, Lcom/android/server/am/ProcessRecord;->killLocked(Ljava/lang/String;IZ)V

    const/4 v4, 0x0

    const/4 v5, 0x1

    const/4 v6, 0x0

    move-object/from16 v1, p0

    move-object v2, v8

    move/from16 v3, p4

    .line 5893
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->handleAppDiedLocked(Lcom/android/server/am/ProcessRecord;IZZZ)V

    .line 5894
    monitor-exit p0
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :cond_7
    if-nez v6, :cond_8

    const/16 v0, 0xb

    .line 5898
    :try_start_a
    invoke-virtual {v7, v8, v0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;I)Z

    const-string v0, "finishAttachApplicationInner: after updateOomAdjLocked"

    .line 5899
    invoke-virtual {v7, v1, v2, v0}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 5902
    :cond_8
    invoke-virtual {v8}, Lcom/android/server/am/ProcessRecord;->getHostingRecord()Lcom/android/server/am/HostingRecord;

    move-result-object v0

    .line 5903
    invoke-virtual {v0}, Lcom/android/server/am/HostingRecord;->getAction()Ljava/lang/String;

    move-result-object v1

    invoke-static {v1}, Lcom/android/server/am/ActivityManagerService;->getShortAction(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v19

    .line 5906
    sget-boolean v1, Lcom/samsung/android/rune/CoreRune;->FW_DEDICATED_MEMORY:Z

    if-eqz v1, :cond_9

    .line 5907
    iget-object v1, v8, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    .line 5908
    iget v2, v8, Lcom/android/server/am/ProcessRecord;->uid:I

    .line 5909
    iget-object v4, v7, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v5, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda8;

    invoke-direct {v5, v7, v1, v2}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda8;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/lang/String;I)V

    invoke-virtual {v4, v5}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    :cond_9
    const/16 v1, 0xa9

    .line 5922
    iget-object v2, v8, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v9, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    iget-object v2, v8, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v11, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    const/4 v12, 0x3

    .line 5928
    invoke-virtual {v8}, Lcom/android/server/am/ProcessRecord;->getStartElapsedTime()J

    move-result-wide v13

    .line 5929
    invoke-virtual {v8}, Lcom/android/server/am/ProcessRecord;->getBindApplicationTime()J

    move-result-wide v4

    invoke-virtual {v8}, Lcom/android/server/am/ProcessRecord;->getStartUptime()J

    move-result-wide v15

    sub-long/2addr v4, v15

    long-to-int v15, v4

    .line 5930
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v4

    invoke-virtual {v8}, Lcom/android/server/am/ProcessRecord;->getStartUptime()J

    move-result-wide v16

    sub-long v4, v4, v16

    long-to-int v2, v4

    .line 5931
    invoke-virtual {v0}, Lcom/android/server/am/HostingRecord;->getType()Ljava/lang/String;

    move-result-object v17

    .line 5932
    invoke-virtual {v0}, Lcom/android/server/am/HostingRecord;->getName()Ljava/lang/String;

    move-result-object v18

    .line 5934
    invoke-virtual {v0}, Lcom/android/server/am/HostingRecord;->getType()Ljava/lang/String;

    move-result-object v4

    invoke-static {v4}, Lcom/android/server/am/HostingRecord;->getHostingTypeIdStatsd(Ljava/lang/String;)I

    move-result v20

    .line 5935
    invoke-virtual {v0}, Lcom/android/server/am/HostingRecord;->getTriggerType()Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Lcom/android/server/am/HostingRecord;->getTriggerTypeForStatsd(Ljava/lang/String;)I

    move-result v21

    move v8, v1

    move/from16 v10, p4

    move/from16 v16, v2

    .line 5922
    invoke-static/range {v8 .. v21}, Lcom/android/internal/util/FrameworkStatsLog;->write(IIILjava/lang/String;IJIILjava/lang/String;Ljava/lang/String;Ljava/lang/String;II)V

    .line 5936
    monitor-exit p0
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :catchall_0
    move-exception v0

    :try_start_b
    monitor-exit p0
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :cond_a
    const-string v1, "ActivityManager"

    .line 5809
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Mismatched or missing ProcessRecord: "

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v4, ". Pid: "

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, ". Uid: "

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 5811
    invoke-static/range {p4 .. p4}, Landroid/os/Process;->killProcess(I)V

    .line 5812
    invoke-static/range {p3 .. p4}, Landroid/os/Process;->killProcessGroup(II)I

    .line 5813
    iget-object v1, v7, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/4 v4, 0x7

    const/4 v5, 0x0

    const-string/jumbo v6, "wrong startSeq"

    move/from16 v2, p4

    move/from16 v3, p3

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ProcessList;->noteAppKill(IIIILjava/lang/String;)V

    .line 5817
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    :try_start_c
    const-string/jumbo v0, "unexpected process record"

    const/16 v1, 0xd

    .line 5818
    invoke-virtual {v8, v0, v1, v9}, Lcom/android/server/am/ProcessRecord;->killLocked(Ljava/lang/String;IZ)V

    .line 5820
    monitor-exit p0
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :catchall_1
    move-exception v0

    :try_start_d
    monitor-exit p0
    :try_end_d
    .catchall {:try_start_d .. :try_end_d} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :catchall_2
    move-exception v0

    .line 5804
    :try_start_e
    monitor-exit v4
    :try_end_e
    .catchall {:try_start_e .. :try_end_e} :catchall_2

    throw v0
.end method

.method public final finishBooting()V
    .locals 12

    .line 6004
    new-instance v0, Lcom/android/server/utils/TimingsTraceAndSlog;

    const-string v1, "ActivityManagerTiming"

    const-wide/16 v2, 0x40

    invoke-direct {v0, v1, v2, v3}, Lcom/android/server/utils/TimingsTraceAndSlog;-><init>(Ljava/lang/String;J)V

    const-string v1, "FinishBooting"

    .line 6006
    invoke-virtual {v0, v1}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceBegin(Ljava/lang/String;)V

    const-string v1, "finishBooting"

    const-string v2, "NULL"

    const/4 v3, 0x0

    const/4 v4, -0x1

    .line 6010
    invoke-static {v3, v4, v3, v1, v2}, Lcom/android/server/am/EventLogTags;->writeBootProgressAmsState(IIILjava/lang/String;Ljava/lang/String;)V

    .line 6015
    invoke-static {p0}, Lcom/android/server/am/ProcessCpusetController;->getController(Lcom/android/server/am/ActivityManagerService;)Lcom/android/server/am/ProcessCpusetController;

    move-result-object v1

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCpusetController:Lcom/android/server/am/ProcessCpusetController;

    .line 6018
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 6019
    :try_start_0
    iget-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mBootAnimationComplete:Z

    const/4 v2, 0x2

    const/4 v5, 0x1

    if-nez v1, :cond_0

    .line 6020
    iput-boolean v5, p0, Lcom/android/server/am/ActivityManagerService;->mCallFinishBooting:Z

    const-string v0, "finishBooting"

    const-string/jumbo v1, "mBootAnimationComplete is not ready"

    .line 6023
    invoke-static {v3, v4, v2, v0, v1}, Lcom/android/server/am/EventLogTags;->writeBootProgressAmsState(IIILjava/lang/String;Ljava/lang/String;)V

    .line 6026
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 6028
    :cond_0
    :try_start_1
    iput-boolean v3, p0, Lcom/android/server/am/ActivityManagerService;->mCallFinishBooting:Z

    .line 6029
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 6032
    sget-object v1, Landroid/os/Process;->ZYGOTE_PROCESS:Landroid/os/ZygoteProcess;

    invoke-virtual {v1}, Landroid/os/ZygoteProcess;->bootCompleted()V

    .line 6033
    invoke-static {}, Ldalvik/system/VMRuntime;->bootCompleted()V

    .line 6035
    new-instance v1, Landroid/content/IntentFilter;

    invoke-direct {v1}, Landroid/content/IntentFilter;-><init>()V

    const-string v6, "android.intent.action.QUERY_PACKAGE_RESTART"

    .line 6036
    invoke-virtual {v1, v6}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    const-string/jumbo v6, "package"

    .line 6037
    invoke-virtual {v1, v6}, Landroid/content/IntentFilter;->addDataScheme(Ljava/lang/String;)V

    .line 6038
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    new-instance v7, Lcom/android/server/am/ActivityManagerService$10;

    invoke-direct {v7, p0}, Lcom/android/server/am/ActivityManagerService$10;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-virtual {v6, v7, v1}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    :try_start_2
    const-string v1, "ActivityManager"

    const-string v6, "About to commit checkpoint"

    .line 6060
    invoke-static {v1, v6}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 6061
    invoke-static {}, Lcom/android/internal/content/InstallLocationUtils;->getStorageManager()Landroid/os/storage/IStorageManager;

    move-result-object v1

    .line 6062
    invoke-interface {v1}, Landroid/os/storage/IStorageManager;->commitChanges()V
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_0

    goto :goto_0

    .line 6064
    :catch_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    .line 6065
    invoke-virtual {v1}, Lcom/android/server/am/ActivityManagerService$Injector;->getContext()Landroid/content/Context;

    move-result-object v1

    const-string/jumbo v6, "power"

    invoke-virtual {v1, v6}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/os/PowerManager;

    const-string v6, "Checkpoint commit failed"

    .line 6066
    invoke-virtual {v1, v6}, Landroid/os/PowerManager;->reboot(Ljava/lang/String;)V

    .line 6071
    :goto_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mDynamicHiddenApp:Lcom/android/server/am/DynamicHiddenApp;

    invoke-virtual {v1}, Lcom/android/server/am/DynamicHiddenApp;->initDHAPostBoot()V

    .line 6076
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mSystemServiceManager:Lcom/android/server/SystemServiceManager;

    const/16 v6, 0x3e8

    invoke-virtual {v1, v0, v6}, Lcom/android/server/SystemServiceManager;->startBootPhase(Lcom/android/server/utils/TimingsTraceAndSlog;I)V

    .line 6080
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v1}, Lcom/android/server/wm/ActivityTaskManagerService;->initActivityManagerPerformance()V

    .line 6115
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 6118
    :try_start_3
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    if-lez v1, :cond_2

    .line 6120
    new-instance v6, Ljava/util/ArrayList;

    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    invoke-direct {v6, v7}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    move v7, v3

    :goto_1
    if-ge v7, v1, :cond_2

    .line 6127
    invoke-virtual {v6, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/am/ProcessRecord;

    invoke-virtual {v8}, Lcom/android/server/am/ProcessRecord;->getWindowProcessController()Lcom/android/server/wm/WindowProcessController;

    move-result-object v8

    invoke-virtual {v8}, Lcom/android/server/wm/ConfigurationContainer;->getConfiguration()Landroid/content/res/Configuration;

    move-result-object v8

    .line 6128
    invoke-virtual {v8}, Landroid/content/res/Configuration;->getLocales()Landroid/os/LocaleList;

    move-result-object v8

    invoke-virtual {v8}, Landroid/os/LocaleList;->isEmpty()Z

    move-result v8

    if-eqz v8, :cond_1

    const-string v8, "ActivityManager"

    .line 6131
    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "Proc "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v10

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v10, "has empty locales now, updating it with newly updated configuration."

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    invoke-static {v8, v9}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 6134
    invoke-virtual {v6, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/am/ProcessRecord;

    invoke-virtual {v8}, Lcom/android/server/am/ProcessRecord;->getWindowProcessController()Lcom/android/server/wm/WindowProcessController;

    move-result-object v8

    invoke-virtual {v8}, Lcom/android/server/wm/WindowProcessController;->updateGlobalConfiguration()V

    .line 6137
    :cond_1
    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v6, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/am/ProcessRecord;

    new-instance v10, Lcom/android/server/am/HostingRecord;

    const-string/jumbo v11, "on-hold"

    invoke-direct {v10, v11}, Lcom/android/server/am/HostingRecord;-><init>(Ljava/lang/String;)V

    invoke-virtual {v8, v9, v10, v2}, Lcom/android/server/am/ProcessList;->startProcessLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/HostingRecord;I)V

    add-int/lit8 v7, v7, 0x1

    goto :goto_1

    .line 6142
    :cond_2
    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    if-ne v1, v5, :cond_3

    .line 6143
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 6146
    :cond_3
    :try_start_4
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v6, 0x1b

    invoke-virtual {v1, v6}, Landroid/os/Handler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v1

    .line 6147
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget-wide v7, v7, Lcom/android/server/am/ActivityManagerConstants;->POWER_CHECK_INTERVAL:J

    invoke-virtual {v6, v1, v7, v8}, Landroid/os/Handler;->sendMessageDelayed(Landroid/os/Message;J)Z

    .line 6151
    invoke-static {}, Landroid/sysprop/InitProperties;->userspace_reboot_in_progress()Ljava/util/Optional;

    move-result-object v1

    sget-object v6, Ljava/lang/Boolean;->FALSE:Ljava/lang/Boolean;

    invoke-virtual {v1, v6}, Ljava/util/Optional;->orElse(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/lang/Boolean;

    invoke-virtual {v1}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v1

    if-eqz v1, :cond_4

    .line 6152
    invoke-static {}, Lcom/android/server/UserspaceRebootLogger;->noteUserspaceRebootSuccess()V

    :cond_4
    const-string/jumbo v1, "sys.boot_completed"

    const-string v6, "1"

    .line 6155
    invoke-static {v1, v6}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    const-string v1, "dev.bootcomplete"

    const-string v6, "1"

    .line 6156
    invoke-static {v1, v6}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 6157
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    new-instance v6, Lcom/android/server/am/ActivityManagerService$11;

    invoke-direct {v6, p0}, Lcom/android/server/am/ActivityManagerService$11;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-virtual {v1, v6}, Lcom/android/server/am/UserController;->onBootComplete(Landroid/content/IIntentReceiver;)V

    .line 6169
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->maybeLogUserspaceRebootEvent()V

    .line 6170
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v1}, Lcom/android/server/am/UserController;->scheduleStartProfiles()V

    .line 6172
    sget-boolean v1, Lcom/samsung/android/rune/CoreRune;->MNO_TMO_DEVICE_REPORTING:Z

    if-eqz v1, :cond_5

    const-string v1, "ActivityManager"

    const-string v6, "TMO finishBooting"

    .line 6173
    invoke-static {v1, v6}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 6174
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-static {v1}, Lcom/sec/tmodiagnostics/DeviceReportingSecurityChecker;->enable(Landroid/content/Context;)V

    .line 6175
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v1}, Lcom/android/server/am/ProcessList;->getProcessNamesLOSP()Lcom/android/server/am/ProcessList$MyProcessMap;

    move-result-object v1

    .line 6176
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-static {v6, v1}, Lcom/android/server/am/AppStateBroadcaster;->enableIntentBroadcast(Landroid/content/Context;Lcom/android/internal/app/ProcessMap;)V

    .line 6179
    :cond_5
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 6181
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->showConsoleNotificationIfActive()V

    .line 6182
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->showMteOverrideNotificationIfActive()V

    .line 6185
    invoke-static {}, Lcom/android/server/am/MARsPolicyManager;->getInstance()Lcom/android/server/am/MARsPolicyManager;

    move-result-object v1

    invoke-virtual {v1, v5}, Lcom/android/server/am/MARsPolicyManager;->postInit(Z)V

    .line 6186
    invoke-static {}, Lcom/android/server/am/FreecessController;->getInstance()Lcom/android/server/am/FreecessController;

    move-result-object v1

    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v1, v6, p0}, Lcom/android/server/am/FreecessController;->init(Landroid/content/Context;Lcom/android/server/am/ActivityManagerService;)V

    .line 6192
    invoke-static {}, Landroid/os/Looper;->getMainLooper()Landroid/os/Looper;

    move-result-object v1

    invoke-virtual {v1}, Landroid/os/Looper;->setPerfLogEnable()V

    .line 6198
    new-instance v1, Lcom/android/server/am/ActivityManagerService$12;

    const-wide/32 v8, 0x927c0

    const-wide/32 v10, 0x927c0

    move-object v6, v1

    move-object v7, p0

    invoke-direct/range {v6 .. v11}, Lcom/android/server/am/ActivityManagerService$12;-><init>(Lcom/android/server/am/ActivityManagerService;JJ)V

    .line 6206
    invoke-virtual {v1}, Landroid/os/CountDownTimer;->start()Landroid/os/CountDownTimer;

    .line 6207
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mDynamicHiddenApp:Lcom/android/server/am/DynamicHiddenApp;

    invoke-virtual {v1}, Lcom/android/server/am/DynamicHiddenApp;->bootBGSlotSettingTimer()V

    .line 6213
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v1

    const-string/jumbo v6, "sem_sp_edition_flipfont_changed"

    invoke-static {v1, v6, v3}, Landroid/provider/Settings$Secure;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v1

    if-ne v1, v5, :cond_6

    move v1, v5

    goto :goto_2

    :cond_6
    move v1, v3

    :goto_2
    if-nez v1, :cond_7

    .line 6215
    new-instance v1, Lcom/samsung/android/fontutil/FlipFontOptimizer;

    invoke-direct {v1}, Lcom/samsung/android/fontutil/FlipFontOptimizer;-><init>()V

    .line 6216
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v1, v6}, Lcom/samsung/android/fontutil/FlipFontOptimizer;->setFlipfont(Landroid/content/Context;)V

    .line 6217
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v1

    const-string/jumbo v6, "sem_sp_edition_flipfont_changed"

    invoke-static {v1, v6, v5}, Landroid/provider/Settings$Secure;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z

    :cond_7
    const-string v1, "ActivityManager"

    const-string v5, "!@Boot: bootcomplete"

    .line 6223
    invoke-static {v1, v5}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    const-string v1, "ActivityManager"

    const-string v5, "!@Boot_EBS_F: bootcomplete"

    .line 6224
    invoke-static {v1, v5}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    const-string v1, "finishBooting"

    const-string v5, "NULL"

    .line 6229
    invoke-static {v3, v4, v2, v1, v5}, Lcom/android/server/am/EventLogTags;->writeBootProgressAmsState(IIILjava/lang/String;Ljava/lang/String;)V

    .line 6235
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-static {v1, p0}, Lcom/android/server/am/Pageboost;->initPageboost(Landroid/content/Context;Lcom/android/server/am/ActivityManagerService;)V

    .line 6236
    invoke-static {}, Lcom/android/server/am/Pageboost;->updatePackages()V

    .line 6241
    new-instance v1, Landroid/content/IntentFilter;

    invoke-direct {v1}, Landroid/content/IntentFilter;-><init>()V

    const-string v2, "com.android.server.am.BROADCAST_SET_KPM_POLICY"

    .line 6242
    invoke-virtual {v1, v2}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    const-string v2, "com.android.server.am.BROADCAST_SET_KPM_DEBUG"

    .line 6243
    invoke-virtual {v1, v2}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    const-string v2, "com.android.server.am.BROADCAST_SET_KPM_STATE"

    .line 6244
    invoke-virtual {v1, v2}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    const-string v2, "com.android.server.am.BROADCAST_SET_KPM_ONOFF"

    .line 6245
    invoke-virtual {v1, v2}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    const-string v2, "com.sec.server.am.BROADCAST_SET_PMM_DMABUF_LEAK_DETECTOR_SOURCE"

    .line 6246
    invoke-virtual {v1, v2}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 6248
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    new-instance v3, Lcom/android/server/am/ActivityManagerService$13;

    invoke-direct {v3, p0}, Lcom/android/server/am/ActivityManagerService$13;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-virtual {v2, v3, v1}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    .line 6294
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v2, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda11;

    invoke-direct {v2, p0}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda11;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-virtual {v1, v2}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 6303
    sget-boolean v1, Lcom/samsung/android/rune/CoreRune;->FW_APPLOCK:Z

    if-eqz v1, :cond_8

    .line 6304
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v2, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda12;

    invoke-direct {v2, p0}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda12;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-virtual {v1, v2}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 6310
    :cond_8
    invoke-virtual {v0}, Landroid/util/TimingsTraceLog;->traceEnd()V

    return-void

    :catchall_0
    move-exception v0

    .line 6179
    :try_start_5
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :catchall_1
    move-exception v0

    .line 6029
    :try_start_6
    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public finishForceStopPackageForMARsLocked(Ljava/lang/String;I)V
    .locals 26

    .line 24439
    new-instance v4, Landroid/content/Intent;

    const-string/jumbo v0, "package"

    const/4 v1, 0x0

    move-object/from16 v2, p1

    .line 24440
    invoke-static {v0, v2, v1}, Landroid/net/Uri;->fromParts(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/net/Uri;

    move-result-object v0

    const-string v1, "android.intent.action.PACKAGE_RESTARTED"

    invoke-direct {v4, v1, v0}, Landroid/content/Intent;-><init>(Ljava/lang/String;Landroid/net/Uri;)V

    move-object/from16 v0, p0

    .line 24441
    iget-boolean v1, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    if-nez v1, :cond_0

    const/high16 v1, 0x50000000

    .line 24442
    invoke-virtual {v4, v1}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    :cond_0
    const-string v1, "android.intent.extra.UID"

    move/from16 v15, p2

    .line 24446
    invoke-virtual {v4, v1, v15}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    const-string v1, "android.intent.extra.user_handle"

    .line 24447
    invoke-static/range {p2 .. p2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v2

    invoke-virtual {v4, v1, v2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    const/4 v1, 0x0

    const/4 v2, 0x0

    const/4 v3, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v13, 0x0

    const/4 v14, -0x1

    const/16 v16, 0x0

    move-object/from16 v15, v16

    const/16 v16, 0x0

    const/16 v17, 0x0

    .line 24448
    sget v21, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    move/from16 v18, v21

    const/16 v19, 0x3e8

    .line 24454
    invoke-static/range {p2 .. p2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v20

    .line 24455
    invoke-static/range {p2 .. p2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v22

    sget-object v23, Landroid/app/BackgroundStartPrivileges;->NONE:Landroid/app/BackgroundStartPrivileges;

    const/16 v24, 0x0

    const/16 v25, 0x0

    move-object/from16 v0, p0

    .line 24448
    invoke-virtual/range {v0 .. v25}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ILandroid/os/Bundle;ZZIIIIILandroid/app/BackgroundStartPrivileges;[ILjava/util/function/BiFunction;)I

    return-void
.end method

.method public final finishForceStopPackageLocked(Ljava/lang/String;I)V
    .locals 27

    move-object/from16 v0, p1

    .line 4970
    new-instance v5, Landroid/content/Intent;

    const-string/jumbo v1, "package"

    const/4 v2, 0x0

    .line 4971
    invoke-static {v1, v0, v2}, Landroid/net/Uri;->fromParts(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/net/Uri;

    move-result-object v1

    const-string v2, "android.intent.action.PACKAGE_RESTARTED"

    invoke-direct {v5, v2, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;Landroid/net/Uri;)V

    move-object/from16 v1, p0

    .line 4972
    iget-boolean v2, v1, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    if-nez v2, :cond_0

    const/high16 v2, 0x50000000

    .line 4973
    invoke-virtual {v5, v2}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 4976
    :cond_0
    invoke-static/range {p2 .. p2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v2

    move/from16 v23, v2

    .line 4978
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal;

    move-result-object v3

    invoke-virtual {v3, v0, v2}, Landroid/content/pm/PackageManagerInternal;->getVisibilityAllowList(Ljava/lang/String;I)[I

    move-result-object v25

    const-string v0, "android.intent.extra.UID"

    move/from16 v3, p2

    .line 4979
    invoke-virtual {v5, v0, v3}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    const-string v0, "android.intent.extra.user_handle"

    .line 4980
    invoke-virtual {v5, v0, v2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    const/4 v2, 0x0

    const/4 v3, 0x0

    const/4 v4, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v13, 0x0

    const/4 v14, 0x0

    const/4 v15, -0x1

    const/16 v16, 0x0

    const/16 v17, 0x0

    const/16 v18, 0x0

    .line 4981
    sget v19, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    const/16 v20, 0x3e8

    .line 4987
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v21

    .line 4988
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v22

    sget-object v24, Landroid/app/BackgroundStartPrivileges;->NONE:Landroid/app/BackgroundStartPrivileges;

    const/16 v26, 0x0

    move-object/from16 v1, p0

    .line 4981
    invoke-virtual/range {v1 .. v26}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ILandroid/os/Bundle;ZZIIIIILandroid/app/BackgroundStartPrivileges;[ILjava/util/function/BiFunction;)I

    return-void
.end method

.method public final finishHeavyWeightApp()V
    .locals 2

    const-string v0, "android.permission.FORCE_STOP_PACKAGES"

    .line 3868
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v1

    if-nez v1, :cond_0

    .line 3877
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {p0}, Lcom/android/server/wm/ActivityTaskManagerInternal;->finishHeavyWeightApp()V

    return-void

    .line 3870
    :cond_0
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Permission Denial: finishHeavyWeightApp() from pid="

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3871
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ", uid="

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3872
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " requires "

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    const-string v0, "ActivityManager"

    .line 3874
    invoke-static {v0, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 3875
    new-instance v0, Ljava/lang/SecurityException;

    invoke-direct {v0, p0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public finishInstrumentation(Landroid/app/IApplicationThread;ILandroid/os/Bundle;)V
    .locals 3

    .line 18873
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    if-eqz p3, :cond_1

    .line 18875
    invoke-virtual {p3}, Landroid/os/Bundle;->hasFileDescriptors()Z

    move-result v0

    if-nez v0, :cond_0

    goto :goto_0

    .line 18876
    :cond_0
    new-instance p0, Ljava/lang/IllegalArgumentException;

    const-string p1, "File descriptors passed in Intent"

    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 18879
    :cond_1
    :goto_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 18880
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLOSP(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    if-nez v0, :cond_2

    const-string p2, "ActivityManager"

    .line 18882
    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "finishInstrumentation: no app for "

    invoke-virtual {p3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p2, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 18883
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 18885
    :cond_2
    :try_start_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v1

    .line 18886
    invoke-virtual {p0, v0, p2, p3}, Lcom/android/server/am/ActivityManagerService;->finishInstrumentationLocked(Lcom/android/server/am/ProcessRecord;ILandroid/os/Bundle;)V

    .line 18887
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 18888
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :catchall_0
    move-exception p1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public finishInstrumentationLocked(Lcom/android/server/am/ProcessRecord;ILandroid/os/Bundle;)V
    .locals 12

    const-wide/16 v0, 0x40

    :try_start_0
    const-string v2, "finishInstrumentationLocked()"

    .line 18809
    invoke-static {v0, v1, v2}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 18810
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getActiveInstrumentation()Lcom/android/server/am/ActiveInstrumentation;

    move-result-object v2

    if-nez v2, :cond_0

    const-string p0, "ActivityManager"

    .line 18812
    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string p3, "finishInstrumentation called on non-instrumented: "

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p0, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 18867
    invoke-static {v0, v1}, Landroid/os/Trace;->traceEnd(J)V

    return-void

    .line 18816
    :cond_0
    :try_start_1
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 18817
    :try_start_2
    iget-boolean v4, v2, Lcom/android/server/am/ActiveInstrumentation;->mFinished:Z

    const/4 v5, 0x0

    if-nez v4, :cond_5

    .line 18818
    iget-object v4, v2, Lcom/android/server/am/ActiveInstrumentation;->mWatcher:Landroid/app/IInstrumentationWatcher;

    if-eqz v4, :cond_3

    .line 18819
    iget-object v4, v2, Lcom/android/server/am/ActiveInstrumentation;->mCurResults:Landroid/os/Bundle;

    if-eqz v4, :cond_2

    if-eqz v4, :cond_1

    if-eqz p3, :cond_1

    .line 18822
    invoke-virtual {v4, p3}, Landroid/os/Bundle;->putAll(Landroid/os/Bundle;)V

    :cond_1
    move-object p3, v4

    .line 18827
    :cond_2
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mInstrumentationReporter:Lcom/android/server/am/InstrumentationReporter;

    iget-object v6, v2, Lcom/android/server/am/ActiveInstrumentation;->mWatcher:Landroid/app/IInstrumentationWatcher;

    iget-object v7, v2, Lcom/android/server/am/ActiveInstrumentation;->mClass:Landroid/content/ComponentName;

    invoke-virtual {v4, v6, v7, p2, p3}, Lcom/android/server/am/InstrumentationReporter;->reportFinished(Landroid/app/IInstrumentationWatcher;Landroid/content/ComponentName;ILandroid/os/Bundle;)V

    .line 18832
    :cond_3
    iget-object p2, v2, Lcom/android/server/am/ActiveInstrumentation;->mUiAutomationConnection:Landroid/app/IUiAutomationConnection;

    if-eqz p2, :cond_4

    .line 18834
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    iget p3, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    iget-object v4, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v4, v4, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    const/4 v6, 0x2

    const/16 v7, 0x63

    invoke-virtual {p2, v7, p3, v4, v6}, Lcom/android/server/appop/AppOpsService;->setMode(IILjava/lang/String;I)V

    .line 18836
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    invoke-virtual {p2, v5}, Lcom/android/server/appop/AppOpsService;->setAppOpsServiceDelegate(Landroid/app/AppOpsManagerInternal$CheckOpsDelegate;)V

    .line 18837
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getPermissionManagerInternal()Lcom/android/server/pm/permission/PermissionManagerServiceInternal;

    move-result-object p2

    invoke-interface {p2}, Lcom/android/server/pm/permission/PermissionManagerServiceInternal;->stopShellPermissionIdentityDelegation()V

    .line 18838
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object p3, v2, Lcom/android/server/am/ActiveInstrumentation;->mUiAutomationConnection:Landroid/app/IUiAutomationConnection;

    const/16 v4, 0x38

    invoke-virtual {p2, v4, p3}, Landroid/os/Handler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object p2

    .line 18839
    invoke-virtual {p2}, Landroid/os/Message;->sendToTarget()V

    :cond_4
    const/4 p2, 0x1

    .line 18841
    iput-boolean p2, v2, Lcom/android/server/am/ActiveInstrumentation;->mFinished:Z

    .line 18844
    :cond_5
    invoke-virtual {v2, p1}, Lcom/android/server/am/ActiveInstrumentation;->removeProcess(Lcom/android/server/am/ProcessRecord;)V

    .line 18845
    invoke-virtual {p1, v5}, Lcom/android/server/am/ProcessRecord;->setActiveInstrumentation(Lcom/android/server/am/ActiveInstrumentation;)V

    .line 18846
    monitor-exit v3
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 18847
    iget-object p2, p1, Lcom/android/server/am/ProcessRecord;->mProfile:Lcom/android/server/am/ProcessProfileRecord;

    const/16 p3, 0x8

    invoke-virtual {p2, p3}, Lcom/android/server/am/ProcessProfileRecord;->clearHostingComponentType(I)V

    .line 18849
    iget-boolean p2, p1, Lcom/android/server/am/ProcessRecord;->isSdkSandbox:Z

    if-eqz p2, :cond_6

    .line 18852
    iget p2, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {p2}, Landroid/os/UserHandle;->getAppId(I)I

    move-result p2

    iget p3, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {p3}, Landroid/os/UserHandle;->getUserId(I)I

    move-result p3

    const-string v2, "finished instr"

    invoke-virtual {p0, p2, p3, v2}, Lcom/android/server/am/ActivityManagerService;->killUid(IILjava/lang/String;)V

    .line 18854
    const-class p0, Lcom/android/server/sdksandbox/SdkSandboxManagerLocal;

    .line 18855
    invoke-static {p0}, Lcom/android/server/LocalManagerRegistry;->getManager(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object p0

    check-cast p0, Lcom/android/server/sdksandbox/SdkSandboxManagerLocal;

    if-eqz p0, :cond_7

    .line 18857
    iget-object p2, p1, Lcom/android/server/am/ProcessRecord;->sdkSandboxClientAppPackage:Ljava/lang/String;

    iget p1, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    .line 18859
    invoke-static {p1}, Landroid/os/Process;->getAppUidForSdkSandboxUid(I)I

    move-result p1

    .line 18857
    invoke-interface {p0, p2, p1}, Lcom/android/server/sdksandbox/SdkSandboxManagerLocal;->notifyInstrumentationFinished(Ljava/lang/String;I)V

    goto :goto_0

    .line 18861
    :cond_6
    iget-boolean p2, v2, Lcom/android/server/am/ActiveInstrumentation;->mNoRestart:Z

    if-nez p2, :cond_7

    .line 18862
    iget-object p2, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v3, p2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    const/4 v4, -0x1

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x1

    const/4 v8, 0x1

    const/4 v9, 0x0

    iget v10, p1, Lcom/android/server/am/ProcessRecord;->userId:I

    const-string v11, "finished inst"

    move-object v2, p0

    invoke-virtual/range {v2 .. v11}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 18867
    :cond_7
    :goto_0
    invoke-static {v0, v1}, Landroid/os/Trace;->traceEnd(J)V

    return-void

    :catchall_0
    move-exception p0

    .line 18846
    :try_start_4
    monitor-exit v3
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    :catchall_1
    move-exception p0

    .line 18867
    invoke-static {v0, v1}, Landroid/os/Trace;->traceEnd(J)V

    .line 18868
    throw p0
.end method

.method public finishReceiver(Landroid/os/IBinder;ILjava/lang/String;Landroid/os/Bundle;ZI)V
    .locals 9

    if-eqz p4, :cond_1

    .line 18390
    invoke-virtual {p4}, Landroid/os/Bundle;->hasFileDescriptors()Z

    move-result v0

    if-nez v0, :cond_0

    goto :goto_0

    .line 18391
    :cond_0
    new-instance p0, Ljava/lang/IllegalArgumentException;

    const-string p1, "File descriptors passed in Bundle"

    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 18394
    :cond_1
    :goto_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 18396
    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 18397
    :try_start_1
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLOSP(Landroid/os/IBinder;)Lcom/android/server/am/ProcessRecord;

    move-result-object v3

    if-nez v3, :cond_2

    const-string p2, "ActivityManager"

    .line 18399
    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string p4, "finishReceiver: no app for "

    invoke-virtual {p3, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p2, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 18400
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 18411
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return-void

    .line 18403
    :cond_2
    :try_start_2
    invoke-virtual {p0, p6}, Lcom/android/server/am/ActivityManagerService;->broadcastQueueForFlags(I)Lcom/android/server/am/BroadcastQueue;

    move-result-object v2

    const/4 v8, 0x1

    move v4, p2

    move-object v5, p3

    move-object v6, p4

    move v7, p5

    .line 18404
    invoke-virtual/range {v2 .. v8}, Lcom/android/server/am/BroadcastQueue;->finishReceiverLocked(Lcom/android/server/am/ProcessRecord;ILjava/lang/String;Landroid/os/Bundle;ZZ)Z

    const/4 p1, 0x0

    const/4 p2, 0x2

    .line 18407
    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->trimApplicationsLocked(ZI)V

    .line 18408
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 18411
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return-void

    :catchall_0
    move-exception p1

    .line 18408
    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    :catchall_1
    move-exception p0

    .line 18411
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 18412
    throw p0
.end method

.method public forceDelayBroadcastDelivery(Ljava/lang/String;J)V
    .locals 3

    .line 22635
    invoke-static {p1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 22636
    invoke-static {p2, p3}, Lcom/android/internal/util/Preconditions;->checkArgumentNonnegative(J)J

    const-string v0, "android.permission.DUMP"

    const-string v1, "forceDelayBroadcastDelivery()"

    .line 22637
    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 22639
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mEnableModernQueue:Z

    if-nez v0, :cond_0

    return-void

    .line 22643
    :cond_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v0, p0

    const/4 v1, 0x0

    :goto_0
    if-ge v1, v0, :cond_1

    aget-object v2, p0, v1

    .line 22644
    invoke-virtual {v2, p1, p2, p3}, Lcom/android/server/am/BroadcastQueue;->forceDelayBroadcastDelivery(Ljava/lang/String;J)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    :cond_1
    return-void
.end method

.method public forceGc(I)V
    .locals 0

    .line 8415
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getProcessRecordFromPidLocked(I)Lcom/android/server/am/ProcessRecord;

    move-result-object p0

    if-eqz p0, :cond_0

    .line 8416
    invoke-virtual {p0}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object p1

    if-eqz p1, :cond_0

    .line 8418
    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object p0

    invoke-interface {p0}, Landroid/app/IApplicationThread;->forceGc()V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    :catch_0
    const-string p0, "ActivityManager"

    const-string p1, "Failed to forceGc"

    .line 8420
    invoke-static {p0, p1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    :cond_0
    :goto_0
    return-void
.end method

.method public final forceStopAppZygoteLocked(Ljava/lang/String;II)V
    .locals 3

    if-nez p1, :cond_0

    return-void

    :cond_0
    if-gez p2, :cond_1

    .line 5098
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal;

    move-result-object p2

    const-wide/32 v0, 0x10400000

    const/4 v2, 0x0

    invoke-virtual {p2, p1, v0, v1, v2}, Landroid/content/pm/PackageManagerInternal;->getPackageUid(Ljava/lang/String;JI)I

    move-result p2

    invoke-static {p2}, Landroid/os/UserHandle;->getAppId(I)I

    move-result p2

    .line 5102
    :cond_1
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/4 v0, 0x1

    invoke-virtual {p0, p1, p2, p3, v0}, Lcom/android/server/am/ProcessList;->killAppZygotesLocked(Ljava/lang/String;IIZ)V

    return-void
.end method

.method public forceStopPackage(Ljava/lang/String;I)V
    .locals 2

    .line 4567
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mExt:Lcom/android/server/am/ActivityManagerServiceExt;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActivityManagerServiceExt;->shouldAvoidForceStopForTmoPkg(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_0

    return-void

    :cond_0
    const/4 v0, 0x0

    .line 4571
    invoke-virtual {p0, p1, p2, v0, v0}, Lcom/android/server/am/ActivityManagerService;->forceStopPackage(Ljava/lang/String;IIZ)V

    .line 4576
    invoke-static {}, Lcom/android/server/am/MARsPolicyManager;->getInstance()Lcom/android/server/am/MARsPolicyManager;

    move-result-object p0

    invoke-virtual {p0}, Lcom/android/server/am/MARsPolicyManager;->isChinaPolicyEnabled()Z

    move-result p0

    if-eqz p0, :cond_1

    .line 4577
    invoke-static {}, Lcom/android/server/am/MARsPolicyManager;->getInstance()Lcom/android/server/am/MARsPolicyManager;

    move-result-object p0

    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/MARsPolicyManager;->isAutoRunBlockedApp(Ljava/lang/String;I)Z

    move-result p0

    if-eqz p0, :cond_1

    .line 4578
    invoke-static {}, Lcom/android/server/am/MARsPolicyManager;->getInstance()Lcom/android/server/am/MARsPolicyManager;

    move-result-object p0

    const-string v0, "forceStop"

    const-string v1, "UserForceStop"

    invoke-virtual {p0, p1, p2, v0, v1}, Lcom/android/server/am/MARsPolicyManager;->addRestrictListAvoidAssoicationLaunch(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V

    :cond_1
    return-void
.end method

.method public final forceStopPackage(Ljava/lang/String;IIZ)V
    .locals 20

    move-object/from16 v1, p0

    move-object/from16 v8, p1

    const-string v0, "android.permission.FORCE_STOP_PACKAGES"

    .line 4602
    invoke-virtual {v1, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_a

    .line 4611
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v7

    .line 4612
    iget-object v9, v1, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v11

    const/4 v13, 0x1

    const/4 v14, 0x2

    const-string v15, "forceStopPackage"

    const/16 v16, 0x0

    move v10, v7

    move/from16 v12, p2

    invoke-virtual/range {v9 .. v16}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result v0

    .line 4614
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v9

    .line 4616
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v11

    .line 4617
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    const/4 v12, -0x1

    if-ne v0, v12, :cond_0

    .line 4619
    :try_start_1
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v0}, Lcom/android/server/am/UserController;->getUsers()[I

    move-result-object v0

    goto :goto_0

    :cond_0
    filled-new-array {v0}, [I

    move-result-object v0

    :goto_0
    move-object v13, v0

    .line 4620
    array-length v14, v13

    const/4 v6, 0x0

    :goto_1
    if-ge v6, v14, :cond_9

    aget v5, v13, v6

    .line 4621
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal;

    move-result-object v0

    invoke-virtual {v0, v8, v5}, Landroid/content/pm/PackageManagerInternal;->isPackageStateProtected(Ljava/lang/String;I)Z

    move-result v0

    if-eqz v0, :cond_1

    const-string v0, "ActivityManager"

    .line 4623
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Ignoring request to force stop protected package "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, " u"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v0, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4625
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 4666
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v9, v10}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return-void

    :cond_1
    const/4 v0, 0x1

    if-nez p4, :cond_2

    .line 4629
    :try_start_2
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    const/16 v16, 0x0

    const/16 v17, 0x0

    const/16 v18, 0x0

    move-object/from16 v3, p1

    move v4, v5

    move v15, v5

    move-object/from16 v5, v16

    move/from16 v16, v6

    move-object/from16 v6, v17

    move/from16 v19, v7

    move-object/from16 v7, v18

    invoke-virtual/range {v2 .. v7}, Lcom/android/server/wm/ActivityTaskManagerService;->isForceStopDisabled(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_3

    move v2, v0

    goto :goto_2

    :cond_2
    move v15, v5

    move/from16 v16, v6

    move/from16 v19, v7

    :cond_3
    const/4 v2, 0x0

    :goto_2
    if-nez v2, :cond_7

    .line 4631
    invoke-virtual {v1, v8, v15}, Lcom/android/server/am/ActivityManagerService;->isSettingsCloseAllowed(Ljava/lang/String;I)Z

    move-result v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    if-nez v2, :cond_4

    goto/16 :goto_6

    :cond_4
    const-wide/32 v2, 0x10000000

    .line 4639
    :try_start_3
    invoke-interface {v11, v8, v2, v3, v15}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;JI)I

    move-result v2
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_0
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    goto :goto_3

    :catch_0
    move v2, v12

    :goto_3
    if-ne v2, v12, :cond_5

    :try_start_4
    const-string v0, "ActivityManager"

    .line 4644
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Invalid packageName: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v0, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    goto :goto_6

    .line 4648
    :cond_5
    :try_start_5
    invoke-interface {v11, v8, v0, v15}, Landroid/content/pm/IPackageManager;->setPackageStoppedState(Ljava/lang/String;ZI)V
    :try_end_5
    .catch Landroid/os/RemoteException; {:try_start_5 .. :try_end_5} :catch_2
    .catch Ljava/lang/IllegalArgumentException; {:try_start_5 .. :try_end_5} :catch_1
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    goto :goto_4

    :catch_1
    move-exception v0

    move-object v3, v0

    :try_start_6
    const-string v0, "ActivityManager"

    .line 4651
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Failed trying to unstop package "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v5, ": "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v0, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4654
    :catch_2
    :goto_4
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    move/from16 v3, p3

    invoke-virtual {v0, v15, v3}, Lcom/android/server/am/UserController;->isUserRunning(II)Z

    move-result v0

    if-eqz v0, :cond_8

    const-string v0, "ActivityManager"

    .line 4657
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "force stop from "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    if-eqz p4, :cond_6

    const/4 v5, 0x3

    goto :goto_5

    :cond_6
    const/4 v5, 0x2

    :goto_5
    invoke-static {v5}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v0, v4}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 4660
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "from pid "

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move/from16 v4, v19

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v1, v8, v2, v0}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;ILjava/lang/String;)V

    .line 4661
    invoke-virtual {v1, v8, v2}, Lcom/android/server/am/ActivityManagerService;->finishForceStopPackageLocked(Ljava/lang/String;I)V

    goto :goto_7

    :cond_7
    :goto_6
    move/from16 v3, p3

    :cond_8
    move/from16 v4, v19

    :goto_7
    add-int/lit8 v6, v16, 0x1

    move v7, v4

    goto/16 :goto_1

    .line 4664
    :cond_9
    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    :try_start_7
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    .line 4666
    invoke-static {v9, v10}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return-void

    :catchall_0
    move-exception v0

    .line 4664
    :try_start_8
    monitor-exit p0
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_0

    :try_start_9
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_1

    :catchall_1
    move-exception v0

    .line 4666
    invoke-static {v9, v10}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4667
    throw v0

    .line 4604
    :cond_a
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Permission Denial: forceStopPackage() from pid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 4605
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ", uid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 4606
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " requires "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "android.permission.FORCE_STOP_PACKAGES"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "ActivityManager"

    .line 4608
    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4609
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1
.end method

.method public forceStopPackageByAdmin(Ljava/lang/String;I)V
    .locals 2

    const/4 v0, 0x0

    const/4 v1, 0x1

    .line 4586
    invoke-virtual {p0, p1, p2, v0, v1}, Lcom/android/server/am/ActivityManagerService;->forceStopPackage(Ljava/lang/String;IIZ)V

    return-void
.end method

.method public forceStopPackageEvenWhenStopping(Ljava/lang/String;I)V
    .locals 2

    const/4 v0, 0x1

    const/4 v1, 0x0

    .line 4592
    invoke-virtual {p0, p1, p2, v0, v1}, Lcom/android/server/am/ActivityManagerService;->forceStopPackage(Ljava/lang/String;IIZ)V

    return-void
.end method

.method public forceStopPackageForMARsLocked(Ljava/lang/String;Ljava/lang/String;ZIZII)Z
    .locals 12

    move-object v10, p0

    move-object v11, p1

    move/from16 v0, p4

    if-eqz p3, :cond_3

    .line 24411
    iget-object v1, v10, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v1}, Lcom/android/server/am/ProcessList;->getProcessNamesLOSP()Lcom/android/server/am/ProcessList$MyProcessMap;

    move-result-object v1

    invoke-virtual {v1}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v1

    invoke-virtual {v1}, Landroid/util/ArrayMap;->size()I

    move-result v1

    const/4 v2, 0x0

    move v3, v2

    :goto_0
    if-ge v3, v1, :cond_3

    .line 24413
    iget-object v4, v10, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v4}, Lcom/android/server/am/ProcessList;->getProcessNamesLOSP()Lcom/android/server/am/ProcessList$MyProcessMap;

    move-result-object v4

    invoke-virtual {v4}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v4

    invoke-virtual {v4, v3}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/util/SparseArray;

    .line 24414
    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    move-result v5

    move v6, v2

    :goto_1
    if-ge v6, v5, :cond_2

    .line 24416
    invoke-virtual {v4, v6}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/am/ProcessRecord;

    .line 24419
    invoke-virtual {v7}, Lcom/android/server/am/ProcessRecord;->getPkgList()Lcom/android/server/am/PackageList;

    move-result-object v8

    invoke-virtual {v8, p1}, Lcom/android/server/am/PackageList;->containsKey(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_1

    iget-object v7, v7, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {v7}, Lcom/android/server/am/ProcessStateRecord;->getSetAdj()I

    move-result v7

    if-ge v7, v0, :cond_1

    .line 24420
    sget-boolean v1, Lcom/android/server/am/mars/MARsDebugConfig;->DEBUG_MARs:Z

    if-eqz v1, :cond_0

    .line 24421
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Choosed Package "

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, " has the process under ADJ "

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v0, " - Skip EM KILL"

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "MARsPolicyManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    :cond_0
    return v2

    :cond_1
    add-int/lit8 v6, v6, 0x1

    goto :goto_1

    :cond_2
    add-int/lit8 v3, v3, 0x1

    goto :goto_0

    .line 24429
    :cond_3
    invoke-static/range {p7 .. p7}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v2

    const/4 v3, 0x0

    const/4 v4, 0x0

    const/4 v5, 0x1

    const/4 v6, 0x0

    const/4 v7, 0x0

    move-object v0, p0

    move-object v1, p1

    move/from16 v8, p6

    move-object v9, p2

    invoke-virtual/range {v0 .. v9}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z

    if-eqz p5, :cond_4

    move/from16 v0, p7

    .line 24433
    invoke-virtual {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->finishForceStopPackageForMARsLocked(Ljava/lang/String;I)V

    :cond_4
    const/4 v0, 0x1

    return v0
.end method

.method public final forceStopPackageLocked(Ljava/lang/String;ILjava/lang/String;)V
    .locals 10

    .line 4964
    invoke-static {p2}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v2

    const/4 v3, 0x0

    const/4 v4, 0x0

    const/4 v5, 0x1

    const/4 v6, 0x0

    const/4 v7, 0x0

    .line 4965
    invoke-static {p2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v8

    move-object v0, p0

    move-object v1, p1

    move-object v9, p3

    .line 4964
    invoke-virtual/range {v0 .. v9}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z

    return-void
.end method

.method public final forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z
    .locals 11

    if-nez p1, :cond_0

    const/16 v0, 0xb

    goto :goto_0

    :cond_0
    const/16 v0, 0xa

    :goto_0
    move v10, v0

    move-object v0, p0

    move-object v1, p1

    move v2, p2

    move v3, p3

    move v4, p4

    move/from16 v5, p5

    move/from16 v6, p6

    move/from16 v7, p7

    move/from16 v8, p8

    move-object/from16 v9, p9

    .line 5161
    invoke-virtual/range {v0 .. v10}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;I)Z

    move-result v0

    return v0
.end method

.method public final forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;I)Z
    .locals 22

    move-object/from16 v0, p0

    move-object/from16 v15, p1

    move/from16 v14, p5

    move/from16 v13, p8

    move-object/from16 v1, p9

    const/4 v2, -0x1

    if-ne v13, v2, :cond_0

    if-nez v15, :cond_0

    const-string v2, "ActivityManager"

    const-string v3, "Can\'t force stop all processes of all users, that is insane!"

    .line 5174
    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    :cond_0
    const/4 v12, 0x0

    if-gez p2, :cond_1

    if-eqz v15, :cond_1

    .line 5178
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal;

    move-result-object v2

    const-wide/32 v3, 0x10400000

    invoke-virtual {v2, v15, v3, v4, v12}, Landroid/content/pm/PackageManagerInternal;->getPackageUid(Ljava/lang/String;JI)I

    move-result v2

    invoke-static {v2}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v2

    move v11, v2

    goto :goto_0

    :cond_1
    move/from16 v11, p2

    :goto_0
    const/4 v10, 0x1

    if-eqz v14, :cond_4

    if-eqz v15, :cond_2

    const-string v2, "ActivityManager"

    .line 5185
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Force stopping "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v4, " appid="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, " user="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v13}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, ": "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1

    :cond_2
    const-string v2, "ActivityManager"

    .line 5188
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Force stopping u"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v13}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, ": "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 5191
    :goto_1
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mAppErrors:Lcom/android/server/am/AppErrors;

    if-nez v15, :cond_3

    move v3, v10

    goto :goto_2

    :cond_3
    move v3, v12

    :goto_2
    invoke-virtual {v2, v3, v11, v13}, Lcom/android/server/am/AppErrors;->resetProcessCrashTime(ZII)V

    .line 5194
    :cond_4
    iget-object v9, v0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v9

    .line 5198
    :try_start_0
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    move/from16 v8, p6

    invoke-virtual {v2, v15, v14, v8, v13}, Lcom/android/server/wm/ActivityTaskManagerInternal;->onForceStopPackage(Ljava/lang/String;ZZI)Z

    move-result v16

    const/16 v2, 0xa

    move/from16 v7, p10

    if-ne v7, v2, :cond_5

    const/16 v2, 0x15

    move/from16 v17, v2

    goto :goto_3

    :cond_5
    move/from16 v17, v12

    .line 5207
    :goto_3
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/16 v5, -0x2710

    const/16 v18, 0x0

    const/16 v19, 0x1

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    if-nez v15, :cond_6

    .line 5212
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "stop user "

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v13}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    :goto_4
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    goto :goto_5

    :cond_6
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "stop "

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    goto :goto_4

    :goto_5
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v4, " due to "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v20
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-object v1, v2

    move-object/from16 v2, p1

    move v3, v11

    move/from16 v4, p8

    move/from16 v6, p3

    move/from16 v7, v18

    move/from16 v8, p5

    move-object/from16 v18, v9

    move/from16 v9, p6

    move/from16 v10, v19

    move/from16 v21, v11

    move/from16 v11, p7

    move/from16 v12, p10

    move/from16 v13, v17

    move-object/from16 v14, v20

    .line 5207
    :try_start_1
    invoke-virtual/range {v1 .. v14}, Lcom/android/server/am/ProcessList;->killPackageProcessesLSP(Ljava/lang/String;IIIZZZZZZIILjava/lang/String;)Z

    move-result v1

    or-int v10, v16, v1

    .line 5214
    monitor-exit v18
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 5219
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-string v2, "PkgPredictorService"

    invoke-virtual {v1, v2}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/samsung/android/ipm/SecIpmManager;

    if-eqz v1, :cond_7

    .line 5221
    invoke-virtual {v1, v15}, Lcom/samsung/android/ipm/SecIpmManager;->recordRecentKillApp(Ljava/lang/String;)V

    .line 5226
    :cond_7
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    const/4 v3, 0x0

    const/4 v6, 0x1

    move-object/from16 v2, p1

    move/from16 v4, p8

    move/from16 v5, p6

    move/from16 v7, p5

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActiveServices;->bringDownDisabledPackageServicesLocked(Ljava/lang/String;Ljava/util/Set;IZZZ)Z

    move-result v1

    move/from16 v8, p5

    if-eqz v1, :cond_9

    if-nez v8, :cond_8

    const/4 v9, 0x1

    return v9

    :cond_8
    const/4 v9, 0x1

    move v10, v9

    goto :goto_6

    :cond_9
    const/4 v9, 0x1

    :goto_6
    if-nez v15, :cond_a

    .line 5236
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    move/from16 v11, p8

    invoke-virtual {v1, v11}, Landroid/util/SparseArray;->remove(I)V

    goto :goto_7

    :cond_a
    move/from16 v11, p8

    .line 5239
    :goto_7
    new-instance v12, Ljava/util/ArrayList;

    invoke-direct {v12}, Ljava/util/ArrayList;-><init>()V

    .line 5240
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    invoke-virtual {v1}, Lcom/android/server/am/ContentProviderHelper;->getProviderMap()Lcom/android/server/am/ProviderMap;

    move-result-object v1

    const/4 v3, 0x0

    move-object/from16 v2, p1

    move/from16 v4, p5

    move/from16 v5, p6

    move/from16 v6, p8

    move-object v7, v12

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ProviderMap;->collectPackageProvidersLocked(Ljava/lang/String;Ljava/util/Set;ZZILjava/util/ArrayList;)Z

    move-result v1

    if-eqz v1, :cond_c

    if-nez v8, :cond_b

    return v9

    :cond_b
    move v10, v9

    .line 5247
    :cond_c
    invoke-virtual {v12}, Ljava/util/ArrayList;->size()I

    move-result v1

    sub-int/2addr v1, v9

    :goto_8
    const/4 v2, 0x0

    if-ltz v1, :cond_d

    .line 5248
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    invoke-virtual {v12, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ContentProviderRecord;

    invoke-virtual {v3, v2, v4, v9}, Lcom/android/server/am/ContentProviderHelper;->removeDyingProviderLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ContentProviderRecord;Z)Z

    add-int/lit8 v1, v1, -0x1

    goto :goto_8

    .line 5252
    :cond_d
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mUgmInternal:Lcom/android/server/uri/UriGrantsManagerInternal;

    const/4 v3, 0x0

    invoke-interface {v1, v15, v11, v3, v3}, Lcom/android/server/uri/UriGrantsManagerInternal;->removeUriPermissionsForPackage(Ljava/lang/String;IZZ)V

    if-eqz v8, :cond_e

    const-string/jumbo v1, "update-overlay"

    .line 5255
    invoke-static/range {p10 .. p10}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    invoke-virtual {v1, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_e

    .line 5257
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v1, v1

    sub-int/2addr v1, v9

    :goto_9
    if-ltz v1, :cond_e

    .line 5258
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    aget-object v3, v3, v1

    invoke-virtual {v3, v15, v2, v11}, Lcom/android/server/am/BroadcastQueue;->cleanupDisabledPackageReceiversLocked(Ljava/lang/String;Ljava/util/Set;I)Z

    move-result v3

    or-int/2addr v10, v3

    add-int/lit8 v1, v1, -0x1

    goto :goto_9

    :cond_e
    if-eqz v15, :cond_f

    if-eqz p7, :cond_10

    .line 5264
    :cond_f
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mPendingIntentController:Lcom/android/server/am/PendingIntentController;

    move/from16 v2, v21

    invoke-virtual {v1, v15, v11, v2, v8}, Lcom/android/server/am/PendingIntentController;->removePendingIntentsForPackage(Ljava/lang/String;IIZ)Z

    move-result v1

    or-int/2addr v10, v1

    :cond_10
    if-eqz v8, :cond_12

    if-eqz p4, :cond_11

    if-eqz v15, :cond_11

    .line 5270
    invoke-static {}, Lcom/android/internal/policy/AttributeCache;->instance()Lcom/android/internal/policy/AttributeCache;

    move-result-object v1

    if-eqz v1, :cond_11

    .line 5272
    invoke-virtual {v1, v15}, Lcom/android/internal/policy/AttributeCache;->removePackage(Ljava/lang/String;)V

    .line 5275
    :cond_11
    iget-boolean v1, v0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    if-eqz v1, :cond_12

    .line 5276
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {v0, v9}, Lcom/android/server/wm/ActivityTaskManagerInternal;->resumeTopActivities(Z)V

    :cond_12
    return v10

    :catchall_0
    move-exception v0

    move-object/from16 v18, v9

    .line 5214
    :goto_a
    :try_start_2
    monitor-exit v18
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v0

    :catchall_1
    move-exception v0

    goto :goto_a
.end method

.method public getActiveUids()Ljava/util/Map;
    .locals 1

    .line 24505
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v0

    .line 24506
    :try_start_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object p0, p0, Lcom/android/server/am/ProcessList;->mActiveUids:Lcom/android/server/am/ActiveUids;

    invoke-virtual {p0}, Lcom/android/server/am/ActiveUids;->getAllUidRecords()Ljava/util/Map;

    move-result-object p0

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return-object p0

    :catchall_0
    move-exception p0

    .line 24507
    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p0
.end method

.method public getActivityInfoForUser(Landroid/content/pm/ActivityInfo;I)Landroid/content/pm/ActivityInfo;
    .locals 2

    if-eqz p1, :cond_1

    const/4 v0, 0x1

    if-ge p2, v0, :cond_0

    .line 20331
    iget-object v0, p1, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v0, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    const v1, 0x186a0

    if-ge v0, v1, :cond_0

    goto :goto_0

    .line 20336
    :cond_0
    new-instance v0, Landroid/content/pm/ActivityInfo;

    invoke-direct {v0, p1}, Landroid/content/pm/ActivityInfo;-><init>(Landroid/content/pm/ActivityInfo;)V

    .line 20337
    iget-object p1, v0, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->getAppInfoForUser(Landroid/content/pm/ApplicationInfo;I)Landroid/content/pm/ApplicationInfo;

    move-result-object p0

    iput-object p0, v0, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    return-object v0

    :cond_1
    :goto_0
    return-object p1
.end method

.method public getAllRestrictedList()Ljava/util/List;
    .locals 0

    .line 24014
    invoke-static {}, Lcom/android/server/am/MARsPolicyManager;->getInstance()Lcom/android/server/am/MARsPolicyManager;

    move-result-object p0

    invoke-virtual {p0}, Lcom/android/server/am/MARsPolicyManager;->getAllRestrictedList()Ljava/util/List;

    move-result-object p0

    return-object p0
.end method

.method public getAllRootTaskInfos()Ljava/util/List;
    .locals 0

    .line 8146
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {p0}, Lcom/android/server/wm/ActivityTaskManagerService;->getAllRootTaskInfos()Ljava/util/List;

    move-result-object p0

    return-object p0
.end method

.method public getAppId(Ljava/lang/String;)I
    .locals 1

    if-eqz p1, :cond_0

    .line 12824
    :try_start_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {p0}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object p0

    const/4 v0, 0x0

    invoke-virtual {p0, p1, v0}, Landroid/content/pm/PackageManager;->getApplicationInfo(Ljava/lang/String;I)Landroid/content/pm/ApplicationInfo;

    move-result-object p0

    .line 12826
    iget p0, p0, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {p0}, Landroid/os/UserHandle;->getAppId(I)I

    move-result p0
    :try_end_0
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_0 .. :try_end_0} :catch_0

    return p0

    :catch_0
    move-exception p0

    .line 12828
    invoke-virtual {p0}, Landroid/content/pm/PackageManager$NameNotFoundException;->printStackTrace()V

    :cond_0
    const/4 p0, -0x1

    return p0
.end method

.method public getAppInfoForUser(Landroid/content/pm/ApplicationInfo;I)Landroid/content/pm/ApplicationInfo;
    .locals 0

    if-nez p1, :cond_0

    const/4 p0, 0x0

    return-object p0

    .line 20321
    :cond_0
    new-instance p0, Landroid/content/pm/ApplicationInfo;

    invoke-direct {p0, p1}, Landroid/content/pm/ApplicationInfo;-><init>(Landroid/content/pm/ApplicationInfo;)V

    .line 20322
    invoke-virtual {p0, p2}, Landroid/content/pm/ApplicationInfo;->initForUser(I)V

    return-object p0
.end method

.method public getAppLaunchFlag()Z
    .locals 0

    .line 1352
    iget-boolean p0, p0, Lcom/android/server/am/ActivityManagerService;->isNowAppLaunching:Z

    return p0
.end method

.method public getAppOpsManager()Landroid/app/AppOpsManager;
    .locals 2

    .line 2722
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsManager:Landroid/app/AppOpsManager;

    if-nez v0, :cond_0

    .line 2723
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-class v1, Landroid/app/AppOpsManager;

    invoke-virtual {v0, v1}, Landroid/content/Context;->getSystemService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/app/AppOpsManager;

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsManager:Landroid/app/AppOpsManager;

    .line 2725
    :cond_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsManager:Landroid/app/AppOpsManager;

    return-object p0
.end method

.method public getAppOpsService()Lcom/android/internal/app/IAppOpsService;
    .locals 0

    .line 2432
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    return-object p0
.end method

.method public getAppStartModeLOSP(ILjava/lang/String;IIZZZ)I
    .locals 2

    .line 7618
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mInternal:Landroid/app/ActivityManagerInternal;

    invoke-virtual {v0, p1}, Landroid/app/ActivityManagerInternal;->isPendingTopUid(I)Z

    move-result v0

    const/4 v1, 0x0

    if-eqz v0, :cond_0

    return v1

    .line 7621
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ProcessList;->getUidRecordLOSP(I)Lcom/android/server/am/UidRecord;

    move-result-object v0

    if-eqz v0, :cond_2

    if-nez p5, :cond_2

    if-nez p7, :cond_2

    .line 7625
    invoke-virtual {v0}, Lcom/android/server/am/UidRecord;->isIdle()Z

    move-result p7

    if-eqz p7, :cond_1

    goto :goto_0

    :cond_1
    return v1

    :cond_2
    :goto_0
    if-nez v0, :cond_3

    .line 7628
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal;

    move-result-object p7

    .line 7629
    invoke-static {p1}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v0

    .line 7628
    invoke-virtual {p7, v0, p2}, Landroid/content/pm/PackageManagerInternal;->isPackageEphemeral(ILjava/lang/String;)Z

    move-result p7

    goto :goto_1

    .line 7631
    :cond_3
    invoke-virtual {v0}, Lcom/android/server/am/UidRecord;->isEphemeral()Z

    move-result p7

    :goto_1
    if-eqz p7, :cond_4

    const/4 p0, 0x3

    return p0

    :cond_4
    if-eqz p6, :cond_5

    return v1

    :cond_5
    if-eqz p5, :cond_6

    .line 7646
    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/am/ActivityManagerService;->appRestrictedInBackgroundLOSP(ILjava/lang/String;I)I

    move-result p1

    goto :goto_2

    .line 7647
    :cond_6
    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/am/ActivityManagerService;->appServicesRestrictedInBackgroundLOSP(ILjava/lang/String;I)I

    move-result p1

    :goto_2
    const/4 p2, 0x1

    if-ne p1, p2, :cond_7

    if-ltz p4, :cond_7

    .line 7661
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter p2

    .line 7662
    :try_start_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {p0, p4}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object p0

    .line 7663
    monitor-exit p2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-eqz p0, :cond_7

    .line 7664
    iget-object p0, p0, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    .line 7665
    invoke-virtual {p0}, Lcom/android/server/am/ProcessStateRecord;->getCurProcState()I

    move-result p0

    .line 7664
    invoke-static {p0}, Landroid/app/ActivityManager;->isProcStateBackground(I)Z

    move-result p0

    if-nez p0, :cond_7

    return v1

    :catchall_0
    move-exception p0

    .line 7663
    :try_start_1
    monitor-exit p2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw p0

    :cond_7
    return p1
.end method

.method public final getApplicationPolicy()Lcom/samsung/android/knox/application/IApplicationPolicy;
    .locals 1

    .line 23609
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mApplicationPolicy:Lcom/samsung/android/knox/application/IApplicationPolicy;

    if-nez v0, :cond_0

    const-string v0, "application_policy"

    .line 23611
    invoke-static {v0}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v0

    .line 23610
    invoke-static {v0}, Lcom/samsung/android/knox/application/IApplicationPolicy$Stub;->asInterface(Landroid/os/IBinder;)Lcom/samsung/android/knox/application/IApplicationPolicy;

    move-result-object v0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mApplicationPolicy:Lcom/samsung/android/knox/application/IApplicationPolicy;

    .line 23613
    :cond_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mApplicationPolicy:Lcom/samsung/android/knox/application/IApplicationPolicy;

    return-object p0
.end method

.method public getAutoRemoveRecents(I)Z
    .locals 3

    .line 24310
    sget-boolean v0, Lcom/samsung/android/rune/CoreRune;->FW_DEDICATED_MEMORY:Z

    if-nez v0, :cond_0

    const/4 p0, 0x0

    return p0

    :cond_0
    const-string v0, "getAutoRemoveRecents"

    .line 24313
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkLongLivePermissions(Ljava/lang/String;)V

    .line 24314
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 24316
    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 24317
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mExt:Lcom/android/server/am/ActivityManagerServiceExt;

    invoke-virtual {v2, p1}, Lcom/android/server/am/ActivityManagerServiceExt;->getAutoRemoveRecents(I)Z

    move-result p1

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 24320
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return p1

    :catchall_0
    move-exception p1

    .line 24318
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    :catchall_1
    move-exception p0

    .line 24320
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 24321
    throw p0
.end method

.method public final getBackgroundLaunchBroadcasts()Landroid/util/ArraySet;
    .locals 1

    .line 3008
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBackgroundLaunchBroadcasts:Landroid/util/ArraySet;

    if-nez v0, :cond_0

    .line 3009
    invoke-static {}, Lcom/android/server/SystemConfig;->getInstance()Lcom/android/server/SystemConfig;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/SystemConfig;->getAllowImplicitBroadcasts()Landroid/util/ArraySet;

    move-result-object v0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBackgroundLaunchBroadcasts:Landroid/util/ArraySet;

    .line 3011
    :cond_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mBackgroundLaunchBroadcasts:Landroid/util/ArraySet;

    return-object p0
.end method

.method public getBackgroundRestrictionExemptionReason(I)I
    .locals 2

    const-string v0, "android.permission.DEVICE_POWER"

    const-string v1, "getBackgroundRestrictionExemptionReason()"

    .line 22663
    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 22665
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mAppRestrictionController:Lcom/android/server/am/AppRestrictionController;

    invoke-virtual {p0, p1}, Lcom/android/server/am/AppRestrictionController;->getBackgroundRestrictionExemptionReason(I)I

    move-result p0

    return p0
.end method

.method public getBackgroundRestrictionLevel(Ljava/lang/String;I)I
    .locals 2

    .line 22696
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    const/16 v1, 0x3e8

    if-eq v0, v1, :cond_1

    if-eqz v0, :cond_1

    const/16 v1, 0x7d0

    if-ne v0, v1, :cond_0

    goto :goto_0

    .line 22698
    :cond_0
    new-instance p0, Ljava/lang/SecurityException;

    const-string p1, "Don\'t have permission to query app background restriction level"

    invoke-direct {p0, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 22701
    :cond_1
    :goto_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 22703
    :try_start_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mInternal:Landroid/app/ActivityManagerInternal;

    invoke-virtual {p0, p1, p2}, Landroid/app/ActivityManagerInternal;->getRestrictionLevel(Ljava/lang/String;I)I

    move-result p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 22705
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return p0

    :catchall_0
    move-exception p0

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 22706
    throw p0
.end method

.method public final getBackgroundStartPrivileges(I)Landroid/app/BackgroundStartPrivileges;
    .locals 3

    .line 7741
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v0

    .line 7742
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v1, p1}, Lcom/android/server/am/ProcessList;->getUidRecordLOSP(I)Lcom/android/server/am/UidRecord;

    move-result-object v1

    if-nez v1, :cond_0

    .line 7744
    sget-object p0, Landroid/app/BackgroundStartPrivileges;->NONE:Landroid/app/BackgroundStartPrivileges;

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return-object p0

    .line 7746
    :cond_0
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mGetBackgroundStartPrivilegesFunctor:Lcom/android/server/am/ActivityManagerService$GetBackgroundStartPrivilegesFunctor;

    invoke-virtual {v2, p1}, Lcom/android/server/am/ActivityManagerService$GetBackgroundStartPrivilegesFunctor;->prepare(I)V

    .line 7747
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mGetBackgroundStartPrivilegesFunctor:Lcom/android/server/am/ActivityManagerService$GetBackgroundStartPrivilegesFunctor;

    invoke-virtual {v1, p1}, Lcom/android/server/am/UidRecord;->forEachProcess(Ljava/util/function/Consumer;)V

    .line 7748
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mGetBackgroundStartPrivilegesFunctor:Lcom/android/server/am/ActivityManagerService$GetBackgroundStartPrivilegesFunctor;

    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService$GetBackgroundStartPrivilegesFunctor;->getResult()Landroid/app/BackgroundStartPrivileges;

    move-result-object p0

    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return-object p0

    :catchall_0
    move-exception p0

    .line 7749
    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p0
.end method

.method public getBinderStatsServiceInternal()Lcom/android/server/BinderCallsStatsService$Internal;
    .locals 1

    .line 8579
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBinderStatsService:Lcom/android/server/BinderCallsStatsService$Internal;

    if-nez v0, :cond_0

    .line 8580
    const-class v0, Lcom/android/server/BinderCallsStatsService$Internal;

    invoke-static {v0}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/BinderCallsStatsService$Internal;

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBinderStatsService:Lcom/android/server/BinderCallsStatsService$Internal;

    .line 8582
    :cond_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mBinderStatsService:Lcom/android/server/BinderCallsStatsService$Internal;

    return-object p0
.end method

.method public getBugreportWhitelistedPackages()Ljava/util/List;
    .locals 2

    const-string v0, "android.permission.MANAGE_DEBUGGING"

    const-string v1, "getBugreportWhitelistedPackages"

    .line 9541
    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 9543
    new-instance p0, Ljava/util/ArrayList;

    invoke-static {}, Lcom/android/server/SystemConfig;->getInstance()Lcom/android/server/SystemConfig;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/SystemConfig;->getBugreportWhitelistedPackages()Landroid/util/ArraySet;

    move-result-object v0

    invoke-direct {p0, v0}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    return-object p0
.end method

.method public getCfmsInternalLocked()Landroid/os/CustomFrequencyManagerInternal;
    .locals 1

    .line 23879
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCfmsManagerInt:Landroid/os/CustomFrequencyManagerInternal;

    if-nez v0, :cond_0

    .line 23880
    const-class v0, Landroid/os/CustomFrequencyManagerInternal;

    invoke-static {v0}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/os/CustomFrequencyManagerInternal;

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCfmsManagerInt:Landroid/os/CustomFrequencyManagerInternal;

    .line 23882
    :cond_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mCfmsManagerInt:Landroid/os/CustomFrequencyManagerInternal;

    return-object p0
.end method

.method public final getCommonServicesLocked(Z)Landroid/util/ArrayMap;
    .locals 3

    const-string/jumbo v0, "permissionmgr"

    const-string/jumbo v1, "package"

    if-eqz p1, :cond_1

    .line 3269
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mIsolatedAppBindArgs:Landroid/util/ArrayMap;

    if-nez p1, :cond_0

    .line 3270
    new-instance p1, Landroid/util/ArrayMap;

    const/4 v2, 0x1

    invoke-direct {p1, v2}, Landroid/util/ArrayMap;-><init>(I)V

    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mIsolatedAppBindArgs:Landroid/util/ArrayMap;

    .line 3271
    invoke-static {p1, v1}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3272
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mIsolatedAppBindArgs:Landroid/util/ArrayMap;

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3274
    :cond_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mIsolatedAppBindArgs:Landroid/util/ArrayMap;

    return-object p0

    .line 3277
    :cond_1
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    if-nez p1, :cond_2

    .line 3278
    new-instance p1, Landroid/util/ArrayMap;

    invoke-direct {p1}, Landroid/util/ArrayMap;-><init>()V

    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    .line 3283
    invoke-static {p1, v1}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3284
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3285
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string/jumbo v0, "window"

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3286
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string v0, "alarm"

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3287
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string v0, "display"

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3288
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string/jumbo v0, "network_management"

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3289
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string v0, "connectivity"

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3290
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string v0, "accessibility"

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3291
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string v0, "input_method"

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3292
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string v0, "input"

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3293
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string v0, "graphicsstats"

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3294
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string v0, "appops"

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3295
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string v0, "content"

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3296
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string/jumbo v0, "jobscheduler"

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3297
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string/jumbo v0, "notification"

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3298
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string/jumbo v0, "vibrator"

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3299
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string v0, "account"

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3300
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string/jumbo v0, "power"

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3301
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string/jumbo v0, "user"

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3302
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string/jumbo v0, "mount"

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3303
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string/jumbo v0, "platform_compat"

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3306
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string v0, "activity_task"

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3307
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string v0, "autofill"

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3308
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string/jumbo v0, "phone"

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3309
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string v0, "clipboard"

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3310
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string/jumbo v0, "semclipboard"

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3311
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string v0, "audio"

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3312
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string/jumbo v0, "webviewupdate"

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3313
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string/jumbo v0, "uimode"

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3314
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string v0, "batterystats"

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3315
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string v0, "batteryproperties"

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3316
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    const-string/jumbo v0, "netpolicy"

    invoke-static {p1, v0}, Lcom/android/server/am/ActivityManagerService;->addServiceToMap(Landroid/util/ArrayMap;Ljava/lang/String;)V

    .line 3320
    :cond_2
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Landroid/util/ArrayMap;

    return-object p0
.end method

.method public getConfiguration()Landroid/content/res/Configuration;
    .locals 0

    .line 18898
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {p0}, Lcom/android/server/wm/ActivityTaskManagerService;->getConfiguration()Landroid/content/res/Configuration;

    move-result-object p0

    return-object p0
.end method

.method public final getContentProvider(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;IZ)Landroid/app/ContentProviderHolder;
    .locals 9

    const-string v0, "getContentProvider: "

    const-wide/16 v1, 0x40

    .line 8680
    invoke-static {v1, v2, v0, p3}, Lcom/android/server/am/ActivityManagerService;->traceBegin(JLjava/lang/String;Ljava/lang/String;)V

    .line 8683
    :try_start_0
    invoke-static {p3}, Lcom/android/server/am/MARsPolicyManager;->isSpecialProviderName(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 8685
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 8686
    :try_start_1
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLOSP(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    if-eqz v0, :cond_0

    .line 8687
    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    if-eqz v3, :cond_0

    .line 8688
    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v0, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    .line 8689
    :goto_0
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 8690
    invoke-static {v0, p3, p4}, Lcom/android/server/am/MARsPolicyManager;->onSpecialProviderActions(Ljava/lang/String;Ljava/lang/String;I)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    goto :goto_1

    :catchall_0
    move-exception p1

    .line 8689
    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1

    .line 8693
    :cond_1
    :goto_1
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    move-object v4, p1

    move-object v5, p2

    move-object v6, p3

    move v7, p4

    move v8, p5

    invoke-virtual/range {v3 .. v8}, Lcom/android/server/am/ContentProviderHelper;->getContentProvider(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;IZ)Landroid/app/ContentProviderHolder;

    move-result-object p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 8695
    invoke-static {v1, v2}, Landroid/os/Trace;->traceEnd(J)V

    return-object p0

    :catchall_1
    move-exception p0

    invoke-static {v1, v2}, Landroid/os/Trace;->traceEnd(J)V

    .line 8696
    throw p0
.end method

.method public getContentProviderExternal(Ljava/lang/String;ILandroid/os/IBinder;Ljava/lang/String;)Landroid/app/ContentProviderHolder;
    .locals 3

    const-string v0, "getContentProviderExternal: "

    const-wide/16 v1, 0x40

    .line 8702
    invoke-static {v1, v2, v0, p1}, Lcom/android/server/am/ActivityManagerService;->traceBegin(JLjava/lang/String;Ljava/lang/String;)V

    .line 8704
    :try_start_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    invoke-virtual {p0, p1, p2, p3, p4}, Lcom/android/server/am/ContentProviderHelper;->getContentProviderExternal(Ljava/lang/String;ILandroid/os/IBinder;Ljava/lang/String;)Landroid/app/ContentProviderHolder;

    move-result-object p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 8706
    invoke-static {v1, v2}, Landroid/os/Trace;->traceEnd(J)V

    return-object p0

    :catchall_0
    move-exception p0

    invoke-static {v1, v2}, Landroid/os/Trace;->traceEnd(J)V

    .line 8707
    throw p0
.end method

.method public getContentProviderHelper()Lcom/android/server/am/ContentProviderHelper;
    .locals 0

    .line 8673
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    return-object p0
.end method

.method public getCurrentUser()Landroid/content/pm/UserInfo;
    .locals 0

    .line 20267
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {p0}, Lcom/android/server/am/UserController;->getCurrentUser()Landroid/content/pm/UserInfo;

    move-result-object p0

    return-object p0
.end method

.method public getCurrentUserId()I
    .locals 0

    .line 20272
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {p0}, Lcom/android/server/am/UserController;->getCurrentUserIdChecked()I

    move-result p0

    return p0
.end method

.method public getDelegatedShellPermissions()Ljava/util/List;
    .locals 2

    .line 23317
    invoke-static {}, Landroid/os/UserHandle;->getCallingAppId()I

    move-result v0

    const/16 v1, 0x7d0

    if-eq v0, v1, :cond_1

    .line 23318
    invoke-static {}, Landroid/os/UserHandle;->getCallingAppId()I

    move-result v0

    if-nez v0, :cond_0

    goto :goto_0

    .line 23319
    :cond_0
    new-instance p0, Ljava/lang/SecurityException;

    const-string v0, "Only the shell can get delegated permissions"

    invoke-direct {p0, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 23321
    :cond_1
    :goto_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v0

    .line 23322
    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getPermissionManagerInternal()Lcom/android/server/pm/permission/PermissionManagerServiceInternal;

    move-result-object p0

    invoke-interface {p0}, Lcom/android/server/pm/permission/PermissionManagerServiceInternal;->getDelegatedShellPermissions()Ljava/util/List;

    move-result-object p0

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return-object p0

    :catchall_0
    move-exception p0

    .line 23323
    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p0
.end method

.method public getDisplayIdsForStartingVisibleBackgroundUsers()[I
    .locals 2

    const-string v0, "android.permission.MANAGE_USERS"

    const-string v1, "android.permission.INTERACT_ACROSS_USERS"

    .line 20167
    filled-new-array {v0, v1}, [Ljava/lang/String;

    move-result-object v0

    const-string v1, "getDisplayIdsForStartingVisibleBackgroundUsers()"

    invoke-virtual {p0, v1, v0}, Lcom/android/server/am/ActivityManagerService;->enforceCallingHasAtLeastOnePermission(Ljava/lang/String;[Ljava/lang/String;)V

    .line 20169
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService$Injector;->getDisplayIdsForStartingVisibleBackgroundUsers()[I

    move-result-object p0

    return-object p0
.end method

.method public getDumpMemoryInfo()Ljava/util/List;
    .locals 1

    const/4 v0, 0x1

    .line 8439
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->getDumpMemoryInfo(Z)Ljava/util/List;

    move-result-object p0

    return-object p0
.end method

.method public getDumpMemoryInfo(Z)Ljava/util/List;
    .locals 19

    move-object/from16 v1, p0

    .line 8443
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    const-string v2, "android.permission.INTERACT_ACROSS_USERS_FULL"

    .line 8444
    invoke-static {v2, v0}, Landroid/app/ActivityManager;->checkUidPermission(Ljava/lang/String;I)I

    move-result v2

    const/4 v3, 0x0

    if-eqz v2, :cond_0

    const-string v1, "ActivityManager"

    .line 8446
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "getDumpMemoryInfo() - permission is not granted. callingUid: "

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v0}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-object v3

    .line 8451
    :cond_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 8452
    :try_start_0
    new-instance v0, Ljava/util/ArrayList;

    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v2}, Lcom/android/server/am/ProcessList;->getLruProcessesLOSP()Ljava/util/ArrayList;

    move-result-object v2

    invoke-direct {v0, v2}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    .line 8453
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 8455
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    .line 8456
    new-instance v4, Landroid/util/SparseArray;

    invoke-direct {v4}, Landroid/util/SparseArray;-><init>()V

    .line 8464
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v5

    const/4 v6, 0x1

    sub-int/2addr v5, v6

    const/4 v8, 0x0

    :goto_0
    const/4 v9, 0x2

    const/4 v10, 0x3

    if-ltz v5, :cond_4

    .line 8465
    invoke-virtual {v0, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Lcom/android/server/am/ProcessRecord;

    .line 8471
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 8472
    :try_start_1
    invoke-virtual {v11}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v12

    .line 8473
    invoke-virtual {v11}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v13

    .line 8474
    iget v14, v11, Lcom/android/server/am/ProcessRecord;->uid:I

    .line 8475
    iget-object v15, v11, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    .line 8476
    iget-object v11, v11, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {v11}, Lcom/android/server/am/ProcessStateRecord;->getSetAdjWithServices()I

    move-result v11

    .line 8477
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    if-eqz v12, :cond_3

    new-array v10, v10, [J

    .line 8482
    invoke-static {v13, v10, v3}, Landroid/os/Debug;->getPss(I[J[J)J

    move-result-wide v16

    const/4 v12, 0x0

    .line 8484
    :goto_1
    sget-object v7, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_ADJ:[I

    array-length v3, v7

    if-ge v12, v3, :cond_3

    .line 8485
    array-length v3, v7

    sub-int/2addr v3, v6

    if-eq v12, v3, :cond_2

    aget v3, v7, v12

    if-lt v11, v3, :cond_1

    add-int/lit8 v3, v12, 0x1

    aget v3, v7, v3

    if-ge v11, v3, :cond_1

    goto :goto_2

    :cond_1
    add-int/lit8 v12, v12, 0x1

    const/4 v3, 0x0

    goto :goto_1

    .line 8488
    :cond_2
    :goto_2
    new-instance v3, Lcom/android/server/am/ActivityManagerService$MemDumpInfo;

    invoke-direct {v3, v1}, Lcom/android/server/am/ActivityManagerService$MemDumpInfo;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    move-object v7, v0

    aget-wide v0, v10, v6

    move-object/from16 v18, v7

    sub-long v6, v16, v0

    .line 8489
    iput-wide v6, v3, Lcom/android/server/am/ActivityManagerService$MemDumpInfo;->pss:J

    .line 8490
    iput-wide v0, v3, Lcom/android/server/am/ActivityManagerService$MemDumpInfo;->swap_out:J

    aget-wide v0, v10, v9

    .line 8491
    iput-wide v0, v3, Lcom/android/server/am/ActivityManagerService$MemDumpInfo;->rss:J

    .line 8492
    sget-object v0, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_COMPACT_LABEL:[Ljava/lang/String;

    aget-object v0, v0, v12

    iput-object v0, v3, Lcom/android/server/am/ActivityManagerService$MemDumpInfo;->label:Ljava/lang/String;

    .line 8493
    iput v14, v3, Lcom/android/server/am/ActivityManagerService$MemDumpInfo;->uid:I

    .line 8494
    iput-object v15, v3, Lcom/android/server/am/ActivityManagerService$MemDumpInfo;->procName:Ljava/lang/String;

    .line 8495
    invoke-virtual {v2, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 8496
    invoke-virtual {v4, v13, v3}, Landroid/util/SparseArray;->append(ILjava/lang/Object;)V

    add-int/lit8 v8, v8, 0x1

    goto :goto_3

    :cond_3
    move-object/from16 v18, v0

    :goto_3
    add-int/lit8 v5, v5, -0x1

    move-object/from16 v0, v18

    const/4 v3, 0x0

    const/4 v6, 0x1

    move-object/from16 v1, p0

    goto :goto_0

    :catchall_0
    move-exception v0

    move-object/from16 v1, p0

    .line 8477
    :goto_4
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :catchall_1
    move-exception v0

    goto :goto_4

    :cond_4
    move-object/from16 v18, v0

    .line 8503
    invoke-virtual/range {v18 .. v18}, Ljava/util/ArrayList;->size()I

    move-result v0

    const/4 v3, 0x1

    if-le v0, v3, :cond_9

    .line 8505
    :try_start_3
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V

    .line 8506
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    .line 8509
    iget-object v3, v1, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    new-instance v5, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda39;

    invoke-direct {v5, v0}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda39;-><init>(Ljava/util/ArrayList;)V

    invoke-virtual {v3, v5}, Lcom/android/server/am/AppProfiler;->forAllCpuStats(Ljava/util/function/Consumer;)V

    .line 8513
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v3
    :try_end_3
    .catch Ljava/lang/Exception; {:try_start_3 .. :try_end_3} :catch_1

    const/4 v5, 0x1

    sub-int/2addr v3, v5

    const/4 v5, 0x0

    :goto_5
    if-ltz v3, :cond_8

    .line 8514
    :try_start_4
    invoke-virtual {v0, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/internal/os/ProcessCpuTracker$Stats;

    .line 8515
    iget-wide v12, v6, Lcom/android/internal/os/ProcessCpuTracker$Stats;->vsize:J

    const-wide/16 v14, 0x0

    cmp-long v7, v12, v14

    if-lez v7, :cond_6

    iget v7, v6, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    invoke-virtual {v4, v7}, Landroid/util/SparseArray;->indexOfKey(I)I

    move-result v7

    if-gez v7, :cond_6

    new-array v7, v10, [J

    if-nez v5, :cond_5

    .line 8518
    iget-object v12, v6, Lcom/android/internal/os/ProcessCpuTracker$Stats;->name:Ljava/lang/String;

    const-string v13, "dex2oat"

    invoke-virtual {v12, v13}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v12

    if-eqz v12, :cond_5

    const/4 v5, 0x1

    .line 8521
    :cond_5
    iget v12, v6, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    const/4 v13, 0x0

    invoke-static {v12, v7, v13}, Landroid/os/Debug;->getPss(I[J[J)J

    move-result-wide v14

    .line 8522
    new-instance v12, Lcom/android/server/am/ActivityManagerService$MemDumpInfo;

    invoke-direct {v12, v1}, Lcom/android/server/am/ActivityManagerService$MemDumpInfo;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    const/4 v11, 0x1

    aget-wide v9, v7, v11

    sub-long/2addr v14, v9

    .line 8523
    iput-wide v14, v12, Lcom/android/server/am/ActivityManagerService$MemDumpInfo;->pss:J

    .line 8524
    iput-wide v9, v12, Lcom/android/server/am/ActivityManagerService$MemDumpInfo;->swap_out:J

    const/4 v9, 0x2

    aget-wide v14, v7, v9

    .line 8525
    iput-wide v14, v12, Lcom/android/server/am/ActivityManagerService$MemDumpInfo;->rss:J

    .line 8526
    sget-object v7, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_COMPACT_LABEL:[Ljava/lang/String;

    const/4 v10, 0x0

    aget-object v7, v7, v10

    iput-object v7, v12, Lcom/android/server/am/ActivityManagerService$MemDumpInfo;->label:Ljava/lang/String;

    .line 8527
    iget-object v7, v6, Lcom/android/internal/os/ProcessCpuTracker$Stats;->name:Ljava/lang/String;

    iput-object v7, v12, Lcom/android/server/am/ActivityManagerService$MemDumpInfo;->procName:Ljava/lang/String;

    .line 8528
    iget v7, v6, Lcom/android/internal/os/ProcessCpuTracker$Stats;->rel_utime:I

    iget v14, v6, Lcom/android/internal/os/ProcessCpuTracker$Stats;->rel_stime:I

    add-int/2addr v7, v14

    int-to-long v14, v7

    iput-wide v14, v12, Lcom/android/server/am/ActivityManagerService$MemDumpInfo;->cpuTime:J

    .line 8529
    invoke-virtual {v2, v12}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 8530
    iget v6, v6, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    invoke-virtual {v4, v6, v12}, Landroid/util/SparseArray;->append(ILjava/lang/Object;)V

    add-int/lit8 v8, v8, 0x1

    goto :goto_6

    :cond_6
    const/4 v10, 0x0

    const/4 v13, 0x0

    .line 8532
    iget v7, v6, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    invoke-virtual {v4, v7}, Landroid/util/SparseArray;->indexOfKey(I)I

    move-result v7

    if-ltz v7, :cond_7

    .line 8533
    iget v7, v6, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    invoke-virtual {v4, v7}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/am/ActivityManagerService$MemDumpInfo;

    .line 8534
    iget v12, v6, Lcom/android/internal/os/ProcessCpuTracker$Stats;->rel_utime:I

    iget v6, v6, Lcom/android/internal/os/ProcessCpuTracker$Stats;->rel_stime:I

    add-int/2addr v12, v6

    int-to-long v14, v12

    iput-wide v14, v7, Lcom/android/server/am/ActivityManagerService$MemDumpInfo;->cpuTime:J
    :try_end_4
    .catch Ljava/lang/Exception; {:try_start_4 .. :try_end_4} :catch_0

    :cond_7
    :goto_6
    add-int/lit8 v3, v3, -0x1

    const/4 v10, 0x3

    goto :goto_5

    :catch_0
    :cond_8
    move v7, v5

    goto :goto_7

    :catch_1
    :cond_9
    const/4 v10, 0x0

    move v7, v10

    .line 8542
    :goto_7
    new-instance v0, Lcom/android/server/am/ActivityManagerService$MemDumpInfo;

    invoke-direct {v0, v1}, Lcom/android/server/am/ActivityManagerService$MemDumpInfo;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    .line 8543
    iget-object v3, v1, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    invoke-virtual {v3}, Lcom/android/internal/os/ProcessCpuTracker;->getLastSystemTime()I

    move-result v3

    iget-object v4, v1, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    invoke-virtual {v4}, Lcom/android/internal/os/ProcessCpuTracker;->getLastUserTime()I

    move-result v4

    add-int/2addr v3, v4

    int-to-long v3, v3

    iput-wide v3, v0, Lcom/android/server/am/ActivityManagerService$MemDumpInfo;->cpuTime:J

    const/4 v3, 0x1

    .line 8544
    iput-boolean v3, v0, Lcom/android/server/am/ActivityManagerService$MemDumpInfo;->hasExtra:Z

    .line 8545
    iput v7, v0, Lcom/android/server/am/ActivityManagerService$MemDumpInfo;->hasDexRunning:I

    .line 8546
    iput v8, v0, Lcom/android/server/am/ActivityManagerService$MemDumpInfo;->procNum:I

    .line 8547
    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    iget v3, v1, Lcom/android/server/am/OomAdjuster;->mNumCachedProcessCount:I

    int-to-long v3, v3

    iput-wide v3, v0, Lcom/android/server/am/ActivityManagerService$MemDumpInfo;->cachedProcessCount:J

    .line 8548
    iget v3, v1, Lcom/android/server/am/OomAdjuster;->mNumEmptyProcessCount:I

    int-to-long v3, v3

    iput-wide v3, v0, Lcom/android/server/am/ActivityManagerService$MemDumpInfo;->emptyProcessCount:J

    .line 8549
    iget v3, v1, Lcom/android/server/am/OomAdjuster;->mNumCachedSlotCount:I

    int-to-long v3, v3

    iput-wide v3, v0, Lcom/android/server/am/ActivityManagerService$MemDumpInfo;->cachedSlotCount:J

    .line 8550
    iget v1, v1, Lcom/android/server/am/OomAdjuster;->mNumEmptySlotCount:I

    int-to-long v3, v1

    iput-wide v3, v0, Lcom/android/server/am/ActivityManagerService$MemDumpInfo;->emptySlotCount:J

    .line 8551
    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    return-object v2

    :catchall_2
    move-exception v0

    .line 8453
    :try_start_5
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_2

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public getFocusedRootTaskInfo()Landroid/app/ActivityTaskManager$RootTaskInfo;
    .locals 0

    .line 18893
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {p0}, Lcom/android/server/wm/ActivityTaskManagerService;->getFocusedRootTaskInfo()Landroid/app/ActivityTaskManager$RootTaskInfo;

    move-result-object p0

    return-object p0
.end method

.method public getForegroundServiceType(Landroid/content/ComponentName;Landroid/os/IBinder;)I
    .locals 1

    .line 15983
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 15984
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/am/ActiveServices;->getForegroundServiceTypeLocked(Landroid/content/ComponentName;Landroid/os/IBinder;)I

    move-result p1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return p1

    :catchall_0
    move-exception p1

    .line 15985
    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public getGlobalConfiguration()Landroid/content/res/Configuration;
    .locals 2

    .line 23777
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 23779
    :try_start_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {p0}, Lcom/android/server/wm/ActivityTaskManagerService;->getConfiguration()Landroid/content/res/Configuration;

    move-result-object p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 23781
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return-object p0

    :catchall_0
    move-exception p0

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 23782
    throw p0
.end method

.method public getHistoricalProcessExitReasons(Ljava/lang/String;III)Landroid/content/pm/ParceledListSlice;
    .locals 16

    move-object/from16 v0, p0

    move/from16 v6, p2

    move/from16 v7, p3

    move/from16 v1, p4

    const-string v2, "getHistoricalProcessExitReasons"

    .line 11826
    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    const/4 v3, -0x1

    if-eq v1, v3, :cond_2

    const/4 v4, -0x2

    if-eq v1, v4, :cond_2

    .line 11833
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v9

    .line 11834
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v5

    .line 11835
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    .line 11836
    iget-object v8, v0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    const/4 v12, 0x1

    const/4 v13, 0x0

    const-string v14, "getHistoricalProcessExitReasons"

    const/4 v15, 0x0

    move v10, v5

    move/from16 v11, p4

    invoke-virtual/range {v8 .. v15}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    .line 11839
    const-class v4, Lcom/android/server/os/NativeTombstoneManager;

    invoke-static {v4}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v4

    move-object v8, v4

    check-cast v8, Lcom/android/server/os/NativeTombstoneManager;

    .line 11842
    new-instance v9, Ljava/util/ArrayList;

    invoke-direct {v9}, Ljava/util/ArrayList;-><init>()V

    .line 11843
    invoke-static/range {p1 .. p1}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v4

    if-nez v4, :cond_0

    move-object/from16 v4, p1

    .line 11844
    invoke-virtual {v0, v4, v1, v5, v2}, Lcom/android/server/am/ActivityManagerService;->enforceDumpPermissionForPackage(Ljava/lang/String;IILjava/lang/String;)I

    move-result v10

    if-eq v10, v3, :cond_1

    .line 11847
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v0, v0, Lcom/android/server/am/ProcessList;->mAppExitInfoTracker:Lcom/android/server/am/AppExitInfoTracker;

    move-object/from16 v1, p1

    move v2, v10

    move/from16 v3, p2

    move/from16 v4, p3

    move-object v5, v9

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/AppExitInfoTracker;->getExitInfo(Ljava/lang/String;IIILjava/util/ArrayList;)V

    .line 11849
    invoke-virtual {v8, v9, v10, v6, v7}, Lcom/android/server/os/NativeTombstoneManager;->collectTombstones(Ljava/util/ArrayList;III)V

    goto :goto_0

    :cond_0
    move-object/from16 v4, p1

    .line 11853
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v0, v0, Lcom/android/server/am/ProcessList;->mAppExitInfoTracker:Lcom/android/server/am/AppExitInfoTracker;

    move-object/from16 v1, p1

    move v2, v5

    move/from16 v3, p2

    move/from16 v4, p3

    move v10, v5

    move-object v5, v9

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/AppExitInfoTracker;->getExitInfo(Ljava/lang/String;IIILjava/util/ArrayList;)V

    .line 11855
    invoke-virtual {v8, v9, v10, v6, v7}, Lcom/android/server/os/NativeTombstoneManager;->collectTombstones(Ljava/util/ArrayList;III)V

    .line 11858
    :cond_1
    :goto_0
    new-instance v0, Landroid/content/pm/ParceledListSlice;

    invoke-direct {v0, v9}, Landroid/content/pm/ParceledListSlice;-><init>(Ljava/util/List;)V

    return-object v0

    .line 11830
    :cond_2
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Unsupported userId"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public getHistoricalProcessStartReasons(Ljava/lang/String;II)Landroid/content/pm/ParceledListSlice;
    .locals 0

    .line 11791
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget-boolean p1, p1, Lcom/android/server/am/ActivityManagerConstants;->mFlagApplicationStartInfoEnabled:Z

    if-nez p1, :cond_0

    .line 11792
    new-instance p0, Landroid/content/pm/ParceledListSlice;

    new-instance p1, Ljava/util/ArrayList;

    invoke-direct {p1}, Ljava/util/ArrayList;-><init>()V

    invoke-direct {p0, p1}, Landroid/content/pm/ParceledListSlice;-><init>(Ljava/util/List;)V

    return-object p0

    :cond_0
    const-string p1, "getHistoricalProcessStartReasons"

    .line 11795
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 11797
    new-instance p0, Ljava/util/ArrayList;

    invoke-direct {p0}, Ljava/util/ArrayList;-><init>()V

    .line 11799
    new-instance p1, Landroid/content/pm/ParceledListSlice;

    invoke-direct {p1, p0}, Landroid/content/pm/ParceledListSlice;-><init>(Ljava/util/List;)V

    return-object p1
.end method

.method public getInfoForIntentSender(Landroid/content/IIntentSender;)Landroid/app/ActivityManager$PendingIntentInfo;
    .locals 7

    .line 6681
    instance-of v0, p1, Lcom/android/server/am/PendingIntentRecord;

    const/4 v1, -0x1

    const/4 v2, 0x0

    const/4 v3, 0x0

    if-eqz v0, :cond_3

    .line 6682
    check-cast p1, Lcom/android/server/am/PendingIntentRecord;

    .line 6683
    iget-object v0, p1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v0, v0, Lcom/android/server/am/PendingIntentRecord$Key;->packageName:Ljava/lang/String;

    .line 6684
    iget v4, p1, Lcom/android/server/am/PendingIntentRecord;->uid:I

    .line 6685
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal;

    move-result-object p0

    .line 6686
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v5

    invoke-static {v4}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v6

    .line 6685
    invoke-virtual {p0, v0, v5, v6}, Landroid/content/pm/PackageManagerInternal;->filterAppAccess(Ljava/lang/String;II)Z

    move-result p0

    .line 6687
    new-instance v5, Landroid/app/ActivityManager$PendingIntentInfo;

    if-eqz p0, :cond_0

    goto :goto_0

    :cond_0
    move-object v2, v0

    :goto_0
    if-eqz p0, :cond_1

    goto :goto_1

    :cond_1
    move v1, v4

    .line 6689
    :goto_1
    iget-object p0, p1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget p1, p0, Lcom/android/server/am/PendingIntentRecord$Key;->flags:I

    const/high16 v0, 0x4000000

    and-int/2addr p1, v0

    if-eqz p1, :cond_2

    const/4 v3, 0x1

    :cond_2
    iget p0, p0, Lcom/android/server/am/PendingIntentRecord$Key;->type:I

    invoke-direct {v5, v2, v1, v3, p0}, Landroid/app/ActivityManager$PendingIntentInfo;-><init>(Ljava/lang/String;IZI)V

    return-object v5

    .line 6693
    :cond_3
    new-instance p0, Landroid/app/ActivityManager$PendingIntentInfo;

    invoke-direct {p0, v2, v1, v3, v3}, Landroid/app/ActivityManager$PendingIntentInfo;-><init>(Ljava/lang/String;IZI)V

    return-object p0
.end method

.method public getInstalledPackageListFromMARs(II)Landroid/content/pm/ParceledListSlice;
    .locals 0

    .line 24500
    invoke-static {}, Lcom/android/server/am/MARsPolicyManager;->getInstance()Lcom/android/server/am/MARsPolicyManager;

    move-result-object p0

    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/MARsPolicyManager;->getInstalledPackageListFromMARs(II)Landroid/content/pm/ParceledListSlice;

    move-result-object p0

    return-object p0
.end method

.method public getIntentForIntentSender(Landroid/content/IIntentSender;)Landroid/content/Intent;
    .locals 2

    const-string v0, "android.permission.GET_INTENT_SENDER_INTENT"

    const-string v1, "getIntentForIntentSender()"

    .line 6826
    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 6828
    instance-of p0, p1, Lcom/android/server/am/PendingIntentRecord;

    const/4 v0, 0x0

    if-nez p0, :cond_0

    return-object v0

    .line 6832
    :cond_0
    :try_start_0
    check-cast p1, Lcom/android/server/am/PendingIntentRecord;

    .line 6833
    iget-object p0, p1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object p0, p0, Lcom/android/server/am/PendingIntentRecord$Key;->requestIntent:Landroid/content/Intent;

    if-eqz p0, :cond_1

    new-instance p0, Landroid/content/Intent;

    iget-object p1, p1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object p1, p1, Lcom/android/server/am/PendingIntentRecord$Key;->requestIntent:Landroid/content/Intent;

    invoke-direct {p0, p1}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V
    :try_end_0
    .catch Ljava/lang/ClassCastException; {:try_start_0 .. :try_end_0} :catch_0

    move-object v0, p0

    :catch_0
    :cond_1
    return-object v0
.end method

.method public getIntentSender(ILjava/lang/String;Landroid/os/IBinder;Ljava/lang/String;I[Landroid/content/Intent;[Ljava/lang/String;ILandroid/os/Bundle;I)Landroid/content/IIntentSender;
    .locals 12

    const/4 v3, 0x0

    move-object v0, p0

    move v1, p1

    move-object v2, p2

    move-object v4, p3

    move-object/from16 v5, p4

    move/from16 v6, p5

    move-object/from16 v7, p6

    move-object/from16 v8, p7

    move/from16 v9, p8

    move-object/from16 v10, p9

    move/from16 v11, p10

    .line 6438
    invoke-virtual/range {v0 .. v11}, Lcom/android/server/am/ActivityManagerService;->getIntentSenderWithFeature(ILjava/lang/String;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;I[Landroid/content/Intent;[Ljava/lang/String;ILandroid/os/Bundle;I)Landroid/content/IIntentSender;

    move-result-object v0

    return-object v0
.end method

.method public getIntentSenderWithFeature(ILjava/lang/String;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;I[Landroid/content/Intent;[Ljava/lang/String;ILandroid/os/Bundle;I)Landroid/content/IIntentSender;
    .locals 14

    const-string v0, "getIntentSender"

    move-object v1, p0

    .line 6446
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 6450
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v13

    move v2, p1

    move-object/from16 v3, p2

    move-object/from16 v4, p3

    move-object/from16 v5, p4

    move-object/from16 v6, p5

    move/from16 v7, p6

    move-object/from16 v8, p7

    move-object/from16 v9, p8

    move/from16 v10, p9

    move-object/from16 v11, p10

    move/from16 v12, p11

    .line 6448
    invoke-virtual/range {v1 .. v13}, Lcom/android/server/am/ActivityManagerService;->getIntentSenderWithFeatureAsApp(ILjava/lang/String;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;I[Landroid/content/Intent;[Ljava/lang/String;ILandroid/os/Bundle;II)Landroid/content/IIntentSender;

    move-result-object v0

    return-object v0
.end method

.method public getIntentSenderWithFeatureAsApp(ILjava/lang/String;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;I[Landroid/content/Intent;[Ljava/lang/String;ILandroid/os/Bundle;II)Landroid/content/IIntentSender;
    .locals 19

    move-object/from16 v0, p0

    move/from16 v1, p1

    move-object/from16 v2, p2

    move-object/from16 v9, p7

    move-object/from16 v10, p8

    move/from16 v4, p12

    const/4 v3, 0x3

    const/4 v5, 0x0

    const/4 v6, 0x1

    if-eqz v9, :cond_c

    .line 6469
    array-length v7, v9

    if-lt v7, v6, :cond_b

    move v7, v5

    .line 6472
    :goto_0
    array-length v8, v9

    if-ge v7, v8, :cond_9

    .line 6473
    aget-object v8, v9, v7

    if-eqz v8, :cond_8

    .line 6475
    invoke-virtual {v8}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v11

    if-nez v11, :cond_7

    if-ne v1, v6, :cond_1

    .line 6479
    invoke-virtual {v8}, Landroid/content/Intent;->getFlags()I

    move-result v11

    const/high16 v12, 0x2000000

    and-int/2addr v11, v12

    if-nez v11, :cond_0

    goto :goto_1

    .line 6480
    :cond_0
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Can\'t use FLAG_RECEIVER_BOOT_UPGRADE here"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_1
    :goto_1
    move/from16 v15, p9

    if-ne v1, v3, :cond_2

    move v11, v6

    goto :goto_2

    :cond_2
    move v11, v5

    .line 6485
    :goto_2
    invoke-static {v15, v8, v11}, Landroid/app/PendingIntent;->isNewMutableDisallowedImplicitPendingIntent(ILandroid/content/Intent;Z)Z

    move-result v11

    if-eqz v11, :cond_6

    const-wide/32 v11, 0xe1bd1a4

    .line 6489
    invoke-static/range {p11 .. p11}, Landroid/os/UserHandle;->of(I)Landroid/os/UserHandle;

    move-result-object v13

    .line 6487
    invoke-static {v11, v12, v2, v13}, Landroid/app/compat/CompatChanges;->isChangeEnabled(JLjava/lang/String;Landroid/os/UserHandle;)Z

    move-result v11

    if-eqz v10, :cond_4

    .line 6491
    array-length v12, v10

    if-lt v7, v12, :cond_3

    goto :goto_3

    :cond_3
    aget-object v12, v10, v7

    goto :goto_4

    :cond_4
    :goto_3
    const/4 v12, 0x0

    :goto_4
    const/4 v13, 0x4

    .line 6492
    invoke-static {v13, v4, v8, v12, v11}, Lcom/android/server/am/ActivityManagerUtils;->logUnsafeIntentEvent(IILandroid/content/Intent;Ljava/lang/String;Z)V

    if-nez v11, :cond_5

    goto :goto_5

    .line 6496
    :cond_5
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, ": Targeting U+ (version "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/16 v1, 0x22

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " and above) disallows creating or retrieving a PendingIntent with FLAG_MUTABLE, an implicit Intent within and without FLAG_NO_CREATE and FLAG_ALLOW_UNSAFE_IMPLICIT_INTENT for security reasons. To retrieve an already existing PendingIntent, use FLAG_NO_CREATE, however, to create a new PendingIntent with an implicit Intent use FLAG_IMMUTABLE."

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 6505
    new-instance v1, Ljava/lang/IllegalArgumentException;

    invoke-direct {v1, v0}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 6508
    :cond_6
    :goto_5
    new-instance v11, Landroid/content/Intent;

    invoke-direct {v11, v8}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V

    aput-object v11, v9, v7

    goto :goto_6

    .line 6476
    :cond_7
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "File descriptors passed in Intent"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_8
    move/from16 v15, p9

    :goto_6
    add-int/lit8 v7, v7, 0x1

    goto :goto_0

    :cond_9
    move/from16 v15, p9

    if-eqz v10, :cond_d

    .line 6511
    array-length v7, v10

    array-length v8, v9

    if-ne v7, v8, :cond_a

    goto :goto_7

    .line 6512
    :cond_a
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Intent array length does not match resolvedTypes length"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 6470
    :cond_b
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Intents array length must be >= 1"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_c
    move/from16 v15, p9

    :cond_d
    :goto_7
    if-eqz p10, :cond_f

    .line 6517
    invoke-virtual/range {p10 .. p10}, Landroid/os/Bundle;->hasFileDescriptors()Z

    move-result v7

    if-nez v7, :cond_e

    goto :goto_8

    .line 6518
    :cond_e
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "File descriptors passed in options"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 6523
    :cond_f
    :goto_8
    iget-object v11, v0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v12

    if-ne v1, v6, :cond_10

    move v5, v6

    :cond_10
    const/16 v16, 0x0

    const-string v17, "getIntentSender"

    const/16 v18, 0x0

    move/from16 v13, p12

    move/from16 v14, p11

    move v15, v5

    invoke-virtual/range {v11 .. v18}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result v5

    const/4 v6, -0x2

    move/from16 v7, p11

    if-ne v7, v6, :cond_11

    move v5, v6

    :cond_11
    if-eqz v4, :cond_13

    const/16 v6, 0x3e8

    if-eq v4, v6, :cond_13

    .line 6534
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v6

    .line 6535
    invoke-static/range {p12 .. p12}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v7

    const-wide/32 v11, 0x10000000

    .line 6534
    invoke-interface {v6, v2, v11, v12, v7}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;JI)I

    move-result v6

    .line 6536
    invoke-static {v4, v6}, Landroid/os/UserHandle;->isSameApp(II)Z

    move-result v7

    if-eqz v7, :cond_12

    goto :goto_9

    .line 6537
    :cond_12
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Permission Denial: getIntentSender() from pid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 6538
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ", uid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ", (need uid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ") is not allowed to send as package "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "ActivityManager"

    .line 6542
    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6543
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    :cond_13
    :goto_9
    if-ne v1, v3, :cond_14

    .line 6548
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    move/from16 v1, p1

    move-object/from16 v2, p2

    move-object/from16 v3, p3

    move/from16 v4, p12

    move-object/from16 v6, p4

    move-object/from16 v7, p5

    move/from16 v8, p6

    move-object/from16 v9, p7

    move-object/from16 v10, p8

    move/from16 v11, p9

    move-object/from16 v12, p10

    invoke-virtual/range {v0 .. v12}, Lcom/android/server/wm/ActivityTaskManagerInternal;->getIntentSender(ILjava/lang/String;Ljava/lang/String;IILandroid/os/IBinder;Ljava/lang/String;I[Landroid/content/Intent;[Ljava/lang/String;ILandroid/os/Bundle;)Landroid/content/IIntentSender;

    move-result-object v0

    return-object v0

    .line 6552
    :cond_14
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mPendingIntentController:Lcom/android/server/am/PendingIntentController;

    move/from16 v1, p1

    move-object/from16 v2, p2

    move-object/from16 v3, p3

    move/from16 v4, p12

    move-object/from16 v6, p4

    move-object/from16 v7, p5

    move/from16 v8, p6

    move-object/from16 v9, p7

    move-object/from16 v10, p8

    move/from16 v11, p9

    move-object/from16 v12, p10

    invoke-virtual/range {v0 .. v12}, Lcom/android/server/am/PendingIntentController;->getIntentSender(ILjava/lang/String;Ljava/lang/String;IILandroid/os/IBinder;Ljava/lang/String;I[Landroid/content/Intent;[Ljava/lang/String;ILandroid/os/Bundle;)Lcom/android/server/am/PendingIntentRecord;

    move-result-object v0
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    return-object v0

    :catch_0
    move-exception v0

    .line 6556
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/Throwable;)V

    throw v1
.end method

.method public getIsolatedProcessList()[I
    .locals 3

    const-string v0, "android.permission.INTERACT_ACROSS_USERS_FULL"

    .line 24595
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    const/4 v1, 0x0

    if-eqz v0, :cond_0

    const-string p0, "ActivityManager"

    .line 24597
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "getIsolatedProcessList - permission is not granted. callingUid: "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {p0, v0}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-object v1

    .line 24600
    :cond_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 24601
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v0, v0, Lcom/android/server/am/ProcessList;->mIsolatedProcesses:Landroid/util/SparseArray;

    invoke-virtual {v0}, Landroid/util/SparseArray;->size()I

    move-result v0

    if-lez v0, :cond_2

    .line 24602
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v0, v0, Lcom/android/server/am/ProcessList;->mIsolatedProcesses:Landroid/util/SparseArray;

    invoke-virtual {v0}, Landroid/util/SparseArray;->size()I

    move-result v0

    new-array v0, v0, [I

    const/4 v1, 0x0

    .line 24603
    :goto_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v2, v2, Lcom/android/server/am/ProcessList;->mIsolatedProcesses:Landroid/util/SparseArray;

    invoke-virtual {v2}, Landroid/util/SparseArray;->size()I

    move-result v2

    if-ge v1, v2, :cond_1

    .line 24604
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v2, v2, Lcom/android/server/am/ProcessList;->mIsolatedProcesses:Landroid/util/SparseArray;

    invoke-virtual {v2, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    .line 24605
    invoke-virtual {v2}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v2

    aput v2, v0, v1

    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 24607
    :cond_1
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object v0

    .line 24609
    :cond_2
    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object v1

    :catchall_0
    move-exception v0

    .line 24611
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public getLaunchedFromPackage(Landroid/os/IBinder;)Ljava/lang/String;
    .locals 0

    .line 19080
    invoke-static {}, Landroid/app/ActivityClient;->getInstance()Landroid/app/ActivityClient;

    move-result-object p0

    invoke-virtual {p0, p1}, Landroid/app/ActivityClient;->getLaunchedFromPackage(Landroid/os/IBinder;)Ljava/lang/String;

    move-result-object p0

    return-object p0
.end method

.method public getLaunchedFromUid(Landroid/os/IBinder;)I
    .locals 0

    .line 19076
    invoke-static {}, Landroid/app/ActivityClient;->getInstance()Landroid/app/ActivityClient;

    move-result-object p0

    invoke-virtual {p0, p1}, Landroid/app/ActivityClient;->getLaunchedFromUid(Landroid/os/IBinder;)I

    move-result p0

    return p0
.end method

.method public getLifeMonitor()Landroid/os/ParcelFileDescriptor;
    .locals 3

    .line 23546
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->isCallerShell()Z

    move-result v0

    if-eqz v0, :cond_1

    .line 23549
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v0

    .line 23551
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mLifeMonitorFds:[Landroid/os/ParcelFileDescriptor;

    if-nez v1, :cond_0

    .line 23552
    invoke-static {}, Landroid/os/ParcelFileDescriptor;->createPipe()[Landroid/os/ParcelFileDescriptor;

    move-result-object v1

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mLifeMonitorFds:[Landroid/os/ParcelFileDescriptor;

    .line 23556
    :cond_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mLifeMonitorFds:[Landroid/os/ParcelFileDescriptor;

    const/4 v1, 0x0

    aget-object p0, p0, v1

    invoke-virtual {p0}, Landroid/os/ParcelFileDescriptor;->dup()Landroid/os/ParcelFileDescriptor;

    move-result-object p0
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return-object p0

    :catchall_0
    move-exception p0

    goto :goto_0

    :catch_0
    move-exception p0

    :try_start_2
    const-string v1, "ActivityManager"

    const-string v2, "Unable to create pipe"

    .line 23558
    invoke-static {v1, v2, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 23559
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    const/4 p0, 0x0

    return-object p0

    .line 23561
    :goto_0
    :try_start_3
    monitor-exit v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p0

    .line 23547
    :cond_1
    new-instance p0, Ljava/lang/SecurityException;

    const-string v0, "Only shell can call it"

    invoke-direct {p0, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p0
.end method

.method public getLockTaskModeState()I
    .locals 0

    .line 8166
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {p0}, Lcom/android/server/wm/ActivityTaskManagerService;->getLockTaskModeState()I

    move-result p0

    return p0
.end method

.method public getLongLiveApp()Ljava/lang/String;
    .locals 2

    const-string v0, "getLongLiveApp"

    .line 24185
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkLongLivePermissions(Ljava/lang/String;)V

    .line 24186
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 24187
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mExt:Lcom/android/server/am/ActivityManagerServiceExt;

    const/4 v1, 0x0

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerServiceExt;->getLongLivePackageLocked(I)Ljava/lang/String;

    move-result-object v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object v0

    :catchall_0
    move-exception v0

    .line 24188
    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public getLongLiveApps()Ljava/util/List;
    .locals 1

    .line 24194
    sget-boolean v0, Lcom/samsung/android/rune/CoreRune;->FW_DEDICATED_MEMORY:Z

    if-nez v0, :cond_0

    const/4 p0, 0x0

    return-object p0

    :cond_0
    const-string v0, "getLongLiveApps"

    .line 24198
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkLongLivePermissions(Ljava/lang/String;)V

    .line 24199
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 24200
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mExt:Lcom/android/server/am/ActivityManagerServiceExt;

    invoke-virtual {v0}, Lcom/android/server/am/ActivityManagerServiceExt;->getLongLivePackagesLocked()Ljava/util/ArrayList;

    move-result-object v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object v0

    :catchall_0
    move-exception v0

    .line 24201
    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public getLongLiveProcesses()Ljava/util/List;
    .locals 2

    .line 24277
    sget-boolean v0, Lcom/samsung/android/rune/CoreRune;->FW_DEDICATED_MEMORY:Z

    if-nez v0, :cond_0

    const/4 p0, 0x0

    return-object p0

    :cond_0
    const-string v0, "getLongLiveProcesses"

    .line 24280
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkLongLivePermissions(Ljava/lang/String;)V

    .line 24281
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 24282
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mExt:Lcom/android/server/am/ActivityManagerServiceExt;

    const/4 v1, -0x1

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerServiceExt;->getDedicatedProcessesLocked(I)Ljava/util/ArrayList;

    move-result-object v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object v0

    :catchall_0
    move-exception v0

    .line 24283
    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public getLongLiveProcessesForUser(I)Ljava/util/List;
    .locals 1

    .line 24288
    sget-boolean v0, Lcom/samsung/android/rune/CoreRune;->FW_DEDICATED_MEMORY:Z

    if-nez v0, :cond_0

    const/4 p0, 0x0

    return-object p0

    :cond_0
    const-string v0, "getLongLiveProcessesForUser"

    .line 24291
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkLongLivePermissions(Ljava/lang/String;)V

    .line 24292
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 24293
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mExt:Lcom/android/server/am/ActivityManagerServiceExt;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActivityManagerServiceExt;->getDedicatedProcessesLocked(I)Ljava/util/ArrayList;

    move-result-object p1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object p1

    :catchall_0
    move-exception p1

    .line 24294
    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public getLongLiveTaskIdsForUser(I)Ljava/util/List;
    .locals 1

    .line 24299
    sget-boolean v0, Lcom/samsung/android/rune/CoreRune;->FW_DEDICATED_MEMORY:Z

    if-nez v0, :cond_0

    const/4 p0, 0x0

    return-object p0

    :cond_0
    const-string v0, "getLongLiveTaskIdsForUser"

    .line 24302
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkLongLivePermissions(Ljava/lang/String;)V

    .line 24303
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 24304
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mExt:Lcom/android/server/am/ActivityManagerServiceExt;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActivityManagerServiceExt;->getDedicatedTaskIdsLocked(I)Ljava/util/ArrayList;

    move-result-object p1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object p1

    :catchall_0
    move-exception p1

    .line 24305
    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public getMaxLongLiveApps()I
    .locals 1

    .line 24240
    sget-boolean v0, Lcom/samsung/android/rune/CoreRune;->FW_DEDICATED_MEMORY:Z

    if-nez v0, :cond_0

    const/4 p0, 0x0

    return p0

    :cond_0
    const-string v0, "getMaxLongLiveApps"

    .line 24244
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkLongLivePermissions(Ljava/lang/String;)V

    .line 24245
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 24246
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mExt:Lcom/android/server/am/ActivityManagerServiceExt;

    invoke-virtual {v0}, Lcom/android/server/am/ActivityManagerServiceExt;->getMaxLongLiveApps()I

    move-result v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v0

    :catchall_0
    move-exception v0

    .line 24247
    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public getMemoryInfo(Landroid/app/ActivityManager$MemoryInfo;)V
    .locals 0

    .line 8066
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {p0, p1}, Lcom/android/server/am/ProcessList;->getMemoryInfo(Landroid/app/ActivityManager$MemoryInfo;)V

    return-void
.end method

.method public getMemoryTrimLevel()I
    .locals 1

    const-string v0, "getMyMemoryState"

    .line 11928
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 11929
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 11930
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {v0}, Lcom/android/server/am/AppProfiler;->getLastMemoryLevelLocked()I

    move-result v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v0

    :catchall_0
    move-exception v0

    .line 11931
    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public getMimeTypeFilterAsync(Landroid/net/Uri;ILandroid/os/RemoteCallback;)V
    .locals 0

    .line 8798
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/am/ContentProviderHelper;->getMimeTypeFilterAsync(Landroid/net/Uri;ILandroid/os/RemoteCallback;)V

    return-void
.end method

.method public getMyMemoryState(Landroid/app/ActivityManager$RunningAppProcessInfo;)V
    .locals 5

    if-eqz p1, :cond_1

    const-string v0, "getMyMemoryState"

    .line 11910
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 11912
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 11913
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPackageManagerInt:Landroid/content/pm/PackageManagerInternal;

    invoke-virtual {v1, v0}, Landroid/content/pm/PackageManagerInternal;->getUidTargetSdkVersion(I)I

    move-result v0

    .line 11915
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v1

    .line 11917
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 11918
    :try_start_1
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v4

    invoke-virtual {v3, v4}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v3

    .line 11919
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    if-eqz v3, :cond_0

    .line 11921
    :try_start_2
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {p0, v3, p1, v0}, Lcom/android/server/am/ProcessList;->fillInProcMemInfoLOSP(Lcom/android/server/am/ProcessRecord;Landroid/app/ActivityManager$RunningAppProcessInfo;I)V

    .line 11923
    :cond_0
    monitor-exit v1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return-void

    :catchall_0
    move-exception p0

    .line 11919
    :try_start_3
    monitor-exit v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    throw p0

    :catchall_1
    move-exception p0

    .line 11923
    monitor-exit v1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p0

    .line 11908
    :cond_1
    new-instance p0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo p1, "outState is null"

    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p0
.end method

.method public getNativeProcesses(Ljava/util/Set;)Ljava/util/List;
    .locals 4

    .line 14992
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    if-nez p1, :cond_1

    .line 14994
    new-instance p1, Ljava/util/HashSet;

    invoke-direct {p1}, Ljava/util/HashSet;-><init>()V

    .line 14995
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v1

    .line 14996
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v2}, Lcom/android/server/am/ProcessList;->getmLruProcesses()Ljava/util/ArrayList;

    move-result-object v2

    .line 14997
    invoke-virtual {v2}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v2

    :goto_0
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_0

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ProcessRecord;

    .line 14998
    invoke-virtual {v3}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v3

    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    invoke-interface {p1, v3}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    goto :goto_0

    .line 15000
    :cond_0
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    goto :goto_1

    :catchall_0
    move-exception p0

    :try_start_1
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p0

    .line 15003
    :cond_1
    :goto_1
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStats()V

    .line 15004
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    new-instance v1, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda41;

    invoke-direct {v1, p1, v0}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda41;-><init>(Ljava/util/Set;Ljava/util/ArrayList;)V

    invoke-virtual {p0, v1}, Lcom/android/server/am/AppProfiler;->forAllCpuStats(Ljava/util/function/Consumer;)V

    return-object v0
.end method

.method public getOomAdjByPid(I)I
    .locals 0

    .line 24486
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getProcessRecordFromPidLocked(I)Lcom/android/server/am/ProcessRecord;

    move-result-object p0

    if-eqz p0, :cond_0

    .line 24487
    iget-object p0, p0, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {p0}, Lcom/android/server/am/ProcessStateRecord;->getCurAdj()I

    move-result p0

    goto :goto_0

    :cond_0
    const/4 p0, 0x0

    :goto_0
    return p0
.end method

.method public getOptionsForIntentSender(Landroid/content/IIntentSender;)Landroid/os/Bundle;
    .locals 0

    .line 0
    const/4 p0, 0x0

    return-object p0
.end method

.method public getPackageFromAppProcesses(I)Ljava/lang/String;
    .locals 2

    .line 24035
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    if-lez p1, :cond_1

    const/16 v1, 0x3e8

    .line 24036
    invoke-static {v0}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v0

    if-ne v1, v0, :cond_1

    .line 24038
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v0

    .line 24039
    :try_start_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object p0

    if-eqz p0, :cond_0

    .line 24040
    iget v1, p0, Lcom/android/server/am/ProcessRecord;->mPid:I

    if-ne v1, p1, :cond_0

    iget-object p1, p0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    if-eqz p1, :cond_0

    .line 24041
    iget-object p0, p0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object p0, p0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    monitor-exit v0

    return-object p0

    .line 24043
    :cond_0
    monitor-exit v0

    goto :goto_0

    :catchall_0
    move-exception p0

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw p0

    :cond_1
    :goto_0
    const/4 p0, 0x0

    return-object p0
.end method

.method public getPackageManager()Landroid/content/pm/IPackageManager;
    .locals 0

    .line 8564
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object p0

    return-object p0
.end method

.method public getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal;
    .locals 1

    .line 8571
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPackageManagerInt:Landroid/content/pm/PackageManagerInternal;

    if-nez v0, :cond_0

    .line 8572
    const-class v0, Landroid/content/pm/PackageManagerInternal;

    invoke-static {v0}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/content/pm/PackageManagerInternal;

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPackageManagerInt:Landroid/content/pm/PackageManagerInternal;

    .line 8574
    :cond_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mPackageManagerInt:Landroid/content/pm/PackageManagerInternal;

    return-object p0
.end method

.method public getPackageProcessState(Ljava/lang/String;Ljava/lang/String;)I
    .locals 2

    .line 3691
    invoke-virtual {p0, p2}, Lcom/android/server/am/ActivityManagerService;->hasUsageStatsPermission(Ljava/lang/String;)Z

    move-result p2

    if-nez p2, :cond_0

    const-string p2, "android.permission.PACKAGE_USAGE_STATS"

    const-string v0, "getPackageProcessState"

    .line 3692
    invoke-virtual {p0, p2, v0}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    :cond_0
    const/16 p2, 0x14

    .line 3696
    filled-new-array {p2}, [I

    move-result-object p2

    .line 3697
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v0

    .line 3698
    :try_start_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    new-instance v1, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda7;

    invoke-direct {v1, p2, p1}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda7;-><init>([ILjava/lang/String;)V

    const/4 p1, 0x0

    invoke-virtual {p0, p1, v1}, Lcom/android/server/am/ProcessList;->forEachLruProcessesLOSP(ZLjava/util/function/Consumer;)V

    .line 3706
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 3707
    aget p0, p2, p1

    return p0

    :catchall_0
    move-exception p0

    .line 3706
    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p0
.end method

.method public getPendingCmdedBroadcast()Ljava/util/ArrayList;
    .locals 0

    .line 11970
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingCmdBR:Ljava/util/ArrayList;

    return-object p0
.end method

.method public final getPermissionManagerInternal()Lcom/android/server/pm/permission/PermissionManagerServiceInternal;
    .locals 1

    .line 8589
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPermissionManagerInt:Lcom/android/server/pm/permission/PermissionManagerServiceInternal;

    if-nez v0, :cond_0

    .line 8590
    const-class v0, Lcom/android/server/pm/permission/PermissionManagerServiceInternal;

    .line 8591
    invoke-static {v0}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/pm/permission/PermissionManagerServiceInternal;

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPermissionManagerInt:Lcom/android/server/pm/permission/PermissionManagerServiceInternal;

    .line 8593
    :cond_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mPermissionManagerInt:Lcom/android/server/pm/permission/PermissionManagerServiceInternal;

    return-object p0
.end method

.method public getProcessLimit()I
    .locals 1

    .line 6963
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 6964
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    invoke-virtual {v0}, Lcom/android/server/am/ActivityManagerConstants;->getOverrideMaxCachedProcesses()I

    move-result v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v0

    :catchall_0
    move-exception v0

    .line 6965
    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public getProcessMemoryInfo([I)[Landroid/os/Debug$MemoryInfo;
    .locals 33

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    const-string v2, "getProcessMemoryInfo"

    .line 4768
    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 4770
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v2

    .line 4771
    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget-wide v4, v4, Lcom/android/server/am/ActivityManagerConstants;->MEMORY_INFO_THROTTLE_TIME:J

    sub-long/2addr v2, v4

    .line 4773
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v4

    .line 4774
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v5

    .line 4775
    invoke-static {v5}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v6

    const-string v7, "android.permission.INTERACT_ACROSS_USERS_FULL"

    .line 4776
    invoke-static {v7, v5}, Landroid/app/ActivityManager;->checkUidPermission(Ljava/lang/String;I)I

    move-result v7

    const/4 v8, 0x1

    if-nez v7, :cond_0

    move v7, v8

    goto :goto_0

    :cond_0
    const/4 v7, 0x0

    .line 4779
    :goto_0
    iget-object v10, v0, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    const-string v11, "getProcessMemoryInfo"

    invoke-virtual {v10, v11, v4, v5}, Lcom/android/server/wm/ActivityTaskManagerInternal;->isGetTasksAllowed(Ljava/lang/String;II)Z

    move-result v10

    .line 4785
    iget-object v11, v0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v11

    .line 4786
    :try_start_0
    iget-object v12, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v12
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_6

    .line 4787
    :try_start_1
    iget-object v13, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v13, v4}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v4

    if-eqz v4, :cond_2

    .line 4789
    invoke-virtual {v4}, Lcom/android/server/am/ProcessRecord;->getActiveInstrumentation()Lcom/android/server/am/ActiveInstrumentation;

    move-result-object v4

    if-eqz v4, :cond_2

    .line 4790
    iget v4, v4, Lcom/android/server/am/ActiveInstrumentation;->mSourceUid:I

    const/16 v13, 0x7d0

    if-eq v4, v13, :cond_1

    if-nez v4, :cond_2

    :cond_1
    move v4, v8

    goto :goto_1

    :cond_2
    const/4 v4, 0x0

    .line 4793
    :goto_1
    monitor-exit v12
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_5

    .line 4794
    :try_start_2
    monitor-exit v11
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_6

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 4796
    array-length v11, v1

    new-array v11, v11, [Landroid/os/Debug$MemoryInfo;

    .line 4797
    array-length v12, v1

    sub-int/2addr v12, v8

    :goto_2
    if-ltz v12, :cond_c

    .line 4798
    new-instance v15, Landroid/os/Debug$MemoryInfo;

    invoke-direct {v15}, Landroid/os/Debug$MemoryInfo;-><init>()V

    aput-object v15, v11, v12

    .line 4802
    iget-object v8, v0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    iget-object v8, v8, Lcom/android/server/am/AppProfiler;->mProfilerLock:Ljava/lang/Object;

    monitor-enter v8

    .line 4803
    :try_start_3
    iget-object v13, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v13
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_4

    .line 4804
    :try_start_4
    iget-object v14, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    aget v9, v1, v12

    invoke-virtual {v14, v9}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v14

    if-eqz v14, :cond_3

    .line 4806
    iget-object v9, v14, Lcom/android/server/am/ProcessRecord;->mProfile:Lcom/android/server/am/ProcessProfileRecord;

    .line 4807
    invoke-virtual {v9}, Lcom/android/server/am/ProcessProfileRecord;->getSetAdj()I

    move-result v16

    move-object/from16 v18, v9

    move/from16 v9, v16

    goto :goto_3

    :cond_3
    const/4 v9, 0x0

    move-object/from16 v18, v9

    const/4 v9, 0x0

    .line 4812
    :goto_3
    monitor-exit v13
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_3

    .line 4813
    :try_start_5
    monitor-exit v8
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_4

    const/4 v8, -0x1

    if-eqz v14, :cond_4

    .line 4814
    iget v13, v14, Lcom/android/server/am/ProcessRecord;->uid:I

    goto :goto_4

    :cond_4
    move v13, v8

    :goto_4
    if-eqz v14, :cond_5

    .line 4815
    invoke-static {v13}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v8

    :cond_5
    if-eq v5, v13, :cond_7

    if-nez v10, :cond_6

    goto/16 :goto_8

    :cond_6
    if-nez v7, :cond_7

    if-eq v8, v6, :cond_7

    goto/16 :goto_8

    :cond_7
    if-eqz v14, :cond_9

    .line 4827
    iget-object v8, v0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    iget-object v8, v8, Lcom/android/server/am/AppProfiler;->mProfilerLock:Ljava/lang/Object;

    monitor-enter v8

    .line 4828
    :try_start_6
    invoke-virtual/range {v18 .. v18}, Lcom/android/server/am/ProcessProfileRecord;->getLastMemInfoTime()J

    move-result-wide v16

    cmp-long v13, v16, v2

    if-ltz v13, :cond_8

    invoke-virtual/range {v18 .. v18}, Lcom/android/server/am/ProcessProfileRecord;->getLastMemInfo()Landroid/os/Debug$MemoryInfo;

    move-result-object v13

    if-eqz v13, :cond_8

    if-nez v4, :cond_8

    .line 4832
    invoke-virtual/range {v18 .. v18}, Lcom/android/server/am/ProcessProfileRecord;->getLastMemInfo()Landroid/os/Debug$MemoryInfo;

    move-result-object v9

    invoke-virtual {v15, v9}, Landroid/os/Debug$MemoryInfo;->set(Landroid/os/Debug$MemoryInfo;)V

    .line 4833
    monitor-exit v8

    goto/16 :goto_8

    .line 4835
    :cond_8
    monitor-exit v8

    goto :goto_5

    :catchall_0
    move-exception v0

    monitor-exit v8
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    throw v0

    .line 4837
    :cond_9
    :goto_5
    invoke-static {}, Landroid/os/SystemClock;->currentThreadTimeMillis()J

    move-result-wide v16

    .line 4838
    new-instance v8, Landroid/os/Debug$MemoryInfo;

    invoke-direct {v8}, Landroid/os/Debug$MemoryInfo;-><init>()V

    .line 4839
    aget v13, v1, v12

    invoke-static {v13, v8}, Landroid/os/Debug;->getMemoryInfo(ILandroid/os/Debug$MemoryInfo;)Z

    .line 4840
    invoke-static {}, Landroid/os/SystemClock;->currentThreadTimeMillis()J

    move-result-wide v19

    sub-long v16, v19, v16

    .line 4841
    invoke-virtual {v15, v8}, Landroid/os/Debug$MemoryInfo;->set(Landroid/os/Debug$MemoryInfo;)V

    if-eqz v14, :cond_b

    .line 4843
    iget-object v13, v0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    iget-object v13, v13, Lcom/android/server/am/AppProfiler;->mProfilerLock:Ljava/lang/Object;

    monitor-enter v13

    move-object/from16 v0, v18

    .line 4844
    :try_start_7
    invoke-virtual {v0, v8}, Lcom/android/server/am/ProcessProfileRecord;->setLastMemInfo(Landroid/os/Debug$MemoryInfo;)V

    move-wide/from16 v30, v2

    .line 4845
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v1

    invoke-virtual {v0, v1, v2}, Lcom/android/server/am/ProcessProfileRecord;->setLastMemInfoTime(J)V

    .line 4846
    invoke-virtual {v0}, Lcom/android/server/am/ProcessProfileRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v1

    if-eqz v1, :cond_a

    invoke-virtual {v0}, Lcom/android/server/am/ProcessProfileRecord;->getSetAdj()I

    move-result v1

    if-ne v1, v9, :cond_a

    .line 4848
    invoke-virtual {v15}, Landroid/os/Debug$MemoryInfo;->getTotalPss()I

    move-result v1

    int-to-long v1, v1

    .line 4849
    invoke-virtual {v15}, Landroid/os/Debug$MemoryInfo;->getTotalUss()I

    move-result v3

    int-to-long v8, v3

    invoke-virtual {v15}, Landroid/os/Debug$MemoryInfo;->getTotalRss()I

    move-result v3

    move/from16 v32, v4

    int-to-long v3, v3

    const/16 v26, 0x0

    const/16 v27, 0x4

    move-object/from16 v19, v0

    move-wide/from16 v20, v1

    move-wide/from16 v22, v8

    move-wide/from16 v24, v3

    move-wide/from16 v28, v16

    .line 4848
    invoke-virtual/range {v19 .. v29}, Lcom/android/server/am/ProcessProfileRecord;->addPss(JJJZIJ)V

    .line 4851
    invoke-virtual {v14}, Lcom/android/server/am/ProcessRecord;->getPkgList()Lcom/android/server/am/PackageList;

    move-result-object v1

    new-instance v2, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda0;
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    move-object v3, v13

    move-object v13, v2

    move-object/from16 v18, v0

    :try_start_8
    invoke-direct/range {v13 .. v18}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda0;-><init>(Lcom/android/server/am/ProcessRecord;Landroid/os/Debug$MemoryInfo;JLcom/android/server/am/ProcessProfileRecord;)V

    invoke-virtual {v1, v2}, Lcom/android/server/am/PackageList;->forEachPackageProcessStats(Ljava/util/function/Consumer;)V

    goto :goto_6

    :cond_a
    move/from16 v32, v4

    move-object v3, v13

    .line 4867
    :goto_6
    monitor-exit v3

    goto :goto_9

    :catchall_1
    move-exception v0

    move-object v3, v13

    :goto_7
    monitor-exit v3
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_2

    throw v0

    :catchall_2
    move-exception v0

    goto :goto_7

    :cond_b
    :goto_8
    move-wide/from16 v30, v2

    move/from16 v32, v4

    :goto_9
    add-int/lit8 v12, v12, -0x1

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-wide/from16 v2, v30

    move/from16 v4, v32

    goto/16 :goto_2

    :catchall_3
    move-exception v0

    .line 4812
    :try_start_9
    monitor-exit v13
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_3

    :try_start_a
    throw v0

    :catchall_4
    move-exception v0

    .line 4813
    monitor-exit v8
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_4

    throw v0

    :cond_c
    return-object v11

    :catchall_5
    move-exception v0

    .line 4793
    :try_start_b
    monitor-exit v12
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_5

    :try_start_c
    throw v0

    :catchall_6
    move-exception v0

    .line 4794
    monitor-exit v11
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_6

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v0
.end method

.method public final getProcessNamesLOSP()Lcom/android/internal/app/ProcessMap;
    .locals 0

    .line 3370
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {p0}, Lcom/android/server/am/ProcessList;->getProcessNamesLOSP()Lcom/android/server/am/ProcessList$MyProcessMap;

    move-result-object p0

    return-object p0
.end method

.method public getProcessPss([I)[J
    .locals 30

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    const-string v2, "getProcessPss"

    .line 4875
    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 4877
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    .line 4878
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    .line 4879
    invoke-static {v3}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v4

    const-string v5, "android.permission.INTERACT_ACROSS_USERS_FULL"

    .line 4880
    invoke-static {v5, v3}, Landroid/app/ActivityManager;->checkUidPermission(Ljava/lang/String;I)I

    move-result v5

    const/4 v6, 0x1

    const/4 v7, 0x0

    if-nez v5, :cond_0

    move v5, v6

    goto :goto_0

    :cond_0
    move v5, v7

    .line 4883
    :goto_0
    iget-object v8, v0, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    const-string v9, "getProcessPss"

    invoke-virtual {v8, v9, v2, v3}, Lcom/android/server/wm/ActivityTaskManagerInternal;->isGetTasksAllowed(Ljava/lang/String;II)Z

    move-result v2

    .line 4886
    array-length v3, v1

    new-array v3, v3, [J

    .line 4887
    array-length v8, v1

    sub-int/2addr v8, v6

    :goto_1
    if-ltz v8, :cond_5

    .line 4890
    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v6

    .line 4891
    :try_start_0
    iget-object v9, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v9
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    .line 4892
    :try_start_1
    iget-object v10, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    aget v11, v1, v8

    invoke-virtual {v10, v11}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v13

    if-eqz v13, :cond_1

    .line 4893
    iget-object v10, v13, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {v10}, Lcom/android/server/am/ProcessStateRecord;->getSetAdj()I

    move-result v10

    goto :goto_2

    :cond_1
    move v10, v7

    .line 4894
    :goto_2
    monitor-exit v9
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 4895
    :try_start_2
    monitor-exit v6
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    if-eqz v2, :cond_4

    if-nez v5, :cond_2

    .line 4896
    iget v6, v13, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v6}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v6

    if-eq v6, v4, :cond_2

    goto :goto_3

    :cond_2
    const/4 v6, 0x3

    new-array v6, v6, [J

    .line 4902
    invoke-static {}, Landroid/os/SystemClock;->currentThreadTimeMillis()J

    move-result-wide v11

    .line 4903
    aget v9, v1, v8

    const/4 v14, 0x0

    invoke-static {v9, v6, v14}, Landroid/os/Debug;->getPss(I[J[J)J

    move-result-wide v26

    aput-wide v26, v3, v8

    .line 4904
    invoke-static {}, Landroid/os/SystemClock;->currentThreadTimeMillis()J

    move-result-wide v14

    sub-long v28, v14, v11

    if-eqz v13, :cond_4

    .line 4906
    iget-object v9, v13, Lcom/android/server/am/ProcessRecord;->mProfile:Lcom/android/server/am/ProcessProfileRecord;

    .line 4907
    iget-object v11, v0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    iget-object v11, v11, Lcom/android/server/am/AppProfiler;->mProfilerLock:Ljava/lang/Object;

    monitor-enter v11

    .line 4908
    :try_start_3
    invoke-virtual {v9}, Lcom/android/server/am/ProcessProfileRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v12

    if-eqz v12, :cond_3

    invoke-virtual {v9}, Lcom/android/server/am/ProcessProfileRecord;->getSetAdj()I

    move-result v12

    if-ne v12, v10, :cond_3

    aget-wide v18, v6, v7

    const/4 v10, 0x2

    aget-wide v20, v6, v10

    const/16 v22, 0x0

    const/16 v23, 0x3

    move-object v15, v9

    move-wide/from16 v16, v26

    move-wide/from16 v24, v28

    .line 4910
    invoke-virtual/range {v15 .. v25}, Lcom/android/server/am/ProcessProfileRecord;->addPss(JJJZIJ)V

    .line 4912
    invoke-virtual {v13}, Lcom/android/server/am/ProcessRecord;->getPkgList()Lcom/android/server/am/PackageList;

    move-result-object v10

    new-instance v14, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda18;

    move-object v12, v14

    move-object v7, v14

    move-wide/from16 v14, v26

    move-object/from16 v16, v6

    move-wide/from16 v17, v28

    move-object/from16 v19, v9

    invoke-direct/range {v12 .. v19}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda18;-><init>(Lcom/android/server/am/ProcessRecord;J[JJLcom/android/server/am/ProcessProfileRecord;)V

    invoke-virtual {v10, v7}, Lcom/android/server/am/PackageList;->forEachPackageProcessStats(Ljava/util/function/Consumer;)V

    .line 4927
    :cond_3
    monitor-exit v11

    goto :goto_3

    :catchall_0
    move-exception v0

    monitor-exit v11
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    throw v0

    :cond_4
    :goto_3
    add-int/lit8 v8, v8, -0x1

    const/4 v7, 0x0

    goto/16 :goto_1

    :catchall_1
    move-exception v0

    .line 4894
    :try_start_4
    monitor-exit v9
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    :try_start_5
    throw v0

    :catchall_2
    move-exception v0

    .line 4895
    monitor-exit v6
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_2

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v0

    :cond_5
    return-object v3
.end method

.method public getProcessRecordFromPidLocked(I)Lcom/android/server/am/ProcessRecord;
    .locals 1

    .line 23888
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v0

    .line 23889
    :try_start_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object p0

    monitor-exit v0

    return-object p0

    :catchall_0
    move-exception p0

    .line 23890
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw p0
.end method

.method public final getProcessRecordLocked(Ljava/lang/String;I)Lcom/android/server/am/ProcessRecord;
    .locals 0

    .line 3365
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/ProcessList;->getProcessRecordLocked(Ljava/lang/String;I)Lcom/android/server/am/ProcessRecord;

    move-result-object p0

    return-object p0
.end method

.method public getProcessStatesAndOomScoresForPIDs([I[I[I)V
    .locals 12

    if-eqz p3, :cond_0

    const-string v0, "android.permission.GET_PROCESS_STATE_AND_OOM_SCORE"

    const-string v1, "getProcessStatesAndOomScoresForPIDs()"

    .line 7202
    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    :cond_0
    if-eqz p1, :cond_b

    if-eqz p2, :cond_a

    .line 7210
    array-length v0, p1

    array-length v1, p2

    if-ne v0, v1, :cond_9

    if-eqz p3, :cond_2

    .line 7212
    array-length v0, p1

    array-length v1, p3

    if-ne v0, v1, :cond_1

    goto :goto_0

    .line 7213
    :cond_1
    new-instance p0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo p1, "pids and scores arrays have different lengths!"

    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 7216
    :cond_2
    :goto_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v0

    .line 7217
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    const/4 v2, -0x1

    const-wide/high16 v3, -0x8000000000000000L

    const/4 v5, 0x0

    move v6, v2

    .line 7220
    :goto_1
    :try_start_1
    array-length v7, p1

    if-ge v5, v7, :cond_7

    .line 7221
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    aget v8, p1, v5

    invoke-virtual {v7, v8}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v7

    if-eqz v7, :cond_5

    .line 7223
    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mPendingStartActivityUids:Lcom/android/server/am/PendingStartActivityUids;

    iget v9, v7, Lcom/android/server/am/ProcessRecord;->uid:I

    aget v10, p1, v5

    .line 7224
    invoke-virtual {v8, v9, v10}, Lcom/android/server/am/PendingStartActivityUids;->getPendingTopPidTime(II)J

    move-result-wide v8

    const-wide/16 v10, 0x0

    cmp-long v10, v8, v10

    if-eqz v10, :cond_4

    const/4 v7, 0x2

    .line 7227
    aput v7, p2, v5

    if-eqz p3, :cond_3

    .line 7230
    aput v2, p3, v5

    :cond_3
    cmp-long v7, v8, v3

    if-lez v7, :cond_6

    move v6, v5

    move-wide v3, v8

    goto :goto_2

    .line 7237
    :cond_4
    iget-object v8, v7, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {v8}, Lcom/android/server/am/ProcessStateRecord;->getCurProcState()I

    move-result v8

    aput v8, p2, v5

    if-eqz p3, :cond_6

    .line 7239
    iget-object v7, v7, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {v7}, Lcom/android/server/am/ProcessStateRecord;->getCurAdj()I

    move-result v7

    aput v7, p3, v5

    goto :goto_2

    :cond_5
    const/16 v7, 0x14

    .line 7243
    aput v7, p2, v5

    if-eqz p3, :cond_6

    const/16 v7, -0x2710

    .line 7245
    aput v7, p3, v5

    :cond_6
    :goto_2
    add-int/lit8 v5, v5, 0x1

    goto :goto_1

    :cond_7
    if-eq v6, v2, :cond_8

    if-eqz p3, :cond_8

    const/4 p0, -0x2

    .line 7253
    aput p0, p3, v6

    .line 7256
    :cond_8
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 7257
    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return-void

    :catchall_0
    move-exception p0

    .line 7256
    :try_start_3
    monitor-exit v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    throw p0

    :catchall_1
    move-exception p0

    .line 7257
    monitor-exit v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p0

    .line 7211
    :cond_9
    new-instance p0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo p1, "pids and states arrays have different lengths!"

    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 7209
    :cond_a
    new-instance p0, Ljava/lang/NullPointerException;

    const-string/jumbo p1, "states"

    invoke-direct {p0, p1}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 7207
    :cond_b
    new-instance p0, Ljava/lang/NullPointerException;

    const-string/jumbo p1, "pids"

    invoke-direct {p0, p1}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw p0
.end method

.method public getProcessesInErrorState()Ljava/util/List;
    .locals 10

    const-string v0, "getProcessesInErrorState"

    .line 11688
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    const/4 v0, 0x1

    new-array v7, v0, [Ljava/util/List;

    .line 11692
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v5

    const-string v1, "android.permission.INTERACT_ACROSS_USERS_FULL"

    .line 11693
    invoke-static {v1, v5}, Landroid/app/ActivityManager;->checkUidPermission(Ljava/lang/String;I)I

    move-result v1

    const/4 v8, 0x0

    if-nez v1, :cond_0

    move v2, v0

    goto :goto_0

    :cond_0
    move v2, v8

    .line 11695
    :goto_0
    invoke-static {v5}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v3

    const-string v1, "android.permission.DUMP"

    .line 11697
    invoke-static {v1, v5}, Landroid/app/ActivityManager;->checkUidPermission(Ljava/lang/String;I)I

    move-result v1

    if-nez v1, :cond_1

    move v4, v0

    goto :goto_1

    :cond_1
    move v4, v8

    .line 11700
    :goto_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v0

    .line 11702
    :try_start_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    new-instance v9, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda10;

    move-object v1, v9

    move-object v6, v7

    invoke-direct/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda10;-><init>(ZIZI[Ljava/util/List;)V

    invoke-virtual {p0, v8, v9}, Lcom/android/server/am/ProcessList;->forEachLruProcessesLOSP(ZLjava/util/function/Consumer;)V

    .line 11734
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    aget-object p0, v7, v8

    return-object p0

    :catchall_0
    move-exception p0

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p0
.end method

.method public final getRealProcessStateLocked(Lcom/android/server/am/ProcessRecord;I)I
    .locals 1

    if-nez p1, :cond_0

    .line 18138
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v0

    .line 18139
    :try_start_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {p0, p2}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object p1

    .line 18140
    monitor-exit v0

    goto :goto_0

    :catchall_0
    move-exception p0

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw p0

    :cond_0
    :goto_0
    if-eqz p1, :cond_1

    .line 18142
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object p0

    if-eqz p0, :cond_1

    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->isKilled()Z

    move-result p0

    if-nez p0, :cond_1

    .line 18143
    iget-object p0, p1, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {p0}, Lcom/android/server/am/ProcessStateRecord;->getCurProcState()I

    move-result p0

    return p0

    :cond_1
    const/16 p0, 0x14

    return p0
.end method

.method public getReasonProcShouldNotBeFrozen(Lcom/android/server/am/ProcessRecord;)I
    .locals 6

    if-eqz p1, :cond_8

    .line 16515
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->isKilled()Z

    move-result v0

    if-nez v0, :cond_7

    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->isKilledByAm()Z

    move-result v0

    if-eqz v0, :cond_0

    goto :goto_0

    .line 16517
    :cond_0
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->mServices:Lcom/android/server/am/ProcessServiceRecord;

    invoke-virtual {v0}, Lcom/android/server/am/ProcessServiceRecord;->numberOfExecutingServices()I

    move-result v0

    if-lez v0, :cond_1

    const/4 p0, 0x2

    goto :goto_1

    .line 16519
    :cond_1
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->mReceivers:Lcom/android/server/am/ProcessReceiverRecord;

    invoke-virtual {v0}, Lcom/android/server/am/ProcessReceiverRecord;->numberOfCurReceivers()I

    move-result v0

    const/4 v1, 0x3

    if-lez v0, :cond_2

    move p0, v1

    goto :goto_1

    .line 16521
    :cond_2
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    invoke-virtual {p0, p1}, Lcom/android/server/am/ContentProviderHelper;->checkAppInLaunchingProvidersMARsLocked(Lcom/android/server/am/ProcessRecord;)Z

    move-result p0

    if-eqz p0, :cond_3

    const/4 p0, 0x4

    goto :goto_1

    .line 16523
    :cond_3
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v2

    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getStartTime()J

    move-result-wide v4

    sub-long/2addr v2, v4

    const-wide/16 v4, 0x7d0

    cmp-long p0, v2, v4

    if-gez p0, :cond_4

    const/4 p0, 0x5

    goto :goto_1

    .line 16526
    :cond_4
    iget-object p0, p1, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {p0}, Lcom/android/server/am/ProcessStateRecord;->getCurAdj()I

    move-result p0

    if-gtz p0, :cond_6

    iget-object p0, p1, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    .line 16527
    invoke-virtual {p0}, Lcom/android/server/am/ProcessStateRecord;->getCurProcState()I

    move-result p0

    const/16 v0, 0xc

    if-eq p0, v0, :cond_6

    .line 16528
    invoke-static {}, Lcom/android/server/am/MARsPolicyManager;->getInstance()Lcom/android/server/am/MARsPolicyManager;

    move-result-object p0

    invoke-virtual {p0}, Lcom/android/server/am/MARsPolicyManager;->isChinaPolicyEnabled()Z

    move-result p0

    if-eqz p0, :cond_5

    invoke-static {}, Lcom/android/server/am/MARsPolicyManager;->getInstance()Lcom/android/server/am/MARsPolicyManager;

    move-result-object p0

    invoke-virtual {p0}, Lcom/android/server/am/MARsPolicyManager;->getScreenOnState()Z

    move-result p0

    if-eqz p0, :cond_8

    :cond_5
    const/4 p0, 0x6

    goto :goto_1

    .line 16531
    :cond_6
    iget-object p0, p1, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {p0}, Lcom/android/server/am/ProcessStateRecord;->getCurProcState()I

    move-result p0

    if-ne p0, v1, :cond_8

    const/16 p0, 0x8

    goto :goto_1

    :cond_7
    :goto_0
    const/4 p0, 0x1

    goto :goto_1

    :cond_8
    const/4 p0, 0x0

    :goto_1
    return p0
.end method

.method public getRecentTasks(III)Landroid/content/pm/ParceledListSlice;
    .locals 0

    .line 8141
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/wm/ActivityTaskManagerService;->getRecentTasks(III)Landroid/content/pm/ParceledListSlice;

    move-result-object p0

    return-object p0
.end method

.method public getRecordForAppLOSP(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;
    .locals 0

    if-nez p1, :cond_0

    const/4 p0, 0x0

    return-object p0

    .line 4019
    :cond_0
    invoke-interface {p1}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object p1

    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLOSP(Landroid/os/IBinder;)Lcom/android/server/am/ProcessRecord;

    move-result-object p0

    return-object p0
.end method

.method public getRecordForAppLOSP(Landroid/os/IBinder;)Lcom/android/server/am/ProcessRecord;
    .locals 6

    const/4 v0, 0x0

    if-nez p1, :cond_0

    return-object v0

    .line 4028
    :cond_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v1, p1}, Lcom/android/server/am/ProcessList;->getLRURecordForAppLOSP(Landroid/os/IBinder;)Lcom/android/server/am/ProcessRecord;

    move-result-object v1

    if-eqz v1, :cond_1

    return-object v1

    .line 4032
    :cond_1
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 4033
    invoke-virtual {p0}, Lcom/android/server/am/ProcessList;->getProcessNamesLOSP()Lcom/android/server/am/ProcessList$MyProcessMap;

    move-result-object p0

    invoke-virtual {p0}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object p0

    .line 4034
    invoke-virtual {p0}, Landroid/util/ArrayMap;->size()I

    move-result v1

    add-int/lit8 v1, v1, -0x1

    :goto_0
    if-ltz v1, :cond_5

    .line 4035
    invoke-virtual {p0, v1}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/util/SparseArray;

    .line 4036
    invoke-virtual {v2}, Landroid/util/SparseArray;->size()I

    move-result v3

    add-int/lit8 v3, v3, -0x1

    :goto_1
    if-ltz v3, :cond_4

    .line 4037
    invoke-virtual {v2, v3}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ProcessRecord;

    .line 4038
    invoke-virtual {v4}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v5

    if-eqz v5, :cond_3

    .line 4039
    invoke-interface {v5}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v5

    if-ne v5, p1, :cond_3

    .line 4040
    invoke-virtual {v4}, Lcom/android/server/am/ProcessRecord;->isPendingFinishAttach()Z

    move-result p0

    if-nez p0, :cond_2

    .line 4041
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string p1, "getRecordForApp: exists in name list but not in LRU list: "

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    const-string p1, "ActivityManager"

    invoke-static {p1, p0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    :cond_2
    return-object v4

    :cond_3
    add-int/lit8 v3, v3, -0x1

    goto :goto_1

    :cond_4
    add-int/lit8 v1, v1, -0x1

    goto :goto_0

    :cond_5
    return-object v0
.end method

.method public getRestrictableList(I)Ljava/util/List;
    .locals 0

    .line 24009
    invoke-static {}, Lcom/android/server/am/MARsPolicyManager;->getInstance()Lcom/android/server/am/MARsPolicyManager;

    move-result-object p0

    invoke-virtual {p0, p1}, Lcom/android/server/am/MARsPolicyManager;->getRestrictableList(I)Ljava/util/List;

    move-result-object p0

    return-object p0
.end method

.method public getRestrictedList(I)Ljava/util/List;
    .locals 0

    .line 24019
    invoke-static {}, Lcom/android/server/am/MARsPolicyManager;->getInstance()Lcom/android/server/am/MARsPolicyManager;

    move-result-object p0

    invoke-virtual {p0, p1}, Lcom/android/server/am/MARsPolicyManager;->getRestrictedList(I)Ljava/util/List;

    move-result-object p0

    return-object p0
.end method

.method public getRestrictionInfo(ILjava/lang/String;I)Lcom/samsung/android/sdhms/SemAppRestrictionManager$RestrictionInfo;
    .locals 0

    .line 23994
    invoke-static {}, Lcom/android/server/am/MARsPolicyManager;->getInstance()Lcom/android/server/am/MARsPolicyManager;

    move-result-object p0

    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/am/MARsPolicyManager;->getRestrictionInfoBySEP(ILjava/lang/String;I)Lcom/samsung/android/sdhms/SemAppRestrictionManager$RestrictionInfo;

    move-result-object p0

    return-object p0
.end method

.method public getRunningAppProcesses()Ljava/util/List;
    .locals 7

    const-string v0, "getRunningAppProcesses"

    .line 11741
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 11743
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v5

    .line 11744
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPackageManagerInt:Landroid/content/pm/PackageManagerInternal;

    invoke-virtual {v0, v5}, Landroid/content/pm/PackageManagerInternal;->getUidTargetSdkVersion(I)I

    move-result v6

    const-string v0, "android.permission.INTERACT_ACROSS_USERS_FULL"

    .line 11746
    invoke-static {v0, v5}, Landroid/app/ActivityManager;->checkUidPermission(Ljava/lang/String;I)I

    move-result v0

    if-nez v0, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    move v2, v0

    .line 11748
    invoke-static {v5}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v3

    .line 11749
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    const-string v1, "getRunningAppProcesses"

    .line 11750
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v4

    .line 11749
    invoke-virtual {v0, v1, v4, v5}, Lcom/android/server/wm/ActivityTaskManagerInternal;->isGetTasksAllowed(Ljava/lang/String;II)Z

    move-result v4

    .line 11752
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v0

    .line 11754
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ProcessList;->getRunningAppProcessesLOSP(ZIZII)Ljava/util/List;

    move-result-object p0

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return-object p0

    :catchall_0
    move-exception p0

    .line 11756
    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p0
.end method

.method public getRunningExternalApplications()Ljava/util/List;
    .locals 6

    const-string v0, "getRunningExternalApplications"

    .line 11761
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 11762
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getRunningAppProcesses()Ljava/util/List;

    move-result-object p0

    .line 11763
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    if-eqz p0, :cond_3

    .line 11764
    invoke-interface {p0}, Ljava/util/List;->size()I

    move-result v1

    if-lez v1, :cond_3

    .line 11765
    new-instance v1, Ljava/util/HashSet;

    invoke-direct {v1}, Ljava/util/HashSet;-><init>()V

    .line 11766
    invoke-interface {p0}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object p0

    :cond_0
    invoke-interface {p0}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_1

    invoke-interface {p0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/app/ActivityManager$RunningAppProcessInfo;

    .line 11767
    iget-object v2, v2, Landroid/app/ActivityManager$RunningAppProcessInfo;->pkgList:[Ljava/lang/String;

    if-eqz v2, :cond_0

    .line 11768
    array-length v3, v2

    const/4 v4, 0x0

    :goto_0
    if-ge v4, v3, :cond_0

    aget-object v5, v2, v4

    .line 11769
    invoke-interface {v1, v5}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    add-int/lit8 v4, v4, 0x1

    goto :goto_0

    .line 11773
    :cond_1
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object p0

    .line 11774
    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :catch_0
    :cond_2
    :goto_1
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_3

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/String;

    .line 11776
    :try_start_0
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v3

    const-wide/16 v4, 0x0

    invoke-interface {p0, v2, v4, v5, v3}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;JI)Landroid/content/pm/ApplicationInfo;

    move-result-object v2

    .line 11777
    iget v3, v2, Landroid/content/pm/ApplicationInfo;->flags:I

    const/high16 v4, 0x40000

    and-int/2addr v3, v4

    if-eqz v3, :cond_2

    .line 11778
    invoke-interface {v0, v2}, Ljava/util/List;->add(Ljava/lang/Object;)Z
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_1

    :cond_3
    return-object v0
.end method

.method public getRunningServiceControlPanel(Landroid/content/ComponentName;)Landroid/app/PendingIntent;
    .locals 4

    const-string v0, "getRunningServiceControlPanel"

    .line 15800
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 15801
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 15802
    invoke-static {v0}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v1

    if-eqz p1, :cond_1

    .line 15803
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal;

    move-result-object v2

    .line 15804
    invoke-virtual {p1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3, v0, v1}, Landroid/content/pm/PackageManagerInternal;->filterAppAccess(Ljava/lang/String;II)Z

    move-result v0

    if-eqz v0, :cond_0

    goto :goto_0

    .line 15807
    :cond_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 15808
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActiveServices;->getRunningServiceControlPanelLocked(Landroid/content/ComponentName;)Landroid/app/PendingIntent;

    move-result-object p1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object p1

    :catchall_0
    move-exception p1

    .line 15809
    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1

    :cond_1
    :goto_0
    const/4 p0, 0x0

    return-object p0
.end method

.method public getRunningUserIds()[I
    .locals 2

    const-string v0, "android.permission.INTERACT_ACROSS_USERS"

    .line 20297
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v1

    if-nez v1, :cond_0

    .line 20306
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {p0}, Lcom/android/server/am/UserController;->getStartedUserArray()[I

    move-result-object p0

    return-object p0

    .line 20299
    :cond_0
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Permission Denial: isUserRunning() from pid="

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20300
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ", uid="

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20301
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " requires "

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    const-string v0, "ActivityManager"

    .line 20303
    invoke-static {v0, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 20304
    new-instance v0, Ljava/lang/SecurityException;

    invoke-direct {v0, p0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public getScalingFactor(Ljava/lang/String;)F
    .locals 0

    .line 0
    const/high16 p0, 0x3f800000    # 1.0f

    return p0
.end method

.method public getServices(II)Ljava/util/List;
    .locals 7

    const-string v0, "getServices"

    .line 15785
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 15787
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v4

    const-string v0, "android.permission.INTERACT_ACROSS_USERS_FULL"

    .line 15788
    invoke-static {v0, v4}, Landroid/app/ActivityManager;->checkUidPermission(Ljava/lang/String;I)I

    move-result v0

    if-nez v0, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    move v6, v0

    .line 15790
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    const-string v1, "getServices"

    .line 15791
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    .line 15790
    invoke-virtual {v0, v1, v2, v4}, Lcom/android/server/wm/ActivityTaskManagerInternal;->isGetTasksAllowed(Ljava/lang/String;II)Z

    move-result v5

    .line 15792
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 15793
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    move v2, p1

    move v3, p2

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActiveServices;->getRunningServiceInfoLocked(IIIZZ)Ljava/util/List;

    move-result-object p1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object p1

    :catchall_0
    move-exception p1

    .line 15795
    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public getStartedUserState(I)Ljava/lang/String;
    .locals 0

    .line 20276
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {p0, p1}, Lcom/android/server/am/UserController;->getStartedUserState(I)Lcom/android/server/am/UserState;

    move-result-object p0

    .line 20277
    iget p0, p0, Lcom/android/server/am/UserState;->state:I

    invoke-static {p0}, Lcom/android/server/am/UserState;->stateToString(I)Ljava/lang/String;

    move-result-object p0

    return-object p0
.end method

.method public getStickyBroadcasts(Ljava/lang/String;I)Ljava/util/ArrayList;
    .locals 0

    .line 18150
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    .line 18151
    invoke-virtual {p0, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object p0

    check-cast p0, Landroid/util/ArrayMap;

    if-nez p0, :cond_0

    const/4 p0, 0x0

    return-object p0

    .line 18155
    :cond_0
    invoke-virtual {p0, p1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p0

    check-cast p0, Ljava/util/ArrayList;

    return-object p0
.end method

.method public getSwitchingFromUserMessage()Ljava/lang/String;
    .locals 0

    .line 20206
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {p0}, Lcom/android/server/am/UserController;->getSwitchingFromSystemUserMessage()Ljava/lang/String;

    move-result-object p0

    return-object p0
.end method

.method public getSwitchingToUserMessage()Ljava/lang/String;
    .locals 0

    .line 20211
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {p0}, Lcom/android/server/am/UserController;->getSwitchingToSystemUserMessage()Ljava/lang/String;

    move-result-object p0

    return-object p0
.end method

.method public getTagForIntentSender(Landroid/content/IIntentSender;Ljava/lang/String;)Ljava/lang/String;
    .locals 2

    .line 6897
    instance-of v0, p1, Lcom/android/server/am/PendingIntentRecord;

    const/4 v1, 0x0

    if-nez v0, :cond_0

    return-object v1

    .line 6901
    :cond_0
    :try_start_0
    check-cast p1, Lcom/android/server/am/PendingIntentRecord;

    .line 6902
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0
    :try_end_0
    .catch Ljava/lang/ClassCastException; {:try_start_0 .. :try_end_0} :catch_0

    .line 6903
    :try_start_1
    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->getTagForIntentSenderLocked(Lcom/android/server/am/PendingIntentRecord;Ljava/lang/String;)Ljava/lang/String;

    move-result-object p1

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object p1

    :catchall_0
    move-exception p1

    .line 6904
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
    :try_end_3
    .catch Ljava/lang/ClassCastException; {:try_start_3 .. :try_end_3} :catch_0

    :catch_0
    return-object v1
.end method

.method public getTagForIntentSenderLocked(Lcom/android/server/am/PendingIntentRecord;Ljava/lang/String;)Ljava/lang/String;
    .locals 2

    .line 6911
    iget-object p0, p1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object p0, p0, Lcom/android/server/am/PendingIntentRecord$Key;->requestIntent:Landroid/content/Intent;

    if-eqz p0, :cond_5

    .line 6913
    iget-object v0, p1, Lcom/android/server/am/PendingIntentRecord;->lastTag:Ljava/lang/String;

    if-eqz v0, :cond_1

    iget-object v0, p1, Lcom/android/server/am/PendingIntentRecord;->lastTagPrefix:Ljava/lang/String;

    if-ne v0, p2, :cond_1

    if-eqz v0, :cond_0

    .line 6914
    invoke-virtual {v0, p2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 6915
    :cond_0
    iget-object p0, p1, Lcom/android/server/am/PendingIntentRecord;->lastTag:Ljava/lang/String;

    return-object p0

    .line 6917
    :cond_1
    iput-object p2, p1, Lcom/android/server/am/PendingIntentRecord;->lastTagPrefix:Ljava/lang/String;

    .line 6918
    new-instance v0, Ljava/lang/StringBuilder;

    const/16 v1, 0x80

    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(I)V

    if-eqz p2, :cond_2

    .line 6920
    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 6922
    :cond_2
    invoke-virtual {p0}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object p2

    if-eqz p2, :cond_3

    .line 6923
    invoke-virtual {p0}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object p0

    invoke-virtual {v0, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    goto :goto_0

    .line 6924
    :cond_3
    invoke-virtual {p0}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object p2

    if-eqz p2, :cond_4

    .line 6925
    invoke-virtual {p0}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object p0

    invoke-virtual {p0, v0}, Landroid/content/ComponentName;->appendShortString(Ljava/lang/StringBuilder;)V

    goto :goto_0

    :cond_4
    const-string p0, "?"

    .line 6927
    invoke-virtual {v0, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 6929
    :goto_0
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    iput-object p0, p1, Lcom/android/server/am/PendingIntentRecord;->lastTag:Ljava/lang/String;

    return-object p0

    :cond_5
    const/4 p0, 0x0

    return-object p0
.end method

.method public getTaskBounds(I)Landroid/graphics/Rect;
    .locals 0

    .line 8095
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {p0, p1}, Lcom/android/server/wm/ActivityTaskManagerService;->getTaskBounds(I)Landroid/graphics/Rect;

    move-result-object p0

    return-object p0
.end method

.method public getTaskForActivity(Landroid/os/IBinder;Z)I
    .locals 0

    .line 8151
    invoke-static {}, Landroid/app/ActivityClient;->getInstance()Landroid/app/ActivityClient;

    move-result-object p0

    invoke-virtual {p0, p1, p2}, Landroid/app/ActivityClient;->getTaskForActivity(Landroid/os/IBinder;Z)I

    move-result p0

    return p0
.end method

.method public getTasks(I)Ljava/util/List;
    .locals 0

    .line 8075
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {p0, p1}, Lcom/android/server/wm/ActivityTaskManagerService;->getTasks(I)Ljava/util/List;

    move-result-object p0

    return-object p0
.end method

.method public final getTestUtilityServiceLocked()Landroid/content/pm/TestUtilityService;
    .locals 1

    .line 8597
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTestUtilityService:Landroid/content/pm/TestUtilityService;

    if-nez v0, :cond_0

    .line 8598
    const-class v0, Landroid/content/pm/TestUtilityService;

    .line 8599
    invoke-static {v0}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/content/pm/TestUtilityService;

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTestUtilityService:Landroid/content/pm/TestUtilityService;

    .line 8601
    :cond_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mTestUtilityService:Landroid/content/pm/TestUtilityService;

    return-object p0
.end method

.method public getTopApp()Lcom/android/server/am/ProcessRecord;
    .locals 10

    .line 19485
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    const/4 v1, 0x0

    if-eqz v0, :cond_0

    invoke-virtual {v0}, Lcom/android/server/wm/ActivityTaskManagerInternal;->getTopApp()Lcom/android/server/wm/WindowProcessController;

    move-result-object v0

    goto :goto_0

    :cond_0
    move-object v0, v1

    :goto_0
    if-eqz v0, :cond_1

    .line 19486
    iget-object v0, v0, Lcom/android/server/wm/WindowProcessController;->mOwner:Ljava/lang/Object;

    check-cast v0, Lcom/android/server/am/ProcessRecord;

    goto :goto_1

    :cond_1
    move-object v0, v1

    :goto_1
    if-eqz v0, :cond_2

    .line 19490
    iget-object v1, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    .line 19491
    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    goto :goto_2

    :cond_2
    const/4 v2, -0x1

    .line 19497
    :goto_2
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedAppLock:Ljava/lang/Object;

    monitor-enter v3

    .line 19498
    :try_start_0
    iget v4, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedUid:I

    if-ne v2, v4, :cond_3

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedPackage:Ljava/lang/String;

    if-eq v1, v4, :cond_6

    if-eqz v1, :cond_3

    .line 19499
    invoke-virtual {v1, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_6

    .line 19501
    :cond_3
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v4
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 19503
    :try_start_1
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedPackage:Ljava/lang/String;

    if-eqz v6, :cond_4

    .line 19504
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    iget v8, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedUid:I

    const/16 v9, 0x4003

    invoke-virtual {v7, v9, v6, v8}, Lcom/android/server/am/BatteryStatsService;->noteEvent(ILjava/lang/String;I)V

    .line 19507
    :cond_4
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedPackage:Ljava/lang/String;

    .line 19508
    iput v2, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedUid:I

    if-eqz v1, :cond_5

    .line 19510
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    const v6, 0x8003

    invoke-virtual {p0, v6, v1, v2}, Lcom/android/server/am/BatteryStatsService;->noteEvent(ILjava/lang/String;I)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 19514
    :cond_5
    :try_start_2
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 19517
    :cond_6
    monitor-exit v3

    return-object v0

    :catchall_0
    move-exception p0

    .line 19514
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 19515
    throw p0

    :catchall_1
    move-exception p0

    .line 19517
    monitor-exit v3
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    throw p0
.end method

.method public final getUidFromIntent(Landroid/content/Intent;)I
    .locals 2

    const/4 p0, -0x1

    if-nez p1, :cond_0

    return p0

    .line 18165
    :cond_0
    invoke-virtual {p1}, Landroid/content/Intent;->getExtras()Landroid/os/Bundle;

    move-result-object v0

    const-string v1, "android.intent.extra.UID"

    .line 18166
    invoke-virtual {p1, v1}, Landroid/content/Intent;->hasExtra(Ljava/lang/String;)Z

    move-result p1

    if-eqz p1, :cond_1

    .line 18167
    invoke-virtual {v0, v1}, Landroid/os/Bundle;->getInt(Ljava/lang/String;)I

    move-result p0

    :cond_1
    return p0
.end method

.method public getUidFrozenState([I)[I
    .locals 5

    const-string/jumbo v0, "uid array cannot be null"

    .line 9744
    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    const-string v0, "android.permission.PACKAGE_USAGE_STATS"

    const-string v1, "getUidFrozenState()"

    .line 9745
    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 9748
    array-length v0, p1

    new-array v0, v0, [I

    .line 9749
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v1

    const/4 v2, 0x0

    .line 9750
    :goto_0
    :try_start_0
    array-length v3, p1

    if-ge v2, v3, :cond_1

    .line 9751
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v3, v3, Lcom/android/server/am/ProcessList;->mActiveUids:Lcom/android/server/am/ActiveUids;

    aget v4, p1, v2

    invoke-virtual {v3, v4}, Lcom/android/server/am/ActiveUids;->get(I)Lcom/android/server/am/UidRecord;

    move-result-object v3

    if-eqz v3, :cond_0

    .line 9752
    invoke-virtual {v3}, Lcom/android/server/am/UidRecord;->areAllProcessesFrozen()Z

    move-result v3

    if-eqz v3, :cond_0

    const/4 v3, 0x1

    .line 9753
    aput v3, v0, v2

    goto :goto_1

    :cond_0
    const/4 v3, 0x2

    .line 9755
    aput v3, v0, v2

    :goto_1
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 9758
    :cond_1
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return-object v0

    :catchall_0
    move-exception p0

    :try_start_1
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p0
.end method

.method public getUidProcessCapabilities(ILjava/lang/String;)I
    .locals 10

    .line 9579
    invoke-virtual {p0, p2}, Lcom/android/server/am/ActivityManagerService;->hasUsageStatsPermission(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_0

    const-string v0, "android.permission.PACKAGE_USAGE_STATS"

    const-string v1, "getUidProcessState"

    .line 9580
    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 9585
    :cond_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v4

    .line 9586
    invoke-static {p1}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v5

    const/4 v6, 0x0

    const/4 v7, 0x2

    const-string v8, "getUidProcessCapabilities"

    move-object v9, p2

    .line 9585
    invoke-virtual/range {v2 .. v9}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    .line 9589
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter p2

    .line 9590
    :try_start_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {p0, p1}, Lcom/android/server/am/ProcessList;->getUidProcessCapabilityLOSP(I)I

    move-result p0

    monitor-exit p2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return p0

    :catchall_0
    move-exception p0

    .line 9591
    :try_start_1
    monitor-exit p2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p0
.end method

.method public getUidProcessCapabilityLocked(I)I
    .locals 0

    .line 7165
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {p0, p1}, Lcom/android/server/am/ProcessList;->getUidProcessCapabilityLOSP(I)I

    move-result p0

    return p0
.end method

.method public getUidProcessState(ILjava/lang/String;)I
    .locals 10

    .line 9559
    invoke-virtual {p0, p2}, Lcom/android/server/am/ActivityManagerService;->hasUsageStatsPermission(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_0

    const-string v0, "android.permission.PACKAGE_USAGE_STATS"

    const-string v1, "getUidProcessState"

    .line 9560
    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 9565
    :cond_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v4

    .line 9566
    invoke-static {p1}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v5

    const/4 v6, 0x0

    const/4 v7, 0x2

    const-string v8, "getUidProcessState"

    move-object v9, p2

    .line 9565
    invoke-virtual/range {v2 .. v9}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    .line 9569
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter p2

    .line 9570
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingStartActivityUids:Lcom/android/server/am/PendingStartActivityUids;

    invoke-virtual {v0, p1}, Lcom/android/server/am/PendingStartActivityUids;->isPendingTopUid(I)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 9571
    monitor-exit p2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    const/4 p0, 0x2

    return p0

    .line 9573
    :cond_1
    :try_start_1
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {p0, p1}, Lcom/android/server/am/ProcessList;->getUidProcStateLOSP(I)I

    move-result p0

    monitor-exit p2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return p0

    :catchall_0
    move-exception p0

    .line 9574
    :try_start_2
    monitor-exit p2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p0
.end method

.method public getUidState(I)I
    .locals 1

    .line 7153
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v0

    .line 7154
    :try_start_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {p0, p1}, Lcom/android/server/am/ProcessList;->getUidProcStateLOSP(I)I

    move-result p0

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return p0

    :catchall_0
    move-exception p0

    .line 7155
    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p0
.end method

.method public getUidStateLocked(I)I
    .locals 0

    .line 7160
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {p0, p1}, Lcom/android/server/am/ProcessList;->getUidProcStateLOSP(I)I

    move-result p0

    return p0
.end method

.method public grantImplicitAccess(ILandroid/content/Intent;II)V
    .locals 6

    .line 7911
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal;

    move-result-object v0

    const/4 v5, 0x1

    move v1, p1

    move-object v2, p2

    move v3, p4

    move v4, p3

    .line 7912
    invoke-virtual/range {v0 .. v5}, Landroid/content/pm/PackageManagerInternal;->grantImplicitAccess(ILandroid/content/Intent;IIZ)V

    return-void
.end method

.method public grantUriPermission(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/net/Uri;II)V
    .locals 3

    const-string v0, "grantUriPermission"

    .line 7961
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 7962
    new-instance v0, Lcom/android/server/uri/GrantUri;

    invoke-direct {v0, p5, p3, p4}, Lcom/android/server/uri/GrantUri;-><init>(ILandroid/net/Uri;I)V

    .line 7963
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 7964
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLOSP(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v1

    if-eqz v1, :cond_6

    if-eqz p2, :cond_5

    .line 7973
    iget p1, v1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {p1}, Landroid/os/UserHandle;->getUserId(I)I

    move-result p1

    .line 7974
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPackageManagerInt:Landroid/content/pm/PackageManagerInternal;

    iget v2, v1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v0, p2, v2, p1}, Landroid/content/pm/PackageManagerInternal;->filterAppAccess(Ljava/lang/String;II)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 7975
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :cond_0
    const/16 v0, 0xc3

    .line 7978
    :try_start_1
    invoke-static {p4, v0}, Lcom/android/internal/util/Preconditions;->checkFlagsArgument(II)I

    .line 7983
    new-instance v0, Landroid/content/Intent;

    invoke-direct {v0}, Landroid/content/Intent;-><init>()V

    .line 7984
    invoke-virtual {v0, p3}, Landroid/content/Intent;->setData(Landroid/net/Uri;)Landroid/content/Intent;

    .line 7985
    invoke-virtual {v0, p4}, Landroid/content/Intent;->setFlags(I)Landroid/content/Intent;

    .line 7988
    iget p3, v1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {p3}, Landroid/os/UserHandle;->getUserId(I)I

    move-result p3

    if-eq p5, p3, :cond_2

    .line 7989
    invoke-static {p5}, Lcom/samsung/android/knox/SemPersonaManager;->isSecureFolderId(I)Z

    move-result p3

    if-nez p3, :cond_1

    iget p3, v1, Lcom/android/server/am/ProcessRecord;->uid:I

    .line 7990
    invoke-static {p3}, Landroid/os/UserHandle;->getUserId(I)I

    move-result p3

    invoke-static {p3}, Lcom/samsung/android/knox/SemPersonaManager;->isSecureFolderId(I)Z

    move-result p3

    if-eqz p3, :cond_2

    .line 7991
    :cond_1
    invoke-virtual {v0, p5}, Landroid/content/Intent;->prepareToLeaveUser(I)V

    .line 7998
    :cond_2
    iget p3, v1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {p3}, Landroid/os/UserHandle;->getUserId(I)I

    move-result p3

    if-eq p5, p3, :cond_4

    .line 7999
    invoke-static {p5}, Lcom/samsung/android/app/SemDualAppManager;->isDualAppId(I)Z

    move-result p3

    if-nez p3, :cond_3

    iget p3, v1, Lcom/android/server/am/ProcessRecord;->uid:I

    .line 8000
    invoke-static {p3}, Landroid/os/UserHandle;->getUserId(I)I

    move-result p3

    invoke-static {p3}, Lcom/samsung/android/app/SemDualAppManager;->isDualAppId(I)Z

    move-result p3

    if-eqz p3, :cond_4

    .line 8001
    :cond_3
    invoke-virtual {v0, p5}, Landroid/content/Intent;->prepareToLeaveUser(I)V

    .line 8006
    :cond_4
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mUgmInternal:Lcom/android/server/uri/UriGrantsManagerInternal;

    iget p4, v1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-interface {p3, v0, p4, p2, p1}, Lcom/android/server/uri/UriGrantsManagerInternal;->checkGrantUriPermissionFromIntent(Landroid/content/Intent;ILjava/lang/String;I)Lcom/android/server/uri/NeededUriGrants;

    move-result-object p1

    .line 8008
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mUgmInternal:Lcom/android/server/uri/UriGrantsManagerInternal;

    const/4 p3, 0x0

    invoke-interface {p2, p1, p3}, Lcom/android/server/uri/UriGrantsManagerInternal;->grantUriPermissionUncheckedFromIntent(Lcom/android/server/uri/NeededUriGrants;Lcom/android/server/uri/UriPermissionOwner;)V

    .line 8009
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 7971
    :cond_5
    :try_start_2
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string/jumbo p2, "null target"

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 7966
    :cond_6
    new-instance p2, Ljava/lang/SecurityException;

    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string p4, "Unable to find app for caller "

    invoke-virtual {p3, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string p1, " when granting permission to uri "

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p2, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p2

    :catchall_0
    move-exception p1

    .line 8009
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public final handleAppDiedLocked(Lcom/android/server/am/ProcessRecord;IZZZ)V
    .locals 9

    .line 3966
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->isPmmEnabled()Z

    move-result v0

    if-eqz v0, :cond_0

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mKillPolicyManager:Lcom/android/server/am/KillPolicyManager;

    if-eqz v0, :cond_0

    .line 3967
    invoke-virtual {v0, p1}, Lcom/android/server/am/KillPolicyManager;->loggingAppDied(Lcom/android/server/am/ProcessRecord;)V

    :cond_0
    const/4 v6, -0x1

    const/4 v7, 0x0

    move-object v1, p0

    move-object v2, p1

    move v3, p2

    move v4, p3

    move v5, p4

    move v8, p5

    .line 3971
    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->cleanUpApplicationRecordLocked(Lcom/android/server/am/ProcessRecord;IZZIZZ)Z

    move-result p4

    if-nez p4, :cond_1

    if-nez p3, :cond_1

    .line 3974
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->removeLruProcessLocked(Lcom/android/server/am/ProcessRecord;)V

    if-lez p2, :cond_1

    .line 3976
    invoke-static {p2}, Lcom/android/server/am/ProcessList;->remove(I)V

    .line 3980
    :cond_1
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {p2, p1}, Lcom/android/server/am/AppProfiler;->onAppDiedLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 3982
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getWindowProcessController()Lcom/android/server/wm/WindowProcessController;

    move-result-object p4

    new-instance p5, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda3;

    invoke-direct {p5, p0, p1}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda3;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;)V

    invoke-virtual {p2, p4, p3, p5}, Lcom/android/server/wm/ActivityTaskManagerInternal;->handleAppDied(Lcom/android/server/wm/WindowProcessController;ZLjava/lang/Runnable;)V

    .line 3998
    sget-boolean p0, Lcom/android/server/am/MARsPolicyManager;->MARs_ENABLE:Z

    if-eqz p0, :cond_3

    invoke-static {}, Lcom/android/server/am/MARsPolicyManager;->getInstance()Lcom/android/server/am/MARsPolicyManager;

    move-result-object p0

    invoke-virtual {p0}, Lcom/android/server/am/MARsPolicyManager;->isChinaPolicyEnabled()Z

    move-result p0

    if-eqz p0, :cond_3

    .line 3999
    invoke-static {}, Lcom/android/server/am/MARsPolicyManager;->getInstance()Lcom/android/server/am/MARsPolicyManager;

    move-result-object p0

    iget-object p2, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object p2, p2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget p3, p1, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-virtual {p0, p2, p3}, Lcom/android/server/am/MARsPolicyManager;->isForegroundPackage(Ljava/lang/String;I)Z

    move-result p0

    if-nez p0, :cond_2

    invoke-static {}, Lcom/android/server/am/MARsPolicyManager;->getInstance()Lcom/android/server/am/MARsPolicyManager;

    move-result-object p0

    invoke-virtual {p0}, Lcom/android/server/am/MARsPolicyManager;->getScreenOnState()Z

    move-result p0

    if-nez p0, :cond_2

    const/4 p0, 0x1

    goto :goto_0

    :cond_2
    const/4 p0, 0x0

    :goto_0
    if-eqz p0, :cond_3

    .line 4001
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string p2, "Package: "

    invoke-virtual {p0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object p2, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object p2, p2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {p0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p2, ", userid: "

    invoke-virtual {p0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget p1, p1, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, ", hostingType: activity is Restricted by policy: autorun(2)"

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    const-string p1, "MARsPolicyManager"

    invoke-static {p1, p0}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    :cond_3
    return-void
.end method

.method public handleApplicationCrash(Landroid/os/IBinder;Landroid/app/ApplicationErrorReport$ParcelableCrashInfo;)V
    .locals 4

    const-string v0, "Crash"

    .line 10948
    invoke-virtual {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->findAppProcess(Landroid/os/IBinder;Ljava/lang/String;)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    if-nez p1, :cond_0

    const-string/jumbo p1, "system_server"

    goto :goto_0

    :cond_0
    if-nez v0, :cond_1

    const-string/jumbo p1, "unknown"

    goto :goto_0

    .line 10950
    :cond_1
    iget-object p1, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    .line 10953
    :goto_0
    sget-boolean v1, Lcom/samsung/android/rune/CoreRune;->SYSFW_APP_SPEG:Z

    if-eqz v1, :cond_2

    .line 10954
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v1

    if-eqz v1, :cond_2

    if-eqz v0, :cond_2

    .line 10955
    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget v3, v0, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-virtual {v1, v2, v3}, Landroid/content/pm/PackageManager;->isSpeg(Ljava/lang/String;I)Z

    move-result v1

    if-eqz v1, :cond_2

    const-string p1, "SPEG"

    .line 10956
    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Skipping crash report of "

    invoke-virtual {p2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v1, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v1, v1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {p2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, ": launched by SPEG"

    invoke-virtual {p2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-static {p1, p2}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 10961
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide p1

    .line 10963
    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 10964
    :try_start_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAppErrors:Lcom/android/server/am/AppErrors;

    invoke-virtual {v1, v0}, Lcom/android/server/am/AppErrors;->killAppAtUserRequestLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 10965
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 10967
    invoke-static {p1, p2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return-void

    :catchall_0
    move-exception v0

    .line 10965
    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    :catchall_1
    move-exception p0

    .line 10967
    invoke-static {p1, p2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 10968
    throw p0

    :cond_2
    const-string v1, "crash"

    .line 10975
    invoke-virtual {p0, v1, v0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->handleApplicationCrashInner(Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/app/ApplicationErrorReport$CrashInfo;)V

    return-void
.end method

.method public handleApplicationCrashInner(Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/app/ApplicationErrorReport$CrashInfo;)V
    .locals 48

    move-object/from16 v15, p0

    move-object/from16 v0, p1

    move-object/from16 v14, p2

    move-object/from16 v13, p3

    move-object/from16 v12, p4

    const-string v11, "ActivityManager"

    const/high16 v1, 0x3f800000    # 1.0f

    const/4 v2, 0x0

    if-eqz v14, :cond_1

    .line 10990
    iget-object v3, v14, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    if-eqz v3, :cond_1

    iget-object v3, v14, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v3, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    if-eqz v3, :cond_1

    .line 10991
    iget-object v3, v15, Lcom/android/server/am/ActivityManagerService;->mPackageManagerInt:Landroid/content/pm/PackageManagerInternal;

    iget-object v4, v14, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v4, v4, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    const/16 v5, 0x3e8

    iget v6, v14, Lcom/android/server/am/ProcessRecord;->userId:I

    .line 10992
    invoke-virtual {v3, v4, v5, v6}, Landroid/content/pm/PackageManagerInternal;->getIncrementalStatesInfo(Ljava/lang/String;II)Landroid/content/pm/IncrementalStatesInfo;

    move-result-object v3

    if-eqz v3, :cond_0

    .line 10995
    invoke-virtual {v3}, Landroid/content/pm/IncrementalStatesInfo;->getProgress()F

    move-result v1

    .line 10997
    :cond_0
    iget-object v3, v14, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    invoke-virtual {v3}, Landroid/content/pm/ApplicationInfo;->getCodePath()Ljava/lang/String;

    move-result-object v3

    if-eqz v3, :cond_1

    .line 10998
    invoke-virtual {v3}, Ljava/lang/String;->isEmpty()Z

    move-result v4

    if-nez v4, :cond_1

    .line 10999
    invoke-static {v3}, Landroid/os/incremental/IncrementalManager;->isIncrementalPath(Ljava/lang/String;)Z

    move-result v4

    if-eqz v4, :cond_1

    .line 11001
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "App crashed on incremental package "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v5, v14, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v5, v5, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v5, " which is "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/high16 v5, 0x42c80000    # 100.0f

    mul-float/2addr v5, v1

    float-to-int v5, v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v5, "% loaded."

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v11, v4}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    const-string v4, "incremental"

    .line 11003
    invoke-static {v4}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v4

    if-eqz v4, :cond_1

    .line 11006
    new-instance v2, Landroid/os/incremental/IncrementalManager;

    .line 11007
    invoke-static {v4}, Landroid/os/incremental/IIncrementalService$Stub;->asInterface(Landroid/os/IBinder;)Landroid/os/incremental/IIncrementalService;

    move-result-object v4

    invoke-direct {v2, v4}, Landroid/os/incremental/IncrementalManager;-><init>(Landroid/os/incremental/IIncrementalService;)V

    .line 11008
    invoke-virtual {v2, v3}, Landroid/os/incremental/IncrementalManager;->getMetrics(Ljava/lang/String;)Landroid/os/incremental/IncrementalMetrics;

    move-result-object v2

    :cond_1
    move v10, v1

    move-object/from16 v44, v2

    const-string/jumbo v1, "native_recoverable_crash"

    .line 11013
    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v45

    .line 11015
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    .line 11016
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-static {v2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v2

    const/16 v16, -0x1

    if-nez v14, :cond_2

    move/from16 v4, v16

    goto :goto_0

    .line 11017
    :cond_2
    iget-object v3, v14, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v3, v3, Landroid/content/pm/ApplicationInfo;->flags:I

    move v4, v3

    :goto_0
    iget-object v5, v12, Landroid/app/ApplicationErrorReport$CrashInfo;->exceptionClassName:Ljava/lang/String;

    iget-object v6, v12, Landroid/app/ApplicationErrorReport$CrashInfo;->exceptionMessage:Ljava/lang/String;

    iget-object v7, v12, Landroid/app/ApplicationErrorReport$CrashInfo;->throwFileName:Ljava/lang/String;

    iget v8, v12, Landroid/app/ApplicationErrorReport$CrashInfo;->throwLineNumber:I

    move-object/from16 v3, p3

    move/from16 v9, v45

    .line 11015
    invoke-static/range {v1 .. v9}, Lcom/android/server/am/EventLogTags;->writeAmCrash(IILjava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;II)V

    const-string/jumbo v9, "system_server"

    .line 11024
    invoke-virtual {v13, v9}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    const/4 v7, 0x0

    if-eqz v1, :cond_3

    const/4 v1, 0x3

    :goto_1
    move v3, v1

    goto :goto_2

    :cond_3
    if-eqz v14, :cond_4

    .line 11025
    invoke-virtual/range {p2 .. p2}, Lcom/android/server/am/ProcessRecord;->getProcessClassEnum()I

    move-result v1

    goto :goto_1

    :cond_4
    move v3, v7

    :goto_2
    if-eqz v14, :cond_5

    .line 11027
    iget v1, v14, Lcom/android/server/am/ProcessRecord;->uid:I

    move v5, v1

    goto :goto_3

    :cond_5
    move/from16 v5, v16

    :goto_3
    if-eqz v14, :cond_6

    .line 11028
    invoke-virtual/range {p2 .. p2}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v1

    move v6, v1

    goto :goto_4

    :cond_6
    move/from16 v6, v16

    :goto_4
    const/16 v1, 0x4e

    if-eqz v14, :cond_7

    .line 11034
    iget-object v2, v14, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    if-eqz v2, :cond_7

    iget-object v2, v14, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    goto :goto_5

    :cond_7
    const-string v2, ""

    :goto_5
    move-object/from16 v21, v2

    const/4 v2, 0x2

    const/4 v4, 0x1

    if-eqz v14, :cond_9

    .line 11035
    iget-object v8, v14, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    if-eqz v8, :cond_9

    iget-object v8, v14, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    invoke-virtual {v8}, Landroid/content/pm/ApplicationInfo;->isInstantApp()Z

    move-result v8

    if-eqz v8, :cond_8

    move/from16 v22, v2

    goto :goto_6

    :cond_8
    move/from16 v22, v4

    goto :goto_6

    :cond_9
    move/from16 v22, v7

    :goto_6
    if-eqz v14, :cond_b

    .line 11039
    invoke-virtual/range {p2 .. p2}, Lcom/android/server/am/ProcessRecord;->isInterestingToUserLocked()Z

    move-result v8

    if-eqz v8, :cond_a

    move/from16 v23, v2

    goto :goto_7

    :cond_a
    move/from16 v23, v4

    goto :goto_7

    :cond_b
    move/from16 v23, v7

    :goto_7
    if-eqz v44, :cond_c

    move/from16 v25, v4

    goto :goto_8

    :cond_c
    move/from16 v25, v7

    :goto_8
    const-wide/16 v17, -0x1

    if-eqz v44, :cond_d

    .line 11045
    invoke-virtual/range {v44 .. v44}, Landroid/os/incremental/IncrementalMetrics;->getMillisSinceOldestPendingRead()J

    move-result-wide v19

    move-wide/from16 v27, v19

    goto :goto_9

    :cond_d
    move-wide/from16 v27, v17

    :goto_9
    if-eqz v44, :cond_e

    .line 11047
    invoke-virtual/range {v44 .. v44}, Landroid/os/incremental/IncrementalMetrics;->getStorageHealthStatusCode()I

    move-result v2

    move/from16 v29, v2

    goto :goto_a

    :cond_e
    move/from16 v29, v16

    :goto_a
    if-eqz v44, :cond_f

    .line 11049
    invoke-virtual/range {v44 .. v44}, Landroid/os/incremental/IncrementalMetrics;->getDataLoaderStatusCode()I

    move-result v2

    move/from16 v30, v2

    goto :goto_b

    :cond_f
    move/from16 v30, v16

    :goto_b
    if-eqz v44, :cond_10

    .line 11051
    invoke-virtual/range {v44 .. v44}, Landroid/os/incremental/IncrementalMetrics;->getReadLogsEnabled()Z

    move-result v2

    if-eqz v2, :cond_10

    move/from16 v31, v4

    goto :goto_c

    :cond_10
    move/from16 v31, v7

    :goto_c
    if-eqz v44, :cond_11

    .line 11052
    invoke-virtual/range {v44 .. v44}, Landroid/os/incremental/IncrementalMetrics;->getMillisSinceLastDataLoaderBind()J

    move-result-wide v19

    move-wide/from16 v32, v19

    goto :goto_d

    :cond_11
    move-wide/from16 v32, v17

    :goto_d
    if-eqz v44, :cond_12

    .line 11054
    invoke-virtual/range {v44 .. v44}, Landroid/os/incremental/IncrementalMetrics;->getDataLoaderBindDelayMillis()J

    move-result-wide v19

    move-wide/from16 v34, v19

    goto :goto_e

    :cond_12
    move-wide/from16 v34, v17

    :goto_e
    if-eqz v44, :cond_13

    .line 11056
    invoke-virtual/range {v44 .. v44}, Landroid/os/incremental/IncrementalMetrics;->getTotalDelayedReads()I

    move-result v2

    move/from16 v36, v2

    goto :goto_f

    :cond_13
    move/from16 v36, v16

    :goto_f
    if-eqz v44, :cond_14

    .line 11058
    invoke-virtual/range {v44 .. v44}, Landroid/os/incremental/IncrementalMetrics;->getTotalFailedReads()I

    move-result v2

    move/from16 v37, v2

    goto :goto_10

    :cond_14
    move/from16 v37, v16

    :goto_10
    if-eqz v44, :cond_15

    .line 11060
    invoke-virtual/range {v44 .. v44}, Landroid/os/incremental/IncrementalMetrics;->getLastReadErrorUid()I

    move-result v2

    move/from16 v38, v2

    goto :goto_11

    :cond_15
    move/from16 v38, v16

    :goto_11
    if-eqz v44, :cond_16

    .line 11062
    invoke-virtual/range {v44 .. v44}, Landroid/os/incremental/IncrementalMetrics;->getMillisSinceLastReadError()J

    move-result-wide v19

    move-wide/from16 v39, v19

    goto :goto_12

    :cond_16
    move-wide/from16 v39, v17

    :goto_12
    if-eqz v44, :cond_17

    .line 11064
    invoke-virtual/range {v44 .. v44}, Landroid/os/incremental/IncrementalMetrics;->getLastReadErrorNumber()I

    move-result v2

    move/from16 v41, v2

    goto :goto_13

    :cond_17
    move/from16 v41, v7

    :goto_13
    if-eqz v44, :cond_18

    .line 11066
    invoke-virtual/range {v44 .. v44}, Landroid/os/incremental/IncrementalMetrics;->getTotalDelayedReadsDurationMillis()J

    move-result-wide v16

    move-wide/from16 v42, v16

    goto :goto_14

    :cond_18
    move-wide/from16 v42, v17

    :goto_14
    move/from16 v16, v1

    move/from16 v17, v5

    move-object/from16 v18, p1

    move-object/from16 v19, p3

    move/from16 v20, v6

    move/from16 v24, v3

    move/from16 v26, v10

    .line 11029
    invoke-static/range {v16 .. v43}, Lcom/android/internal/util/FrameworkStatsLog;->write(IILjava/lang/String;Ljava/lang/String;ILjava/lang/String;IIIZFJIIZJJIIIJIJ)V

    const-string/jumbo v1, "native_crash"

    .line 11070
    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_19

    .line 11071
    invoke-static {}, Lcom/android/server/criticalevents/CriticalEventLog;->getInstance()Lcom/android/server/criticalevents/CriticalEventLog;

    move-result-object v1

    invoke-virtual {v1, v3, v13, v5, v6}, Lcom/android/server/criticalevents/CriticalEventLog;->logNativeCrash(ILjava/lang/String;II)V

    goto :goto_15

    :cond_19
    const-string v1, "crash"

    .line 11072
    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_1a

    .line 11073
    invoke-static {}, Lcom/android/server/criticalevents/CriticalEventLog;->getInstance()Lcom/android/server/criticalevents/CriticalEventLog;

    move-result-object v1

    iget-object v2, v12, Landroid/app/ApplicationErrorReport$CrashInfo;->exceptionClassName:Ljava/lang/String;

    move-object/from16 v4, p3

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/criticalevents/CriticalEventLog;->logJavaCrash(Ljava/lang/String;ILjava/lang/String;II)V

    :cond_1a
    :goto_15
    if-nez v14, :cond_1b

    goto :goto_16

    .line 11078
    :cond_1b
    invoke-virtual/range {p2 .. p2}, Lcom/android/server/am/ProcessRecord;->getWindowProcessController()Lcom/android/server/wm/WindowProcessController;

    move-result-object v1

    invoke-virtual {v1}, Lcom/android/server/wm/WindowProcessController;->computeRelaunchReason()I

    move-result v7

    .line 11079
    :goto_16
    invoke-static {v7}, Lcom/android/server/wm/ActivityTaskManagerService;->relaunchReasonToString(I)Ljava/lang/String;

    move-result-object v1

    .line 11080
    iget-object v2, v12, Landroid/app/ApplicationErrorReport$CrashInfo;->crashTag:Ljava/lang/String;

    if-nez v2, :cond_1c

    .line 11081
    iput-object v1, v12, Landroid/app/ApplicationErrorReport$CrashInfo;->crashTag:Ljava/lang/String;

    goto :goto_17

    .line 11083
    :cond_1c
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    iget-object v3, v12, Landroid/app/ApplicationErrorReport$CrashInfo;->crashTag:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, " "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    iput-object v1, v12, Landroid/app/ApplicationErrorReport$CrashInfo;->crashTag:Ljava/lang/String;

    :goto_17
    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/16 v16, 0x0

    const/16 v17, 0x0

    .line 11086
    new-instance v4, Ljava/lang/Float;

    invoke-direct {v4, v10}, Ljava/lang/Float;-><init>(F)V

    const/16 v18, 0x0

    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object v0, v4

    move-object/from16 v4, p3

    move-object v10, v9

    move-object/from16 v9, v16

    move-object/from16 v46, v10

    move-object/from16 v10, v17

    move-object/from16 v47, v11

    move-object/from16 v11, p4

    move-object v12, v0

    move-object v0, v13

    move-object/from16 v13, v44

    move-object/from16 v14, v18

    invoke-virtual/range {v1 .. v14}, Lcom/android/server/am/ActivityManagerService;->addErrorToDropBox(Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Landroid/app/ApplicationErrorReport$CrashInfo;Ljava/lang/Float;Landroid/os/incremental/IncrementalMetrics;Ljava/util/UUID;)V

    const-string/jumbo v1, "java.lang.OutOfMemoryError"

    move-object/from16 v2, p4

    .line 11092
    iget-object v3, v2, Landroid/app/ApplicationErrorReport$CrashInfo;->exceptionClassName:Ljava/lang/String;

    invoke-virtual {v1, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_1e

    move-object/from16 v1, v46

    .line 11093
    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1e

    .line 11094
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->isHeapDumpAllowed()Z

    move-result v0

    if-eqz v0, :cond_1d

    :try_start_0
    const-string v0, "Start dumping for systemserver heapdump"
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_1

    move-object/from16 v1, v47

    .line 11096
    :try_start_1
    invoke-static {v1, v0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    const-string v0, "/data/log/core/system_server.hprof"

    .line 11098
    invoke-static {v0}, Landroid/os/Debug;->dumpHprofData(Ljava/lang/String;)V
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_0

    goto :goto_19

    :catch_0
    move-exception v0

    goto :goto_18

    :catch_1
    move-exception v0

    move-object/from16 v1, v47

    .line 11100
    :goto_18
    invoke-virtual {v0}, Ljava/io/IOException;->printStackTrace()V

    const-string v0, "Cannot dump systemserver java heapdump"

    .line 11101
    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_19

    :cond_1d
    move-object/from16 v1, v47

    .line 11105
    :goto_19
    const-class v0, Landroid/app/usage/UsageEvents$Event;

    invoke-static {v0}, Landroid/os/Debug;->countInstancesOfClass(Ljava/lang/Class;)J

    move-result-wide v3

    .line 11106
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "UsageEvents.Event : "

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v3, v4}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    const-wide/32 v0, 0xc350

    cmp-long v0, v3, v0

    if-ltz v0, :cond_1e

    .line 11108
    iget-object v0, v15, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    invoke-virtual {v0}, Landroid/app/usage/UsageStatsManagerInternal;->deleteDailyStatsFiles()V

    :cond_1e
    if-eqz v45, :cond_1f

    .line 11120
    iget-object v0, v15, Lcom/android/server/am/ActivityManagerService;->mAppErrors:Lcom/android/server/am/AppErrors;

    move-object/from16 v1, p2

    invoke-virtual {v0, v1, v2}, Lcom/android/server/am/AppErrors;->sendRecoverableCrashToAppExitInfo(Lcom/android/server/am/ProcessRecord;Landroid/app/ApplicationErrorReport$CrashInfo;)V

    goto :goto_1a

    :cond_1f
    move-object/from16 v1, p2

    .line 11122
    iget-object v0, v15, Lcom/android/server/am/ActivityManagerService;->mAppErrors:Lcom/android/server/am/AppErrors;

    invoke-virtual {v0, v1, v2}, Lcom/android/server/am/AppErrors;->crashApplication(Lcom/android/server/am/ProcessRecord;Landroid/app/ApplicationErrorReport$CrashInfo;)V

    :goto_1a
    return-void
.end method

.method public handleApplicationStrictModeViolation(Landroid/os/IBinder;ILandroid/os/StrictMode$ViolationInfo;)V
    .locals 5

    const-string v0, "StrictMode"

    .line 11132
    invoke-virtual {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->findAppProcess(Landroid/os/IBinder;Ljava/lang/String;)Lcom/android/server/am/ProcessRecord;

    move-result-object p1

    const/high16 v0, 0x4000000

    and-int/2addr v0, p2

    if-eqz v0, :cond_2

    .line 11135
    invoke-virtual {p3}, Landroid/os/StrictMode$ViolationInfo;->hashCode()I

    move-result v0

    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v0

    .line 11137
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;

    monitor-enter v1

    .line 11138
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;

    invoke-virtual {v2, v0}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_0

    const/4 v0, 0x0

    goto :goto_0

    .line 11147
    :cond_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;

    invoke-virtual {v2}, Ljava/util/HashSet;->size()I

    move-result v2

    const/16 v3, 0x1388

    if-lt v2, v3, :cond_1

    .line 11148
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;

    invoke-virtual {v2}, Ljava/util/HashSet;->clear()V

    .line 11150
    :cond_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;

    invoke-virtual {v2, v0}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    const/4 v0, 0x1

    .line 11152
    :goto_0
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-eqz v0, :cond_2

    .line 11154
    invoke-virtual {p0, p1, p3}, Lcom/android/server/am/ActivityManagerService;->logStrictModeViolationToDropBox(Lcom/android/server/am/ProcessRecord;Landroid/os/StrictMode$ViolationInfo;)V

    goto :goto_1

    :catchall_0
    move-exception p0

    .line 11152
    :try_start_1
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw p0

    :cond_2
    :goto_1
    const/high16 v0, 0x20000000

    and-int/2addr p2, v0

    if-eqz p2, :cond_3

    .line 11159
    new-instance p2, Lcom/android/server/am/AppErrorResult;

    invoke-direct {p2}, Lcom/android/server/am/AppErrorResult;-><init>()V

    .line 11160
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 11162
    :try_start_2
    invoke-static {}, Landroid/os/Message;->obtain()Landroid/os/Message;

    move-result-object v2

    const/16 v3, 0x1a

    .line 11163
    iput v3, v2, Landroid/os/Message;->what:I

    .line 11164
    new-instance v3, Ljava/util/HashMap;

    invoke-direct {v3}, Ljava/util/HashMap;-><init>()V

    const-string/jumbo v4, "result"

    .line 11165
    invoke-virtual {v3, v4, p2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    const-string v4, "app"

    .line 11166
    invoke-virtual {v3, v4, p1}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    const-string p1, "info"

    .line 11167
    invoke-virtual {v3, p1, p3}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 11168
    iput-object v3, v2, Landroid/os/Message;->obj:Ljava/lang/Object;

    .line 11169
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Landroid/os/Handler;

    invoke-virtual {p0, v2}, Landroid/os/Handler;->sendMessage(Landroid/os/Message;)Z
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 11171
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11173
    invoke-virtual {p2}, Lcom/android/server/am/AppErrorResult;->get()I

    move-result p0

    const-string p1, "ActivityManager"

    .line 11174
    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string p3, "handleApplicationStrictModeViolation; res="

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, p0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-static {p1, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_2

    :catchall_1
    move-exception p0

    .line 11171
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11172
    throw p0

    :cond_3
    :goto_2
    return-void
.end method

.method public handleApplicationWtf(Landroid/os/IBinder;Ljava/lang/String;ZLandroid/app/ApplicationErrorReport$ParcelableCrashInfo;I)Z
    .locals 8

    .line 11273
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    .line 11274
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v6

    .line 11277
    invoke-static {p4}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;)Ljava/lang/Object;

    const/4 v7, 0x0

    if-nez p3, :cond_7

    .line 11287
    invoke-static {}, Landroid/os/Process;->myPid()I

    move-result p3

    if-ne p5, p3, :cond_0

    goto/16 :goto_4

    :cond_0
    move-object v0, p0

    move v1, v2

    move v2, v6

    move-object v3, p1

    move-object v4, p2

    move-object v5, p4

    .line 11296
    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->handleApplicationWtfInner(IILandroid/os/IBinder;Ljava/lang/String;Landroid/app/ApplicationErrorReport$CrashInfo;)Lcom/android/server/am/ProcessRecord;

    move-result-object p1

    .line 11299
    sget-boolean p2, Landroid/os/Build;->IS_ENG:Z

    const/4 p3, 0x1

    if-nez p2, :cond_2

    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    .line 11300
    invoke-virtual {p2}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object p2

    const-string/jumbo p5, "wtf_is_fatal"

    invoke-static {p2, p5, v7}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result p2

    if-eqz p2, :cond_1

    goto :goto_0

    :cond_1
    move p2, v7

    goto :goto_1

    :cond_2
    :goto_0
    move p2, p3

    :goto_1
    if-eqz p1, :cond_4

    .line 11301
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->isPersistent()Z

    move-result p5

    if-eqz p5, :cond_3

    goto :goto_2

    :cond_3
    move p5, v7

    goto :goto_3

    :cond_4
    :goto_2
    move p5, p3

    :goto_3
    if-eqz p2, :cond_6

    if-nez p5, :cond_6

    .line 11305
    sget-boolean p2, Landroid/os/Build;->IS_ENG:Z

    if-eqz p2, :cond_5

    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    .line 11306
    invoke-virtual {p2}, Lcom/android/server/am/UserController;->getCurrentUserId()I

    move-result p2

    const/16 p5, 0x4d

    if-ne p2, p5, :cond_5

    return v7

    .line 11313
    :cond_5
    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string p5, "handleApplicationWtf: crashing "

    invoke-virtual {p2, p5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string p5, " from "

    invoke-virtual {p2, p5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    const-string p5, "ActivityManager"

    invoke-static {p5, p2}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 11316
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mAppErrors:Lcom/android/server/am/AppErrors;

    invoke-virtual {p0, p1, p4}, Lcom/android/server/am/AppErrors;->crashApplication(Lcom/android/server/am/ProcessRecord;Landroid/app/ApplicationErrorReport$CrashInfo;)V

    return p3

    :cond_6
    return v7

    .line 11288
    :cond_7
    :goto_4
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance p5, Lcom/android/server/am/ActivityManagerService$20;

    move-object v0, p5

    move-object v1, p0

    move v3, v6

    move-object v4, p1

    move-object v5, p2

    move-object v6, p4

    invoke-direct/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService$20;-><init>(Lcom/android/server/am/ActivityManagerService;IILandroid/os/IBinder;Ljava/lang/String;Landroid/app/ApplicationErrorReport$ParcelableCrashInfo;)V

    invoke-virtual {p3, p5}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    return v7
.end method

.method public handleApplicationWtfInner(IILandroid/os/IBinder;Ljava/lang/String;Landroid/app/ApplicationErrorReport$CrashInfo;)Lcom/android/server/am/ProcessRecord;
    .locals 16

    move-object/from16 v0, p3

    move-object/from16 v10, p5

    const-string v1, "WTF"

    move-object/from16 v2, p0

    .line 11325
    invoke-virtual {v2, v0, v1}, Lcom/android/server/am/ActivityManagerService;->findAppProcess(Landroid/os/IBinder;Ljava/lang/String;)Lcom/android/server/am/ProcessRecord;

    move-result-object v14

    const-string/jumbo v1, "unknown"

    if-nez v0, :cond_0

    const-string/jumbo v0, "system_server"

    :goto_0
    move-object v9, v0

    goto :goto_1

    :cond_0
    if-nez v14, :cond_1

    move-object v9, v1

    goto :goto_1

    .line 11327
    :cond_1
    iget-object v0, v14, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    goto :goto_0

    .line 11329
    :goto_1
    invoke-static/range {p1 .. p1}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v3

    if-nez v14, :cond_2

    const/4 v0, -0x1

    goto :goto_2

    .line 11330
    :cond_2
    iget-object v0, v14, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v0, v0, Landroid/content/pm/ApplicationInfo;->flags:I

    :goto_2
    move v6, v0

    if-nez v10, :cond_3

    goto :goto_3

    .line 11331
    :cond_3
    iget-object v1, v10, Landroid/app/ApplicationErrorReport$CrashInfo;->exceptionMessage:Ljava/lang/String;

    :goto_3
    move-object v8, v1

    move/from16 v4, p2

    move-object v5, v9

    move-object/from16 v7, p4

    .line 11329
    invoke-static/range {v3 .. v8}, Lcom/android/server/am/EventLogTags;->writeAmWtf(IILjava/lang/String;ILjava/lang/String;Ljava/lang/String;)V

    const/16 v3, 0x50

    if-eqz v14, :cond_4

    .line 11334
    invoke-virtual {v14}, Lcom/android/server/am/ProcessRecord;->getProcessClassEnum()I

    move-result v0

    goto :goto_4

    :cond_4
    const/4 v0, 0x0

    :goto_4
    move v8, v0

    move/from16 v4, p1

    move-object/from16 v5, p4

    move-object v6, v9

    move/from16 v7, p2

    .line 11333
    invoke-static/range {v3 .. v8}, Lcom/android/internal/util/FrameworkStatsLog;->write(IILjava/lang/String;Ljava/lang/String;II)V

    const-string/jumbo v1, "wtf"

    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v8, 0x0

    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v13, 0x0

    const/4 v15, 0x0

    move-object/from16 v0, p0

    move-object v2, v14

    move-object v3, v9

    move-object/from16 v7, p4

    move-object v9, v11

    move-object/from16 v10, p5

    move-object v11, v12

    move-object v12, v13

    move-object v13, v15

    .line 11336
    invoke-virtual/range {v0 .. v13}, Lcom/android/server/am/ActivityManagerService;->addErrorToDropBox(Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Landroid/app/ApplicationErrorReport$CrashInfo;Ljava/lang/Float;Landroid/os/incremental/IncrementalMetrics;Ljava/util/UUID;)V

    return-object v14
.end method

.method public final handleBinderHeavyHitterAutoSamplerTimeOut()V
    .locals 2

    .line 23014
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter p0

    .line 23015
    :try_start_0
    sget-boolean v0, Lcom/android/server/am/ActivityManagerConstants;->BINDER_HEAVY_HITTER_WATCHER_ENABLED:Z

    if-eqz v0, :cond_0

    .line 23017
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return-void

    .line 23019
    :cond_0
    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    const/4 p0, 0x0

    const/4 v0, 0x0

    const/4 v1, 0x0

    .line 23020
    invoke-static {v1, v1, p0, v0}, Landroid/os/Binder;->setHeavyHitterWatcherConfig(ZIFLcom/android/internal/os/BinderCallHeavyHitterWatcher$BinderCallHeavyHitterListener;)V

    return-void

    :catchall_0
    move-exception v0

    .line 23019
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v0
.end method

.method public final handleBinderHeavyHitters(Ljava/util/List;IFJ)V
    .locals 5

    .line 23028
    invoke-interface {p1}, Ljava/util/List;->size()I

    move-result p0

    if-nez p0, :cond_0

    return-void

    .line 23034
    :cond_0
    new-instance v0, Lcom/android/internal/os/BinderTransactionNameResolver;

    invoke-direct {v0}, Lcom/android/internal/os/BinderTransactionNameResolver;-><init>()V

    .line 23035
    new-instance v1, Ljava/lang/StringBuilder;

    const-string v2, "Excessive incoming binder calls(>"

    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    const/high16 v2, 0x42c80000    # 100.0f

    mul-float/2addr p3, v2

    .line 23036
    invoke-static {p3}, Ljava/lang/Float;->valueOf(F)Ljava/lang/Float;

    move-result-object p3

    filled-new-array {p3}, [Ljava/lang/Object;

    move-result-object p3

    const-string v3, "%.1f%%"

    invoke-static {v3, p3}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p3

    invoke-virtual {v1, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/16 p3, 0x2c

    .line 23037
    invoke-virtual {v1, p3}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 23038
    invoke-virtual {v1, p3}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p4, p5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string/jumbo p2, "ms): "

    .line 23039
    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/4 p2, 0x0

    :goto_0
    if-ge p2, p0, :cond_2

    if-lez p2, :cond_1

    const-string p4, ", "

    .line 23042
    invoke-virtual {v1, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 23044
    :cond_1
    invoke-interface {p1, p2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object p4

    check-cast p4, Lcom/android/internal/os/BinderCallHeavyHitterWatcher$HeavyHitterContainer;

    const/16 p5, 0x5b

    .line 23045
    invoke-virtual {v1, p5}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    iget p5, p4, Lcom/android/internal/os/BinderCallHeavyHitterWatcher$HeavyHitterContainer;->mUid:I

    invoke-virtual {v1, p5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 23046
    invoke-virtual {v1, p3}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    iget-object p5, p4, Lcom/android/internal/os/BinderCallHeavyHitterWatcher$HeavyHitterContainer;->mClass:Ljava/lang/Class;

    invoke-virtual {p5}, Ljava/lang/Class;->getName()Ljava/lang/String;

    move-result-object p5

    invoke-virtual {v1, p5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 23047
    invoke-virtual {v1, p3}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    iget-object p5, p4, Lcom/android/internal/os/BinderCallHeavyHitterWatcher$HeavyHitterContainer;->mClass:Ljava/lang/Class;

    iget v4, p4, Lcom/android/internal/os/BinderCallHeavyHitterWatcher$HeavyHitterContainer;->mCode:I

    invoke-virtual {v0, p5, v4}, Lcom/android/internal/os/BinderTransactionNameResolver;->getMethodName(Ljava/lang/Class;I)Ljava/lang/String;

    move-result-object p5

    invoke-virtual {v1, p5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 23048
    invoke-virtual {v1, p3}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    iget p5, p4, Lcom/android/internal/os/BinderCallHeavyHitterWatcher$HeavyHitterContainer;->mCode:I

    invoke-virtual {v1, p5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 23049
    invoke-virtual {v1, p3}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    iget p4, p4, Lcom/android/internal/os/BinderCallHeavyHitterWatcher$HeavyHitterContainer;->mFrequency:F

    mul-float/2addr p4, v2

    invoke-static {p4}, Ljava/lang/Float;->valueOf(F)Ljava/lang/Float;

    move-result-object p4

    filled-new-array {p4}, [Ljava/lang/Object;

    move-result-object p4

    invoke-static {v3, p4}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p4

    invoke-virtual {v1, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/16 p4, 0x5d

    .line 23050
    invoke-virtual {v1, p4}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    add-int/lit8 p2, p2, 0x1

    goto :goto_0

    :cond_2
    const-string p0, "ActivityManager"

    .line 23052
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p0, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    return-void
.end method

.method public handleIncomingUser(IIIZZLjava/lang/String;Ljava/lang/String;)I
    .locals 8

    .line 15998
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    if-eqz p5, :cond_0

    const/4 p0, 0x2

    goto :goto_0

    :cond_0
    const/4 p0, 0x0

    :goto_0
    move v5, p0

    move v1, p1

    move v2, p2

    move v3, p3

    move v4, p4

    move-object v6, p6

    move-object v7, p7

    invoke-virtual/range {v0 .. v7}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p0

    return p0
.end method

.method public final handlePendingSystemServerWtfs(Ljava/util/LinkedList;)V
    .locals 16

    move-object/from16 v0, p0

    .line 11356
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v1

    .line 11357
    :try_start_0
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    sget v3, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    invoke-virtual {v2, v3}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v15

    .line 11358
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 11359
    invoke-virtual/range {p1 .. p1}, Ljava/util/LinkedList;->poll()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/util/Pair;

    :goto_0
    if-eqz v1, :cond_0

    const-string/jumbo v2, "wtf"

    const-string/jumbo v4, "system_server"

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    .line 11361
    iget-object v3, v1, Landroid/util/Pair;->first:Ljava/lang/Object;

    move-object v8, v3

    check-cast v8, Ljava/lang/String;

    const/4 v9, 0x0

    const/4 v10, 0x0

    iget-object v1, v1, Landroid/util/Pair;->second:Ljava/lang/Object;

    move-object v11, v1

    check-cast v11, Landroid/app/ApplicationErrorReport$CrashInfo;

    const/4 v12, 0x0

    const/4 v13, 0x0

    const/4 v14, 0x0

    move-object/from16 v1, p0

    move-object v3, v15

    invoke-virtual/range {v1 .. v14}, Lcom/android/server/am/ActivityManagerService;->addErrorToDropBox(Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Landroid/app/ApplicationErrorReport$CrashInfo;Ljava/lang/Float;Landroid/os/incremental/IncrementalMetrics;Ljava/util/UUID;)V

    .line 11360
    invoke-virtual/range {p1 .. p1}, Ljava/util/LinkedList;->poll()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/util/Pair;

    goto :goto_0

    :cond_0
    return-void

    :catchall_0
    move-exception v0

    .line 11358
    :try_start_1
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v0
.end method

.method public handleProcessStartOrKillTimeoutLocked(Lcom/android/server/am/ProcessRecord;Z)V
    .locals 7

    .line 5285
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v0

    const/4 v1, 0x0

    const/4 v2, 0x1

    if-nez p2, :cond_1

    .line 5286
    invoke-virtual {p0, v0, p1}, Lcom/android/server/am/ActivityManagerService;->removePidLocked(ILcom/android/server/am/ProcessRecord;)Z

    move-result v3

    if-eqz v3, :cond_0

    goto :goto_0

    :cond_0
    move v3, v1

    goto :goto_1

    :cond_1
    :goto_0
    move v3, v2

    :goto_1
    if-eqz v3, :cond_8

    if-eqz p2, :cond_3

    .line 5291
    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->mSuccessor:Lcom/android/server/am/ProcessRecord;

    if-nez v3, :cond_2

    return-void

    :cond_2
    const-string v4, "ActivityManager"

    .line 5296
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v6, " "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getDyingPid()I

    move-result v6

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v6, " refused to die while trying to launch "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v6, ", cancelling the process start"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    const/4 v4, 0x0

    .line 5302
    iput-object v4, p1, Lcom/android/server/am/ProcessRecord;->mSuccessorStartRunnable:Ljava/lang/Runnable;

    .line 5303
    iput-object v4, p1, Lcom/android/server/am/ProcessRecord;->mSuccessor:Lcom/android/server/am/ProcessRecord;

    .line 5304
    iput-object v4, v3, Lcom/android/server/am/ProcessRecord;->mPredecessor:Lcom/android/server/am/ProcessRecord;

    move-object p1, v3

    goto :goto_2

    .line 5309
    :cond_3
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Process "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v4, " failed to attach"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    const-string v4, "ActivityManager"

    .line 5310
    invoke-static {v4, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5311
    iget v4, p1, Lcom/android/server/am/ProcessRecord;->userId:I

    iget v5, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-static {v4, v0, v5, v6}, Lcom/android/server/am/EventLogTags;->writeAmProcessStartTimeout(IIILjava/lang/String;)V

    .line 5312
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getActiveInstrumentation()Lcom/android/server/am/ActiveInstrumentation;

    move-result-object v4

    if-eqz v4, :cond_4

    .line 5313
    new-instance v4, Landroid/os/Bundle;

    invoke-direct {v4}, Landroid/os/Bundle;-><init>()V

    const-string/jumbo v5, "shortMsg"

    const-string v6, "failed to attach"

    .line 5314
    invoke-virtual {v4, v5, v6}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    const-string/jumbo v5, "longMsg"

    .line 5315
    invoke-virtual {v4, v5, v3}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 5316
    invoke-virtual {p0, p1, v1, v4}, Lcom/android/server/am/ActivityManagerService;->finishInstrumentationLocked(Lcom/android/server/am/ProcessRecord;ILandroid/os/Bundle;)V

    .line 5319
    :cond_4
    :goto_2
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v3

    .line 5320
    :try_start_0
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v5, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget v6, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v4, v5, v6}, Lcom/android/server/am/ProcessList;->removeProcessNameLocked(Ljava/lang/String;I)Lcom/android/server/am/ProcessRecord;

    .line 5321
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getWindowProcessController()Lcom/android/server/wm/WindowProcessController;

    move-result-object v5

    invoke-virtual {v4, v5}, Lcom/android/server/wm/ActivityTaskManagerInternal;->clearHeavyWeightProcessIfEquals(Lcom/android/server/wm/WindowProcessController;)V

    .line 5323
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    invoke-virtual {v4, p1, v2}, Lcom/android/server/am/ContentProviderHelper;->cleanupAppInLaunchingProvidersLocked(Lcom/android/server/am/ProcessRecord;Z)Z

    .line 5325
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v4, p1}, Lcom/android/server/am/ActiveServices;->processStartTimedOutLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 5327
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v5, v4

    :goto_3
    if-ge v1, v5, :cond_5

    aget-object v6, v4, v1

    .line 5328
    invoke-virtual {v6, p1}, Lcom/android/server/am/BroadcastQueue;->onApplicationTimeoutLocked(Lcom/android/server/am/ProcessRecord;)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_3

    :cond_5
    if-nez p2, :cond_6

    .line 5331
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    iget-object v4, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget-object v5, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v5, v5, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v1, v4, v5}, Lcom/android/server/am/BatteryStatsService;->noteProcessFinish(Ljava/lang/String;I)V

    const-string/jumbo v1, "start timeout"

    const/4 v4, 0x7

    .line 5332
    invoke-virtual {p1, v1, v4, v2}, Lcom/android/server/am/ProcessRecord;->killLocked(Ljava/lang/String;IZ)V

    .line 5334
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->removeLruProcessLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 5336
    :cond_6
    iget-boolean v1, p1, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-eqz v1, :cond_7

    .line 5337
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    iget v2, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    iget-object v4, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v1, v2, v4}, Lcom/android/server/am/BatteryStatsService;->removeIsolatedUid(II)V

    .line 5338
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v1, v1, Lcom/android/server/am/ProcessList;->mAppExitInfoTracker:Lcom/android/server/am/AppExitInfoTracker;

    iget-object v1, v1, Lcom/android/server/am/AppExitInfoTracker;->mIsolatedUidRecords:Lcom/android/server/am/AppExitInfoTracker$IsolatedUidRecords;

    iget v2, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    iget-object v4, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v1, v2, v4}, Lcom/android/server/am/AppExitInfoTracker$IsolatedUidRecords;->removeIsolatedUid(II)V

    .line 5340
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal;

    move-result-object v1

    iget v2, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v1, v2}, Landroid/content/pm/PackageManagerInternal;->removeIsolatedUid(I)V

    .line 5342
    :cond_7
    monitor-exit v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 5343
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTargets:Landroid/util/SparseArray;

    iget v2, p1, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-virtual {v1, v2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/BackupRecord;

    if-nez p2, :cond_9

    if-eqz v1, :cond_9

    .line 5344
    iget-object p2, v1, Lcom/android/server/am/BackupRecord;->app:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {p2}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result p2

    if-ne p2, v0, :cond_9

    const-string p2, "ActivityManager"

    const-string v0, "Unattached app died before backup, skipping"

    .line 5345
    invoke-static {p2, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5346
    iget p2, p1, Lcom/android/server/am/ProcessRecord;->userId:I

    .line 5347
    iget-object p1, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object p1, p1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 5348
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v1, Lcom/android/server/am/ActivityManagerService$9;

    invoke-direct {v1, p0, p2, p1}, Lcom/android/server/am/ActivityManagerService$9;-><init>(Lcom/android/server/am/ActivityManagerService;ILjava/lang/String;)V

    invoke-virtual {v0, v1}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    goto :goto_4

    :catchall_0
    move-exception p0

    .line 5342
    :try_start_1
    monitor-exit v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p0

    :cond_8
    const-string p0, "ActivityManager"

    .line 5362
    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "Spurious process start timeout - pid not known for "

    invoke-virtual {p2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p0, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    :cond_9
    :goto_4
    return-void
.end method

.method public hang(Landroid/os/IBinder;Z)V
    .locals 3

    const-string v0, "android.permission.SET_ACTIVITY_WATCHER"

    .line 10327
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_1

    .line 10333
    new-instance v0, Lcom/android/server/am/ActivityManagerService$16;

    invoke-direct {v0, p0}, Lcom/android/server/am/ActivityManagerService$16;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    const/4 v1, 0x0

    .line 10343
    :try_start_0
    invoke-interface {p1, v0, v1}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_1

    .line 10349
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 10350
    :try_start_1
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object v1

    invoke-virtual {v1, p2}, Lcom/android/server/Watchdog;->setAllowRestart(Z)V

    const-string p2, "ActivityManager"

    .line 10351
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Hanging system process at request of pid "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {p2, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 10352
    monitor-enter v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 10353
    :catch_0
    :goto_0
    :try_start_2
    invoke-interface {p1}, Landroid/os/IBinder;->isBinderAlive()Z

    move-result p2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    if-eqz p2, :cond_0

    .line 10355
    :try_start_3
    invoke-virtual {v0}, Ljava/lang/Object;->wait()V
    :try_end_3
    .catch Ljava/lang/InterruptedException; {:try_start_3 .. :try_end_3} :catch_0
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    goto :goto_0

    .line 10359
    :cond_0
    :try_start_4
    monitor-exit v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 10360
    :try_start_5
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object p1

    const/4 p2, 0x1

    invoke-virtual {p1, p2}, Lcom/android/server/Watchdog;->setAllowRestart(Z)V

    .line 10361
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :catchall_0
    move-exception p1

    .line 10359
    :try_start_6
    monitor-exit v0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    :try_start_7
    throw p1

    :catchall_1
    move-exception p1

    .line 10361
    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1

    :catch_1
    const-string p0, "ActivityManager"

    const-string p1, "hang: given caller IBinder is already dead."

    .line 10345
    invoke-static {p0, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    return-void

    .line 10329
    :cond_1
    new-instance p0, Ljava/lang/SecurityException;

    const-string p1, "Requires permission android.permission.SET_ACTIVITY_WATCHER"

    invoke-direct {p0, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p0
.end method

.method public final hasActiveInstrumentationLocked(I)Z
    .locals 2

    const/4 v0, 0x0

    if-nez p1, :cond_0

    return v0

    .line 18612
    :cond_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v1

    .line 18613
    :try_start_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object p0

    if-eqz p0, :cond_1

    .line 18614
    invoke-virtual {p0}, Lcom/android/server/am/ProcessRecord;->getActiveInstrumentation()Lcom/android/server/am/ActiveInstrumentation;

    move-result-object p0

    if-eqz p0, :cond_1

    const/4 v0, 0x1

    :cond_1
    monitor-exit v1

    return v0

    :catchall_0
    move-exception p0

    .line 18615
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw p0
.end method

.method public hasChimeraProtectedProc(Ljava/lang/String;I)I
    .locals 4

    .line 8325
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 8326
    :try_start_0
    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->getProcessRecordLocked(Ljava/lang/String;I)Lcom/android/server/am/ProcessRecord;

    move-result-object p1

    if-eqz p1, :cond_6

    .line 8338
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->isKilled()Z

    move-result p2

    if-nez p2, :cond_5

    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->isKilledByAm()Z

    move-result p2

    if-eqz p2, :cond_0

    goto :goto_0

    .line 8341
    :cond_0
    iget-object p2, p1, Lcom/android/server/am/ProcessRecord;->mServices:Lcom/android/server/am/ProcessServiceRecord;

    invoke-virtual {p2}, Lcom/android/server/am/ProcessServiceRecord;->numberOfExecutingServices()I

    move-result p2

    if-lez p2, :cond_1

    .line 8342
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    const/4 p0, 0x2

    return p0

    .line 8344
    :cond_1
    :try_start_1
    iget-object p2, p1, Lcom/android/server/am/ProcessRecord;->mReceivers:Lcom/android/server/am/ProcessReceiverRecord;

    invoke-virtual {p2}, Lcom/android/server/am/ProcessReceiverRecord;->numberOfCurReceivers()I

    move-result p2

    if-lez p2, :cond_2

    .line 8345
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    const/4 p0, 0x3

    return p0

    .line 8348
    :cond_2
    :try_start_2
    iget-object p2, p1, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {p2}, Lcom/android/server/am/ProcessStateRecord;->getCurAdj()I

    move-result p2

    const/16 v0, 0x64

    if-ge p2, v0, :cond_3

    .line 8349
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    const/4 p0, 0x5

    return p0

    .line 8351
    :cond_3
    :try_start_3
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->hasContentProviderConnection(Lcom/android/server/am/ProcessRecord;)Z

    move-result p2

    if-eqz p2, :cond_4

    .line 8352
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    const/4 p0, 0x6

    return p0

    :cond_4
    :try_start_4
    const-string/jumbo p2, "ro.slmk.chimera.protect_activitytime_ms"

    const-wide/16 v0, -0x1

    .line 8355
    invoke-static {p2, v0, v1}, Landroid/os/SystemProperties;->getLong(Ljava/lang/String;J)J

    move-result-wide v0

    const-wide/32 v2, 0xea60

    cmp-long p2, v0, v2

    if-ltz p2, :cond_6

    .line 8356
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v2

    .line 8357
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getLastActivityTime()J

    move-result-wide p1

    sub-long/2addr v2, p1

    cmp-long p1, v2, v0

    if-gez p1, :cond_6

    .line 8358
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    const/4 p0, 0x4

    return p0

    .line 8339
    :cond_5
    :goto_0
    :try_start_5
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    const/4 p0, 0x1

    return p0

    .line 8362
    :cond_6
    :try_start_6
    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    const/4 p0, 0x0

    return p0

    :catchall_0
    move-exception p1

    :try_start_7
    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public final hasContentProviderConnection(Lcom/android/server/am/ProcessRecord;)Z
    .locals 6

    .line 8380
    iget-object p0, p1, Lcom/android/server/am/ProcessRecord;->mProviders:Lcom/android/server/am/ProcessProviderRecord;

    invoke-virtual {p0}, Lcom/android/server/am/ProcessProviderRecord;->numberOfProviders()I

    move-result p0

    const/4 v0, 0x1

    sub-int/2addr p0, v0

    :goto_0
    if-ltz p0, :cond_3

    .line 8381
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->mProviders:Lcom/android/server/am/ProcessProviderRecord;

    invoke-virtual {v1, p0}, Lcom/android/server/am/ProcessProviderRecord;->getProviderAt(I)Lcom/android/server/am/ContentProviderRecord;

    move-result-object v1

    if-eqz v1, :cond_2

    .line 8382
    iget-object v2, v1, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    if-eq v2, p1, :cond_0

    goto :goto_2

    .line 8386
    :cond_0
    iget-object v2, v1, Lcom/android/server/am/ContentProviderRecord;->connections:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    sub-int/2addr v2, v0

    :goto_1
    if-ltz v2, :cond_2

    .line 8387
    iget-object v3, v1, Lcom/android/server/am/ContentProviderRecord;->connections:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ContentProviderConnection;

    if-eqz v3, :cond_1

    .line 8389
    iget-object v3, v3, Lcom/android/server/am/ContentProviderConnection;->client:Lcom/android/server/am/ProcessRecord;

    if-eqz v3, :cond_1

    .line 8390
    invoke-virtual {v3}, Lcom/android/server/am/ProcessRecord;->isPersistent()Z

    move-result v4

    if-nez v4, :cond_1

    invoke-virtual {v3}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v4

    if-eqz v4, :cond_1

    iget-object v4, v3, Lcom/android/server/am/ProcessRecord;->mProfile:Lcom/android/server/am/ProcessProfileRecord;

    .line 8391
    invoke-virtual {v4}, Lcom/android/server/am/ProcessProfileRecord;->getPid()I

    move-result v4

    if-eqz v4, :cond_1

    iget-object v4, v3, Lcom/android/server/am/ProcessRecord;->mProfile:Lcom/android/server/am/ProcessProfileRecord;

    .line 8392
    invoke-virtual {v4}, Lcom/android/server/am/ProcessProfileRecord;->getPid()I

    move-result v4

    sget v5, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-eq v4, v5, :cond_1

    iget v4, v3, Lcom/android/server/am/ProcessRecord;->uid:I

    iget v5, v1, Lcom/android/server/am/ContentProviderRecord;->uid:I

    if-eq v4, v5, :cond_1

    .line 8394
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string p1, "hasConnectionProvider "

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Lcom/android/server/am/ProcessRecord;->toShortString()Ljava/lang/String;

    move-result-object p1

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, " (adj "

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object p1, v3, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {p1}, Lcom/android/server/am/ProcessStateRecord;->getSetAdj()I

    move-result p1

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, ")"

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    const-string p1, "ActivityManager"

    invoke-static {p1, p0}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    return v0

    :cond_1
    add-int/lit8 v2, v2, -0x1

    goto :goto_1

    :cond_2
    :goto_2
    add-int/lit8 p0, p0, -0x1

    goto :goto_0

    :cond_3
    const/4 p0, 0x0

    return p0
.end method

.method public hasContentProviderConnection(Ljava/lang/String;I)Z
    .locals 0

    .line 8369
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 8370
    :try_start_0
    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->getProcessRecordLocked(Ljava/lang/String;I)Lcom/android/server/am/ProcessRecord;

    move-result-object p1

    if-nez p1, :cond_0

    .line 8372
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    const/4 p0, 0x0

    return p0

    .line 8374
    :cond_0
    :try_start_1
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->hasContentProviderConnection(Lcom/android/server/am/ProcessRecord;)Z

    move-result p1

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return p1

    :catchall_0
    move-exception p1

    .line 8375
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public final hasFixedAppContextDisplayMetaData(Landroid/content/pm/ApplicationInfo;)Z
    .locals 4

    .line 24338
    iget-object p0, p1, Landroid/content/pm/ApplicationInfo;->metaData:Landroid/os/Bundle;

    if-nez p0, :cond_0

    .line 24341
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    iget-object v1, p1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget p1, p1, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 24343
    invoke-static {p1}, Landroid/os/UserHandle;->getUserId(I)I

    move-result p1

    const-wide/16 v2, 0x80

    .line 24341
    invoke-interface {v0, v1, v2, v3, p1}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;JI)Landroid/content/pm/ApplicationInfo;

    move-result-object p1

    if-eqz p1, :cond_0

    .line 24345
    iget-object p0, p1, Landroid/content/pm/ApplicationInfo;->metaData:Landroid/os/Bundle;
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    :catch_0
    :cond_0
    const/4 p1, 0x0

    if-eqz p0, :cond_1

    const-string v0, "com.samsung.android.multidisplay.fixed_app_context_display"

    .line 24351
    invoke-virtual {p0, v0, p1}, Landroid/os/Bundle;->getBoolean(Ljava/lang/String;Z)Z

    move-result p1

    :cond_1
    return p1
.end method

.method public hasRestartService(Ljava/lang/String;I)Z
    .locals 0

    .line 8218
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 8219
    :try_start_0
    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->getProcessRecordLocked(Ljava/lang/String;I)Lcom/android/server/am/ProcessRecord;

    move-result-object p1

    if-eqz p1, :cond_0

    .line 8220
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->hasRestartService()Z

    move-result p1

    if-eqz p1, :cond_0

    .line 8221
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    const/4 p0, 0x1

    return p0

    .line 8223
    :cond_0
    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    const/4 p0, 0x0

    return p0

    :catchall_0
    move-exception p1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public final hasUsageStatsPermission(Ljava/lang/String;)Z
    .locals 2

    .line 3676
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    .line 3675
    invoke-virtual {p0, p1, v0, v1}, Lcom/android/server/am/ActivityManagerService;->hasUsageStatsPermission(Ljava/lang/String;II)Z

    move-result p0

    return p0
.end method

.method public final hasUsageStatsPermission(Ljava/lang/String;II)Z
    .locals 8

    .line 3665
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    const/16 v1, 0x2b

    const/4 v4, 0x0

    const/4 v5, 0x0

    const-string v6, ""

    const/4 v7, 0x0

    move v2, p2

    move-object v3, p1

    invoke-virtual/range {v0 .. v7}, Lcom/android/server/appop/AppOpsService;->noteOperation(IILjava/lang/String;Ljava/lang/String;ZLjava/lang/String;Z)Landroid/app/SyncNotedAppOp;

    move-result-object p1

    .line 3666
    invoke-virtual {p1}, Landroid/app/SyncNotedAppOp;->getOpMode()I

    move-result p1

    const/4 v0, 0x3

    const/4 v1, 0x1

    const/4 v2, 0x0

    if-ne p1, v0, :cond_1

    const-string p1, "android.permission.PACKAGE_USAGE_STATS"

    .line 3668
    invoke-virtual {p0, p1, p3, p2}, Lcom/android/server/am/ActivityManagerService;->checkPermission(Ljava/lang/String;II)I

    move-result p0

    if-nez p0, :cond_0

    goto :goto_0

    :cond_0
    move v1, v2

    :goto_0
    return v1

    :cond_1
    if-nez p1, :cond_2

    goto :goto_1

    :cond_2
    move v1, v2

    :goto_1
    return v1
.end method

.method public holdLock(Landroid/os/IBinder;I)V
    .locals 1

    .line 23665
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getTestUtilityServiceLocked()Landroid/content/pm/TestUtilityService;

    move-result-object v0

    invoke-interface {v0, p1}, Landroid/content/pm/TestUtilityService;->verifyHoldLockToken(Landroid/os/IBinder;)V

    .line 23667
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    int-to-long p1, p2

    .line 23668
    :try_start_0
    invoke-static {p1, p2}, Landroid/os/SystemClock;->sleep(J)V

    .line 23669
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public final idleUids()V
    .locals 1

    .line 19649
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 19650
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    invoke-virtual {v0}, Lcom/android/server/am/OomAdjuster;->idleUidsLocked()V

    .line 19651
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public importanceTokenDied(Lcom/android/server/am/ActivityManagerService$ImportanceToken;)V
    .locals 3

    .line 6969
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 6971
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 6972
    :try_start_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mImportantProcesses:Landroid/util/SparseArray;

    iget v2, p1, Lcom/android/server/am/ActivityManagerService$ImportanceToken;->pid:I

    .line 6973
    invoke-virtual {v1, v2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ActivityManagerService$ImportanceToken;

    if-eq v1, p1, :cond_0

    .line 6975
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 6977
    :cond_0
    :try_start_3
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mImportantProcesses:Landroid/util/SparseArray;

    iget v2, p1, Lcom/android/server/am/ActivityManagerService$ImportanceToken;->pid:I

    invoke-virtual {v1, v2}, Landroid/util/SparseArray;->remove(I)V

    .line 6978
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    iget p1, p1, Lcom/android/server/am/ActivityManagerService$ImportanceToken;->pid:I

    invoke-virtual {v1, p1}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object p1

    if-nez p1, :cond_1

    .line 6980
    monitor-exit v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 6982
    :cond_1
    :try_start_5
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    const/4 v2, 0x0

    invoke-virtual {v1, v2}, Lcom/android/server/am/ProcessStateRecord;->setForcingToImportant(Ljava/lang/Object;)V

    .line 6983
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->clearProcessForegroundLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 6984
    monitor-exit v0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    const/16 v0, 0x9

    .line 6985
    :try_start_6
    invoke-virtual {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;I)Z

    .line 6986
    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :catchall_0
    move-exception p1

    .line 6984
    :try_start_7
    monitor-exit v0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    :try_start_8
    throw p1

    :catchall_1
    move-exception p1

    .line 6986
    monitor-exit p0
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public initPowerManagement()V
    .locals 1

    .line 3002
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v0}, Lcom/android/server/wm/ActivityTaskManagerService;->onInitPowerManagement()V

    .line 3003
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v0}, Lcom/android/server/am/BatteryStatsService;->initPowerManagement()V

    .line 3004
    const-class v0, Landroid/os/PowerManagerInternal;

    invoke-static {v0}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/os/PowerManagerInternal;

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLocalPowerManager:Landroid/os/PowerManagerInternal;

    return-void
.end method

.method public inputDispatchingTimedOut(IZLcom/android/internal/os/TimeoutRecord;)J
    .locals 10

    const-string v0, "android.permission.FILTER_EVENTS"

    .line 22378
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_2

    .line 22382
    iget-object v0, p3, Lcom/android/internal/os/TimeoutRecord;->mLatencyTracker:Lcom/android/internal/os/anr/AnrLatencyTracker;

    invoke-virtual {v0}, Lcom/android/internal/os/anr/AnrLatencyTracker;->waitingOnPidLockStarted()V

    .line 22383
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v0

    .line 22384
    :try_start_0
    iget-object v1, p3, Lcom/android/internal/os/TimeoutRecord;->mLatencyTracker:Lcom/android/internal/os/anr/AnrLatencyTracker;

    invoke-virtual {v1}, Lcom/android/internal/os/anr/AnrLatencyTracker;->waitingOnPidLockEnded()V

    .line 22385
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v1, p1}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v3

    .line 22386
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-eqz v3, :cond_0

    .line 22387
    invoke-virtual {v3}, Lcom/android/server/am/ProcessRecord;->getInputDispatchingTimeoutMillis()J

    move-result-wide v0

    goto :goto_0

    .line 22388
    :cond_0
    sget p1, Landroid/os/InputConstants;->DEFAULT_DISPATCHING_TIMEOUT_MILLIS:I

    int-to-long v0, p1

    :goto_0
    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    move-object v2, p0

    move v8, p2

    move-object v9, p3

    .line 22390
    invoke-virtual/range {v2 .. v9}, Lcom/android/server/am/ActivityManagerService;->inputDispatchingTimedOut(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/pm/ApplicationInfo;Ljava/lang/String;Lcom/android/server/wm/WindowProcessController;ZLcom/android/internal/os/TimeoutRecord;)Z

    move-result p0

    if-eqz p0, :cond_1

    const-wide/16 p0, 0x0

    return-wide p0

    :cond_1
    return-wide v0

    :catchall_0
    move-exception p0

    .line 22386
    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw p0

    .line 22379
    :cond_2
    new-instance p0, Ljava/lang/SecurityException;

    const-string p1, "Requires permission android.permission.FILTER_EVENTS"

    invoke-direct {p0, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p0
.end method

.method public inputDispatchingTimedOut(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/pm/ApplicationInfo;Ljava/lang/String;Lcom/android/server/wm/WindowProcessController;ZLcom/android/internal/os/TimeoutRecord;)Z
    .locals 13

    move-object v1, p0

    move-object v0, p1

    move-object/from16 v8, p7

    const-wide/16 v10, 0x40

    :try_start_0
    const-string v2, "inputDispatchingTimedOut()"

    .line 22406
    invoke-static {v10, v11, v2}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    const-string v2, "android.permission.FILTER_EVENTS"

    .line 22407
    invoke-virtual {p0, v2}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v2

    if-nez v2, :cond_3

    const/4 v12, 0x1

    if-eqz v0, :cond_2

    .line 22412
    iget-object v2, v8, Lcom/android/internal/os/TimeoutRecord;->mLatencyTracker:Lcom/android/internal/os/anr/AnrLatencyTracker;

    invoke-virtual {v2}, Lcom/android/internal/os/anr/AnrLatencyTracker;->waitingOnAMSLockStarted()V

    .line 22413
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 22414
    :try_start_1
    iget-object v2, v8, Lcom/android/internal/os/TimeoutRecord;->mLatencyTracker:Lcom/android/internal/os/anr/AnrLatencyTracker;

    invoke-virtual {v2}, Lcom/android/internal/os/anr/AnrLatencyTracker;->waitingOnAMSLockEnded()V

    .line 22415
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->isDebugging()Z

    move-result v2

    const/4 v3, 0x0

    if-eqz v2, :cond_0

    .line 22416
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 22434
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v10, v11}, Landroid/os/Trace;->traceEnd(J)V

    return v3

    .line 22419
    :cond_0
    :try_start_2
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getActiveInstrumentation()Lcom/android/server/am/ActiveInstrumentation;

    move-result-object v2

    if-eqz v2, :cond_1

    .line 22420
    new-instance v2, Landroid/os/Bundle;

    invoke-direct {v2}, Landroid/os/Bundle;-><init>()V

    const-string/jumbo v4, "shortMsg"

    const-string/jumbo v5, "keyDispatchingTimedOut"

    .line 22421
    invoke-virtual {v2, v4, v5}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    const-string/jumbo v4, "longMsg"

    .line 22422
    iget-object v5, v8, Lcom/android/internal/os/TimeoutRecord;->mReason:Ljava/lang/String;

    invoke-virtual {v2, v4, v5}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 22423
    invoke-virtual {p0, p1, v3, v2}, Lcom/android/server/am/ActivityManagerService;->finishInstrumentationLocked(Lcom/android/server/am/ProcessRecord;ILandroid/os/Bundle;)V

    .line 22424
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 22434
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v10, v11}, Landroid/os/Trace;->traceEnd(J)V

    return v12

    .line 22426
    :cond_1
    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 22427
    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mAnrHelper:Lcom/android/server/am/AnrHelper;

    const/4 v9, 0x1

    move-object v2, p1

    move-object v3, p2

    move-object/from16 v4, p3

    move-object/from16 v5, p4

    move-object/from16 v6, p5

    move/from16 v7, p6

    move-object/from16 v8, p7

    invoke-virtual/range {v1 .. v9}, Lcom/android/server/am/AnrHelper;->appNotResponding(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/pm/ApplicationInfo;Ljava/lang/String;Lcom/android/server/wm/WindowProcessController;ZLcom/android/internal/os/TimeoutRecord;Z)V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    goto :goto_0

    :catchall_0
    move-exception v0

    .line 22426
    :try_start_5
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    :try_start_6
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 22434
    :cond_2
    :goto_0
    invoke-static {v10, v11}, Landroid/os/Trace;->traceEnd(J)V

    return v12

    .line 22408
    :cond_3
    :try_start_7
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires permission android.permission.FILTER_EVENTS"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    :catchall_1
    move-exception v0

    .line 22434
    invoke-static {v10, v11}, Landroid/os/Trace;->traceEnd(J)V

    .line 22435
    throw v0
.end method

.method public final instrumentWithoutRestart(Lcom/android/server/am/ActiveInstrumentation;Landroid/content/pm/ApplicationInfo;)V
    .locals 7

    .line 18727
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 18728
    :try_start_0
    iget-object v0, p2, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    iget v1, p2, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->getProcessRecordLocked(Ljava/lang/String;I)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    .line 18729
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 18732
    :try_start_1
    invoke-virtual {v0}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v1

    iget-object v2, p1, Lcom/android/server/am/ActiveInstrumentation;->mClass:Landroid/content/ComponentName;

    iget-object v3, p1, Lcom/android/server/am/ActiveInstrumentation;->mArguments:Landroid/os/Bundle;

    iget-object v4, p1, Lcom/android/server/am/ActiveInstrumentation;->mWatcher:Landroid/app/IInstrumentationWatcher;

    iget-object v5, p1, Lcom/android/server/am/ActiveInstrumentation;->mUiAutomationConnection:Landroid/app/IUiAutomationConnection;

    move-object v6, p2

    invoke-interface/range {v1 .. v6}, Landroid/app/IApplicationThread;->instrumentWithoutRestart(Landroid/content/ComponentName;Landroid/os/Bundle;Landroid/app/IInstrumentationWatcher;Landroid/app/IUiAutomationConnection;Landroid/content/pm/ApplicationInfo;)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    goto :goto_0

    :catch_0
    move-exception p0

    const-string p1, "ActivityManager"

    const-string p2, "RemoteException from instrumentWithoutRestart"

    .line 18739
    invoke-static {p1, p2, p0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    :goto_0
    return-void

    :catchall_0
    move-exception p1

    .line 18729
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public isAllowedMediaProjectionNoOpCheck(I)Z
    .locals 2

    .line 23729
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mMediaProjectionTokenMap:Landroid/util/SparseArray;

    monitor-enter v0

    .line 23730
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mMediaProjectionTokenMap:Landroid/util/SparseArray;

    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->indexOfKey(I)I

    move-result p1

    if-ltz p1, :cond_0

    .line 23731
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mMediaProjectionTokenMap:Landroid/util/SparseArray;

    invoke-virtual {p0, p1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object p0

    check-cast p0, Landroid/util/ArraySet;

    invoke-virtual {p0}, Landroid/util/ArraySet;->isEmpty()Z

    move-result p0

    if-nez p0, :cond_0

    const/4 p0, 0x1

    goto :goto_0

    :cond_0
    const/4 p0, 0x0

    :goto_0
    monitor-exit v0

    return p0

    :catchall_0
    move-exception p0

    .line 23732
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw p0
.end method

.method public isAllowedWhileBooting(Landroid/content/pm/ApplicationInfo;)Z
    .locals 0

    .line 3458
    iget p0, p1, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 p0, p0, 0x8

    if-eqz p0, :cond_0

    const/4 p0, 0x1

    goto :goto_0

    :cond_0
    const/4 p0, 0x0

    :goto_0
    return p0
.end method

.method public isAllowlistedForFgsStartLOSP(I)Lcom/android/server/am/ActivityManagerService$FgsTempAllowListItem;
    .locals 2

    .line 7703
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDeviceIdleExceptIdleAllowlist:[I

    invoke-static {p1}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v1

    invoke-static {v0, v1}, Ljava/util/Arrays;->binarySearch([II)I

    move-result v0

    if-ltz v0, :cond_0

    .line 7704
    sget-object p0, Lcom/android/server/am/ActivityManagerService;->FAKE_TEMP_ALLOW_LIST_ITEM:Lcom/android/server/am/ActivityManagerService$FgsTempAllowListItem;

    return-object p0

    .line 7706
    :cond_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mFgsStartTempAllowList:Lcom/android/server/am/FgsTempAllowList;

    invoke-virtual {p0, p1}, Lcom/android/server/am/FgsTempAllowList;->get(I)Landroid/util/Pair;

    move-result-object p0

    if-nez p0, :cond_1

    const/4 p0, 0x0

    goto :goto_0

    .line 7707
    :cond_1
    iget-object p0, p0, Landroid/util/Pair;->second:Ljava/lang/Object;

    check-cast p0, Lcom/android/server/am/ActivityManagerService$FgsTempAllowListItem;

    :goto_0
    return-object p0
.end method

.method public final isAppBad(Ljava/lang/String;I)Z
    .locals 0

    .line 7147
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mAppErrors:Lcom/android/server/am/AppErrors;

    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/AppErrors;->isBadProcess(Ljava/lang/String;I)Z

    move-result p0

    return p0
.end method

.method public final isAppForeground(I)Z
    .locals 2

    .line 7137
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v0

    .line 7138
    :try_start_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object p0, p0, Lcom/android/server/am/ProcessList;->mActiveUids:Lcom/android/server/am/ActiveUids;

    invoke-virtual {p0, p1}, Lcom/android/server/am/ActiveUids;->get(I)Lcom/android/server/am/UidRecord;

    move-result-object p0

    const/4 p1, 0x0

    if-eqz p0, :cond_2

    .line 7139
    invoke-virtual {p0}, Lcom/android/server/am/UidRecord;->isIdle()Z

    move-result v1

    if-eqz v1, :cond_0

    goto :goto_0

    .line 7142
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/am/UidRecord;->getCurProcState()I

    move-result p0

    const/4 v1, 0x6

    if-gt p0, v1, :cond_1

    const/4 p1, 0x1

    :cond_1
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return p1

    .line 7140
    :cond_2
    :goto_0
    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return p1

    :catchall_0
    move-exception p0

    .line 7143
    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p0
.end method

.method public isAppFreezerEnabled()Z
    .locals 0

    .line 23592
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    iget-object p0, p0, Lcom/android/server/am/OomAdjuster;->mCachedAppOptimizer:Lcom/android/server/am/CachedAppOptimizer;

    invoke-virtual {p0}, Lcom/android/server/am/CachedAppOptimizer;->useFreezer()Z

    move-result p0

    return p0
.end method

.method public isAppFreezerExemptInstPkg()Z
    .locals 0

    .line 23618
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    iget-object p0, p0, Lcom/android/server/am/OomAdjuster;->mCachedAppOptimizer:Lcom/android/server/am/CachedAppOptimizer;

    invoke-virtual {p0}, Lcom/android/server/am/CachedAppOptimizer;->freezerExemptInstPkg()Z

    move-result p0

    return p0
.end method

.method public isAppFreezerSupported()Z
    .locals 2

    .line 23581
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 23584
    :try_start_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    iget-object p0, p0, Lcom/android/server/am/OomAdjuster;->mCachedAppOptimizer:Lcom/android/server/am/CachedAppOptimizer;

    invoke-static {}, Lcom/android/server/am/CachedAppOptimizer;->isFreezerSupported()Z

    move-result p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 23586
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return p0

    :catchall_0
    move-exception p0

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 23587
    throw p0
.end method

.method public isAppStartModeDisabled(ILjava/lang/String;)Z
    .locals 9

    .line 7522
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v0

    const/4 v4, 0x0

    const/4 v5, -0x1

    const/4 v6, 0x0

    const/4 v7, 0x1

    const/4 v8, 0x0

    move-object v1, p0

    move v2, p1

    move-object v3, p2

    .line 7523
    :try_start_0
    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->getAppStartModeLOSP(ILjava/lang/String;IIZZZ)I

    move-result p0

    const/4 p1, 0x3

    if-ne p0, p1, :cond_0

    const/4 p0, 0x1

    goto :goto_0

    :cond_0
    const/4 p0, 0x0

    :goto_0
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return p0

    :catchall_0
    move-exception p0

    .line 7525
    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p0
.end method

.method public final isApplicationClearDataDisabled(Ljava/lang/String;I)Z
    .locals 1

    .line 23596
    invoke-static {p1}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v0

    if-nez v0, :cond_0

    .line 23597
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getApplicationPolicy()Lcom/samsung/android/knox/application/IApplicationPolicy;

    move-result-object v0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mApplicationPolicy:Lcom/samsung/android/knox/application/IApplicationPolicy;

    if-eqz v0, :cond_0

    const/4 p0, 0x1

    .line 23600
    :try_start_0
    invoke-interface {v0, p1, p2, p0}, Lcom/samsung/android/knox/application/IApplicationPolicy;->isApplicationClearDataDisabled(Ljava/lang/String;IZ)Z

    move-result p0
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    return p0

    :catch_0
    :cond_0
    const/4 p0, 0x0

    return p0
.end method

.method public isBackgroundRestricted(Ljava/lang/String;)Z
    .locals 5

    .line 8819
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 8820
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v1

    .line 8823
    :try_start_0
    invoke-static {v0}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v2

    const-wide/32 v3, 0x10000000

    .line 8822
    invoke-interface {v1, p1, v3, v4, v2}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;JI)I

    move-result v1

    if-ne v1, v0, :cond_0

    goto :goto_0

    .line 8825
    :cond_0
    new-instance v1, Ljava/lang/IllegalArgumentException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Uid "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, " cannot query restriction state for package "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 8831
    :catch_0
    :goto_0
    invoke-virtual {p0, v0, p1}, Lcom/android/server/am/ActivityManagerService;->isBackgroundRestrictedNoCheck(ILjava/lang/String;)Z

    move-result p0

    return p0
.end method

.method public isBackgroundRestrictedNoCheck(ILjava/lang/String;)Z
    .locals 1

    .line 8836
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getAppOpsManager()Landroid/app/AppOpsManager;

    move-result-object p0

    const/16 v0, 0x46

    invoke-virtual {p0, v0, p1, p2}, Landroid/app/AppOpsManager;->checkOpNoThrow(IILjava/lang/String;)I

    move-result p0

    if-eqz p0, :cond_0

    const/4 p0, 0x1

    goto :goto_0

    :cond_0
    const/4 p0, 0x0

    :goto_0
    return p0
.end method

.method public final isCallerShell()Z
    .locals 1

    .line 18744
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result p0

    const/16 v0, 0x7d0

    if-eq p0, v0, :cond_1

    if-nez p0, :cond_0

    goto :goto_0

    :cond_0
    const/4 p0, 0x0

    goto :goto_1

    :cond_1
    :goto_0
    const/4 p0, 0x1

    :goto_1
    return p0
.end method

.method public final isCameraActiveForUid(I)Z
    .locals 1

    .line 19685
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActiveCameraUids:Landroid/util/IntArray;

    monitor-enter v0

    .line 19686
    :try_start_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mActiveCameraUids:Landroid/util/IntArray;

    invoke-virtual {p0, p1}, Landroid/util/IntArray;->indexOf(I)I

    move-result p0

    if-ltz p0, :cond_0

    const/4 p0, 0x1

    goto :goto_0

    :cond_0
    const/4 p0, 0x0

    :goto_0
    monitor-exit v0

    return p0

    :catchall_0
    move-exception p0

    .line 19687
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw p0
.end method

.method public final isDeviceProvisioned(Landroid/content/Context;)Z
    .locals 1

    .line 10905
    invoke-virtual {p1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object p0

    const-string p1, "device_provisioned"

    const/4 v0, 0x0

    invoke-static {p0, p1, v0}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result p0

    if-eqz p0, :cond_0

    const/4 v0, 0x1

    :cond_0
    return v0
.end method

.method public final isEphemeralLocked(I)Z
    .locals 4

    .line 19348
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v0

    invoke-virtual {v0, p1}, Landroid/content/pm/PackageManager;->getPackagesForUid(I)[Ljava/lang/String;

    move-result-object v0

    const/4 v1, 0x0

    if-eqz v0, :cond_1

    .line 19349
    array-length v2, v0

    const/4 v3, 0x1

    if-eq v2, v3, :cond_0

    goto :goto_0

    .line 19352
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal;

    move-result-object p0

    .line 19353
    invoke-static {p1}, Landroid/os/UserHandle;->getUserId(I)I

    move-result p1

    aget-object v0, v0, v1

    .line 19352
    invoke-virtual {p0, p1, v0}, Landroid/content/pm/PackageManagerInternal;->isPackageEphemeral(ILjava/lang/String;)Z

    move-result p0

    return p0

    :cond_1
    :goto_0
    return v1
.end method

.method public isFreezableUid(I)Z
    .locals 1

    const-string v0, "android.permission.INTERACT_ACROSS_USERS_FULL"

    .line 24569
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_0

    .line 24571
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string p1, "isFreezableUid - permission is not granted. callingUid: "

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result p1

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    const-string p1, "ActivityManager"

    invoke-static {p1, p0}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    const/4 p0, 0x0

    return p0

    .line 24574
    :cond_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    const/4 v0, 0x1

    if-eqz p0, :cond_1

    .line 24575
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->hasFloatingOrOnScreenWindow(I)Z

    move-result p0

    xor-int/2addr p0, v0

    return p0

    :cond_1
    return v0
.end method

.method public final isHeapDumpAllowed()Z
    .locals 3

    .line 7385
    sget-boolean v0, Lcom/android/server/am/ActivityManagerService;->USER_BUILD:Z

    const/4 v1, 0x1

    if-eqz v0, :cond_4

    sget-boolean v0, Lcom/android/server/am/ActivityManagerService;->SHIP_BUILD:Z

    if-nez v0, :cond_0

    goto :goto_0

    :cond_0
    const-string/jumbo v0, "ro.boot.em.status"

    const-string v2, "0x0"

    .line 7388
    invoke-static {v0, v2}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    const-string v2, "0x1"

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1

    return v1

    .line 7391
    :cond_1
    new-instance v0, Lcom/samsung/android/service/EngineeringMode/EngineeringModeManager;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-direct {v0, v2}, Lcom/samsung/android/service/EngineeringMode/EngineeringModeManager;-><init>(Landroid/content/Context;)V

    .line 7392
    invoke-virtual {v0}, Lcom/samsung/android/service/EngineeringMode/EngineeringModeManager;->isConnected()Z

    move-result v2

    if-eqz v2, :cond_2

    const/16 v2, 0x41

    .line 7394
    invoke-virtual {v0, v2}, Lcom/samsung/android/service/EngineeringMode/EngineeringModeManager;->getStatus(I)I

    move-result v0

    if-ne v0, v1, :cond_2

    return v1

    .line 7399
    :cond_2
    sget-boolean v0, Lcom/android/server/am/ActivityManagerService;->IS_JDM_PROJECT:Z

    if-eqz v0, :cond_3

    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->isTestAppInstalled()Z

    move-result p0

    if-eqz p0, :cond_3

    return v1

    :cond_3
    const-string p0, "ActivityManager"

    const-string v0, "heapdump is not allowed"

    .line 7402
    invoke-static {p0, v0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    const/4 p0, 0x0

    return p0

    :cond_4
    :goto_0
    return v1
.end method

.method public isImsProcess(Ljava/lang/String;)Z
    .locals 0

    const-string p0, "com.sec.sve"

    .line 6785
    invoke-virtual {p0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p0

    if-eqz p0, :cond_0

    const/4 p0, 0x1

    return p0

    :cond_0
    const/4 p0, 0x0

    return p0
.end method

.method public isInLockTaskMode()Z
    .locals 0

    .line 8161
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {p0}, Lcom/android/server/wm/ActivityTaskManagerService;->isInLockTaskMode()Z

    move-result p0

    return p0
.end method

.method public final isInRestrictedBucket(ILjava/lang/String;J)Z
    .locals 0

    .line 7529
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    .line 7530
    invoke-virtual {p0, p2, p1, p3, p4}, Landroid/app/usage/UsageStatsManagerInternal;->getAppStandbyBucket(Ljava/lang/String;IJ)I

    move-result p0

    const/16 p1, 0x2d

    if-gt p1, p0, :cond_0

    const/4 p0, 0x1

    goto :goto_0

    :cond_0
    const/4 p0, 0x0

    :goto_0
    return p0
.end method

.method public final isInstantApp(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;I)Z
    .locals 3

    .line 16456
    invoke-static {p3}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v0

    const/16 v1, 0x2710

    const/4 v2, 0x0

    if-ge v0, v1, :cond_0

    return v2

    :cond_0
    if-eqz p1, :cond_1

    .line 16461
    iget-object p0, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    invoke-virtual {p0}, Landroid/content/pm/ApplicationInfo;->isInstantApp()Z

    move-result p0

    return p0

    .line 16464
    :cond_1
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object p1

    if-nez p2, :cond_3

    .line 16467
    :try_start_0
    invoke-interface {p1, p3}, Landroid/content/pm/IPackageManager;->getPackagesForUid(I)[Ljava/lang/String;

    move-result-object v0

    if-eqz v0, :cond_2

    .line 16468
    array-length v1, v0

    if-eqz v1, :cond_2

    .line 16472
    aget-object p2, v0, v2

    goto :goto_0

    .line 16469
    :cond_2
    new-instance p0, Ljava/lang/IllegalArgumentException;

    const-string p1, "Unable to determine caller package name"

    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 16474
    :cond_3
    :goto_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    invoke-virtual {p0, p3, p2}, Lcom/android/server/appop/AppOpsService;->checkPackage(ILjava/lang/String;)I

    .line 16475
    invoke-static {p3}, Landroid/os/UserHandle;->getUserId(I)I

    move-result p0

    invoke-interface {p1, p2, p0}, Landroid/content/pm/IPackageManager;->isInstantApp(Ljava/lang/String;I)Z

    move-result p0
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    return p0

    :catch_0
    move-exception p0

    .line 16477
    new-instance p1, Ljava/lang/StringBuilder;

    invoke-direct {p1}, Ljava/lang/StringBuilder;-><init>()V

    const-string p3, "Error looking up if "

    invoke-virtual {p1, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p2, " is an instant app."

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    const-string p2, "ActivityManager"

    invoke-static {p2, p1, p0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    const/4 p0, 0x1

    return p0
.end method

.method public isIntentSenderAnActivity(Landroid/content/IIntentSender;)Z
    .locals 1

    .line 6810
    instance-of p0, p1, Lcom/android/server/am/PendingIntentRecord;

    const/4 v0, 0x0

    if-nez p0, :cond_0

    return v0

    .line 6814
    :cond_0
    :try_start_0
    check-cast p1, Lcom/android/server/am/PendingIntentRecord;

    .line 6815
    iget-object p0, p1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget p0, p0, Lcom/android/server/am/PendingIntentRecord$Key;->type:I
    :try_end_0
    .catch Ljava/lang/ClassCastException; {:try_start_0 .. :try_end_0} :catch_0

    const/4 p1, 0x2

    if-ne p0, p1, :cond_1

    const/4 p0, 0x1

    return p0

    :catch_0
    :cond_1
    return v0
.end method

.method public isIntentSenderTargetedToPackage(Landroid/content/IIntentSender;)Z
    .locals 3

    .line 6700
    instance-of p0, p1, Lcom/android/server/am/PendingIntentRecord;

    const/4 v0, 0x0

    if-nez p0, :cond_0

    return v0

    .line 6704
    :cond_0
    :try_start_0
    check-cast p1, Lcom/android/server/am/PendingIntentRecord;

    .line 6705
    iget-object p0, p1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object p0, p0, Lcom/android/server/am/PendingIntentRecord$Key;->allIntents:[Landroid/content/Intent;

    if-nez p0, :cond_1

    return v0

    :cond_1
    move p0, v0

    .line 6708
    :goto_0
    iget-object v1, p1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v1, v1, Lcom/android/server/am/PendingIntentRecord$Key;->allIntents:[Landroid/content/Intent;

    array-length v2, v1

    if-ge p0, v2, :cond_3

    .line 6709
    aget-object v1, v1, p0

    .line 6710
    invoke-virtual {v1}, Landroid/content/Intent;->getPackage()Ljava/lang/String;

    move-result-object v2

    if-eqz v2, :cond_2

    invoke-virtual {v1}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v1
    :try_end_0
    .catch Ljava/lang/ClassCastException; {:try_start_0 .. :try_end_0} :catch_0

    if-eqz v1, :cond_2

    return v0

    :cond_2
    add-int/lit8 p0, p0, 0x1

    goto :goto_0

    :cond_3
    const/4 p0, 0x1

    return p0

    :catch_0
    return v0
.end method

.method public isKilledByRecentTask(ILjava/lang/String;)Z
    .locals 1

    .line 8318
    sget-object p0, Lcom/android/server/am/ActivityManagerService;->mRecentKillList:Ljava/util/List;

    monitor-enter p0

    .line 8319
    :try_start_0
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p2, ","

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-interface {p0, p1}, Ljava/util/List;->contains(Ljava/lang/Object;)Z

    move-result p1

    monitor-exit p0

    return p1

    :catchall_0
    move-exception p1

    .line 8320
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw p1
.end method

.method public isModernBroadcastQueueEnabled()Z
    .locals 2

    const-string v0, "android.permission.DUMP"

    const-string/jumbo v1, "isModernBroadcastQueueEnabled()"

    .line 22650
    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 22651
    iget-boolean p0, p0, Lcom/android/server/am/ActivityManagerService;->mEnableModernQueue:Z

    return p0
.end method

.method public final isOnBgOffloadQueue(I)Z
    .locals 0

    .line 23541
    iget-boolean p0, p0, Lcom/android/server/am/ActivityManagerService;->mEnableOffloadQueue:Z

    if-eqz p0, :cond_0

    const/high16 p0, -0x80000000

    and-int/2addr p0, p1

    if-eqz p0, :cond_0

    const/4 p0, 0x1

    goto :goto_0

    :cond_0
    const/4 p0, 0x0

    :goto_0
    return p0
.end method

.method public isOnDeviceIdleAllowlistLOSP(IZ)Z
    .locals 1

    .line 7683
    invoke-static {p1}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v0

    if-eqz p2, :cond_0

    .line 7686
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mDeviceIdleExceptIdleAllowlist:[I

    goto :goto_0

    .line 7687
    :cond_0
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mDeviceIdleAllowlist:[I

    .line 7689
    :goto_0
    invoke-static {p2, v0}, Ljava/util/Arrays;->binarySearch([II)I

    move-result p2

    if-gez p2, :cond_2

    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mDeviceIdleTempAllowlist:[I

    .line 7690
    invoke-static {p2, v0}, Ljava/util/Arrays;->binarySearch([II)I

    move-result p2

    if-gez p2, :cond_2

    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingTempAllowlist:Lcom/android/server/am/PendingTempAllowlists;

    .line 7691
    invoke-virtual {p0, p1}, Lcom/android/server/am/PendingTempAllowlists;->get(I)Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;

    move-result-object p0

    if-eqz p0, :cond_1

    goto :goto_1

    :cond_1
    const/4 p0, 0x0

    goto :goto_2

    :cond_2
    :goto_1
    const/4 p0, 0x1

    :goto_2
    return p0
.end method

.method public final isOnFgOffloadQueue(I)Z
    .locals 0

    .line 0
    and-int/lit16 p0, p1, 0x800

    if-eqz p0, :cond_0

    const/4 p0, 0x1

    goto :goto_0

    :cond_0
    const/4 p0, 0x0

    :goto_0
    return p0
.end method

.method public isOnScreenWindow(I)Z
    .locals 0

    .line 8407
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    if-eqz p0, :cond_0

    .line 8408
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->isOnScreenWindow(I)Z

    move-result p0

    return p0

    :cond_0
    const/4 p0, 0x0

    return p0
.end method

.method public isPendingBroadcastPackageLocked(I)Z
    .locals 4

    .line 24396
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mEnableModernQueue:Z

    const/4 v1, 0x0

    if-eqz v0, :cond_0

    .line 24397
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    aget-object p0, p0, v1

    check-cast p0, Lcom/android/server/am/BroadcastQueueModernImpl;

    invoke-virtual {p0, p1}, Lcom/android/server/am/BroadcastQueueModernImpl;->isPendingBroadcastPackageLocked(I)Z

    move-result p0

    return p0

    .line 24399
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    aget-object v0, v0, v1

    check-cast v0, Lcom/android/server/am/BroadcastQueueImpl;

    invoke-virtual {v0, p1}, Lcom/android/server/am/BroadcastQueueImpl;->isPendingBroadcastPackageLocked(I)Z

    move-result v0

    const/4 v2, 0x1

    if-nez v0, :cond_1

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    aget-object v0, v0, v2

    check-cast v0, Lcom/android/server/am/BroadcastQueueImpl;

    .line 24400
    invoke-virtual {v0, p1}, Lcom/android/server/am/BroadcastQueueImpl;->isPendingBroadcastPackageLocked(I)Z

    move-result v0

    if-nez v0, :cond_1

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    const/4 v3, 0x2

    aget-object v0, v0, v3

    check-cast v0, Lcom/android/server/am/BroadcastQueueImpl;

    .line 24401
    invoke-virtual {v0, p1}, Lcom/android/server/am/BroadcastQueueImpl;->isPendingBroadcastPackageLocked(I)Z

    move-result v0

    if-nez v0, :cond_1

    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    const/4 v0, 0x3

    aget-object p0, p0, v0

    check-cast p0, Lcom/android/server/am/BroadcastQueueImpl;

    .line 24402
    invoke-virtual {p0, p1}, Lcom/android/server/am/BroadcastQueueImpl;->isPendingBroadcastPackageLocked(I)Z

    move-result p0

    if-eqz p0, :cond_2

    :cond_1
    move v1, v2

    :cond_2
    return v1
.end method

.method public isProcessFrozen(I)Z
    .locals 2

    const-string v0, "android.permission.DUMP"

    const-string/jumbo v1, "isProcessFrozen()"

    .line 22656
    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 22657
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    iget-object p0, p0, Lcom/android/server/am/OomAdjuster;->mCachedAppOptimizer:Lcom/android/server/am/CachedAppOptimizer;

    invoke-virtual {p0, p1}, Lcom/android/server/am/CachedAppOptimizer;->isProcessFrozen(I)Z

    move-result p0

    return p0
.end method

.method public final isProcessInStateToScheduleUserInitiatedJobsLocked(Lcom/android/server/am/ProcessRecord;J)Z
    .locals 7

    const/4 v0, 0x0

    if-nez p1, :cond_0

    return v0

    .line 7792
    :cond_0
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getBackgroundStartPrivileges()Landroid/app/BackgroundStartPrivileges;

    move-result-object v1

    .line 7794
    invoke-virtual {v1}, Landroid/app/BackgroundStartPrivileges;->allowsBackgroundActivityStarts()Z

    move-result v1

    const/4 v2, 0x1

    if-eqz v1, :cond_1

    return v2

    .line 7799
    :cond_1
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    .line 7800
    invoke-virtual {v1}, Lcom/android/server/am/ProcessStateRecord;->getCurProcState()I

    move-result v3

    const/4 v4, 0x3

    if-gt v3, v4, :cond_2

    .line 7803
    invoke-static {v3}, Landroid/os/PowerExemptionManager;->getReasonCodeFromProcState(I)I

    move-result v3

    .line 7802
    invoke-static {v3}, Lcom/android/server/am/ActivityManagerService;->doesReasonCodeAllowSchedulingUserInitiatedJobs(I)Z

    move-result v3

    if-eqz v3, :cond_2

    return v2

    .line 7808
    :cond_2
    invoke-virtual {v1}, Lcom/android/server/am/ProcessStateRecord;->getLastInvisibleTime()J

    move-result-wide v3

    const-wide/16 v5, 0x0

    cmp-long v1, v3, v5

    if-lez v1, :cond_3

    const-wide v5, 0x7fffffffffffffffL

    cmp-long v1, v3, v5

    if-gez v1, :cond_3

    sub-long/2addr p2, v3

    .line 7811
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget-wide v3, p0, Lcom/android/server/am/ActivityManagerConstants;->mVisibleToInvisibleUijScheduleGraceDurationMs:J

    cmp-long p0, p2, v3

    if-gez p0, :cond_3

    return v2

    .line 7817
    :cond_3
    iget-object p0, p1, Lcom/android/server/am/ProcessRecord;->mServices:Lcom/android/server/am/ProcessServiceRecord;

    if-eqz p0, :cond_5

    .line 7818
    invoke-virtual {p0}, Lcom/android/server/am/ProcessServiceRecord;->hasForegroundServices()Z

    move-result p1

    if-eqz p1, :cond_5

    .line 7819
    invoke-virtual {p0}, Lcom/android/server/am/ProcessServiceRecord;->numberOfRunningServices()I

    move-result p1

    sub-int/2addr p1, v2

    :goto_0
    if-ltz p1, :cond_5

    .line 7820
    invoke-virtual {p0, p1}, Lcom/android/server/am/ProcessServiceRecord;->getRunningServiceAt(I)Lcom/android/server/am/ServiceRecord;

    move-result-object p2

    .line 7821
    iget-boolean p3, p2, Lcom/android/server/am/ServiceRecord;->isForeground:Z

    if-eqz p3, :cond_4

    iget-boolean p2, p2, Lcom/android/server/am/ServiceRecord;->mAllowUiJobScheduling:Z

    if-eqz p2, :cond_4

    return v2

    :cond_4
    add-int/lit8 p1, p1, -0x1

    goto :goto_0

    :cond_5
    return v0
.end method

.method public isReceivingBroadcastLocked(Lcom/android/server/am/ProcessRecord;[I)Z
    .locals 6

    .line 19089
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v0, p0

    const/high16 v1, -0x80000000

    const/4 v2, 0x0

    move v4, v1

    move v3, v2

    :goto_0
    if-ge v3, v0, :cond_0

    aget-object v5, p0, v3

    .line 19090
    invoke-virtual {v5, p1}, Lcom/android/server/am/BroadcastQueue;->getPreferredSchedulingGroupLocked(Lcom/android/server/am/ProcessRecord;)I

    move-result v5

    invoke-static {v4, v5}, Ljava/lang/Math;->max(II)I

    move-result v4

    add-int/lit8 v3, v3, 0x1

    goto :goto_0

    .line 19092
    :cond_0
    aput v4, p2, v2

    if-eq v4, v1, :cond_1

    const/4 v2, 0x1

    :cond_1
    return v2
.end method

.method public isScaledApp(I)Z
    .locals 0

    .line 0
    const/4 p0, 0x0

    return p0
.end method

.method public isScaledAppByPackageName(Ljava/lang/String;)Z
    .locals 0

    .line 0
    const/4 p0, 0x0

    return p0
.end method

.method public isServiceRestartBackoffEnabled(Ljava/lang/String;)Z
    .locals 1

    .line 11961
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 11962
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActiveServices;->isServiceRestartBackoffEnabledLocked(Ljava/lang/String;)Z

    move-result p1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return p1

    :catchall_0
    move-exception p1

    .line 11963
    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public final isSettingsCloseAllowed(Ljava/lang/String;I)Z
    .locals 0

    .line 4673
    invoke-static {p1}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result p0

    if-nez p0, :cond_0

    const-string p0, "com.android.settings"

    invoke-virtual {p1, p0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p0

    if-eqz p0, :cond_0

    :try_start_0
    const-string/jumbo p0, "password_policy"

    .line 4676
    invoke-static {p0}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object p0

    .line 4675
    invoke-static {p0}, Lcom/samsung/android/knox/devicesecurity/IPasswordPolicy$Stub;->asInterface(Landroid/os/IBinder;)Lcom/samsung/android/knox/devicesecurity/IPasswordPolicy;

    move-result-object p0

    if-eqz p0, :cond_0

    .line 4678
    invoke-interface {p0, p2}, Lcom/samsung/android/knox/devicesecurity/IPasswordPolicy;->isChangeRequestedAsUser(I)I

    move-result p0
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    if-lez p0, :cond_0

    const/4 p0, 0x0

    return p0

    :catch_0
    :cond_0
    const/4 p0, 0x1

    return p0
.end method

.method public isSingleton(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;Ljava/lang/String;I)Z
    .locals 4

    .line 16006
    iget p0, p2, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {p0}, Landroid/os/UserHandle;->getAppId(I)I

    move-result p0

    const/16 v0, 0x2710

    const/high16 v1, 0x40000000    # 2.0f

    const/4 v2, 0x1

    const/4 v3, 0x0

    if-lt p0, v0, :cond_1

    and-int p0, p4, v1

    if-eqz p0, :cond_3

    .line 16008
    iget p0, p2, Landroid/content/pm/ApplicationInfo;->uid:I

    const-string p1, "android.permission.INTERACT_ACROSS_USERS"

    invoke-static {p1, p0}, Landroid/app/ActivityManager;->checkUidPermission(Ljava/lang/String;I)I

    move-result p0

    if-nez p0, :cond_0

    goto :goto_0

    .line 16011
    :cond_0
    new-instance p0, Landroid/content/ComponentName;

    iget-object p2, p2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-direct {p0, p2, p3}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 16012
    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string p3, "Permission Denial: Component "

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;

    move-result-object p0

    invoke-virtual {p2, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p0, " requests FLAG_SINGLE_USER, but app does not hold "

    invoke-virtual {p2, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    const-string p1, "ActivityManager"

    .line 16015
    invoke-static {p1, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 16016
    new-instance p1, Ljava/lang/SecurityException;

    invoke-direct {p1, p0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p1

    :cond_1
    const-string/jumbo p0, "system"

    .line 16021
    invoke-virtual {p0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p0

    if-eqz p0, :cond_2

    goto :goto_0

    :cond_2
    and-int p0, p4, v1

    if-eqz p0, :cond_3

    .line 16025
    iget p0, p2, Landroid/content/pm/ApplicationInfo;->uid:I

    const/16 p1, 0x3e9

    invoke-static {p0, p1}, Landroid/os/UserHandle;->isSameApp(II)Z

    move-result p0

    if-nez p0, :cond_4

    iget p0, p2, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 p0, p0, 0x8

    if-eqz p0, :cond_3

    goto :goto_0

    :cond_3
    move v2, v3

    :cond_4
    :goto_0
    return v2
.end method

.method public final isTestAppInstalled()Z
    .locals 7

    const-string p0, "com.salab.act"

    const-string v0, "com.salab.issuetracker"

    .line 7407
    filled-new-array {p0, v0}, [Ljava/lang/String;

    move-result-object p0

    const/4 v0, 0x0

    move v1, v0

    :goto_0
    const/4 v2, 0x2

    if-ge v1, v2, :cond_1

    .line 7408
    aget-object v2, p0, v1

    .line 7410
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v3

    .line 7411
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v4

    const-wide/16 v5, 0x80

    .line 7410
    invoke-interface {v3, v2, v5, v6, v4}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;JI)Landroid/content/pm/ApplicationInfo;

    move-result-object v2
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    if-eqz v2, :cond_0

    const/4 p0, 0x1

    return p0

    :catch_0
    :cond_0
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    :cond_1
    return v0
.end method

.method public isTopActivityImmersive()Z
    .locals 0

    .line 9906
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {p0}, Lcom/android/server/wm/ActivityTaskManagerService;->isTopActivityImmersive()Z

    move-result p0

    return p0
.end method

.method public isTopOfTask(Landroid/os/IBinder;)Z
    .locals 0

    .line 9911
    invoke-static {}, Landroid/app/ActivityClient;->getInstance()Landroid/app/ActivityClient;

    move-result-object p0

    invoke-virtual {p0, p1}, Landroid/app/ActivityClient;->isTopOfTask(Landroid/os/IBinder;)Z

    move-result p0

    return p0
.end method

.method public isUidActive(ILjava/lang/String;)Z
    .locals 1

    .line 9670
    invoke-virtual {p0, p2}, Lcom/android/server/am/ActivityManagerService;->hasUsageStatsPermission(Ljava/lang/String;)Z

    move-result p2

    if-nez p2, :cond_0

    const-string p2, "android.permission.PACKAGE_USAGE_STATS"

    const-string/jumbo v0, "isUidActive"

    .line 9671
    invoke-virtual {p0, p2, v0}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 9674
    :cond_0
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter p2

    .line 9675
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->isUidActiveLOSP(I)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 9676
    monitor-exit p2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    const/4 p0, 0x1

    return p0

    .line 9678
    :cond_1
    :try_start_1
    monitor-exit p2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 9679
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mInternal:Landroid/app/ActivityManagerInternal;

    invoke-virtual {p0, p1}, Landroid/app/ActivityManagerInternal;->isPendingTopUid(I)Z

    move-result p0

    return p0

    :catchall_0
    move-exception p0

    .line 9678
    :try_start_2
    monitor-exit p2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p0
.end method

.method public isUidActiveLOSP(I)Z
    .locals 0

    .line 9684
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {p0, p1}, Lcom/android/server/am/ProcessList;->getUidRecordLOSP(I)Lcom/android/server/am/UidRecord;

    move-result-object p0

    if-eqz p0, :cond_0

    .line 9685
    invoke-virtual {p0}, Lcom/android/server/am/UidRecord;->isSetIdle()Z

    move-result p0

    if-nez p0, :cond_0

    const/4 p0, 0x1

    goto :goto_0

    :cond_0
    const/4 p0, 0x0

    :goto_0
    return p0
.end method

.method public isUserAMonkey()Z
    .locals 2

    .line 9305
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v0

    .line 9307
    :try_start_0
    iget-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mUserIsMonkey:Z

    if-nez v1, :cond_1

    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {p0}, Lcom/android/server/wm/ActivityTaskManagerService;->isControllerAMonkey()Z

    move-result p0

    if-eqz p0, :cond_0

    goto :goto_0

    :cond_0
    const/4 p0, 0x0

    goto :goto_1

    :cond_1
    :goto_0
    const/4 p0, 0x1

    :goto_1
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return p0

    :catchall_0
    move-exception p0

    .line 9308
    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p0
.end method

.method public isUserRunning(II)Z
    .locals 2

    .line 20282
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v1

    invoke-virtual {v0, p1, v1}, Lcom/android/server/am/UserController;->isSameProfileGroup(II)Z

    move-result v0

    if-nez v0, :cond_1

    const-string v0, "android.permission.INTERACT_ACROSS_USERS"

    .line 20283
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v1

    if-nez v1, :cond_0

    goto :goto_0

    .line 20285
    :cond_0
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string p1, "Permission Denial: isUserRunning() from pid="

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20286
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result p1

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, ", uid="

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20287
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result p1

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, " requires "

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    const-string p1, "ActivityManager"

    .line 20289
    invoke-static {p1, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 20290
    new-instance p1, Ljava/lang/SecurityException;

    invoke-direct {p1, p0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 20292
    :cond_1
    :goto_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/UserController;->isUserRunning(II)Z

    move-result p0

    return p0
.end method

.method public isUserStopped(I)Z
    .locals 0

    .line 20327
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {p0, p1}, Lcom/android/server/am/UserController;->getStartedUserState(I)Lcom/android/server/am/UserState;

    move-result-object p0

    if-nez p0, :cond_0

    const/4 p0, 0x1

    goto :goto_0

    :cond_0
    const/4 p0, 0x0

    :goto_0
    return p0
.end method

.method public isValidSingletonCall(II)Z
    .locals 0

    .line 16041
    invoke-static {p2}, Landroid/os/UserHandle;->getAppId(I)I

    move-result p0

    .line 16042
    invoke-static {p1, p2}, Landroid/os/UserHandle;->isSameApp(II)Z

    move-result p1

    if-nez p1, :cond_1

    const/16 p1, 0x3e8

    if-eq p0, p1, :cond_1

    const/16 p1, 0x3e9

    if-eq p0, p1, :cond_1

    const-string p0, "android.permission.INTERACT_ACROSS_USERS_FULL"

    .line 16045
    invoke-static {p0, p2}, Landroid/app/ActivityManager;->checkUidPermission(Ljava/lang/String;I)I

    move-result p0

    if-nez p0, :cond_0

    goto :goto_0

    :cond_0
    const/4 p0, 0x0

    goto :goto_1

    :cond_1
    :goto_0
    const/4 p0, 0x1

    :goto_1
    return p0
.end method

.method public isVrModePackageEnabled(Landroid/content/ComponentName;)Z
    .locals 1

    .line 9897
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {p0}, Lcom/android/server/wm/ActivityTaskManagerService;->enforceSystemHasVrFeature()V

    .line 9899
    const-class p0, Lcom/android/server/vr/VrManagerInternal;

    invoke-static {p0}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object p0

    check-cast p0, Lcom/android/server/vr/VrManagerInternal;

    .line 9901
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v0

    invoke-virtual {p0, p1, v0}, Lcom/android/server/vr/VrManagerInternal;->hasVrPackage(Landroid/content/ComponentName;I)I

    move-result p0

    if-nez p0, :cond_0

    const/4 p0, 0x1

    goto :goto_0

    :cond_0
    const/4 p0, 0x0

    :goto_0
    return p0
.end method

.method public killAllBackgroundProcesses()V
    .locals 11

    const-string v0, "android.permission.KILL_ALL_BACKGROUND_PROCESSES"

    .line 4451
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_0

    .line 4460
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 4462
    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    .line 4465
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    const/4 v3, 0x1

    invoke-virtual {v2, v3}, Lcom/android/server/am/AppProfiler;->setAllowLowerMemLevelLocked(Z)V

    .line 4466
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 4468
    :try_start_2
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/4 v4, 0x0

    const/4 v5, -0x1

    const/4 v6, -0x1

    const/16 v7, 0x352

    const/16 v8, 0xa

    const/16 v9, 0x18

    const-string/jumbo v10, "kill all background"

    invoke-virtual/range {v3 .. v10}, Lcom/android/server/am/ProcessList;->killPackageProcessesLSP(Ljava/lang/String;IIIIILjava/lang/String;)Z

    .line 4480
    monitor-exit v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 4482
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    const/4 v3, 0x0

    invoke-virtual {v2, v3}, Lcom/android/server/am/AppProfiler;->doLowMemReportIfNeededLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 4483
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    .line 4485
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return-void

    :catchall_0
    move-exception v3

    .line 4480
    :try_start_5
    monitor-exit v2
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    :try_start_6
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v3

    :catchall_1
    move-exception v2

    .line 4483
    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    :try_start_7
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v2
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_2

    :catchall_2
    move-exception p0

    .line 4485
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4486
    throw p0

    .line 4453
    :cond_0
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "Permission Denial: killAllBackgroundProcesses() from pid="

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 4454
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v0, ", uid="

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v0, " requires "

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "android.permission.KILL_ALL_BACKGROUND_PROCESSES"

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    const-string v0, "ActivityManager"

    .line 4456
    invoke-static {v0, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4457
    new-instance v0, Ljava/lang/SecurityException;

    invoke-direct {v0, p0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public killAllBackgroundProcessesExcept(II)V
    .locals 4

    const-string v0, "android.permission.KILL_ALL_BACKGROUND_PROCESSES"

    .line 4499
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_0

    .line 4508
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 4510
    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    .line 4511
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 4512
    :try_start_2
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v3, p1, p2}, Lcom/android/server/am/ProcessList;->killAllBackgroundProcessesExceptLSP(II)V

    .line 4513
    monitor-exit v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 4514
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    .line 4516
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return-void

    :catchall_0
    move-exception p1

    .line 4513
    :try_start_5
    monitor-exit v2
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    :try_start_6
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p1

    :catchall_1
    move-exception p1

    .line 4514
    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    :try_start_7
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_2

    :catchall_2
    move-exception p0

    .line 4516
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4517
    throw p0

    .line 4501
    :cond_0
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string p1, "Permission Denial: killAllBackgroundProcessesExcept() from pid="

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 4502
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result p1

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, ", uid="

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result p1

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, " requires "

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, "android.permission.KILL_ALL_BACKGROUND_PROCESSES"

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    const-string p1, "ActivityManager"

    .line 4504
    invoke-static {p1, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4505
    new-instance p1, Ljava/lang/SecurityException;

    invoke-direct {p1, p0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method public killAppAtUsersRequest(Lcom/android/server/am/ProcessRecord;)V
    .locals 1

    .line 10935
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 10936
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppErrors:Lcom/android/server/am/AppErrors;

    invoke-virtual {v0, p1}, Lcom/android/server/am/AppErrors;->killAppAtUserRequestLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 10937
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public killApplication(Ljava/lang/String;IILjava/lang/String;I)V
    .locals 3

    if-nez p1, :cond_0

    return-void

    :cond_0
    if-gez p2, :cond_1

    .line 4730
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string p2, "Invalid appid specified for pkg : "

    invoke-virtual {p0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    const-string p1, "ActivityManager"

    invoke-static {p1, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    return-void

    .line 4733
    :cond_1
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 4735
    invoke-static {v0}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v1

    const/16 v2, 0x3e8

    if-ne v1, v2, :cond_2

    .line 4737
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v1, 0x16

    invoke-virtual {v0, v1}, Landroid/os/Handler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v0

    .line 4738
    iput p2, v0, Landroid/os/Message;->arg1:I

    .line 4739
    iput p3, v0, Landroid/os/Message;->arg2:I

    .line 4740
    invoke-static {}, Lcom/android/internal/os/SomeArgs;->obtain()Lcom/android/internal/os/SomeArgs;

    move-result-object p2

    .line 4741
    iput-object p1, p2, Lcom/android/internal/os/SomeArgs;->arg1:Ljava/lang/Object;

    .line 4742
    iput-object p4, p2, Lcom/android/internal/os/SomeArgs;->arg2:Ljava/lang/Object;

    .line 4743
    invoke-static {p5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object p1

    iput-object p1, p2, Lcom/android/internal/os/SomeArgs;->arg3:Ljava/lang/Object;

    .line 4744
    iput-object p2, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    .line 4745
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {p0, v0}, Landroid/os/Handler;->sendMessage(Landroid/os/Message;)Z

    return-void

    .line 4747
    :cond_2
    new-instance p0, Ljava/lang/SecurityException;

    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {p2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p3, " cannot kill pkg: "

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p0, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p0
.end method

.method public killApplicationProcess(Ljava/lang/String;I)V
    .locals 3

    if-nez p1, :cond_0

    return-void

    .line 4939
    :cond_0
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    const/16 v1, 0x3e8

    if-ne v0, v1, :cond_2

    .line 4942
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 4943
    :try_start_0
    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->getProcessRecordLocked(Ljava/lang/String;I)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    if-eqz v0, :cond_1

    .line 4945
    invoke-virtual {v0}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-eqz v0, :cond_1

    .line 4947
    :try_start_1
    invoke-interface {v0}, Landroid/app/IApplicationThread;->scheduleSuicide()V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_0

    :cond_1
    :try_start_2
    const-string v0, "ActivityManager"

    .line 4952
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Process/uid not found attempting kill of "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, " / "

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {v0, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4955
    :catch_0
    :goto_0
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :catchall_0
    move-exception p1

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1

    .line 4957
    :cond_2
    new-instance p0, Ljava/lang/SecurityException;

    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {p2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v0, " cannot kill app process: "

    invoke-virtual {p2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p0, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p0
.end method

.method public killBackgroundProcesses(Ljava/lang/String;I)V
    .locals 20

    move-object/from16 v1, p0

    move-object/from16 v0, p1

    const-string v2, "android.permission.KILL_BACKGROUND_PROCESSES"

    .line 4390
    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v2

    if-eqz v2, :cond_1

    const-string v2, "android.permission.RESTART_PACKAGES"

    .line 4392
    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v2

    if-nez v2, :cond_0

    goto :goto_0

    .line 4394
    :cond_0
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Permission Denial: killBackgroundProcesses() from pid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 4395
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ", uid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 4396
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " requires "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "android.permission.KILL_BACKGROUND_PROCESSES"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "ActivityManager"

    .line 4398
    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4399
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    :cond_1
    :goto_0
    const-string v2, "android.permission.KILL_ALL_BACKGROUND_PROCESSES"

    .line 4401
    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v2

    const/4 v10, 0x0

    if-nez v2, :cond_2

    const/4 v2, 0x1

    move v11, v2

    goto :goto_1

    :cond_2
    move v11, v10

    .line 4403
    :goto_1
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v4

    .line 4404
    invoke-static {v4}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v12

    .line 4408
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    move/from16 v5, p2

    invoke-static {v0, v5, v2}, Lcom/android/server/am/EventLogTags;->writeAmKillBgProc(Ljava/lang/String;II)V

    .line 4412
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    const/4 v6, 0x1

    const/4 v7, 0x2

    const-string/jumbo v8, "killBackgroundProcesses"

    const/4 v9, 0x0

    invoke-virtual/range {v2 .. v9}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result v4

    .line 4414
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v2, v4}, Lcom/android/server/am/UserController;->expandUserId(I)[I

    move-result-object v13

    .line 4416
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    move-object/from16 v3, p1

    invoke-virtual/range {v2 .. v9}, Lcom/android/server/wm/ActivityTaskManagerService;->isForceStopDisabled(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)Z

    move-result v2

    if-eqz v2, :cond_3

    return-void

    .line 4421
    :cond_3
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v14

    .line 4423
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v9

    .line 4424
    array-length v8, v13

    :goto_2
    if-ge v10, v8, :cond_6

    aget v5, v13, v10
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_3

    const-wide/32 v2, 0x10000000

    const/4 v4, -0x1

    .line 4428
    :try_start_1
    invoke-interface {v9, v0, v2, v3, v5}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;JI)I

    move-result v2

    .line 4427
    invoke-static {v2}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v2
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_3

    move v6, v2

    goto :goto_3

    :catch_0
    move v6, v4

    :goto_3
    if-eq v6, v4, :cond_5

    if-nez v11, :cond_4

    if-eq v6, v12, :cond_4

    goto :goto_5

    .line 4436
    :cond_4
    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_3

    .line 4437
    :try_start_3
    iget-object v7, v1, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v7
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    .line 4438
    :try_start_4
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/16 v16, 0x1f4

    const/16 v17, 0xa

    const/16 v18, 0x18

    const-string/jumbo v19, "kill background"
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    move-object/from16 v3, p1

    move v4, v6

    move/from16 v6, v16

    move-object/from16 v16, v7

    move/from16 v7, v17

    move/from16 v17, v8

    move/from16 v8, v18

    move-object/from16 v18, v9

    move-object/from16 v9, v19

    :try_start_5
    invoke-virtual/range {v2 .. v9}, Lcom/android/server/am/ProcessList;->killPackageProcessesLSP(Ljava/lang/String;IIIIILjava/lang/String;)Z

    .line 4441
    monitor-exit v16
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    :try_start_6
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 4442
    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_2

    :try_start_7
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_3

    add-int/lit8 v10, v10, 0x1

    move/from16 v8, v17

    move-object/from16 v9, v18

    goto :goto_2

    :catchall_0
    move-exception v0

    move-object/from16 v16, v7

    .line 4441
    :goto_4
    :try_start_8
    monitor-exit v16
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_1

    :try_start_9
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v0

    :catchall_1
    move-exception v0

    goto :goto_4

    :catchall_2
    move-exception v0

    .line 4442
    monitor-exit p0
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_2

    :try_start_a
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :cond_5
    :goto_5
    const-string v1, "ActivityManager"

    .line 4433
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Invalid packageName: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_3

    .line 4445
    invoke-static {v14, v15}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return-void

    :cond_6
    invoke-static {v14, v15}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return-void

    :catchall_3
    move-exception v0

    invoke-static {v14, v15}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4446
    throw v0
.end method

.method public killPackageDependents(Ljava/lang/String;I)V
    .locals 12

    const-string v0, "android.permission.KILL_UID"

    const-string/jumbo v1, "killPackageDependents()"

    .line 22799
    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    if-eqz p1, :cond_2

    .line 22805
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 22806
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v2

    const-wide/32 v3, 0x10000000

    const/4 v5, -0x1

    .line 22809
    :try_start_0
    invoke-interface {v2, p1, v3, v4, p2}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;JI)I

    move-result v2
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    :catch_0
    move v2, v5

    :goto_0
    if-eq p2, v5, :cond_1

    if-eq v2, v5, :cond_0

    goto :goto_1

    .line 22813
    :cond_0
    new-instance p0, Ljava/lang/IllegalArgumentException;

    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "Cannot kill dependents of non-existing package "

    invoke-virtual {p2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 22817
    :cond_1
    :goto_1
    :try_start_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_2

    .line 22818
    :try_start_2
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v3
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 22819
    :try_start_3
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-static {v2}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v6

    const/4 v8, 0x0

    const/16 v9, 0xc

    const/4 v10, 0x0

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "dep: "

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v11

    move-object v5, p1

    move v7, p2

    invoke-virtual/range {v4 .. v11}, Lcom/android/server/am/ProcessList;->killPackageProcessesLSP(Ljava/lang/String;IIIIILjava/lang/String;)Z

    .line 22824
    monitor-exit v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 22825
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    :try_start_5
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_2

    .line 22827
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return-void

    :catchall_0
    move-exception p1

    .line 22824
    :try_start_6
    monitor-exit v3
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    :try_start_7
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p1

    :catchall_1
    move-exception p1

    .line 22825
    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    :try_start_8
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_2

    :catchall_2
    move-exception p0

    .line 22827
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 22828
    throw p0

    .line 22801
    :cond_2
    new-instance p0, Ljava/lang/NullPointerException;

    const-string p1, "Cannot kill the dependents of a package without its name."

    invoke-direct {p0, p1}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw p0
.end method

.method public killPids([ILjava/lang/String;Z)Z
    .locals 7

    .line 10163
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    const/16 v1, 0x3e8

    if-ne v0, v1, :cond_9

    if-nez p2, :cond_0

    const-string p2, "Unknown"

    .line 10171
    :cond_0
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    .line 10172
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v1

    const/4 v2, 0x0

    move v3, v2

    move v4, v3

    .line 10174
    :goto_0
    :try_start_0
    array-length v5, p1

    if-ge v3, v5, :cond_2

    .line 10175
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    aget v6, p1, v3

    invoke-virtual {v5, v6}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v5

    if-eqz v5, :cond_1

    .line 10177
    iget-object v5, v5, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {v5}, Lcom/android/server/am/ProcessStateRecord;->getSetAdj()I

    move-result v5

    if-le v5, v4, :cond_1

    move v4, v5

    :cond_1
    add-int/lit8 v3, v3, 0x1

    goto :goto_0

    :cond_2
    const/16 v3, 0x3e7

    if-ge v4, v3, :cond_3

    const/16 v3, 0x384

    if-le v4, v3, :cond_3

    move v4, v3

    :cond_3
    if-nez p3, :cond_4

    const/16 p3, 0x1f4

    if-ge v4, p3, :cond_4

    move v4, p3

    :cond_4
    const-string p3, "ActivityManager"

    .line 10197
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Killing processes "

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v5, " at adjustment "

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {p3, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    move p3, v2

    .line 10198
    :goto_1
    array-length v3, p1

    if-ge v2, v3, :cond_7

    .line 10199
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    aget v5, p1, v2

    invoke-virtual {v3, v5}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v3

    if-nez v3, :cond_5

    goto :goto_2

    .line 10203
    :cond_5
    iget-object v5, v3, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {v5}, Lcom/android/server/am/ProcessStateRecord;->getSetAdj()I

    move-result v5

    if-lt v5, v4, :cond_6

    .line 10204
    invoke-virtual {v3}, Lcom/android/server/am/ProcessRecord;->isKilledByAm()Z

    move-result v5

    if-nez v5, :cond_6

    .line 10205
    invoke-virtual {v0, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    const/4 p3, 0x1

    :cond_6
    :goto_2
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    .line 10209
    :cond_7
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 10210
    invoke-virtual {v0}, Ljava/util/ArrayList;->isEmpty()Z

    move-result p1

    if-nez p1, :cond_8

    .line 10211
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v1, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda14;

    invoke-direct {v1, p0, v0, p2}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda14;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/util/ArrayList;Ljava/lang/String;)V

    invoke-virtual {p1, v1}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    :cond_8
    return p3

    :catchall_0
    move-exception p0

    .line 10209
    :try_start_1
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw p0

    .line 10164
    :cond_9
    new-instance p0, Ljava/lang/SecurityException;

    const-string/jumbo p1, "killPids only available to the system"

    invoke-direct {p0, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p0
.end method

.method public killProcessForCalmMode(Ljava/lang/String;IILjava/lang/String;)V
    .locals 7

    const/4 v4, 0x0

    const/4 v5, 0x1

    move-object v0, p0

    move-object v1, p1

    move v2, p2

    move v3, p3

    move-object v6, p4

    .line 24361
    invoke-virtual/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->killProcessForMARs(Ljava/lang/String;IIIZLjava/lang/String;)V

    return-void
.end method

.method public killProcessForChimera(Ljava/lang/String;ILjava/lang/String;)V
    .locals 7

    .line 8195
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 8196
    :try_start_0
    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->getProcessRecordLocked(Ljava/lang/String;I)Lcom/android/server/am/ProcessRecord;

    move-result-object p2

    if-eqz p2, :cond_1

    .line 8198
    invoke-virtual {p2}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v0

    .line 8199
    sget v1, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-ne v0, v1, :cond_0

    const-string p2, "ActivityManager"

    .line 8200
    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "Chimera kill failed, this is system process: "

    invoke-virtual {p3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p2, p1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 8201
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 8205
    :cond_0
    :try_start_1
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "B|killProcessForChimera "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "("

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ")"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const/4 v6, 0x0

    invoke-static {v0, v6}, Lcom/android/server/chimera/umr/KernelMemoryProxy$ReclaimerLog;->write(Ljava/lang/String;Z)V

    .line 8207
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/4 v2, 0x0

    const/4 v3, 0x1

    const/16 v4, 0xd

    move-object v1, p2

    move-object v5, p3

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ProcessList;->removeProcessLocked(Lcom/android/server/am/ProcessRecord;ZZILjava/lang/String;)Z

    .line 8210
    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "E|killProcessForChimera "

    invoke-virtual {p3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, "("

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result p1

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, ")"

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p1, v6}, Lcom/android/server/chimera/umr/KernelMemoryProxy$ReclaimerLog;->write(Ljava/lang/String;Z)V

    .line 8213
    :cond_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :catchall_0
    move-exception p1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public killProcessForMARs(Ljava/lang/String;IIIZLjava/lang/String;)V
    .locals 17

    move-object/from16 v1, p0

    .line 24365
    invoke-static/range {p2 .. p2}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v4

    .line 24366
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 24367
    :try_start_0
    iget-object v15, v1, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v15
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    .line 24368
    :try_start_1
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    const/4 v7, 0x0

    const/4 v9, 0x1

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, 0x0

    const/16 v13, 0xd

    const/16 v14, 0x3e9

    move-object/from16 v3, p1

    move/from16 v5, p3

    move/from16 v6, p4

    move/from16 v8, p5

    move-object/from16 v16, v15

    move-object/from16 v15, p6

    :try_start_2
    invoke-virtual/range {v2 .. v15}, Lcom/android/server/am/ProcessList;->killPackageProcessesLSP(Ljava/lang/String;IIIZZZZZZIILjava/lang/String;)Z

    .line 24374
    monitor-exit v16
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 24375
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :catchall_0
    move-exception v0

    goto :goto_0

    :catchall_1
    move-exception v0

    move-object/from16 v16, v15

    .line 24374
    :goto_0
    :try_start_4
    monitor-exit v16
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v0

    :catchall_2
    move-exception v0

    .line 24375
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_2

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public final killProcessesBelowAdj(ILjava/lang/String;)Z
    .locals 7

    .line 10278
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    const/16 v1, 0x3e8

    if-ne v0, v1, :cond_3

    .line 10283
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 10284
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    .line 10285
    :try_start_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 10286
    :try_start_2
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v2}, Lcom/android/server/am/ActivityManagerService$PidMap;->size()I

    move-result v2

    const/4 v3, 0x0

    move v4, v3

    :goto_0
    if-ge v3, v2, :cond_2

    .line 10288
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v5, v3}, Lcom/android/server/am/ActivityManagerService$PidMap;->keyAt(I)I

    .line 10289
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v5, v3}, Lcom/android/server/am/ActivityManagerService$PidMap;->valueAt(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v5

    if-nez v5, :cond_0

    goto :goto_1

    .line 10292
    :cond_0
    iget-object v6, v5, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {v6}, Lcom/android/server/am/ProcessStateRecord;->getSetAdj()I

    move-result v6

    if-le v6, p1, :cond_1

    .line 10293
    invoke-virtual {v5}, Lcom/android/server/am/ProcessRecord;->isKilledByAm()Z

    move-result v6

    if-nez v6, :cond_1

    const/16 v4, 0x8

    const/4 v6, 0x1

    .line 10294
    invoke-virtual {v5, p2, v4, v6}, Lcom/android/server/am/ProcessRecord;->killLocked(Ljava/lang/String;IZ)V

    move v4, v6

    :cond_1
    :goto_1
    add-int/lit8 v3, v3, 0x1

    goto :goto_0

    .line 10299
    :cond_2
    monitor-exit v1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 10300
    :try_start_3
    monitor-exit v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 10301
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v4

    :catchall_0
    move-exception p1

    .line 10299
    :try_start_5
    monitor-exit v1
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    :try_start_6
    throw p1

    :catchall_1
    move-exception p1

    .line 10300
    monitor-exit v0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    :try_start_7
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p1

    :catchall_2
    move-exception p1

    .line 10301
    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_2

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1

    .line 10279
    :cond_3
    new-instance p0, Ljava/lang/SecurityException;

    const-string/jumbo p1, "killProcessesBelowAdj() only available to system"

    invoke-direct {p0, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p0
.end method

.method public killProcessesBelowForeground(Ljava/lang/String;)Z
    .locals 2

    .line 10270
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    const/16 v1, 0x3e8

    if-ne v0, v1, :cond_0

    const/4 v0, 0x0

    .line 10274
    invoke-virtual {p0, v0, p1}, Lcom/android/server/am/ActivityManagerService;->killProcessesBelowAdj(ILjava/lang/String;)Z

    move-result p0

    return p0

    .line 10271
    :cond_0
    new-instance p0, Ljava/lang/SecurityException;

    const-string/jumbo p1, "killProcessesBelowForeground() only available to system"

    invoke-direct {p0, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p0
.end method

.method public killProcessesWhenImperceptible([ILjava/lang/String;)V
    .locals 3

    const-string v0, "android.permission.FORCE_STOP_PACKAGES"

    .line 10311
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_0

    .line 10316
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 10317
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v1

    .line 10319
    :try_start_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {p0, p1, p2, v0}, Lcom/android/server/am/ProcessList;->killProcessesWhenImperceptible([ILjava/lang/String;I)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 10321
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return-void

    :catchall_0
    move-exception p0

    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 10322
    throw p0

    .line 10313
    :cond_0
    new-instance p0, Ljava/lang/SecurityException;

    const-string p1, "Requires permission android.permission.FORCE_STOP_PACKAGES"

    invoke-direct {p0, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p0
.end method

.method public killUid(IILjava/lang/String;)V
    .locals 19

    move-object/from16 v1, p0

    const-string v0, "android.permission.KILL_UID"

    const-string/jumbo v2, "killUid"

    .line 10226
    invoke-virtual {v1, v0, v2}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 10227
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 10228
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    .line 10230
    :try_start_1
    iget-object v4, v1, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v4
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 10231
    :try_start_2
    iget-object v5, v1, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/4 v6, 0x0

    const/16 v9, -0x320

    const/4 v10, 0x0

    const/4 v11, 0x1

    const/4 v12, 0x1

    const/4 v13, 0x1

    const/4 v14, 0x0

    const/4 v15, 0x0

    const/16 v16, 0xd

    const/16 v17, 0xb

    if-eqz p3, :cond_0

    move-object/from16 v18, p3

    goto :goto_0

    :cond_0
    const-string/jumbo v0, "kill uid"

    move-object/from16 v18, v0

    :goto_0
    move/from16 v7, p1

    move/from16 v8, p2

    invoke-virtual/range {v5 .. v18}, Lcom/android/server/am/ProcessList;->killPackageProcessesLSP(Ljava/lang/String;IIIZZZZZZIILjava/lang/String;)Z

    .line 10239
    monitor-exit v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 10241
    :try_start_4
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 10243
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :catchall_0
    move-exception v0

    .line 10239
    :try_start_5
    monitor-exit v4
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    :try_start_6
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    :catchall_1
    move-exception v0

    .line 10241
    :try_start_7
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 10242
    throw v0

    :catchall_2
    move-exception v0

    .line 10243
    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_2

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public killUidForPermissionChange(IILjava/lang/String;)V
    .locals 19

    move-object/from16 v1, p0

    const-string v0, "android.permission.KILL_UID"

    const-string/jumbo v2, "killUid"

    .line 10248
    invoke-virtual {v1, v0, v2}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 10249
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 10250
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    .line 10252
    :try_start_1
    iget-object v4, v1, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v4
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 10253
    :try_start_2
    iget-object v5, v1, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/4 v6, 0x0

    const/16 v9, -0x320

    const/4 v10, 0x0

    const/4 v11, 0x1

    const/4 v12, 0x1

    const/4 v13, 0x1

    const/4 v14, 0x0

    const/4 v15, 0x0

    const/16 v16, 0x8

    const/16 v17, 0x0

    if-eqz p3, :cond_0

    move-object/from16 v18, p3

    goto :goto_0

    :cond_0
    const-string/jumbo v0, "kill uid"

    move-object/from16 v18, v0

    :goto_0
    move/from16 v7, p1

    move/from16 v8, p2

    invoke-virtual/range {v5 .. v18}, Lcom/android/server/am/ProcessList;->killPackageProcessesLSP(Ljava/lang/String;IIIZZZZZZIILjava/lang/String;)Z

    .line 10261
    monitor-exit v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 10263
    :try_start_4
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 10265
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :catchall_0
    move-exception v0

    .line 10261
    :try_start_5
    monitor-exit v4
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    :try_start_6
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    :catchall_1
    move-exception v0

    .line 10263
    :try_start_7
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 10264
    throw v0

    :catchall_2
    move-exception v0

    .line 10265
    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_2

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public launchBugReportHandlerApp()Z
    .locals 3

    .line 9520
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getCurrentUser()Landroid/content/pm/UserInfo;

    move-result-object v1

    invoke-virtual {v1}, Landroid/content/pm/UserInfo;->getUserHandle()Landroid/os/UserHandle;

    move-result-object v1

    const/4 v2, 0x0

    invoke-virtual {v0, v1, v2}, Landroid/content/Context;->createContextAsUser(Landroid/os/UserHandle;I)Landroid/content/Context;

    move-result-object v0

    .line 9522
    invoke-static {v0}, Lcom/android/server/am/BugReportHandlerUtil;->isBugReportHandlerEnabled(Landroid/content/Context;)Z

    move-result v1

    if-nez v1, :cond_0

    return v2

    .line 9527
    :cond_0
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "launchBugReportHandlerApp requested by UID "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    const-string v2, "ActivityManager"

    invoke-static {v2, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    const-string v1, "android.permission.DUMP"

    const-string/jumbo v2, "launchBugReportHandlerApp"

    .line 9528
    invoke-virtual {p0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 9531
    invoke-static {v0}, Lcom/android/server/am/BugReportHandlerUtil;->launchBugReportHandlerApp(Landroid/content/Context;)Z

    move-result p0

    return p0
.end method

.method public logFgsApiBegin(III)V
    .locals 2

    const-string v0, "android.permission.LOG_FOREGROUND_RESOURCE_USE"

    const-string/jumbo v1, "logFgsApiBegin"

    .line 15815
    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 15817
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 15818
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/am/ActiveServices;->logFgsApiBeginLocked(III)V

    .line 15819
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public logFgsApiEnd(III)V
    .locals 2

    const-string v0, "android.permission.LOG_FOREGROUND_RESOURCE_USE"

    const-string/jumbo v1, "logFgsApiEnd"

    .line 15825
    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 15827
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 15828
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/am/ActiveServices;->logFgsApiEndLocked(III)V

    .line 15829
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public logFgsApiStateChanged(IIII)V
    .locals 2

    const-string v0, "android.permission.LOG_FOREGROUND_RESOURCE_USE"

    const-string/jumbo v1, "logFgsApiEvent"

    .line 15835
    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 15837
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 15838
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, p1, p3, p4, p2}, Lcom/android/server/am/ActiveServices;->logFgsApiStateChangedLocked(IIII)V

    .line 15839
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public final logStrictModeViolationToDropBox(Lcom/android/server/am/ProcessRecord;Landroid/os/StrictMode$ViolationInfo;)V
    .locals 7

    if-nez p2, :cond_0

    return-void

    :cond_0
    const/4 v0, 0x0

    if-eqz p1, :cond_2

    .line 11209
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v1, v1, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit16 v1, v1, 0x81

    if-eqz v1, :cond_1

    goto :goto_0

    :cond_1
    move v1, v0

    goto :goto_1

    :cond_2
    :goto_0
    const/4 v1, 0x1

    :goto_1
    if-nez p1, :cond_3

    const-string/jumbo v2, "unknown"

    goto :goto_2

    .line 11212
    :cond_3
    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    .line 11213
    :goto_2
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-string v4, "dropbox"

    .line 11214
    invoke-virtual {v3, v4}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/os/DropBoxManager;

    .line 11217
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    invoke-static {p1}, Lcom/android/server/am/ActivityManagerService;->processClass(Lcom/android/server/am/ProcessRecord;)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v5, "_strictmode"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    if-eqz v3, :cond_c

    .line 11218
    invoke-virtual {v3, v4}, Landroid/os/DropBoxManager;->isTagEnabled(Ljava/lang/String;)Z

    move-result v5

    if-nez v5, :cond_4

    goto/16 :goto_4

    .line 11220
    :cond_4
    new-instance v5, Ljava/lang/StringBuilder;

    const/16 v6, 0x400

    invoke-direct {v5, v6}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 11221
    monitor-enter v5

    .line 11222
    :try_start_0
    invoke-virtual {p0, p1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->appendDropBoxProcessHeaders(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/StringBuilder;)V

    const-string p0, "Build: "

    .line 11223
    invoke-virtual {v5, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object p0, Landroid/os/Build;->FINGERPRINT:Ljava/lang/String;

    invoke-virtual {v5, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p0, "\n"

    invoke-virtual {v5, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p0, "System-App: "

    .line 11224
    invoke-virtual {v5, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    const-string p0, "\n"

    invoke-virtual {v5, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p0, "Uptime-Millis: "

    .line 11225
    invoke-virtual {v5, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-wide p0, p2, Landroid/os/StrictMode$ViolationInfo;->violationUptimeMillis:J

    invoke-virtual {v5, p0, p1}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string p0, "\n"

    invoke-virtual {v5, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11226
    iget p0, p2, Landroid/os/StrictMode$ViolationInfo;->violationNumThisLoop:I

    if-eqz p0, :cond_5

    const-string p0, "Loop-Violation-Number: "

    .line 11227
    invoke-virtual {v5, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget p0, p2, Landroid/os/StrictMode$ViolationInfo;->violationNumThisLoop:I

    invoke-virtual {v5, p0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p0, "\n"

    invoke-virtual {v5, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11229
    :cond_5
    iget p0, p2, Landroid/os/StrictMode$ViolationInfo;->numAnimationsRunning:I

    if-eqz p0, :cond_6

    const-string p0, "Animations-Running: "

    .line 11230
    invoke-virtual {v5, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget p0, p2, Landroid/os/StrictMode$ViolationInfo;->numAnimationsRunning:I

    invoke-virtual {v5, p0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p0, "\n"

    invoke-virtual {v5, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11232
    :cond_6
    iget-object p0, p2, Landroid/os/StrictMode$ViolationInfo;->broadcastIntentAction:Ljava/lang/String;

    if-eqz p0, :cond_7

    const-string p0, "Broadcast-Intent-Action: "

    .line 11233
    invoke-virtual {v5, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object p0, p2, Landroid/os/StrictMode$ViolationInfo;->broadcastIntentAction:Ljava/lang/String;

    invoke-virtual {v5, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p0, "\n"

    invoke-virtual {v5, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11235
    :cond_7
    iget p0, p2, Landroid/os/StrictMode$ViolationInfo;->durationMillis:I

    const/4 p1, -0x1

    if-eq p0, p1, :cond_8

    const-string p0, "Duration-Millis: "

    .line 11236
    invoke-virtual {v5, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget p0, p2, Landroid/os/StrictMode$ViolationInfo;->durationMillis:I

    invoke-virtual {v5, p0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p0, "\n"

    invoke-virtual {v5, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11238
    :cond_8
    iget-wide p0, p2, Landroid/os/StrictMode$ViolationInfo;->numInstances:J

    const-wide/16 v1, -0x1

    cmp-long p0, p0, v1

    if-eqz p0, :cond_9

    const-string p0, "Instance-Count: "

    .line 11239
    invoke-virtual {v5, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-wide p0, p2, Landroid/os/StrictMode$ViolationInfo;->numInstances:J

    invoke-virtual {v5, p0, p1}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string p0, "\n"

    invoke-virtual {v5, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11241
    :cond_9
    iget-object p0, p2, Landroid/os/StrictMode$ViolationInfo;->tags:[Ljava/lang/String;

    if-eqz p0, :cond_a

    .line 11242
    array-length p1, p0

    :goto_3
    if-ge v0, p1, :cond_a

    aget-object v1, p0, v0

    const-string v2, "Span-Tag: "

    .line 11243
    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "\n"

    invoke-virtual {v5, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    add-int/lit8 v0, v0, 0x1

    goto :goto_3

    :cond_a
    const-string p0, "\n"

    .line 11246
    invoke-virtual {v5, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11247
    invoke-virtual {p2}, Landroid/os/StrictMode$ViolationInfo;->getStackTrace()Ljava/lang/String;

    move-result-object p0

    invoke-virtual {v5, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p0, "\n"

    .line 11248
    invoke-virtual {v5, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11249
    invoke-virtual {p2}, Landroid/os/StrictMode$ViolationInfo;->getViolationDetails()Ljava/lang/String;

    move-result-object p0

    if-eqz p0, :cond_b

    .line 11250
    invoke-virtual {p2}, Landroid/os/StrictMode$ViolationInfo;->getViolationDetails()Ljava/lang/String;

    move-result-object p0

    invoke-virtual {v5, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p0, "\n"

    .line 11251
    invoke-virtual {v5, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11253
    :cond_b
    monitor-exit v5
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 11255
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    .line 11256
    invoke-static {}, Lcom/android/server/IoThread;->getHandler()Landroid/os/Handler;

    move-result-object p1

    new-instance p2, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda16;

    invoke-direct {p2, v3, v4, p0}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda16;-><init>(Landroid/os/DropBoxManager;Ljava/lang/String;Ljava/lang/String;)V

    invoke-virtual {p1, p2}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    return-void

    :catchall_0
    move-exception p0

    .line 11253
    :try_start_1
    monitor-exit v5
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw p0

    :cond_c
    :goto_4
    return-void
.end method

.method public makePackageIdle(Ljava/lang/String;I)V
    .locals 11

    const-string v0, "android.permission.FORCE_STOP_PACKAGES"

    .line 19580
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_7

    .line 19589
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    .line 19590
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    const/4 v5, 0x1

    const/4 v6, 0x2

    const-string/jumbo v7, "makePackageIdle"

    const/4 v8, 0x0

    move v4, p2

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p2

    .line 19592
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 19594
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_3

    const-wide/32 v3, 0x10002000

    const/4 v5, 0x0

    const/4 v6, -0x1

    .line 19597
    :try_start_1
    invoke-interface {v2, p1, v3, v4, v5}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;JI)I

    move-result v2
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_3

    goto :goto_0

    :catch_0
    move v2, v6

    :goto_0
    if-eq v2, v6, :cond_6

    .line 19605
    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_3

    .line 19607
    :try_start_3
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mLocalPowerManager:Landroid/os/PowerManagerInternal;

    if-eqz v3, :cond_0

    .line 19608
    invoke-virtual {v3}, Landroid/os/PowerManagerInternal;->startUidChanges()V

    .line 19610
    :cond_0
    invoke-static {v2}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v2

    .line 19611
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v3, v3, Lcom/android/server/am/ProcessList;->mActiveUids:Lcom/android/server/am/ActiveUids;

    invoke-virtual {v3}, Lcom/android/server/am/ActiveUids;->size()I

    move-result v3

    const/4 v4, 0x1

    sub-int/2addr v3, v4

    :goto_1
    if-ltz v3, :cond_3

    .line 19612
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v5, v5, Lcom/android/server/am/ProcessList;->mActiveUids:Lcom/android/server/am/ActiveUids;

    invoke-virtual {v5, v3}, Lcom/android/server/am/ActiveUids;->valueAt(I)Lcom/android/server/am/UidRecord;

    move-result-object v5

    .line 19613
    invoke-virtual {v5}, Lcom/android/server/am/UidRecord;->getLastBackgroundTime()J

    move-result-wide v7

    const-wide/16 v9, 0x0

    cmp-long v7, v7, v9

    if-lez v7, :cond_2

    .line 19614
    invoke-virtual {v5}, Lcom/android/server/am/UidRecord;->isIdle()Z

    move-result v7

    if-nez v7, :cond_2

    .line 19615
    invoke-virtual {v5}, Lcom/android/server/am/UidRecord;->getUid()I

    move-result v7

    .line 19616
    invoke-static {v7}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v8

    if-ne v8, v2, :cond_2

    if-eq p2, v6, :cond_1

    .line 19618
    invoke-static {v7}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v8

    if-ne p2, v8, :cond_2

    .line 19619
    :cond_1
    invoke-static {v7}, Lcom/android/server/am/EventLogTags;->writeAmUidIdle(I)V

    .line 19620
    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v8
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 19621
    :try_start_4
    invoke-virtual {v5, v4}, Lcom/android/server/am/UidRecord;->setIdle(Z)V

    .line 19622
    invoke-virtual {v5, v4}, Lcom/android/server/am/UidRecord;->setSetIdle(Z)V

    .line 19623
    monitor-exit v8
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    const-string v8, "ActivityManager"

    .line 19624
    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "Idling uid "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {v7}, Landroid/os/UserHandle;->formatUid(I)Ljava/lang/String;

    move-result-object v10

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v10, " from package "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v9, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v10, " user "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v9, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    invoke-static {v8, v9}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 19626
    invoke-virtual {p0, v7, v5}, Lcom/android/server/am/ActivityManagerService;->doStopUidLocked(ILcom/android/server/am/UidRecord;)V
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    goto :goto_2

    :catchall_0
    move-exception p1

    .line 19623
    :try_start_6
    monitor-exit v8
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    :try_start_7
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p1
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    :cond_2
    :goto_2
    add-int/lit8 v3, v3, -0x1

    goto :goto_1

    .line 19632
    :cond_3
    :try_start_8
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mLocalPowerManager:Landroid/os/PowerManagerInternal;

    if-eqz p1, :cond_4

    .line 19633
    invoke-virtual {p1}, Landroid/os/PowerManagerInternal;->finishUidChanges()V

    .line 19636
    :cond_4
    monitor-exit p0
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_2

    :try_start_9
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_3

    .line 19638
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return-void

    :catchall_1
    move-exception p1

    .line 19632
    :try_start_a
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mLocalPowerManager:Landroid/os/PowerManagerInternal;

    if-eqz p2, :cond_5

    .line 19633
    invoke-virtual {p2}, Landroid/os/PowerManagerInternal;->finishUidChanges()V

    .line 19635
    :cond_5
    throw p1

    :catchall_2
    move-exception p1

    .line 19636
    monitor-exit p0
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_2

    :try_start_b
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1

    .line 19602
    :cond_6
    new-instance p0, Ljava/lang/IllegalArgumentException;

    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Unknown package name "

    invoke-virtual {p2, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p0
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_3

    :catchall_3
    move-exception p0

    .line 19638
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 19639
    throw p0

    .line 19582
    :cond_7
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string p1, "Permission Denial: makePackageIdle() from pid="

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 19583
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result p1

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, ", uid="

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 19584
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result p1

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, " requires "

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, "android.permission.FORCE_STOP_PACKAGES"

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    const-string p1, "ActivityManager"

    .line 19586
    invoke-static {p1, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 19587
    new-instance p1, Ljava/lang/SecurityException;

    invoke-direct {p1, p0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method public final maybeLogUserspaceRebootEvent()V
    .locals 1

    .line 2589
    invoke-static {}, Lcom/android/server/UserspaceRebootLogger;->shouldLogUserspaceRebootEvent()Z

    move-result v0

    if-nez v0, :cond_0

    return-void

    .line 2592
    :cond_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {p0}, Lcom/android/server/am/UserController;->getCurrentUserId()I

    move-result p0

    if-eqz p0, :cond_1

    return-void

    .line 2598
    :cond_1
    invoke-static {p0}, Landroid/os/storage/StorageManager;->isUserKeyUnlocked(I)Z

    move-result p0

    .line 2599
    invoke-static {}, Lcom/android/internal/os/BackgroundThread;->getExecutor()Ljava/util/concurrent/Executor;

    move-result-object v0

    .line 2598
    invoke-static {p0, v0}, Lcom/android/server/UserspaceRebootLogger;->logEventAsync(ZLjava/util/concurrent/Executor;)V

    return-void
.end method

.method public monitor()V
    .locals 1

    .line 20107
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    :try_start_0
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public moveActivityTaskToBack(Landroid/os/IBinder;Z)Z
    .locals 0

    .line 8130
    invoke-static {}, Landroid/app/ActivityClient;->getInstance()Landroid/app/ActivityClient;

    move-result-object p0

    invoke-virtual {p0, p1, p2}, Landroid/app/ActivityClient;->moveActivityTaskToBack(Landroid/os/IBinder;Z)Z

    move-result p0

    return p0
.end method

.method public moveTaskToBack(IZ)Z
    .locals 1

    const/4 v0, 0x0

    .line 23752
    invoke-virtual {p0, p1, p2, v0}, Lcom/android/server/am/ActivityManagerService;->moveTaskToBackWithBundle(IZLandroid/os/Bundle;)Z

    move-result p0

    return p0
.end method

.method public moveTaskToBackWithBundle(IZLandroid/os/Bundle;)Z
    .locals 2

    const-string v0, "android.permission.REORDER_TASKS"

    const-string/jumbo v1, "moveTaskToBack()"

    .line 23758
    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 23760
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 23762
    :try_start_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/wm/ActivityTaskManagerInternal;->moveTaskToBack(IZLandroid/os/Bundle;)Z

    move-result p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 23764
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return p0

    :catchall_0
    move-exception p0

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 23765
    throw p0
.end method

.method public moveTaskToFront(Landroid/app/IApplicationThread;Ljava/lang/String;IILandroid/os/Bundle;)V
    .locals 6

    .line 8106
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    move-object v1, p1

    move-object v2, p2

    move v3, p3

    move v4, p4

    move-object v5, p5

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/wm/ActivityTaskManagerService;->moveTaskToFront(Landroid/app/IApplicationThread;Ljava/lang/String;IILandroid/os/Bundle;)V

    return-void
.end method

.method public moveTaskToRootTask(IIZ)V
    .locals 0

    .line 8135
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/wm/ActivityTaskManagerService;->moveTaskToRootTask(IIZ)V

    return-void
.end method

.method public needToBlockImsRequest(Ljava/lang/String;I)Z
    .locals 0

    .line 6792
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->isImsProcess(Ljava/lang/String;)Z

    move-result p0

    if-eqz p0, :cond_0

    invoke-static {}, Landroid/app/ActivityManager;->getCurrentUser()I

    move-result p0

    if-eq p2, p0, :cond_0

    const/4 p0, 0x1

    return p0

    :cond_0
    const/4 p0, 0x0

    return p0
.end method

.method public noteAlarmFinish(Landroid/content/IIntentSender;Landroid/os/WorkSource;ILjava/lang/String;)V
    .locals 1

    if-eqz p2, :cond_0

    .line 10133
    invoke-virtual {p2}, Landroid/os/WorkSource;->isEmpty()Z

    move-result v0

    if-eqz v0, :cond_0

    const/4 p2, 0x0

    :cond_0
    if-gtz p3, :cond_4

    if-nez p2, :cond_4

    if-eqz p1, :cond_3

    .line 10140
    instance-of p3, p1, Lcom/android/server/am/PendingIntentRecord;

    if-nez p3, :cond_1

    return-void

    .line 10144
    :cond_1
    check-cast p1, Lcom/android/server/am/PendingIntentRecord;

    .line 10145
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result p3

    .line 10146
    iget p1, p1, Lcom/android/server/am/PendingIntentRecord;->uid:I

    if-ne p1, p3, :cond_2

    const/16 p1, 0x3e8

    :cond_2
    move p3, p1

    goto :goto_0

    :cond_3
    return-void

    .line 10159
    :cond_4
    :goto_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {p0, p4, p2, p3}, Lcom/android/server/am/BatteryStatsService;->noteAlarmFinish(Ljava/lang/String;Landroid/os/WorkSource;I)V

    return-void
.end method

.method public noteAlarmStart(Landroid/content/IIntentSender;Landroid/os/WorkSource;ILjava/lang/String;)V
    .locals 1

    if-eqz p2, :cond_0

    .line 10101
    invoke-virtual {p2}, Landroid/os/WorkSource;->isEmpty()Z

    move-result v0

    if-eqz v0, :cond_0

    const/4 p2, 0x0

    :cond_0
    if-gtz p3, :cond_4

    if-nez p2, :cond_4

    if-eqz p1, :cond_3

    .line 10108
    instance-of p3, p1, Lcom/android/server/am/PendingIntentRecord;

    if-nez p3, :cond_1

    return-void

    .line 10112
    :cond_1
    check-cast p1, Lcom/android/server/am/PendingIntentRecord;

    .line 10113
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result p3

    .line 10114
    iget p1, p1, Lcom/android/server/am/PendingIntentRecord;->uid:I

    if-ne p1, p3, :cond_2

    const/16 p1, 0x3e8

    :cond_2
    move p3, p1

    goto :goto_0

    :cond_3
    return-void

    .line 10127
    :cond_4
    :goto_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {p0, p4, p2, p3}, Lcom/android/server/am/BatteryStatsService;->noteAlarmStart(Ljava/lang/String;Landroid/os/WorkSource;I)V

    return-void
.end method

.method public noteUidProcessState(III)V
    .locals 19

    move-object/from16 v0, p0

    move/from16 v1, p1

    move/from16 v2, p2

    .line 19167
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v3, v1, v2}, Lcom/android/server/am/BatteryStatsService;->noteUidProcessState(II)V

    .line 19168
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    move/from16 v4, p3

    invoke-virtual {v3, v1, v2, v4}, Lcom/android/server/appop/AppOpsService;->updateUidProcState(III)V

    .line 19169
    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mTrackingAssociations:Z

    if-eqz v3, :cond_3

    .line 19170
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    move-result v3

    const/4 v4, 0x0

    move v5, v4

    :goto_0
    if-ge v5, v3, :cond_3

    .line 19171
    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    .line 19172
    invoke-virtual {v6, v5}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Landroid/util/ArrayMap;

    .line 19173
    invoke-virtual {v6}, Landroid/util/ArrayMap;->size()I

    move-result v7

    move v8, v4

    :goto_1
    if-ge v8, v7, :cond_2

    .line 19175
    invoke-virtual {v6, v8}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Landroid/util/SparseArray;

    .line 19176
    invoke-virtual {v9, v1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Landroid/util/ArrayMap;

    if-eqz v9, :cond_1

    .line 19178
    invoke-virtual {v9}, Landroid/util/ArrayMap;->size()I

    move-result v10

    move v11, v4

    :goto_2
    if-ge v11, v10, :cond_1

    .line 19179
    invoke-virtual {v9, v11}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Lcom/android/server/am/ActivityManagerService$Association;

    .line 19180
    iget v13, v12, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    const/4 v14, 0x1

    if-lt v13, v14, :cond_0

    .line 19182
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v13

    .line 19183
    iget-object v15, v12, Lcom/android/server/am/ActivityManagerService$Association;->mStateTimes:[J

    iget v0, v12, Lcom/android/server/am/ActivityManagerService$Association;->mLastState:I

    sub-int/2addr v0, v4

    aget-wide v16, v15, v0

    move/from16 v18, v5

    iget-wide v4, v12, Lcom/android/server/am/ActivityManagerService$Association;->mLastStateUptime:J

    sub-long v4, v13, v4

    add-long v16, v16, v4

    aput-wide v16, v15, v0

    .line 19185
    iput v2, v12, Lcom/android/server/am/ActivityManagerService$Association;->mLastState:I

    .line 19186
    iput-wide v13, v12, Lcom/android/server/am/ActivityManagerService$Association;->mLastStateUptime:J

    goto :goto_3

    :cond_0
    move/from16 v18, v5

    :goto_3
    add-int/lit8 v11, v11, 0x1

    move-object/from16 v0, p0

    move/from16 v5, v18

    const/4 v4, 0x0

    goto :goto_2

    :cond_1
    move/from16 v18, v5

    add-int/lit8 v8, v8, 0x1

    move-object/from16 v0, p0

    move/from16 v5, v18

    const/4 v4, 0x0

    goto :goto_1

    :cond_2
    move/from16 v18, v5

    add-int/lit8 v5, v18, 0x1

    move-object/from16 v0, p0

    const/4 v4, 0x0

    goto :goto_0

    :cond_3
    return-void
.end method

.method public noteWakeupAlarm(Landroid/content/IIntentSender;Landroid/os/WorkSource;ILjava/lang/String;Ljava/lang/String;)V
    .locals 6

    if-eqz p2, :cond_0

    .line 10038
    invoke-virtual {p2}, Landroid/os/WorkSource;->isEmpty()Z

    move-result v0

    if-eqz v0, :cond_0

    const/4 p2, 0x0

    :cond_0
    if-gtz p3, :cond_4

    if-nez p2, :cond_4

    if-eqz p1, :cond_3

    .line 10045
    instance-of p3, p1, Lcom/android/server/am/PendingIntentRecord;

    if-nez p3, :cond_1

    return-void

    .line 10049
    :cond_1
    check-cast p1, Lcom/android/server/am/PendingIntentRecord;

    .line 10050
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result p3

    .line 10051
    iget p1, p1, Lcom/android/server/am/PendingIntentRecord;->uid:I

    if-ne p1, p3, :cond_2

    const/16 p1, 0x3e8

    :cond_2
    move p3, p1

    goto :goto_0

    :cond_3
    return-void

    :cond_4
    :goto_0
    move v1, p3

    .line 10061
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {p1, p4, v1, p2, p5}, Lcom/android/server/am/BatteryStatsService;->noteWakupAlarm(Ljava/lang/String;ILandroid/os/WorkSource;Ljava/lang/String;)V

    const/4 p1, 0x0

    if-eqz p2, :cond_7

    .line 10063
    invoke-virtual {p2, p1}, Landroid/os/WorkSource;->getPackageName(I)Ljava/lang/String;

    move-result-object p3

    .line 10064
    invoke-virtual {p2}, Landroid/os/WorkSource;->getAttributionUid()I

    move-result v0

    if-nez p3, :cond_5

    move-object p3, p4

    goto :goto_1

    :cond_5
    move v1, v0

    .line 10070
    :goto_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    if-eqz v0, :cond_6

    .line 10071
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    .line 10072
    invoke-static {v1}, Landroid/os/UserHandle;->getUserId(I)I

    move-result p1

    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v0

    .line 10071
    invoke-virtual {p0, p3, p1, v0, v1}, Landroid/app/usage/UsageStatsManagerInternal;->getAppStandbyBucket(Ljava/lang/String;IJ)I

    move-result p1

    :cond_6
    const/16 p0, 0x23

    .line 10075
    invoke-static {p0, p2, p5, p4, p1}, Lcom/android/internal/util/FrameworkStatsLog;->write(ILandroid/os/WorkSource;Ljava/lang/String;Ljava/lang/String;I)V

    goto :goto_3

    .line 10083
    :cond_7
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    if-eqz p2, :cond_8

    .line 10084
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    .line 10085
    invoke-static {v1}, Landroid/os/UserHandle;->getUserId(I)I

    move-result p1

    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide p2

    .line 10084
    invoke-virtual {p0, p4, p1, p2, p3}, Landroid/app/usage/UsageStatsManagerInternal;->getAppStandbyBucket(Ljava/lang/String;IJ)I

    move-result p0

    move v5, p0

    goto :goto_2

    :cond_8
    move v5, p1

    :goto_2
    const/16 v0, 0x23

    const/4 v2, 0x0

    move-object v3, p5

    move-object v4, p4

    .line 10087
    invoke-static/range {v0 .. v5}, Lcom/android/internal/util/FrameworkStatsLog;->write_non_chained(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V

    :goto_3
    return-void
.end method

.method public final notifyBroadcastFinishedLocked(Lcom/android/server/am/BroadcastRecord;)V
    .locals 3

    .line 18195
    iget-object v0, p1, Lcom/android/server/am/BroadcastRecord;->callerApp:Lcom/android/server/am/ProcessRecord;

    if-eqz v0, :cond_0

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    if-eqz v0, :cond_1

    .line 18196
    iget-object v0, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    goto :goto_1

    :cond_1
    iget-object v0, p1, Lcom/android/server/am/BroadcastRecord;->callerPackage:Ljava/lang/String;

    :goto_1
    if-eqz v0, :cond_2

    .line 18198
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget p1, p1, Lcom/android/server/am/BroadcastRecord;->callingUid:I

    const/4 v1, 0x0

    const/16 v2, 0x4a

    invoke-virtual {p0, v2, p1, v1, v0}, Landroid/os/Handler;->obtainMessage(IIILjava/lang/Object;)Landroid/os/Message;

    move-result-object p0

    .line 18199
    invoke-virtual {p0}, Landroid/os/Message;->sendToTarget()V

    :cond_2
    return-void
.end method

.method public notifyCleartextNetwork(I[B)V
    .locals 2

    .line 9064
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v0, 0x31

    const/4 v1, 0x0

    invoke-virtual {p0, v0, p1, v1, p2}, Landroid/os/Handler;->obtainMessage(IIILjava/lang/Object;)Landroid/os/Message;

    move-result-object p0

    invoke-virtual {p0}, Landroid/os/Message;->sendToTarget()V

    return-void
.end method

.method public notifyLockedProfile(I)V
    .locals 0

    .line 9134
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {p0, p1}, Lcom/android/server/wm/ActivityTaskManagerInternal;->notifyLockedProfile(I)V

    return-void
.end method

.method public final notifyMediaProjectionEvent(ILandroid/os/IBinder;I)V
    .locals 2

    .line 23700
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mMediaProjectionTokenMap:Landroid/util/SparseArray;

    monitor-enter v0

    .line 23701
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mMediaProjectionTokenMap:Landroid/util/SparseArray;

    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->indexOfKey(I)I

    move-result v1

    if-nez p3, :cond_1

    if-gez v1, :cond_0

    .line 23705
    new-instance p3, Landroid/util/ArraySet;

    invoke-direct {p3}, Landroid/util/ArraySet;-><init>()V

    .line 23706
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mMediaProjectionTokenMap:Landroid/util/SparseArray;

    invoke-virtual {p0, p1, p3}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    goto :goto_0

    .line 23708
    :cond_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mMediaProjectionTokenMap:Landroid/util/SparseArray;

    invoke-virtual {p0, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object p0

    move-object p3, p0

    check-cast p3, Landroid/util/ArraySet;

    .line 23710
    :goto_0
    invoke-virtual {p3, p2}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    goto :goto_1

    :cond_1
    const/4 p1, 0x1

    if-ne p3, p1, :cond_2

    if-ltz v1, :cond_2

    .line 23712
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mMediaProjectionTokenMap:Landroid/util/SparseArray;

    invoke-virtual {p1, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Landroid/util/ArraySet;

    .line 23713
    invoke-virtual {p1, p2}, Landroid/util/ArraySet;->remove(Ljava/lang/Object;)Z

    .line 23714
    invoke-virtual {p1}, Landroid/util/ArraySet;->isEmpty()Z

    move-result p1

    if-eqz p1, :cond_2

    .line 23715
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mMediaProjectionTokenMap:Landroid/util/SparseArray;

    invoke-virtual {p0, v1}, Landroid/util/SparseArray;->removeAt(I)V

    .line 23718
    :cond_2
    :goto_1
    monitor-exit v0

    return-void

    :catchall_0
    move-exception p0

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw p0
.end method

.method public notifyPackageUse(Ljava/lang/String;I)V
    .locals 0

    .line 3374
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal;

    move-result-object p0

    invoke-virtual {p0, p1, p2}, Landroid/content/pm/PackageManagerInternal;->notifyPackageUse(Ljava/lang/String;I)V

    return-void
.end method

.method public onCoreSettingsChange(Landroid/os/Bundle;)V
    .locals 1

    .line 20111
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v0

    .line 20112
    :try_start_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {p0, p1}, Lcom/android/server/am/ProcessList;->updateCoreSettingsLOSP(Landroid/os/Bundle;)V

    .line 20113
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return-void

    :catchall_0
    move-exception p0

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p0
.end method

.method public onProcessFreezableChangedLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 1

    .line 20463
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mEnableModernQueue:Z

    if-eqz v0, :cond_0

    .line 20464
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    const/4 v0, 0x0

    aget-object p0, p0, v0

    invoke-virtual {p0, p1}, Lcom/android/server/am/BroadcastQueue;->onProcessFreezableChangedLocked(Lcom/android/server/am/ProcessRecord;)V

    :cond_0
    return-void
.end method

.method public onShellCommand(Ljava/io/FileDescriptor;Ljava/io/FileDescriptor;Ljava/io/FileDescriptor;[Ljava/lang/String;Landroid/os/ShellCallback;Landroid/os/ResultReceiver;)V
    .locals 12

    move-object v9, p0

    move-object/from16 v0, p4

    const/4 v1, 0x0

    if-eqz v0, :cond_1

    .line 11980
    array-length v2, v0

    if-lez v2, :cond_1

    const-string/jumbo v2, "start"

    aget-object v3, v0, v1

    .line 11981
    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_0

    const-string/jumbo v2, "start-activity"

    aget-object v3, v0, v1

    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_1

    .line 11982
    :cond_0
    iget-object v2, v9, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v3, 0x50

    invoke-virtual {v2, v3}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    :cond_1
    const/4 v2, 0x1

    if-eqz v0, :cond_2

    const-string v3, "broadcast"

    .line 11988
    aget-object v4, v0, v1

    invoke-virtual {v3, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_2

    move v10, v2

    goto :goto_0

    :cond_2
    move v10, v1

    .line 11989
    :goto_0
    new-instance v11, Ljava/lang/StringBuilder;

    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    if-eqz v10, :cond_5

    .line 11991
    :goto_1
    array-length v3, v0

    if-ge v2, v3, :cond_4

    const-string v3, "-a"

    .line 11992
    aget-object v4, v0, v2

    invoke-virtual {v3, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_3

    add-int/lit8 v3, v2, 0x1

    array-length v4, v0

    if-ge v3, v4, :cond_3

    const-string v2, "-a "

    .line 11993
    invoke-virtual {v11, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    aget-object v2, v0, v3

    invoke-virtual {v11, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    goto :goto_2

    :cond_3
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    :cond_4
    :goto_2
    const-string v2, " from u "

    .line 11997
    invoke-virtual {v11, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-virtual {v11, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, " p "

    .line 11998
    invoke-virtual {v11, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-virtual {v11, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 11999
    new-instance v2, Ljava/text/SimpleDateFormat;

    const-string v3, "dd-HH-mm-ss"

    invoke-direct {v2, v3}, Ljava/text/SimpleDateFormat;-><init>(Ljava/lang/String;)V

    const-string v3, " "

    .line 12000
    invoke-virtual {v11, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    new-instance v3, Ljava/util/Date;

    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v4

    invoke-direct {v3, v4, v5}, Ljava/util/Date;-><init>(J)V

    invoke-virtual {v2, v3}, Ljava/text/SimpleDateFormat;->format(Ljava/util/Date;)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v11, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12001
    iget-object v2, v9, Lcom/android/server/am/ActivityManagerService;->mPendingCmdBR:Ljava/util/ArrayList;

    invoke-virtual {v2, v11}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 12006
    :cond_5
    :try_start_0
    new-instance v2, Lcom/android/server/am/ActivityManagerShellCommand;

    invoke-direct {v2, p0, v1}, Lcom/android/server/am/ActivityManagerShellCommand;-><init>(Lcom/android/server/am/ActivityManagerService;Z)V

    move-object v1, v2

    move-object v2, p0

    move-object v3, p1

    move-object v4, p2

    move-object v5, p3

    move-object/from16 v6, p4

    move-object/from16 v7, p5

    move-object/from16 v8, p6

    invoke-virtual/range {v1 .. v8}, Landroid/os/ShellCommand;->exec(Landroid/os/Binder;Ljava/io/FileDescriptor;Ljava/io/FileDescriptor;Ljava/io/FileDescriptor;[Ljava/lang/String;Landroid/os/ShellCallback;Landroid/os/ResultReceiver;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-eqz v10, :cond_6

    .line 12011
    iget-object v0, v9, Lcom/android/server/am/ActivityManagerService;->mPendingCmdBR:Ljava/util/ArrayList;

    invoke-virtual {v0, v11}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    :cond_6
    return-void

    :catchall_0
    move-exception v0

    if-eqz v10, :cond_7

    iget-object v1, v9, Lcom/android/server/am/ActivityManagerService;->mPendingCmdBR:Ljava/util/ArrayList;

    invoke-virtual {v1, v11}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 12013
    :cond_7
    throw v0
.end method

.method public onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
    .locals 15

    move-object v1, p0

    move/from16 v2, p1

    move-object/from16 v3, p2

    const/4 v4, 0x0

    const/4 v5, 0x1

    const v0, 0x5f535052

    if-ne v2, v0, :cond_3

    .line 3097
    new-instance v6, Ljava/util/ArrayList;

    invoke-direct {v6}, Ljava/util/ArrayList;-><init>()V

    .line 3098
    iget-object v7, v1, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v7

    .line 3099
    :try_start_0
    iget-object v8, v1, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 3100
    invoke-virtual {v8}, Lcom/android/server/am/ProcessList;->getProcessNamesLOSP()Lcom/android/server/am/ProcessList$MyProcessMap;

    move-result-object v8

    invoke-virtual {v8}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v8

    .line 3101
    invoke-virtual {v8}, Landroid/util/ArrayMap;->size()I

    move-result v9

    move v10, v4

    :goto_0
    if-ge v10, v9, :cond_2

    .line 3103
    invoke-virtual {v8, v10}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Landroid/util/SparseArray;

    .line 3104
    invoke-virtual {v11}, Landroid/util/SparseArray;->size()I

    move-result v12

    move v13, v4

    :goto_1
    if-ge v13, v12, :cond_1

    .line 3106
    invoke-virtual {v11, v13}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v14

    check-cast v14, Lcom/android/server/am/ProcessRecord;

    .line 3107
    invoke-virtual {v14}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v14

    if-eqz v14, :cond_0

    .line 3109
    invoke-interface {v14}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v14

    invoke-virtual {v6, v14}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    :cond_0
    add-int/lit8 v13, v13, 0x1

    goto :goto_1

    :cond_1
    add-int/lit8 v10, v10, 0x1

    goto :goto_0

    .line 3113
    :cond_2
    monitor-exit v7
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 3115
    invoke-virtual {v6}, Ljava/util/ArrayList;->size()I

    move-result v7

    :goto_2
    if-ge v4, v7, :cond_8

    .line 3117
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v8

    .line 3119
    :try_start_1
    invoke-virtual {v6, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Landroid/os/IBinder;

    const/4 v10, 0x0

    invoke-interface {v9, v0, v8, v10, v5}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    .line 3123
    :catch_0
    invoke-virtual {v8}, Landroid/os/Parcel;->recycle()V

    add-int/lit8 v4, v4, 0x1

    goto :goto_2

    :catchall_0
    move-exception v0

    .line 3113
    :try_start_2
    monitor-exit v7
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v0

    :cond_3
    const/16 v0, 0x2529

    if-ne v2, v0, :cond_4

    const-string v0, "android.app.IActivityManager"

    .line 3129
    invoke-virtual {v3, v0}, Landroid/os/Parcel;->enforceInterface(Ljava/lang/String;)V

    .line 3130
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->reportDumpStarted()V

    .line 3131
    invoke-virtual/range {p3 .. p3}, Landroid/os/Parcel;->writeNoException()V

    return v5

    :cond_4
    const/16 v0, 0x252c

    if-ne v2, v0, :cond_6

    const-string v0, "android.app.IActivityManager"

    .line 3139
    invoke-virtual {v3, v0}, Landroid/os/Parcel;->enforceInterface(Ljava/lang/String;)V

    .line 3140
    invoke-virtual/range {p2 .. p2}, Landroid/os/Parcel;->readInt()I

    move-result v0

    .line 3141
    invoke-virtual/range {p2 .. p2}, Landroid/os/Parcel;->readInt()I

    move-result v2

    .line 3142
    invoke-virtual/range {p2 .. p2}, Landroid/os/Parcel;->readInt()I

    move-result v4

    .line 3143
    invoke-virtual/range {p2 .. p2}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v6

    .line 3144
    invoke-virtual/range {p2 .. p2}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v3

    const-string v7, "android.util.PerfLog.ACTION_BOTTLENECK_HINT"

    const-string v8, "RESOURCES"

    .line 3147
    invoke-virtual {v8, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_5

    const-string v7, "android.util.PerfLog.ACTION_RESOURCE_HINT"

    goto :goto_3

    .line 3150
    :cond_5
    invoke-static {}, Lcom/android/server/am/FreecessController;->getInstance()Lcom/android/server/am/FreecessController;

    move-result-object v8

    const/16 v9, 0x3e8

    invoke-virtual {v8, v9}, Lcom/android/server/am/FreecessController;->enterOLAF(I)V

    .line 3152
    new-instance v8, Landroid/content/Intent;

    const-string v9, "com.samsung.BOTTLENECK_HINT_FOR_CHIMERA"

    invoke-direct {v8, v9}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    const-string v9, "android"

    .line 3153
    invoke-virtual {v8, v9}, Landroid/content/Intent;->setPackage(Ljava/lang/String;)Landroid/content/Intent;

    .line 3154
    iget-object v9, v1, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v9, v8}, Landroid/content/Context;->sendBroadcast(Landroid/content/Intent;)V

    .line 3157
    :goto_3
    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    .line 3159
    invoke-virtual {v8, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v9, " onTransact() from uid = "

    .line 3160
    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v9, "%d"

    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v0

    filled-new-array {v0}, [Ljava/lang/Object;

    move-result-object v0

    invoke-static {v9, v0}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, " with avg = "

    .line 3161
    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "%d"

    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v9

    filled-new-array {v9}, [Ljava/lang/Object;

    move-result-object v9

    invoke-static {v0, v9}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, ", reason = "

    .line 3162
    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v8, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, ", description = "

    .line 3163
    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v8, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, ", jank = "

    .line 3164
    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v8, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v0, "ActivityManager"

    .line 3165
    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v0, v8}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 3167
    new-instance v0, Landroid/content/Intent;

    invoke-direct {v0, v7}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    const-string v7, "avg"

    .line 3169
    invoke-virtual {v0, v7, v2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    const-string/jumbo v2, "reason"

    .line 3170
    invoke-virtual {v0, v2, v6}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;

    const-string v2, "description"

    .line 3171
    invoke-virtual {v0, v2, v3}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;

    const-string/jumbo v2, "jank"

    .line 3172
    invoke-virtual {v0, v2, v4}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 3173
    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v1, v0}, Landroid/content/Context;->sendBroadcast(Landroid/content/Intent;)V

    .line 3175
    invoke-virtual/range {p3 .. p3}, Landroid/os/Parcel;->writeNoException()V

    return v5

    :cond_6
    const/16 v0, 0x26af

    if-ne v2, v0, :cond_8

    .line 3183
    sget-boolean v0, Lcom/android/server/am/ActivityManagerService;->USER_BUILD:Z

    if-nez v0, :cond_8

    const-string v0, "android.app.IActivityManager"

    .line 3184
    invoke-virtual {v3, v0}, Landroid/os/Parcel;->enforceInterface(Ljava/lang/String;)V

    .line 3187
    :try_start_3
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    .line 3188
    invoke-virtual {v0}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v0

    const-string v2, "com.samsung.android.game.gos"

    invoke-virtual {v0, v2, v4}, Landroid/content/pm/PackageManager;->getApplicationInfo(Ljava/lang/String;I)Landroid/content/pm/ApplicationInfo;

    move-result-object v0

    .line 3189
    iget-boolean v4, v0, Landroid/content/pm/ApplicationInfo;->enabled:Z
    :try_end_3
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_3 .. :try_end_3} :catch_1

    goto :goto_4

    :catch_1
    move-exception v0

    .line 3191
    invoke-virtual {v0}, Landroid/content/pm/PackageManager$NameNotFoundException;->printStackTrace()V

    .line 3193
    :goto_4
    invoke-virtual/range {p2 .. p2}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v0

    if-eqz v4, :cond_7

    .line 3194
    invoke-virtual/range {p2 .. p2}, Landroid/os/Parcel;->readFloat()F

    move-result v2

    goto :goto_5

    :cond_7
    const/high16 v2, 0x3f800000    # 1.0f

    .line 3197
    :goto_5
    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mDssController:Lcom/android/server/DssController;

    invoke-virtual {v1, v0, v2}, Lcom/android/server/DssController;->addPackageData(Ljava/lang/String;F)V

    .line 3201
    invoke-virtual/range {p3 .. p3}, Landroid/os/Parcel;->writeNoException()V

    return v5

    .line 3206
    :cond_8
    :try_start_4
    invoke-super/range {p0 .. p4}, Landroid/app/IActivityManager$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z

    move-result v0
    :try_end_4
    .catch Ljava/lang/RuntimeException; {:try_start_4 .. :try_end_4} :catch_2

    return v0

    :catch_2
    move-exception v0

    move-object v1, v0

    .line 3210
    instance-of v0, v1, Ljava/lang/SecurityException;

    if-nez v0, :cond_9

    instance-of v0, v1, Ljava/lang/IllegalArgumentException;

    if-nez v0, :cond_9

    instance-of v0, v1, Ljava/lang/IllegalStateException;

    if-nez v0, :cond_9

    const-string v0, "ActivityManager"

    .line 3213
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Activity Manager Crash. UID:"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3214
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, " PID:"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3215
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v4, " TRANS:"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    .line 3213
    invoke-static {v0, v2, v1}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 3218
    :cond_9
    throw v1
.end method

.method public onWakefulnessChanged(I)V
    .locals 3

    .line 9038
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 9039
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWakefulness:Ljava/util/concurrent/atomic/AtomicInteger;

    invoke-virtual {v0, p1}, Ljava/util/concurrent/atomic/AtomicInteger;->getAndSet(I)I

    move-result v0

    const/4 v1, 0x0

    const/4 v2, 0x1

    if-ne v0, v2, :cond_0

    move v0, v2

    goto :goto_0

    :cond_0
    move v0, v1

    :goto_0
    if-ne p1, v2, :cond_1

    move v1, v2

    :cond_1
    if-eq v0, v1, :cond_3

    .line 9045
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActiveServices;->updateScreenStateLocked(Z)V

    .line 9046
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->reportCurWakefulnessUsageEvent()V

    .line 9047
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v0, v1}, Lcom/android/server/wm/ActivityTaskManagerService;->onScreenAwakeChanged(Z)V

    .line 9048
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjProfiler:Lcom/android/server/am/OomAdjProfiler;

    invoke-virtual {v0, p1}, Lcom/android/server/am/OomAdjProfiler;->onWakefulnessChanged(I)V

    .line 9049
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    invoke-virtual {v0, p1}, Lcom/android/server/am/OomAdjuster;->onWakefulnessChanged(I)V

    .line 9052
    sget-boolean p1, Lcom/samsung/android/rune/CoreRune;->MNO_TMO_DEVICE_REPORTING:Z

    if-eqz p1, :cond_2

    invoke-static {}, Lcom/sec/tmodiagnostics/DeviceReportingSecurityChecker;->getStatus()Z

    move-result p1

    if-eqz p1, :cond_2

    const-string p1, "ActivityManager"

    const-string v0, "TMO onWakefulnessChanged"

    .line 9053
    invoke-static {p1, v0}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 9054
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {p1}, Lcom/android/server/wm/ActivityTaskManagerService;->sendAppStateBroadcaster()V

    :cond_2
    const/16 p1, 0x9

    .line 9057
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(I)V

    .line 9059
    :cond_3
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public openContentUri(Ljava/lang/String;)Landroid/os/ParcelFileDescriptor;
    .locals 14

    const-string/jumbo v0, "openContentUri"

    .line 8965
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 8966
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v0

    .line 8967
    invoke-static {p1}, Landroid/net/Uri;->parse(Ljava/lang/String;)Landroid/net/Uri;

    move-result-object p1

    .line 8968
    invoke-virtual {p1}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;

    move-result-object v7

    .line 8969
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    const/4 v3, 0x0

    .line 8970
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v4

    const-string v5, "*opencontent*"

    move-object v2, v7

    move v6, v0

    .line 8969
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ContentProviderHelper;->getContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;ILjava/lang/String;I)Landroid/app/ContentProviderHolder;

    move-result-object v1

    const-string v2, "ActivityManager"

    if-eqz v1, :cond_3

    .line 8978
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v4

    .line 8980
    invoke-static {v4, v3}, Landroid/app/AppOpsManager;->resolvePackageName(ILjava/lang/String;)Ljava/lang/String;

    move-result-object v5

    if-eqz v5, :cond_0

    .line 8984
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mPackageManagerInt:Landroid/content/pm/PackageManagerInternal;

    invoke-virtual {v6, v5}, Landroid/content/pm/PackageManagerInternal;->getPackage(Ljava/lang/String;)Lcom/android/server/pm/pkg/AndroidPackage;

    move-result-object v5

    goto :goto_0

    .line 8986
    :cond_0
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mPackageManagerInt:Landroid/content/pm/PackageManagerInternal;

    invoke-virtual {v5, v4}, Landroid/content/pm/PackageManagerInternal;->getPackage(I)Lcom/android/server/pm/pkg/AndroidPackage;

    move-result-object v5

    :goto_0
    if-nez v5, :cond_1

    .line 8989
    new-instance p1, Ljava/lang/StringBuilder;

    invoke-direct {p1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Cannot find package for uid: "

    invoke-virtual {p1, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {v2, p1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catch Ljava/io/FileNotFoundException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 9009
    :goto_1
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    invoke-virtual {p0, v7, v3, v0}, Lcom/android/server/am/ContentProviderHelper;->removeContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)V

    return-object v3

    .line 8993
    :cond_1
    :try_start_1
    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mPackageManagerInt:Landroid/content/pm/PackageManagerInternal;

    .line 8994
    invoke-interface {v5}, Lcom/android/server/pm/pkg/AndroidPackage;->getPackageName()Ljava/lang/String;

    move-result-object v9

    const-wide/16 v10, 0x0

    const/16 v12, 0x3e8

    const/4 v13, 0x0

    .line 8993
    invoke-virtual/range {v8 .. v13}, Landroid/content/pm/PackageManagerInternal;->getApplicationInfo(Ljava/lang/String;JII)Landroid/content/pm/ApplicationInfo;

    move-result-object v4

    .line 8996
    invoke-virtual {v4}, Landroid/content/pm/ApplicationInfo;->isVendor()Z

    move-result v6

    if-nez v6, :cond_2

    invoke-virtual {v4}, Landroid/content/pm/ApplicationInfo;->isSystemApp()Z

    move-result v6

    if-nez v6, :cond_2

    invoke-virtual {v4}, Landroid/content/pm/ApplicationInfo;->isSystemExt()Z

    move-result v6

    if-nez v6, :cond_2

    .line 8997
    invoke-virtual {v4}, Landroid/content/pm/ApplicationInfo;->isProduct()Z

    move-result v4

    if-nez v4, :cond_2

    const-string/jumbo p1, "openContentUri may only be used by vendor/system/product."

    .line 8998
    invoke-static {v2, p1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1

    .line 9002
    :cond_2
    new-instance v2, Landroid/content/AttributionSource;

    .line 9003
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v4

    invoke-interface {v5}, Lcom/android/server/pm/pkg/AndroidPackage;->getPackageName()Ljava/lang/String;

    move-result-object v5

    invoke-direct {v2, v4, v5, v3}, Landroid/content/AttributionSource;-><init>(ILjava/lang/String;Ljava/lang/String;)V

    .line 9004
    iget-object v1, v1, Landroid/app/ContentProviderHolder;->provider:Landroid/content/IContentProvider;

    const-string/jumbo v4, "r"

    invoke-interface {v1, v2, p1, v4, v3}, Landroid/content/IContentProvider;->openFile(Landroid/content/AttributionSource;Landroid/net/Uri;Ljava/lang/String;Landroid/os/ICancellationSignal;)Landroid/os/ParcelFileDescriptor;

    move-result-object p1
    :try_end_1
    .catch Ljava/io/FileNotFoundException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 9009
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    invoke-virtual {p0, v7, v3, v0}, Lcom/android/server/am/ContentProviderHelper;->removeContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)V

    move-object v3, p1

    goto :goto_2

    :catchall_0
    move-exception p1

    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    invoke-virtual {p0, v7, v3, v0}, Lcom/android/server/am/ContentProviderHelper;->removeContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)V

    .line 9010
    throw p1

    .line 9009
    :catch_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    invoke-virtual {p0, v7, v3, v0}, Lcom/android/server/am/ContentProviderHelper;->removeContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)V

    goto :goto_2

    .line 9012
    :cond_3
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string p1, "Failed to get provider for authority \'"

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, "\'"

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-static {v2, p0}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    :goto_2
    return-object v3
.end method

.method public overlaysInstallComplete(Landroid/content/res/Configuration;Ljava/lang/String;Ljava/lang/String;II)V
    .locals 7

    const/4 v6, 0x0

    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move-object v3, p3

    move v4, p4

    move v5, p5

    .line 18933
    invoke-virtual/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->overlaysInstallComplete(Landroid/content/res/Configuration;Ljava/lang/String;Ljava/lang/String;IILjava/lang/Runnable;)V

    return-void
.end method

.method public overlaysInstallComplete(Landroid/content/res/Configuration;Ljava/lang/String;Ljava/lang/String;IILjava/lang/Runnable;)V
    .locals 3

    .line 18937
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "LocaleChange End: Time = "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v1

    invoke-virtual {v0, v1, v2}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    if-eqz p6, :cond_0

    .line 18939
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v0, p6}, Landroid/os/Handler;->removeCallbacks(Ljava/lang/Runnable;)V

    .line 18942
    :cond_0
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "overlaysInstallComplete() called with: configuration = ["

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v2, "], callingPackage = ["

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "], callingAttributionTag = ["

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "], timeoutRunnable = ["

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string p6, "]"

    invoke-virtual {v0, p6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p6

    invoke-static {v1, p6}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 18947
    iget-object p6, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {p0, p6}, Lcom/android/server/am/ActivityManagerService;->isDeviceProvisioned(Landroid/content/Context;)Z

    move-result p6

    if-eqz p6, :cond_1

    .line 18948
    invoke-virtual/range {p0 .. p5}, Lcom/android/server/am/ActivityManagerService;->updatePersistentConfigurationWithAttribution(Landroid/content/res/Configuration;Ljava/lang/String;Ljava/lang/String;II)V

    goto :goto_0

    :cond_1
    const-string/jumbo p0, "shortcut"

    .line 18951
    invoke-static {p0}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object p0

    invoke-static {p0}, Landroid/content/pm/IShortcutService$Stub;->asInterface(Landroid/os/IBinder;)Landroid/content/pm/IShortcutService;

    move-result-object p0

    const/4 p1, 0x1

    .line 18953
    :try_start_0
    invoke-interface {p0, p1}, Landroid/content/pm/IShortcutService;->handleLocaleChanged(Z)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    :catch_0
    move-exception p0

    .line 18955
    new-instance p1, Ljava/lang/StringBuilder;

    invoke-direct {p1}, Ljava/lang/StringBuilder;-><init>()V

    const-string p2, "Unable to start ShortcutService: "

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Landroid/os/RemoteException;->getMessage()Ljava/lang/String;

    move-result-object p0

    invoke-virtual {p1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-static {v1, p0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    :goto_0
    return-void
.end method

.method public peekService(Landroid/content/Intent;Ljava/lang/String;Ljava/lang/String;)Landroid/os/IBinder;
    .locals 2

    const-string/jumbo v0, "peekService"

    .line 15940
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    if-eqz p1, :cond_1

    .line 15942
    invoke-virtual {p1}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v0

    const/4 v1, 0x1

    if-eq v0, v1, :cond_0

    goto :goto_0

    .line 15943
    :cond_0
    new-instance p0, Ljava/lang/IllegalArgumentException;

    const-string p1, "File descriptors passed in Intent"

    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p0

    :cond_1
    :goto_0
    if-eqz p3, :cond_2

    .line 15950
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 15951
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/am/ActiveServices;->peekServiceLocked(Landroid/content/Intent;Ljava/lang/String;Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object p1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object p1

    :catchall_0
    move-exception p1

    .line 15952
    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1

    .line 15947
    :cond_2
    new-instance p0, Ljava/lang/IllegalArgumentException;

    const-string p1, "callingPackage cannot be null"

    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p0
.end method

.method public pendingScheduleServiceRestart(ILcom/android/server/am/ServiceRecord;)V
    .locals 3

    const-string v0, "ActivityManager"

    .line 3912
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "pendingScheduleServiceRestart: u="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, ", sr="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Lcom/android/server/am/ServiceRecord;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 3913
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingSches:Ljava/util/Map;

    monitor-enter v0

    .line 3915
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPendingSches:Ljava/util/Map;

    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    invoke-interface {v1, v2}, Ljava/util/Map;->containsKey(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_0

    .line 3916
    new-instance v1, Ljava/util/LinkedList;

    invoke-direct {v1}, Ljava/util/LinkedList;-><init>()V

    .line 3917
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingSches:Ljava/util/Map;

    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object p1

    invoke-interface {p0, p1, v1}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    goto :goto_0

    .line 3919
    :cond_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingSches:Ljava/util/Map;

    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object p1

    invoke-interface {p0, p1}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p0

    move-object v1, p0

    check-cast v1, Ljava/util/List;

    .line 3921
    :goto_0
    invoke-interface {v1, p2}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    .line 3922
    monitor-exit v0

    return-void

    :catchall_0
    move-exception p0

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw p0
.end method

.method public performIdleMaintenance()V
    .locals 15

    const-string v0, "android.permission.SET_ACTIVITY_WATCHER"

    .line 10398
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_1

    .line 10404
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v0

    .line 10405
    :try_start_0
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v10

    .line 10406
    iget-wide v1, p0, Lcom/android/server/am/ActivityManagerService;->mLastIdleTime:J

    sub-long v6, v10, v1

    .line 10409
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    iget-object v1, v1, Lcom/android/server/am/OomAdjuster;->mCachedAppOptimizer:Lcom/android/server/am/CachedAppOptimizer;

    invoke-virtual {v1}, Lcom/android/server/am/CachedAppOptimizer;->compactAllSystem()V

    .line 10411
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {v1, v10, v11}, Lcom/android/server/am/AppProfiler;->getLowRamTimeSinceIdleLPr(J)J

    move-result-wide v8

    .line 10412
    iput-wide v10, p0, Lcom/android/server/am/ActivityManagerService;->mLastIdleTime:J

    .line 10413
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {v1, v10, v11}, Lcom/android/server/am/AppProfiler;->updateLowRamTimestampLPr(J)V

    .line 10415
    new-instance v1, Ljava/lang/StringBuilder;

    const/16 v2, 0x80

    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(I)V

    const-string v2, "Idle maintenance over "

    .line 10416
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 10417
    invoke-static {v6, v7, v1}, Landroid/util/TimeUtils;->formatDuration(JLjava/lang/StringBuilder;)V

    const-string v2, " low RAM for "

    .line 10418
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 10419
    invoke-static {v8, v9, v1}, Landroid/util/TimeUtils;->formatDuration(JLjava/lang/StringBuilder;)V

    const-string v2, "ActivityManager"

    .line 10420
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v2, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    const-wide/16 v1, 0x3

    .line 10424
    div-long v1, v6, v1

    cmp-long v1, v8, v1

    const/4 v12, 0x0

    if-lez v1, :cond_0

    const/4 v1, 0x1

    move v3, v1

    goto :goto_0

    :cond_0
    move v3, v12

    .line 10427
    :goto_0
    invoke-static {}, Landroid/os/Process;->getTotalMemory()J

    move-result-wide v1

    const-wide/16 v4, 0x3e8

    div-long/2addr v1, v4

    const-wide/16 v4, 0x64

    .line 10428
    div-long/2addr v1, v4

    const-wide/16 v4, 0x2710

    .line 10429
    invoke-static {v1, v2, v4, v5}, Ljava/lang/Math;->max(JJ)J

    move-result-wide v4

    .line 10430
    iget-object v13, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    new-instance v14, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda4;

    move-object v1, v14

    move-object v2, p0

    invoke-direct/range {v1 .. v11}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda4;-><init>(Lcom/android/server/am/ActivityManagerService;ZJJJJ)V

    invoke-virtual {v13, v12, v14}, Lcom/android/server/am/ProcessList;->forEachLruProcessesLOSP(ZLjava/util/function/Consumer;)V

    .line 10484
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return-void

    :catchall_0
    move-exception p0

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p0

    .line 10400
    :cond_1
    new-instance p0, Ljava/lang/SecurityException;

    const-string v0, "Requires permission android.permission.SET_ACTIVITY_WATCHER"

    invoke-direct {p0, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p0
.end method

.method public preloadBoosterAppsFromIpm(Ljava/util/List;I)V
    .locals 1

    .line 23900
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mDynamicHiddenApp:Lcom/android/server/am/DynamicHiddenApp;

    if-nez p2, :cond_0

    return-void

    .line 23901
    :cond_0
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v0, Lcom/android/server/am/ActivityManagerService$26;

    invoke-direct {v0, p0, p1}, Lcom/android/server/am/ActivityManagerService$26;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/util/List;)V

    invoke-virtual {p2, v0}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    return-void
.end method

.method public prepareForPossibleShutdown()V
    .locals 1

    .line 23082
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    if-eqz v0, :cond_0

    .line 23083
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    invoke-virtual {p0}, Landroid/app/usage/UsageStatsManagerInternal;->prepareForPossibleShutdown()V

    :cond_0
    return-void
.end method

.method public final processSanityChecksLPr(Lcom/android/server/am/ProcessRecord;Landroid/app/IApplicationThread;)Z
    .locals 1

    const/4 p0, 0x0

    if-eqz p1, :cond_3

    if-nez p2, :cond_0

    goto :goto_0

    .line 20348
    :cond_0
    sget-boolean p2, Landroid/os/Binder;->isSystemServerBinderTrackerEnabled:Z

    const/4 v0, 0x1

    if-eqz p2, :cond_1

    return v0

    .line 20353
    :cond_1
    sget-boolean p2, Landroid/os/Build;->IS_DEBUGGABLE:Z

    if-nez p2, :cond_2

    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->isDebuggable()Z

    move-result p1

    if-eqz p1, :cond_3

    :cond_2
    move p0, v0

    :cond_3
    :goto_0
    return p0
.end method

.method public profileControl(Ljava/lang/String;IZLandroid/app/ProfilerInfo;I)Z
    .locals 2

    const-string v0, "android.permission.SET_ACTIVITY_WATCHER"

    .line 19894
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_5

    if-eqz p3, :cond_1

    if-eqz p4, :cond_0

    .line 19900
    iget-object v0, p4, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;

    if-eqz v0, :cond_0

    goto :goto_0

    .line 19901
    :cond_0
    new-instance p0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo p1, "null profile info or fd"

    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 19905
    :cond_1
    :goto_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v0

    if-eqz p1, :cond_2

    :try_start_0
    const-string/jumbo v1, "profileControl"

    .line 19907
    invoke-virtual {p0, p1, p2, v1}, Lcom/android/server/am/ActivityManagerService;->findProcessLOSP(Ljava/lang/String;ILjava/lang/String;)Lcom/android/server/am/ProcessRecord;

    move-result-object p2

    goto :goto_1

    :catchall_0
    move-exception p0

    goto :goto_3

    :cond_2
    const/4 p2, 0x0

    :goto_1
    if-eqz p3, :cond_4

    if-eqz p2, :cond_3

    .line 19910
    invoke-virtual {p2}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v1

    if-eqz v1, :cond_3

    goto :goto_2

    .line 19911
    :cond_3
    new-instance p0, Ljava/lang/IllegalArgumentException;

    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string p3, "Unknown process: "

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 19913
    :cond_4
    :goto_2
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 19915
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    iget-object p1, p1, Lcom/android/server/am/AppProfiler;->mProfilerLock:Ljava/lang/Object;

    monitor-enter p1

    .line 19916
    :try_start_1
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {p0, p2, p3, p4, p5}, Lcom/android/server/am/AppProfiler;->profileControlLPf(Lcom/android/server/am/ProcessRecord;ZLandroid/app/ProfilerInfo;I)Z

    move-result p0

    monitor-exit p1

    return p0

    :catchall_1
    move-exception p0

    .line 19917
    monitor-exit p1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    throw p0

    .line 19913
    :goto_3
    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p0

    .line 19896
    :cond_5
    new-instance p0, Ljava/lang/SecurityException;

    const-string p1, "Requires permission android.permission.SET_ACTIVITY_WATCHER"

    invoke-direct {p0, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p0
.end method

.method public final publishContentProviders(Landroid/app/IApplicationThread;Ljava/util/List;)V
    .locals 11

    const-wide/16 v0, 0x40

    .line 8743
    invoke-static {v0, v1}, Landroid/os/Trace;->isTagEnabled(J)Z

    move-result v2

    if-eqz v2, :cond_4

    .line 8745
    new-instance v2, Ljava/lang/StringBuilder;

    const/16 v3, 0x100

    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(I)V

    const-string/jumbo v4, "publishContentProviders: "

    .line 8746
    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    if-eqz p2, :cond_3

    .line 8749
    invoke-interface {p2}, Ljava/util/List;->size()I

    move-result v4

    const/4 v5, 0x0

    const/4 v6, 0x1

    move v7, v5

    :goto_0
    if-ge v7, v4, :cond_3

    .line 8750
    invoke-interface {p2, v7}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Landroid/app/ContentProviderHolder;

    if-eqz v8, :cond_2

    .line 8751
    iget-object v9, v8, Landroid/app/ContentProviderHolder;->info:Landroid/content/pm/ProviderInfo;

    if-eqz v9, :cond_2

    iget-object v9, v9, Landroid/content/pm/ProviderInfo;->authority:Ljava/lang/String;

    if-eqz v9, :cond_2

    .line 8752
    invoke-virtual {v9}, Ljava/lang/String;->length()I

    move-result v9

    .line 8753
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->length()I

    move-result v10

    add-int/2addr v10, v9

    if-le v10, v3, :cond_0

    const-string v3, "[[TRUNCATED]]"

    .line 8754
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    goto :goto_2

    :cond_0
    if-nez v6, :cond_1

    const/16 v9, 0x3b

    .line 8758
    invoke-virtual {v2, v9}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    goto :goto_1

    :cond_1
    move v6, v5

    .line 8762
    :goto_1
    iget-object v8, v8, Landroid/app/ContentProviderHolder;->info:Landroid/content/pm/ProviderInfo;

    iget-object v8, v8, Landroid/content/pm/ProviderInfo;->authority:Ljava/lang/String;

    invoke-virtual {v2, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    :cond_2
    add-int/lit8 v7, v7, 0x1

    goto :goto_0

    .line 8766
    :cond_3
    :goto_2
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v0, v1, v2}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 8769
    :cond_4
    :try_start_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/ContentProviderHelper;->publishContentProviders(Landroid/app/IApplicationThread;Ljava/util/List;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 8771
    invoke-static {v0, v1}, Landroid/os/Trace;->traceEnd(J)V

    return-void

    :catchall_0
    move-exception p0

    invoke-static {v0, v1}, Landroid/os/Trace;->traceEnd(J)V

    .line 8772
    throw p0
.end method

.method public publishService(Landroid/os/IBinder;Landroid/content/Intent;Landroid/os/IBinder;)V
    .locals 2

    if-eqz p2, :cond_1

    .line 16153
    invoke-virtual {p2}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v0

    const/4 v1, 0x1

    if-eq v0, v1, :cond_0

    goto :goto_0

    .line 16154
    :cond_0
    new-instance p0, Ljava/lang/IllegalArgumentException;

    const-string p1, "File descriptors passed in Intent"

    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 16157
    :cond_1
    :goto_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 16158
    :try_start_0
    instance-of v0, p1, Lcom/android/server/am/ServiceRecord;

    if-eqz v0, :cond_2

    .line 16161
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    check-cast p1, Lcom/android/server/am/ServiceRecord;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/am/ActiveServices;->publishServiceLocked(Lcom/android/server/am/ServiceRecord;Landroid/content/Intent;Landroid/os/IBinder;)V

    .line 16162
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 16159
    :cond_2
    :try_start_1
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string p2, "Invalid service token"

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    :catchall_0
    move-exception p1

    .line 16162
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public pushTempAllowlist()V
    .locals 14

    .line 19766
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 19767
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_3

    .line 19768
    :try_start_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPendingTempAllowlist:Lcom/android/server/am/PendingTempAllowlists;

    invoke-virtual {v1}, Lcom/android/server/am/PendingTempAllowlists;->size()I

    move-result v1

    .line 19769
    new-array v2, v1, [Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;

    const/4 v3, 0x0

    move v4, v3

    :goto_0
    if-ge v4, v1, :cond_0

    .line 19771
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mPendingTempAllowlist:Lcom/android/server/am/PendingTempAllowlists;

    invoke-virtual {v5, v4}, Lcom/android/server/am/PendingTempAllowlists;->valueAt(I)Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;

    move-result-object v5

    aput-object v5, v2, v4

    add-int/lit8 v4, v4, 0x1

    goto :goto_0

    .line 19773
    :cond_0
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_2

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 19774
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_3

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 19779
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLocalDeviceIdleController:Lcom/android/server/DeviceIdleInternal;

    if-eqz v0, :cond_1

    move v0, v3

    :goto_1
    if-ge v0, v1, :cond_1

    .line 19781
    aget-object v4, v2, v0

    .line 19782
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mLocalDeviceIdleController:Lcom/android/server/DeviceIdleInternal;

    iget v6, v4, Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;->targetUid:I

    iget-wide v7, v4, Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;->duration:J

    iget v9, v4, Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;->type:I

    const/4 v10, 0x1

    iget v11, v4, Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;->reasonCode:I

    iget-object v12, v4, Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;->tag:Ljava/lang/String;

    iget v13, v4, Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;->callingUid:I

    invoke-interface/range {v5 .. v13}, Lcom/android/server/DeviceIdleInternal;->addPowerSaveTempWhitelistAppDirect(IJIZILjava/lang/String;I)V

    add-int/lit8 v0, v0, 0x1

    goto :goto_1

    .line 19789
    :cond_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 19790
    :try_start_3
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    :goto_2
    if-ge v3, v1, :cond_3

    .line 19792
    :try_start_4
    aget-object v4, v2, v3

    .line 19793
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mPendingTempAllowlist:Lcom/android/server/am/PendingTempAllowlists;

    iget v6, v4, Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;->targetUid:I

    invoke-virtual {v5, v6}, Lcom/android/server/am/PendingTempAllowlists;->indexOfKey(I)I

    move-result v5

    if-ltz v5, :cond_2

    .line 19794
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mPendingTempAllowlist:Lcom/android/server/am/PendingTempAllowlists;

    invoke-virtual {v6, v5}, Lcom/android/server/am/PendingTempAllowlists;->valueAt(I)Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;

    move-result-object v6

    if-ne v6, v4, :cond_2

    .line 19795
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mPendingTempAllowlist:Lcom/android/server/am/PendingTempAllowlists;

    invoke-virtual {v4, v5}, Lcom/android/server/am/PendingTempAllowlists;->removeAt(I)V

    :cond_2
    add-int/lit8 v3, v3, 0x1

    goto :goto_2

    .line 19798
    :cond_3
    monitor-exit v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 19799
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :catchall_0
    move-exception v1

    .line 19798
    :try_start_6
    monitor-exit v0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    :try_start_7
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v1

    :catchall_1
    move-exception v0

    .line 19799
    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :catchall_2
    move-exception v1

    .line 19773
    :try_start_8
    monitor-exit v0
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_2

    :try_start_9
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v1

    :catchall_3
    move-exception v0

    .line 19774
    monitor-exit p0
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_3

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public queryIntentComponentsForIntentSender(Landroid/content/IIntentSender;I)Landroid/content/pm/ParceledListSlice;
    .locals 10

    const-string v0, "android.permission.GET_INTENT_SENDER_INTENT"

    const-string/jumbo v1, "queryIntentComponentsForIntentSender()"

    .line 6863
    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 6865
    invoke-static {p1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    const/4 v0, 0x0

    .line 6868
    :try_start_0
    check-cast p1, Lcom/android/server/am/PendingIntentRecord;
    :try_end_0
    .catch Ljava/lang/ClassCastException; {:try_start_0 .. :try_end_0} :catch_0

    .line 6872
    iget-object v1, p1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v3, v1, Lcom/android/server/am/PendingIntentRecord$Key;->requestIntent:Landroid/content/Intent;

    if-nez v3, :cond_0

    return-object v0

    .line 6876
    :cond_0
    iget v8, v1, Lcom/android/server/am/PendingIntentRecord$Key;->userId:I

    .line 6877
    iget v7, p1, Lcom/android/server/am/PendingIntentRecord;->uid:I

    .line 6878
    iget-object v4, v1, Lcom/android/server/am/PendingIntentRecord$Key;->requestResolvedType:Ljava/lang/String;

    .line 6879
    iget v0, v1, Lcom/android/server/am/PendingIntentRecord$Key;->type:I

    const/4 v1, 0x1

    if-eq v0, v1, :cond_4

    const/4 v1, 0x2

    if-eq v0, v1, :cond_3

    const/4 v1, 0x4

    if-eq v0, v1, :cond_2

    const/4 v1, 0x5

    if-ne v0, v1, :cond_1

    goto :goto_0

    .line 6891
    :cond_1
    new-instance p0, Ljava/lang/IllegalStateException;

    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "Unsupported intent sender type: "

    invoke-virtual {p2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object p1, p1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget p1, p1, Lcom/android/server/am/PendingIntentRecord$Key;->type:I

    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p0, p1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 6885
    :cond_2
    :goto_0
    new-instance p1, Landroid/content/pm/ParceledListSlice;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPackageManagerInt:Landroid/content/pm/PackageManagerInternal;

    int-to-long v4, p2

    move v6, v7

    move v7, v8

    invoke-virtual/range {v2 .. v7}, Landroid/content/pm/PackageManagerInternal;->queryIntentServices(Landroid/content/Intent;JII)Ljava/util/List;

    move-result-object p0

    invoke-direct {p1, p0}, Landroid/content/pm/ParceledListSlice;-><init>(Ljava/util/List;)V

    return-object p1

    .line 6881
    :cond_3
    new-instance p1, Landroid/content/pm/ParceledListSlice;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPackageManagerInt:Landroid/content/pm/PackageManagerInternal;

    int-to-long v5, p2

    invoke-virtual/range {v2 .. v8}, Landroid/content/pm/PackageManagerInternal;->queryIntentActivities(Landroid/content/Intent;Ljava/lang/String;JII)Ljava/util/List;

    move-result-object p0

    invoke-direct {p1, p0}, Landroid/content/pm/ParceledListSlice;-><init>(Ljava/util/List;)V

    return-object p1

    .line 6888
    :cond_4
    new-instance p1, Landroid/content/pm/ParceledListSlice;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPackageManagerInt:Landroid/content/pm/PackageManagerInternal;

    int-to-long v5, p2

    const/4 v9, 0x0

    invoke-virtual/range {v2 .. v9}, Landroid/content/pm/PackageManagerInternal;->queryIntentReceivers(Landroid/content/Intent;Ljava/lang/String;JIIZ)Ljava/util/List;

    move-result-object p0

    invoke-direct {p1, p0}, Landroid/content/pm/ParceledListSlice;-><init>(Ljava/util/List;)V

    return-object p1

    :catch_0
    return-object v0
.end method

.method public queryRegisteredReceiverPackages(Landroid/content/Intent;Ljava/lang/String;I)[Ljava/lang/String;
    .locals 0

    .line 23738
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mExt:Lcom/android/server/am/ActivityManagerServiceExt;

    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/am/ActivityManagerServiceExt;->queryRegisteredReceiverPackages(Landroid/content/Intent;Ljava/lang/String;I)[Ljava/lang/String;

    move-result-object p0

    return-object p0
.end method

.method public refContentProvider(Landroid/os/IBinder;II)Z
    .locals 0

    .line 8777
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/am/ContentProviderHelper;->refContentProvider(Landroid/os/IBinder;II)Z

    move-result p0

    return p0
.end method

.method public refreshSettingsCache()V
    .locals 1

    .line 22766
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mCoreSettingsObserver:Lcom/android/server/am/CoreSettingsObserver;

    const/4 v0, 0x1

    invoke-virtual {p0, v0}, Lcom/android/server/am/CoreSettingsObserver;->onChange(Z)V

    return-void
.end method

.method public registerDedicatedCallback(Landroid/os/RemoteCallback;I)V
    .locals 1

    .line 24326
    sget-boolean v0, Lcom/samsung/android/rune/CoreRune;->FW_DEDICATED_MEMORY:Z

    if-nez v0, :cond_0

    return-void

    :cond_0
    const-string/jumbo v0, "registerDedicatedCallback"

    .line 24328
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkLongLivePermissions(Ljava/lang/String;)V

    .line 24329
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 24330
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mExt:Lcom/android/server/am/ActivityManagerServiceExt;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/am/ActivityManagerServiceExt;->registerDedicatedCallbackLocked(Landroid/os/RemoteCallback;I)V

    .line 24331
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public registerForegroundServiceObserver(Landroid/app/IForegroundServiceObserver;)Z
    .locals 3

    .line 4545
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    const-string v1, "android.permission.MANAGE_ACTIVITY_TASKS"

    .line 4546
    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v1

    const-string v2, "android.permission.INTERACT_ACROSS_USERS_FULL"

    .line 4547
    invoke-virtual {p0, v2}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v2

    if-nez v1, :cond_0

    if-nez v2, :cond_0

    .line 4559
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 4560
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v1, v0, p1}, Lcom/android/server/am/ActiveServices;->registerForegroundServiceObserverLocked(ILandroid/app/IForegroundServiceObserver;)Z

    move-result p1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return p1

    :catchall_0
    move-exception p1

    .line 4561
    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1

    .line 4550
    :cond_0
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string p1, "Permission Denial: registerForegroundServiceObserver() from pid="

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 4551
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result p1

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, ", uid="

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, " requires "

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, "android.permission.MANAGE_ACTIVITY_TASKS"

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, " and "

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, "android.permission.INTERACT_ACROSS_USERS_FULL"

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    const-string p1, "ActivityManager"

    .line 4555
    invoke-static {p1, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4556
    new-instance p1, Ljava/lang/SecurityException;

    invoke-direct {p1, p0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method public registerIntentSenderCancelListenerEx(Landroid/content/IIntentSender;Lcom/android/internal/os/IResultReceiver;)Z
    .locals 0

    .line 6670
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingIntentController:Lcom/android/server/am/PendingIntentController;

    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/PendingIntentController;->registerIntentSenderCancelListener(Landroid/content/IIntentSender;Lcom/android/internal/os/IResultReceiver;)Z

    move-result p0

    return p0
.end method

.method public registerProcessObserver(Landroid/app/IProcessObserver;)V
    .locals 2

    const-string v0, "android.permission.SET_ACTIVITY_WATCHER"

    const-string/jumbo v1, "registerProcessObserver()"

    .line 9547
    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 9549
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {p0, p1}, Lcom/android/server/am/ProcessList;->registerProcessObserver(Landroid/app/IProcessObserver;)V

    return-void
.end method

.method public registerReceiver(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/IIntentReceiver;Landroid/content/IntentFilter;Ljava/lang/String;II)Landroid/content/Intent;
    .locals 10

    const/4 v3, 0x0

    const/4 v4, 0x0

    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move-object v5, p3

    move-object v6, p4

    move-object v7, p5

    move/from16 v8, p6

    move/from16 v9, p7

    .line 16546
    invoke-virtual/range {v0 .. v9}, Lcom/android/server/am/ActivityManagerService;->registerReceiverWithFeature(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/content/IIntentReceiver;Landroid/content/IntentFilter;Ljava/lang/String;II)Landroid/content/Intent;

    move-result-object v0

    return-object v0
.end method

.method public registerReceiverWithFeature(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/content/IIntentReceiver;Landroid/content/IntentFilter;Ljava/lang/String;II)Landroid/content/Intent;
    .locals 53

    move-object/from16 v8, p0

    move-object/from16 v7, p2

    move-object/from16 v6, p5

    move/from16 v1, p9

    const-string/jumbo v0, "registerReceiver"

    .line 16553
    invoke-virtual {v8, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    and-int/lit8 v2, v1, 0x1

    const/4 v4, 0x1

    if-eqz v2, :cond_0

    move/from16 v19, v4

    goto :goto_0

    :cond_0
    const/16 v19, 0x0

    .line 16562
    :goto_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 16565
    :try_start_0
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mExt:Lcom/android/server/am/ActivityManagerServiceExt;

    move-object/from16 v3, p6

    move/from16 v12, p8

    invoke-virtual {v0, v6, v12, v3, v7}, Lcom/android/server/am/ActivityManagerServiceExt;->intentFilterForReceiverAllowlist(Landroid/content/IIntentReceiver;ILandroid/content/IntentFilter;Ljava/lang/String;)Landroid/content/IntentFilter;

    move-result-object v3

    .line 16569
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLOSP(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v15

    const/4 v14, 0x0

    if-nez v15, :cond_1

    const-string v0, "ActivityManager"

    .line 16571
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "registerReceiverWithFeature: no app for "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-object/from16 v13, p1

    invoke-virtual {v1, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 16572
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object v14

    :cond_1
    move-object/from16 v13, p1

    .line 16574
    :try_start_1
    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v0, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    const/16 v11, 0x3e8

    if-eq v0, v11, :cond_3

    .line 16575
    invoke-virtual {v15}, Lcom/android/server/am/ProcessRecord;->getPkgList()Lcom/android/server/am/PackageList;

    move-result-object v0

    invoke-virtual {v0, v7}, Lcom/android/server/am/PackageList;->containsKey(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_3

    const-string v0, "android"

    .line 16576
    invoke-virtual {v0, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_2

    goto :goto_1

    .line 16577
    :cond_2
    new-instance v0, Ljava/lang/SecurityException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Given caller package "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, " is not running in process "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 16580
    :cond_3
    :goto_1
    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v10, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 16581
    invoke-virtual {v15}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v9

    .line 16583
    invoke-virtual {v8, v15, v7, v10}, Lcom/android/server/am/ActivityManagerService;->isInstantApp(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;I)Z

    move-result v18

    .line 16584
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    const/16 v16, 0x1

    const/16 v17, 0x2

    const-string/jumbo v20, "registerReceiver"

    move/from16 p6, v9

    move-object v9, v0

    move/from16 v21, v10

    move/from16 v10, p6

    move v5, v11

    move/from16 v11, v21

    move/from16 v12, p8

    move/from16 v13, v16

    move/from16 v14, v17

    move-object/from16 v17, v15

    move-object/from16 v15, v20

    move-object/from16 v16, p2

    invoke-virtual/range {v9 .. v16}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result v15

    .line 16590
    invoke-static/range {v21 .. v21}, Landroid/os/UserHandle;->isCore(I)Z

    move-result v0

    if-eqz v0, :cond_8

    .line 16591
    invoke-virtual {v3}, Landroid/content/IntentFilter;->getPriority()I

    move-result v0

    if-ge v0, v5, :cond_5

    const/16 v9, -0x3e8

    if-gt v0, v9, :cond_4

    goto :goto_2

    :cond_4
    const/4 v9, 0x0

    goto :goto_3

    :cond_5
    :goto_2
    move v9, v4

    :goto_3
    if-nez v9, :cond_8

    .line 16595
    invoke-virtual {v3}, Landroid/content/IntentFilter;->countActions()I

    move-result v9

    const/4 v10, 0x0

    :goto_4
    if-ge v10, v9, :cond_8

    .line 16598
    invoke-virtual {v3, v10}, Landroid/content/IntentFilter;->getAction(I)Ljava/lang/String;

    move-result-object v11

    const-string v12, "android.intent.action.USER_"

    .line 16599
    invoke-virtual {v11, v12}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v12

    if-nez v12, :cond_7

    const-string v12, "android.intent.action.PACKAGE_"

    .line 16600
    invoke-virtual {v11, v12}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v12

    if-nez v12, :cond_7

    const-string v12, "android.intent.action.UID_"

    .line 16601
    invoke-virtual {v11, v12}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v12

    if-nez v12, :cond_7

    const-string v12, "android.intent.action.EXTERNAL_"

    .line 16602
    invoke-virtual {v11, v12}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v12

    if-nez v12, :cond_7

    const-string v12, "android.bluetooth."

    .line 16603
    invoke-virtual {v11, v12}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v11

    if-eqz v11, :cond_6

    goto :goto_5

    :cond_6
    add-int/lit8 v10, v10, 0x1

    goto :goto_4

    :cond_7
    :goto_5
    if-nez v0, :cond_8

    .line 16615
    invoke-virtual {v3, v5}, Landroid/content/IntentFilter;->setPriority(I)V

    .line 16623
    :cond_8
    invoke-virtual {v3}, Landroid/content/IntentFilter;->actionsIterator()Ljava/util/Iterator;

    move-result-object v0

    if-nez v0, :cond_9

    .line 16625
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0, v4}, Ljava/util/ArrayList;-><init>(I)V

    const/4 v14, 0x0

    .line 16626
    invoke-virtual {v0, v14}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 16627
    invoke-virtual {v0}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v0

    goto :goto_6

    :cond_9
    const/4 v14, 0x0

    :goto_6
    move-object v9, v0

    const/4 v10, 0x2

    new-array v11, v10, [I

    const/4 v0, -0x1

    const/4 v12, 0x0

    aput v0, v11, v12

    .line 16633
    invoke-static/range {v21 .. v21}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v0

    aput v0, v11, v4

    move v12, v4

    move-object v0, v14

    .line 16634
    :goto_7
    invoke-interface {v9}, Ljava/util/Iterator;->hasNext()Z

    move-result v13

    if-eqz v13, :cond_e

    .line 16635
    invoke-interface {v9}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Ljava/lang/String;

    move-object/from16 v16, v0

    const/4 v0, 0x0

    :goto_8
    if-ge v0, v10, :cond_c

    .line 16636
    aget v5, v11, v0

    .line 16637
    iget-object v14, v8, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    .line 16638
    invoke-virtual {v14, v5}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Landroid/util/ArrayMap;

    if-eqz v5, :cond_b

    .line 16640
    invoke-virtual {v5, v13}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Ljava/util/ArrayList;

    if-eqz v5, :cond_b

    if-nez v16, :cond_a

    .line 16643
    new-instance v14, Ljava/util/ArrayList;

    invoke-direct {v14}, Ljava/util/ArrayList;-><init>()V

    goto :goto_9

    :cond_a
    move-object/from16 v14, v16

    .line 16645
    :goto_9
    invoke-virtual {v14, v5}, Ljava/util/ArrayList;->addAll(Ljava/util/Collection;)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    move-object/from16 v16, v14

    :cond_b
    add-int/lit8 v0, v0, 0x1

    const/16 v5, 0x3e8

    const/4 v14, 0x0

    goto :goto_8

    :cond_c
    if-eqz v12, :cond_d

    .line 16652
    :try_start_2
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    invoke-interface {v0, v13}, Landroid/content/pm/IPackageManager;->isProtectedBroadcast(Ljava/lang/String;)Z

    move-result v0
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    and-int/2addr v12, v0

    goto :goto_a

    :catch_0
    move-exception v0

    :try_start_3
    const-string v5, "ActivityManager"

    const-string v12, "Remote exception"

    .line 16655
    invoke-static {v5, v12, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    const/4 v12, 0x0

    :cond_d
    :goto_a
    move-object/from16 v0, v16

    const/16 v5, 0x3e8

    const/4 v14, 0x0

    goto :goto_7

    .line 16660
    :cond_e
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v5

    invoke-static {v5}, Landroid/os/Process;->isSdkSandboxUid(I)Z

    move-result v5

    if-eqz v5, :cond_11

    .line 16661
    const-class v5, Lcom/android/server/sdksandbox/SdkSandboxManagerLocal;

    .line 16662
    invoke-static {v5}, Lcom/android/server/LocalManagerRegistry;->getManager(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/sdksandbox/SdkSandboxManagerLocal;

    if-eqz v5, :cond_10

    .line 16667
    invoke-interface {v5, v3, v1, v12}, Lcom/android/server/sdksandbox/SdkSandboxManagerLocal;->canRegisterBroadcastReceiver(Landroid/content/IntentFilter;IZ)Z

    move-result v5

    if-eqz v5, :cond_f

    goto :goto_b

    .line 16669
    :cond_f
    new-instance v0, Ljava/lang/SecurityException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "SDK sandbox not allowed to register receiver with the given IntentFilter: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 16670
    invoke-virtual {v3}, Landroid/content/IntentFilter;->toLongString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 16664
    :cond_10
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "SdkSandboxManagerLocal not found when checking whether SDK sandbox uid can register to broadcast receivers."

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_11
    :goto_b
    and-int/lit8 v5, v1, 0x6

    if-eqz v5, :cond_12

    move v5, v4

    goto :goto_c

    :cond_12
    const/4 v5, 0x0

    :goto_c
    and-int/lit8 v9, v1, 0x2

    if-eqz v9, :cond_14

    and-int/lit8 v9, v1, 0x4

    if-nez v9, :cond_13

    goto :goto_d

    .line 16682
    :cond_13
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Receiver can\'t specify both RECEIVER_EXPORTED and RECEIVER_NOT_EXPORTEDflag"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_14
    :goto_d
    const-wide/32 v13, 0x99ae1c7

    move/from16 v11, v21

    .line 16690
    invoke-static {v13, v14, v11}, Landroid/app/compat/CompatChanges;->isChangeEnabled(JI)Z

    move-result v9

    if-eqz v2, :cond_15

    and-int/lit8 v2, v1, 0x4

    if-eqz v2, :cond_15

    move v2, v4

    goto :goto_e

    :cond_15
    const/4 v2, 0x0

    :goto_e
    if-eqz v2, :cond_17

    if-nez v9, :cond_16

    goto :goto_f

    .line 16698
    :cond_16
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Receiver can\'t specify both RECEIVER_VISIBLE_TO_INSTANT_APPS and RECEIVER_NOT_EXPORTED flag"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_17
    :goto_f
    if-nez v12, :cond_1b

    if-nez v6, :cond_18

    if-nez v5, :cond_18

    goto :goto_11

    :cond_18
    if-eqz v9, :cond_1a

    if-eqz v5, :cond_19

    goto :goto_10

    .line 16708
    :cond_19
    new-instance v0, Ljava/lang/SecurityException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v1, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, ": One of RECEIVER_EXPORTED or RECEIVER_NOT_EXPORTED should be specified when a receiver isn\'t being registered exclusively for system broadcasts"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_1a
    :goto_10
    if-nez v9, :cond_1c

    and-int/lit8 v2, v1, 0x4

    if-nez v2, :cond_1c

    goto :goto_11

    :cond_1b
    and-int/lit8 v2, v1, 0x4

    if-nez v2, :cond_1c

    :goto_11
    or-int/lit8 v1, v1, 0x2

    .line 16721
    :cond_1c
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    and-int/2addr v1, v10

    if-eqz v1, :cond_1d

    move/from16 v21, v4

    goto :goto_12

    :cond_1d
    const/16 v21, 0x0

    :goto_12
    if-eqz v0, :cond_22

    .line 16728
    iget-object v1, v8, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v1

    .line 16730
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v2

    const/4 v12, 0x0

    const/4 v14, 0x0

    :goto_13
    if-ge v12, v2, :cond_21

    .line 16731
    invoke-virtual {v0, v12}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/ActivityManagerService$StickyBroadcast;

    .line 16732
    iget-object v9, v5, Lcom/android/server/am/ActivityManagerService$StickyBroadcast;->intent:Landroid/content/Intent;

    if-eqz v18, :cond_1e

    .line 16735
    invoke-virtual {v9}, Landroid/content/Intent;->getFlags()I

    move-result v10

    const/high16 v13, 0x200000

    and-int/2addr v10, v13

    if-nez v10, :cond_1e

    goto :goto_14

    :cond_1e
    const-string v10, "ActivityManager"

    .line 16742
    invoke-virtual {v3, v1, v9, v4, v10}, Landroid/content/IntentFilter;->match(Landroid/content/ContentResolver;Landroid/content/Intent;ZLjava/lang/String;)I

    move-result v9

    if-ltz v9, :cond_20

    if-nez v14, :cond_1f

    .line 16744
    new-instance v9, Ljava/util/ArrayList;

    invoke-direct {v9}, Ljava/util/ArrayList;-><init>()V

    move-object v14, v9

    .line 16746
    :cond_1f
    invoke-virtual {v14, v5}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    :cond_20
    :goto_14
    add-int/lit8 v12, v12, 0x1

    goto :goto_13

    :cond_21
    move-object v0, v14

    goto :goto_15

    :cond_22
    const/4 v0, 0x0

    :goto_15
    const/4 v5, 0x0

    if-eqz v0, :cond_23

    .line 16752
    invoke-virtual {v0, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ActivityManagerService$StickyBroadcast;

    iget-object v14, v1, Lcom/android/server/am/ActivityManagerService$StickyBroadcast;->intent:Landroid/content/Intent;

    move-object/from16 v22, v14

    goto :goto_16

    :cond_23
    const/16 v22, 0x0

    :goto_16
    if-nez v6, :cond_24

    return-object v22

    .line 16760
    :cond_24
    invoke-static {}, Landroid/os/Process;->myPid()I

    move-result v1

    move/from16 v9, p6

    if-eq v9, v1, :cond_26

    const-string v1, "com.android.server.net.action.SNOOZE_WARNING"

    .line 16761
    invoke-virtual {v3, v1}, Landroid/content/IntentFilter;->hasAction(Ljava/lang/String;)Z

    move-result v1

    if-nez v1, :cond_25

    const-string v1, "com.android.server.net.action.SNOOZE_RAPID"

    .line 16762
    invoke-virtual {v3, v1}, Landroid/content/IntentFilter;->hasAction(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_26

    :cond_25
    const-string v1, "177931370"

    .line 16763
    invoke-static {v11}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    const-string v10, ""

    filled-new-array {v1, v2, v10}, [Ljava/lang/Object;

    move-result-object v1

    const v2, 0x534e4554

    invoke-static {v2, v1}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 16767
    :cond_26
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 16769
    :try_start_4
    invoke-virtual/range {v17 .. v17}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v1

    if-eqz v1, :cond_35

    .line 16770
    invoke-interface {v1}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    invoke-interface/range {p1 .. p1}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v2

    if-eq v1, v2, :cond_27

    goto/16 :goto_1c

    .line 16774
    :cond_27
    iget-object v1, v8, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    invoke-interface/range {p5 .. p5}, Landroid/content/IIntentReceiver;->asBinder()Landroid/os/IBinder;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ReceiverList;

    if-nez v1, :cond_2b

    .line 16776
    new-instance v10, Lcom/android/server/am/ReceiverList;

    move-object v1, v10

    move-object/from16 v2, p0

    move-object v14, v3

    move-object/from16 v3, v17

    move v12, v4

    move v4, v9

    move v13, v5

    const/16 v9, 0x3e8

    move v5, v11

    move v6, v15

    move-object v12, v7

    move-object/from16 v7, p5

    invoke-direct/range {v1 .. v7}, Lcom/android/server/am/ReceiverList;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;IIILandroid/content/IIntentReceiver;)V

    .line 16778
    iget-object v1, v10, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v1, :cond_2a

    .line 16779
    iget-object v1, v1, Lcom/android/server/am/ProcessRecord;->mReceivers:Lcom/android/server/am/ProcessReceiverRecord;

    invoke-virtual {v1}, Lcom/android/server/am/ProcessReceiverRecord;->numberOfReceivers()I

    move-result v1

    if-lt v1, v9, :cond_29

    .line 16783
    invoke-static {}, Landroid/os/Process;->myPid()I

    move-result v0

    iget v2, v10, Lcom/android/server/am/ReceiverList;->pid:I

    if-ne v0, v2, :cond_28

    move v5, v13

    :goto_17
    if-ge v5, v1, :cond_28

    const-string v0, "ActivityManager"

    .line 16785
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "receiver list #"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, " "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v3, v10, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;

    iget-object v3, v3, Lcom/android/server/am/ProcessRecord;->mReceivers:Lcom/android/server/am/ProcessReceiverRecord;

    invoke-virtual {v3, v5}, Lcom/android/server/am/ProcessReceiverRecord;->getReceiverAt(I)Lcom/android/server/am/ReceiverList;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v0, v2}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    add-int/lit8 v5, v5, 0x1

    goto :goto_17

    .line 16790
    :cond_28
    new-instance v0, Ljava/lang/IllegalStateException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Too many receivers, total of "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ", registered for pid: "

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v1, v10, Lcom/android/server/am/ReceiverList;->pid:I

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ", callerPackage: "

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 16794
    :cond_29
    iget-object v1, v10, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;

    iget-object v1, v1, Lcom/android/server/am/ProcessRecord;->mReceivers:Lcom/android/server/am/ProcessReceiverRecord;

    invoke-virtual {v1, v10}, Lcom/android/server/am/ProcessReceiverRecord;->addReceiver(Lcom/android/server/am/ReceiverList;)V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    goto :goto_18

    .line 16797
    :cond_2a
    :try_start_5
    invoke-interface/range {p5 .. p5}, Landroid/content/IIntentReceiver;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    invoke-interface {v1, v10, v13}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V
    :try_end_5
    .catch Landroid/os/RemoteException; {:try_start_5 .. :try_end_5} :catch_1
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    const/4 v1, 0x1

    .line 16801
    :try_start_6
    iput-boolean v1, v10, Lcom/android/server/am/ReceiverList;->linkedToDeath:Z

    .line 16803
    :goto_18
    iget-object v1, v8, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    invoke-interface/range {p5 .. p5}, Landroid/content/IIntentReceiver;->asBinder()Landroid/os/IBinder;

    move-result-object v2

    invoke-virtual {v1, v2, v10}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    move-object v1, v10

    goto :goto_19

    .line 16799
    :catch_1
    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object v22

    :cond_2b
    move-object v14, v3

    move v13, v5

    move-object v12, v7

    .line 16804
    :try_start_7
    iget v2, v1, Lcom/android/server/am/ReceiverList;->uid:I

    if-ne v2, v11, :cond_34

    .line 16809
    iget v2, v1, Lcom/android/server/am/ReceiverList;->pid:I

    if-ne v2, v9, :cond_33

    .line 16814
    iget v2, v1, Lcom/android/server/am/ReceiverList;->userId:I

    if-ne v2, v15, :cond_32

    .line 16820
    :goto_19
    new-instance v2, Lcom/android/server/am/BroadcastFilter;

    move-object v9, v2

    move-object v10, v14

    move v3, v11

    move-object v11, v1

    move-object v4, v12

    move-object/from16 v12, p2

    move v5, v13

    move-object/from16 v13, p3

    move-object v6, v14

    const/4 v7, 0x0

    move-object/from16 v14, p4

    move/from16 p1, v15

    move-object/from16 v15, p7

    move/from16 v16, v3

    move/from16 v17, p1

    move/from16 v20, v21

    invoke-direct/range {v9 .. v20}, Lcom/android/server/am/BroadcastFilter;-><init>(Landroid/content/IntentFilter;Lcom/android/server/am/ReceiverList;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IIZZZ)V

    .line 16823
    invoke-virtual {v1, v6}, Lcom/android/server/am/ReceiverList;->containsFilter(Landroid/content/IntentFilter;)Z

    move-result v9

    if-eqz v9, :cond_2c

    const-string v9, "ActivityManager"

    .line 16824
    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Receiver with filter "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v10, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v6, " already registered for pid "

    invoke-virtual {v10, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v1, v1, Lcom/android/server/am/ReceiverList;->pid:I

    invoke-virtual {v10, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ", callerPackage is "

    invoke-virtual {v10, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v10, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v9, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1a

    .line 16828
    :cond_2c
    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 16829
    invoke-virtual {v2}, Landroid/content/IntentFilter;->debugCheck()Z

    move-result v1

    if-nez v1, :cond_2d

    const-string v1, "ActivityManager"

    const-string v4, "==> For Dynamic broadcast"

    .line 16830
    invoke-static {v1, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 16832
    :cond_2d
    iget-object v1, v8, Lcom/android/server/am/ActivityManagerService;->mReceiverResolver:Lcom/android/server/IntentResolver;

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal;

    move-result-object v4

    invoke-virtual {v4}, Landroid/content/pm/PackageManagerInternal;->snapshot()Lcom/android/server/pm/snapshot/PackageDataSnapshot;

    move-result-object v4

    invoke-virtual {v1, v4, v2}, Lcom/android/server/IntentResolver;->addFilter(Lcom/android/server/pm/snapshot/PackageDataSnapshot;Ljava/lang/Object;)V

    :goto_1a
    if-eqz v0, :cond_31

    .line 16838
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    .line 16839
    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 16842
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v2

    move-object v14, v7

    :goto_1b
    if-ge v5, v2, :cond_30

    .line 16844
    invoke-virtual {v0, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ActivityManagerService$StickyBroadcast;

    .line 16845
    invoke-virtual {v0, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/am/ActivityManagerService$StickyBroadcast;

    iget v6, v6, Lcom/android/server/am/ActivityManagerService$StickyBroadcast;->originalCallingUid:I

    if-nez v14, :cond_2f

    if-nez v21, :cond_2e

    if-eq v6, v3, :cond_2e

    .line 16849
    invoke-static {v6}, Landroid/app/ActivityManager;->canAccessUnexportedComponents(I)Z

    move-result v7

    if-eqz v7, :cond_2f

    .line 16851
    :cond_2e
    iget-object v7, v4, Lcom/android/server/am/ActivityManagerService$StickyBroadcast;->intent:Landroid/content/Intent;

    move-object v14, v7

    .line 16853
    :cond_2f
    iget-object v7, v4, Lcom/android/server/am/ActivityManagerService$StickyBroadcast;->intent:Landroid/content/Intent;

    invoke-virtual {v8, v7}, Lcom/android/server/am/ActivityManagerService;->broadcastQueueForIntent(Landroid/content/Intent;)Lcom/android/server/am/BroadcastQueue;

    move-result-object v7

    .line 16854
    new-instance v9, Lcom/android/server/am/BroadcastRecord;

    iget-object v10, v4, Lcom/android/server/am/ActivityManagerService$StickyBroadcast;->intent:Landroid/content/Intent;

    const/16 v26, 0x0

    const/16 v27, 0x0

    const/16 v28, 0x0

    const/16 v29, -0x1

    const/16 v30, -0x1

    const/16 v31, 0x0

    const/16 v32, 0x0

    const/16 v33, 0x0

    const/16 v34, 0x0

    const/16 v35, 0x0

    const/16 v36, -0x1

    iget-boolean v11, v4, Lcom/android/server/am/ActivityManagerService$StickyBroadcast;->deferUntilActive:Z

    .line 16856
    invoke-static {v11}, Landroid/app/BroadcastOptions;->makeWithDeferUntilActive(Z)Landroid/app/BroadcastOptions;

    move-result-object v37

    const/16 v39, 0x0

    const/16 v40, 0x0

    const/16 v41, 0x0

    const/16 v42, 0x0

    const/16 v43, 0x0

    const/16 v44, 0x0

    const/16 v45, 0x1

    const/16 v46, 0x1

    const/16 v47, -0x1

    sget-object v49, Landroid/app/BackgroundStartPrivileges;->NONE:Landroid/app/BackgroundStartPrivileges;

    const/16 v50, 0x0

    const/16 v51, 0x0

    iget v4, v4, Lcom/android/server/am/ActivityManagerService$StickyBroadcast;->originalCallingAppProcessState:I

    move-object/from16 v23, v9

    move-object/from16 v24, v7

    move-object/from16 v25, v10

    move-object/from16 v38, v1

    move/from16 v48, v6

    move/from16 v52, v4

    invoke-direct/range {v23 .. v52}, Lcom/android/server/am/BroadcastRecord;-><init>(Lcom/android/server/am/BroadcastQueue;Landroid/content/Intent;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;IIZLjava/lang/String;[Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ILandroid/app/BroadcastOptions;Ljava/util/List;Lcom/android/server/am/ProcessRecord;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;ZZZIILandroid/app/BackgroundStartPrivileges;ZLjava/util/function/BiFunction;I)V

    .line 16862
    invoke-virtual {v7, v9}, Lcom/android/server/am/BroadcastQueue;->enqueueBroadcastLocked(Lcom/android/server/am/BroadcastRecord;)V

    add-int/lit8 v5, v5, 0x1

    goto :goto_1b

    :cond_30
    move-object/from16 v22, v14

    .line 16866
    :cond_31
    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object v22

    :cond_32
    move-object v4, v12

    move/from16 p1, v15

    .line 16815
    :try_start_8
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Receiver requested to register for user "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move/from16 v3, p1

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, " was previously registered for user "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v1, v1, Lcom/android/server/am/ReceiverList;->userId:I

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " callerPackage is "

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_33
    move-object v4, v12

    .line 16810
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Receiver requested to register for pid "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, " was previously registered for pid "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v1, v1, Lcom/android/server/am/ReceiverList;->pid:I

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " callerPackage is "

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_34
    move v3, v11

    move-object v4, v12

    .line 16805
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Receiver requested to register for uid "

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, " was previously registered for uid "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v1, v1, Lcom/android/server/am/ReceiverList;->uid:I

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " callerPackage is "

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    :catchall_0
    move-exception v0

    goto :goto_1d

    :cond_35
    :goto_1c
    const/4 v7, 0x0

    .line 16772
    monitor-exit p0
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-object v7

    .line 16867
    :goto_1d
    :try_start_9
    monitor-exit p0
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :catchall_1
    move-exception v0

    .line 16721
    :try_start_a
    monitor-exit p0
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public registerStrictModeCallback(Landroid/os/IBinder;)V
    .locals 3

    .line 11184
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    .line 11185
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStrictModeCallbacks:Landroid/util/SparseArray;

    .line 11186
    invoke-static {p1}, Landroid/app/IUnsafeIntentStrictModeCallback$Stub;->asInterface(Landroid/os/IBinder;)Landroid/app/IUnsafeIntentStrictModeCallback;

    move-result-object v2

    .line 11185
    invoke-virtual {v1, v0, v2}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 11188
    :try_start_0
    new-instance v1, Lcom/android/server/am/ActivityManagerService$19;

    invoke-direct {v1, p0, v0}, Lcom/android/server/am/ActivityManagerService$19;-><init>(Lcom/android/server/am/ActivityManagerService;I)V

    const/4 v2, 0x0

    invoke-interface {p1, v1, v2}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    .line 11195
    :catch_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mStrictModeCallbacks:Landroid/util/SparseArray;

    invoke-virtual {p0, v0}, Landroid/util/SparseArray;->remove(I)V

    :goto_0
    return-void
.end method

.method public registerTaskStackListener(Landroid/app/ITaskStackListener;)V
    .locals 0

    .line 3341
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {p0, p1}, Lcom/android/server/wm/ActivityTaskManagerService;->registerTaskStackListener(Landroid/app/ITaskStackListener;)V

    return-void
.end method

.method public registerUidFrozenStateChangedCallback(Landroid/app/IUidFrozenStateChangedCallback;)V
    .locals 2

    const-string v0, "callback cannot be null"

    .line 9701
    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    const-string v0, "android.permission.PACKAGE_USAGE_STATS"

    const-string/jumbo v1, "registerUidFrozenStateChangedCallback()"

    .line 9702
    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 9704
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUidFrozenStateChangedCallbackList:Landroid/os/RemoteCallbackList;

    monitor-enter v0

    .line 9705
    :try_start_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mUidFrozenStateChangedCallbackList:Landroid/os/RemoteCallbackList;

    invoke-virtual {p0, p1}, Landroid/os/RemoteCallbackList;->register(Landroid/os/IInterface;)Z

    move-result p0

    if-nez p0, :cond_0

    const-string p0, "ActivityManager"

    const-string p1, "Failed to register with RemoteCallbackList!"

    .line 9707
    invoke-static {p0, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 9709
    :cond_0
    monitor-exit v0

    return-void

    :catchall_0
    move-exception p0

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw p0
.end method

.method public registerUidObserver(Landroid/app/IUidObserver;IILjava/lang/String;)V
    .locals 9

    .line 9597
    invoke-virtual {p0, p4}, Lcom/android/server/am/ActivityManagerService;->hasUsageStatsPermission(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_0

    const-string v0, "android.permission.PACKAGE_USAGE_STATS"

    const-string/jumbo v1, "registerUidObserver"

    .line 9598
    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 9601
    :cond_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mUidObserverController:Lcom/android/server/am/UidObserverController;

    .line 9602
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v7

    const/4 v8, 0x0

    move-object v3, p1

    move v4, p2

    move v5, p3

    move-object v6, p4

    .line 9601
    invoke-virtual/range {v2 .. v8}, Lcom/android/server/am/UidObserverController;->register(Landroid/app/IUidObserver;IILjava/lang/String;I[I)Landroid/os/IBinder;

    return-void
.end method

.method public registerUidObserverForUids(Landroid/app/IUidObserver;IILjava/lang/String;[I)Landroid/os/IBinder;
    .locals 9

    .line 9621
    invoke-virtual {p0, p4}, Lcom/android/server/am/ActivityManagerService;->hasUsageStatsPermission(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_0

    const-string v0, "android.permission.PACKAGE_USAGE_STATS"

    const-string/jumbo v1, "registerUidObserver"

    .line 9622
    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 9625
    :cond_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mUidObserverController:Lcom/android/server/am/UidObserverController;

    .line 9626
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v7

    move-object v3, p1

    move v4, p2

    move v5, p3

    move-object v6, p4

    move-object v8, p5

    .line 9625
    invoke-virtual/range {v2 .. v8}, Lcom/android/server/am/UidObserverController;->register(Landroid/app/IUidObserver;IILjava/lang/String;I[I)Landroid/os/IBinder;

    move-result-object p0

    return-object p0
.end method

.method public registerUserSwitchObserver(Landroid/app/IUserSwitchObserver;Ljava/lang/String;)V
    .locals 0

    .line 20311
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/UserController;->registerUserSwitchObserver(Landroid/app/IUserSwitchObserver;Ljava/lang/String;)V

    return-void
.end method

.method public removeApplicationStartInfoCompleteListener(I)V
    .locals 0

    .line 11817
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget-boolean p1, p1, Lcom/android/server/am/ActivityManagerConstants;->mFlagApplicationStartInfoEnabled:Z

    if-nez p1, :cond_0

    return-void

    :cond_0
    const-string/jumbo p1, "removeApplicationStartInfoCompleteListener"

    .line 11820
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    return-void
.end method

.method public removeContentProvider(Landroid/os/IBinder;Z)V
    .locals 0

    .line 8715
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/ContentProviderHelper;->removeContentProvider(Landroid/os/IBinder;Z)V

    return-void
.end method

.method public removeContentProviderExternal(Ljava/lang/String;Landroid/os/IBinder;)V
    .locals 3

    const-string/jumbo v0, "removeContentProviderExternal: "

    const-wide/16 v1, 0x40

    .line 8722
    invoke-static {v1, v2, v0, p1}, Lcom/android/server/am/ActivityManagerService;->traceBegin(JLjava/lang/String;Ljava/lang/String;)V

    .line 8724
    :try_start_0
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v0

    invoke-virtual {p0, p1, p2, v0}, Lcom/android/server/am/ActivityManagerService;->removeContentProviderExternalAsUser(Ljava/lang/String;Landroid/os/IBinder;I)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 8726
    invoke-static {v1, v2}, Landroid/os/Trace;->traceEnd(J)V

    return-void

    :catchall_0
    move-exception p0

    invoke-static {v1, v2}, Landroid/os/Trace;->traceEnd(J)V

    .line 8727
    throw p0
.end method

.method public removeContentProviderExternalAsUser(Ljava/lang/String;Landroid/os/IBinder;I)V
    .locals 3

    const-string/jumbo v0, "removeContentProviderExternalAsUser: "

    const-wide/16 v1, 0x40

    .line 8732
    invoke-static {v1, v2, v0, p1}, Lcom/android/server/am/ActivityManagerService;->traceBegin(JLjava/lang/String;Ljava/lang/String;)V

    .line 8734
    :try_start_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/am/ContentProviderHelper;->removeContentProviderExternalAsUser(Ljava/lang/String;Landroid/os/IBinder;I)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 8736
    invoke-static {v1, v2}, Landroid/os/Trace;->traceEnd(J)V

    return-void

    :catchall_0
    move-exception p0

    invoke-static {v1, v2}, Landroid/os/Trace;->traceEnd(J)V

    .line 8737
    throw p0
.end method

.method public removeLongLiveApp(Ljava/lang/String;)Z
    .locals 2

    .line 24224
    sget-boolean v0, Lcom/samsung/android/rune/CoreRune;->FW_DEDICATED_MEMORY:Z

    const/4 v1, 0x0

    if-nez v0, :cond_0

    return v1

    :cond_0
    const-string/jumbo v0, "removeLongLiveApp"

    .line 24228
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkLongLivePermissions(Ljava/lang/String;)V

    .line 24229
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 24230
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mExt:Lcom/android/server/am/ActivityManagerServiceExt;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActivityManagerServiceExt;->removeLongLivePackageLocked(Ljava/lang/String;)Z

    move-result p1

    if-eqz p1, :cond_1

    .line 24231
    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(I)V

    .line 24232
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    const/4 p0, 0x1

    return p0

    .line 24234
    :cond_1
    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v1

    :catchall_0
    move-exception p1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public final removeLruProcessLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 0

    .line 3360
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {p0, p1}, Lcom/android/server/am/ProcessList;->removeLruProcessLocked(Lcom/android/server/am/ProcessRecord;)V

    return-void
.end method

.method public removeOomAdjTargetLocked(Lcom/android/server/am/ProcessRecord;Z)V
    .locals 0

    .line 19535
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/OomAdjuster;->removeOomAdjTargetLocked(Lcom/android/server/am/ProcessRecord;Z)V

    return-void
.end method

.method public removePidLocked(ILcom/android/server/am/ProcessRecord;)Z
    .locals 2

    .line 1276
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v0

    .line 1277
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v1, p1, p2}, Lcom/android/server/am/ActivityManagerService$PidMap;->doRemoveInternal(ILcom/android/server/am/ProcessRecord;)Z

    move-result p2

    .line 1278
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    if-eqz p2, :cond_0

    .line 1280
    sget-object v0, Lcom/android/server/am/ActivityManagerService;->sActiveProcessInfoSelfLocked:Landroid/util/SparseArray;

    monitor-enter v0

    .line 1281
    :try_start_1
    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->remove(I)V

    .line 1282
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 1283
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {p0, p1}, Lcom/android/server/wm/ActivityTaskManagerInternal;->onProcessUnMapped(I)V

    goto :goto_0

    :catchall_0
    move-exception p0

    .line 1282
    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw p0

    :cond_0
    :goto_0
    return p2

    :catchall_1
    move-exception p0

    .line 1278
    :try_start_3
    monitor-exit v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    throw p0
.end method

.method public removeReceiverLocked(Lcom/android/server/am/ReceiverList;)V
    .locals 3

    .line 16912
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    iget-object v1, p1, Lcom/android/server/am/ReceiverList;->receiver:Landroid/content/IIntentReceiver;

    invoke-interface {v1}, Landroid/content/IIntentReceiver;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 16913
    invoke-virtual {p1}, Ljava/util/ArrayList;->size()I

    move-result v0

    add-int/lit8 v0, v0, -0x1

    :goto_0
    if-ltz v0, :cond_0

    .line 16914
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mReceiverResolver:Lcom/android/server/IntentResolver;

    invoke-virtual {p1, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/BroadcastFilter;

    invoke-virtual {v1, v2}, Lcom/android/server/IntentResolver;->removeFilter(Ljava/lang/Object;)V

    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    :cond_0
    return-void
.end method

.method public removeTask(I)Z
    .locals 0

    .line 8100
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {p0, p1}, Lcom/android/server/wm/ActivityTaskManagerService;->removeTask(I)Z

    move-result p0

    return p0
.end method

.method public removeUidFromObserver(Landroid/os/IBinder;Ljava/lang/String;I)V
    .locals 1

    .line 9661
    invoke-virtual {p0, p2}, Lcom/android/server/am/ActivityManagerService;->hasUsageStatsPermission(Ljava/lang/String;)Z

    move-result p2

    if-nez p2, :cond_0

    const-string p2, "android.permission.PACKAGE_USAGE_STATS"

    const-string/jumbo v0, "registerUidObserver"

    .line 9662
    invoke-virtual {p0, p2, v0}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 9665
    :cond_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mUidObserverController:Lcom/android/server/am/UidObserverController;

    invoke-virtual {p0, p1, p3}, Lcom/android/server/am/UidObserverController;->removeUidFromObserver(Landroid/os/IBinder;I)V

    return-void
.end method

.method public reportAbnormalUsage(II)V
    .locals 4

    .line 24618
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    .line 24619
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    const/16 v2, 0x3e8

    if-eq v1, v2, :cond_0

    if-eq v0, p1, :cond_0

    const-string p0, "ActivityManager"

    .line 24622
    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "PID mismatch: PID="

    invoke-virtual {p2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, ", CallingPid="

    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p0, p1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    return-void

    .line 24625
    :cond_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 24626
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getProcessRecordFromPidLocked(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    if-eqz v0, :cond_1

    const-string v1, "ActivityManager"

    .line 24628
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "excessive resource usage reported: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Lcom/android/server/am/ProcessRecord;->toShortString()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, ", type: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 24629
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAbnormalUsageService:Lcom/android/server/am/AbnormalUsageService;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v1, v2, v0, p2, p1}, Lcom/android/server/am/AbnormalUsageService;->processAbnormalUsage(Landroid/content/Context;Lcom/android/server/am/ProcessRecord;II)V

    goto :goto_0

    :cond_1
    const-string p2, "ActivityManager"

    .line 24631
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Invalid PID: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p2, p1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 24633
    :goto_0
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public reportCurWakefulnessUsageEvent()V
    .locals 2

    .line 9032
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWakefulness:Ljava/util/concurrent/atomic/AtomicInteger;

    invoke-virtual {v0}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    move-result v0

    const/4 v1, 0x1

    if-ne v0, v1, :cond_0

    const/16 v0, 0xf

    goto :goto_0

    :cond_0
    const/16 v0, 0x10

    :goto_0
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->reportGlobalUsageEvent(I)V

    return-void
.end method

.method public final reportDiedAppPid(Lcom/android/server/am/ProcessRecord;I)V
    .locals 0

    .line 24522
    invoke-static {}, Lcom/android/server/am/FreecessController;->getInstance()Lcom/android/server/am/FreecessController;

    move-result-object p0

    if-eqz p0, :cond_0

    invoke-static {}, Lcom/android/server/am/FreecessController;->getInstance()Lcom/android/server/am/FreecessController;

    move-result-object p0

    invoke-virtual {p0}, Lcom/android/server/am/FreecessController;->getFreecessEnabled()Z

    move-result p0

    if-eqz p0, :cond_0

    .line 24523
    invoke-static {}, Lcom/android/server/am/FreecessController;->getInstance()Lcom/android/server/am/FreecessController;

    move-result-object p0

    invoke-virtual {p0, p2}, Lcom/android/server/am/FreecessController;->releaseFreezedAppPid(I)V

    :cond_0
    return-void
.end method

.method public final reportDumpStarted()V
    .locals 1

    .line 24379
    sget-boolean p0, Lcom/android/server/am/MARsPolicyManager;->MARs_ENABLE:Z

    if-eqz p0, :cond_0

    invoke-static {}, Lcom/android/server/am/FreecessController;->getInstance()Lcom/android/server/am/FreecessController;

    move-result-object p0

    invoke-virtual {p0}, Lcom/android/server/am/FreecessController;->getFreecessEnabled()Z

    move-result p0

    if-eqz p0, :cond_0

    const-string p0, "MARsPolicyManager"

    const-string v0, "Receive dump started from dumpstate"

    .line 24380
    invoke-static {p0, v0}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 24381
    invoke-static {}, Lcom/android/server/am/FreecessController;->getInstance()Lcom/android/server/am/FreecessController;

    move-result-object p0

    const/4 v0, 0x0

    invoke-virtual {p0, v0}, Lcom/android/server/am/FreecessController;->setFreecessEnableForDump(Z)V

    :cond_0
    return-void
.end method

.method public reportGlobalUsageEvent(I)V
    .locals 6

    .line 9018
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v0}, Lcom/android/server/am/UserController;->getCurrentUserId()I

    move-result v0

    .line 9019
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    const-string v2, "android"

    invoke-virtual {v1, v2, v0, p1}, Landroid/app/usage/UsageStatsManagerInternal;->reportEvent(Ljava/lang/String;II)V

    .line 9020
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v1}, Lcom/android/server/am/UserController;->getCurrentProfileIds()[I

    move-result-object v1

    if-eqz v1, :cond_1

    .line 9022
    array-length v3, v1

    add-int/lit8 v3, v3, -0x1

    :goto_0
    if-ltz v3, :cond_1

    .line 9023
    aget v4, v1, v3

    if-ne v4, v0, :cond_0

    goto :goto_1

    .line 9026
    :cond_0
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    aget v5, v1, v3

    invoke-virtual {v4, v2, v5, p1}, Landroid/app/usage/UsageStatsManagerInternal;->reportEvent(Ljava/lang/String;II)V

    :goto_1
    add-int/lit8 v3, v3, -0x1

    goto :goto_0

    :cond_1
    return-void
.end method

.method public final reportLmkKillAtOrBelow(Ljava/io/PrintWriter;I)Z
    .locals 2

    const/4 p0, 0x0

    .line 13338
    invoke-static {p0, p2}, Lcom/android/server/am/ProcessList;->getLmkdKillCount(II)Ljava/lang/Integer;

    move-result-object v0

    if-eqz v0, :cond_0

    .line 13340
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "    kills at or below oom_adj "

    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p2, ": "

    invoke-virtual {p0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-virtual {p1, p0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    const/4 p0, 0x1

    :cond_0
    return p0
.end method

.method public final reportStartInstrumentationFailureLocked(Landroid/app/IInstrumentationWatcher;Landroid/content/ComponentName;Ljava/lang/String;)V
    .locals 3

    const-string v0, "ActivityManager"

    .line 18759
    invoke-static {v0, p3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    if-eqz p1, :cond_0

    .line 18761
    new-instance v0, Landroid/os/Bundle;

    invoke-direct {v0}, Landroid/os/Bundle;-><init>()V

    const-string v1, "id"

    const-string v2, "ActivityManagerService"

    .line 18762
    invoke-virtual {v0, v1, v2}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    const-string v1, "Error"

    .line 18763
    invoke-virtual {v0, v1, p3}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 18764
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mInstrumentationReporter:Lcom/android/server/am/InstrumentationReporter;

    const/4 p3, -0x1

    invoke-virtual {p0, p1, p2, p3, v0}, Lcom/android/server/am/InstrumentationReporter;->reportStatus(Landroid/app/IInstrumentationWatcher;Landroid/content/ComponentName;ILandroid/os/Bundle;)V

    :cond_0
    return-void
.end method

.method public reportUidFrozenStateChanged([I[I)V
    .locals 4

    .line 9772
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUidFrozenStateChangedCallbackList:Landroid/os/RemoteCallbackList;

    monitor-enter v0

    .line 9773
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUidFrozenStateChangedCallbackList:Landroid/os/RemoteCallbackList;

    invoke-virtual {v1}, Landroid/os/RemoteCallbackList;->beginBroadcast()I

    move-result v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    const/4 v2, 0x0

    :goto_0
    if-ge v2, v1, :cond_0

    .line 9776
    :try_start_1
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mUidFrozenStateChangedCallbackList:Landroid/os/RemoteCallbackList;

    invoke-virtual {v3, v2}, Landroid/os/RemoteCallbackList;->getBroadcastItem(I)Landroid/os/IInterface;

    move-result-object v3

    check-cast v3, Landroid/app/IUidFrozenStateChangedCallback;

    invoke-interface {v3, p1, p2}, Landroid/app/IUidFrozenStateChangedCallback;->onUidFrozenStateChanged([I[I)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :catch_0
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 9787
    :cond_0
    :try_start_2
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mUidFrozenStateChangedCallbackList:Landroid/os/RemoteCallbackList;

    invoke-virtual {p0}, Landroid/os/RemoteCallbackList;->finishBroadcast()V

    .line 9788
    monitor-exit v0

    return-void

    :catchall_0
    move-exception p0

    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw p0
.end method

.method public reportUidInfoMessageLocked(Ljava/lang/String;Ljava/lang/String;I)V
    .locals 1

    const-string p1, "ActivityManager"

    .line 3779
    invoke-static {p1, p2}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 3780
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjObserverLock:Ljava/lang/Object;

    monitor-enter p1

    .line 3781
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurOomAdjObserver:Lcom/android/server/am/ActivityManagerService$OomAdjObserver;

    if-eqz v0, :cond_0

    iget v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurOomAdjUid:I

    if-ne p3, v0, :cond_0

    .line 3782
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Landroid/os/Handler;

    const/16 p3, 0x46

    invoke-virtual {p0, p3, p2}, Landroid/os/Handler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object p0

    invoke-virtual {p0}, Landroid/os/Message;->sendToTarget()V

    .line 3784
    :cond_0
    monitor-exit p1

    return-void

    :catchall_0
    move-exception p0

    monitor-exit p1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw p0
.end method

.method public requestBugReport(I)V
    .locals 6

    const/4 v1, 0x0

    const/4 v2, 0x0

    const-wide/16 v4, 0x0

    move-object v0, p0

    move v3, p1

    .line 9341
    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->requestBugReportWithDescription(Ljava/lang/String;Ljava/lang/String;IJ)V

    return-void
.end method

.method public requestBugReportWithDescription(Ljava/lang/String;Ljava/lang/String;I)V
    .locals 6

    const-wide/16 v4, 0x0

    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move v3, p3

    .line 9351
    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->requestBugReportWithDescription(Ljava/lang/String;Ljava/lang/String;IJ)V

    return-void
.end method

.method public requestBugReportWithDescription(Ljava/lang/String;Ljava/lang/String;IJ)V
    .locals 7

    const/4 v6, 0x0

    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move v3, p3

    move-wide v4, p4

    .line 9361
    invoke-virtual/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->requestBugReportWithDescription(Ljava/lang/String;Ljava/lang/String;IJZ)V

    return-void
.end method

.method public requestBugReportWithDescription(Ljava/lang/String;Ljava/lang/String;IJZ)V
    .locals 4

    const/4 v0, 0x2

    if-eqz p3, :cond_5

    const/4 v1, 0x1

    if-eq p3, v1, :cond_4

    if-eq p3, v0, :cond_3

    const/4 v1, 0x3

    if-eq p3, v1, :cond_2

    const/4 v1, 0x4

    if-eq p3, v1, :cond_1

    const/4 v1, 0x5

    if-ne p3, v1, :cond_0

    const-string v1, "bugreportwifi"

    goto :goto_0

    .line 9390
    :cond_0
    new-instance p0, Ljava/lang/IllegalArgumentException;

    new-instance p1, Ljava/lang/StringBuilder;

    invoke-direct {p1}, Ljava/lang/StringBuilder;-><init>()V

    const-string p2, "Provided bugreport type is not correct, value: "

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p0

    :cond_1
    const-string v1, "bugreporttelephony"

    goto :goto_0

    :cond_2
    const-string v1, "bugreportwear"

    goto :goto_0

    :cond_3
    const-string v1, "bugreportremote"

    goto :goto_0

    :cond_4
    const-string v1, "bugreportplus"

    goto :goto_0

    :cond_5
    const-string v1, "bugreportfull"

    .line 9395
    :goto_0
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " requested by UID "

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    const-string v2, "ActivityManager"

    invoke-static {v2, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    const-string v1, "android.permission.DUMP"

    const-string/jumbo v3, "requestBugReport"

    .line 9396
    invoke-virtual {p0, v1, v3}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 9398
    invoke-static {p1}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v1

    if-nez v1, :cond_9

    .line 9399
    invoke-virtual {p1}, Ljava/lang/String;->length()I

    move-result v1

    const/16 v3, 0x64

    if-gt v1, v3, :cond_8

    .line 9404
    invoke-static {p2}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v1

    if-nez v1, :cond_7

    .line 9405
    invoke-virtual {p2}, Ljava/lang/String;->length()I

    move-result v1

    const/16 v3, 0x96

    if-gt v1, v3, :cond_6

    goto :goto_1

    .line 9408
    :cond_6
    new-instance p0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo p1, "shareDescription should be less than 150 characters"

    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 9411
    :cond_7
    :goto_1
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Bugreport notification title "

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, " description "

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v2, v1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_2

    .line 9402
    :cond_8
    new-instance p0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo p1, "shareTitle should be less than 100 characters"

    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 9415
    :cond_9
    :goto_2
    new-instance v1, Landroid/content/Intent;

    invoke-direct {v1}, Landroid/content/Intent;-><init>()V

    const-string v2, "com.android.internal.intent.action.BUGREPORT_REQUESTED"

    .line 9416
    invoke-virtual {v1, v2}, Landroid/content/Intent;->setAction(Ljava/lang/String;)Landroid/content/Intent;

    const-string v2, "com.android.shell"

    .line 9417
    invoke-virtual {v1, v2}, Landroid/content/Intent;->setPackage(Ljava/lang/String;)Landroid/content/Intent;

    const-string v2, "android.intent.extra.BUGREPORT_TYPE"

    .line 9418
    invoke-virtual {v1, v2, p3}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    const-string v2, "android.intent.extra.BUGREPORT_NONCE"

    .line 9419
    invoke-virtual {v1, v2, p4, p5}, Landroid/content/Intent;->putExtra(Ljava/lang/String;J)Landroid/content/Intent;

    const/high16 p4, 0x10000000

    .line 9420
    invoke-virtual {v1, p4}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    const/high16 p4, 0x1000000

    .line 9421
    invoke-virtual {v1, p4}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    const-string p4, "android.intent.extra.USE_CUSTOM_BUGREPORT"

    .line 9425
    invoke-virtual {v1, p4, p6}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Z)Landroid/content/Intent;

    if-eqz p1, :cond_a

    const-string p4, "android.intent.extra.TITLE"

    .line 9430
    invoke-virtual {v1, p4, p1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;

    :cond_a
    if-eqz p2, :cond_b

    const-string p1, "android.intent.extra.DESCRIPTION"

    .line 9433
    invoke-virtual {v1, p1, p2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;

    .line 9435
    :cond_b
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide p1

    if-ne p3, v0, :cond_c

    .line 9443
    :try_start_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    sget-object p3, Landroid/os/UserHandle;->SYSTEM:Landroid/os/UserHandle;

    invoke-virtual {p0, v1, p3}, Landroid/content/Context;->sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V

    goto :goto_3

    .line 9445
    :cond_c
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    .line 9446
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getCurrentUser()Landroid/content/pm/UserInfo;

    move-result-object p0

    invoke-virtual {p0}, Landroid/content/pm/UserInfo;->getUserHandle()Landroid/os/UserHandle;

    move-result-object p0

    .line 9445
    invoke-virtual {p3, v1, p0}, Landroid/content/Context;->sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 9449
    :goto_3
    invoke-static {p1, p2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return-void

    :catchall_0
    move-exception p0

    invoke-static {p1, p2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9450
    throw p0
.end method

.method public requestFullBugReport()V
    .locals 2

    const/4 v0, 0x0

    const/4 v1, 0x0

    .line 9495
    invoke-virtual {p0, v0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->requestBugReportWithDescription(Ljava/lang/String;Ljava/lang/String;I)V

    return-void
.end method

.method public requestInteractiveBugReport()V
    .locals 2

    const/4 v0, 0x0

    const/4 v1, 0x1

    .line 9476
    invoke-virtual {p0, v0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->requestBugReportWithDescription(Ljava/lang/String;Ljava/lang/String;I)V

    return-void
.end method

.method public requestInteractiveBugReportWithDescription(Ljava/lang/String;Ljava/lang/String;)V
    .locals 1

    const/4 v0, 0x1

    .line 9486
    invoke-virtual {p0, p1, p2, v0}, Lcom/android/server/am/ActivityManagerService;->requestBugReportWithDescription(Ljava/lang/String;Ljava/lang/String;I)V

    return-void
.end method

.method public requestRemoteBugReport(J)V
    .locals 6

    const/4 v1, 0x0

    const/4 v2, 0x0

    const/4 v3, 0x2

    move-object v0, p0

    move-wide v4, p1

    .line 9503
    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->requestBugReportWithDescription(Ljava/lang/String;Ljava/lang/String;IJ)V

    return-void
.end method

.method public requestSystemServerHeapDump()V
    .locals 3

    .line 9313
    sget-boolean v0, Landroid/os/Build;->IS_DEBUGGABLE:Z

    if-nez v0, :cond_0

    const-string p0, "ActivityManager"

    const-string/jumbo v0, "requestSystemServerHeapDump called on a user build"

    .line 9314
    invoke-static {p0, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    return-void

    .line 9317
    :cond_0
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    const/16 v1, 0x3e8

    if-ne v0, v1, :cond_2

    .line 9323
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v0

    .line 9324
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-static {}, Landroid/os/Process;->myPid()I

    move-result v2

    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v1

    .line 9325
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    if-nez v1, :cond_1

    const-string p0, "ActivityManager"

    .line 9327
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v1, "system process not in mPidsSelfLocked: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Landroid/os/Process;->myPid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {p0, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    return-void

    .line 9330
    :cond_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    iget-object v2, v0, Lcom/android/server/am/AppProfiler;->mProfilerLock:Ljava/lang/Object;

    monitor-enter v2

    .line 9331
    :try_start_1
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    iget-object v0, v1, Lcom/android/server/am/ProcessRecord;->mProfile:Lcom/android/server/am/ProcessProfileRecord;

    const/4 v1, 0x1

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/AppProfiler;->startHeapDumpLPf(Lcom/android/server/am/ProcessProfileRecord;Z)V

    .line 9332
    monitor-exit v2

    return-void

    :catchall_0
    move-exception p0

    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw p0

    :catchall_1
    move-exception p0

    .line 9325
    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    throw p0

    .line 9319
    :cond_2
    new-instance p0, Ljava/lang/SecurityException;

    const-string v0, "Only the system process is allowed to request a system heap dump"

    invoke-direct {p0, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p0
.end method

.method public requestTelephonyBugReport(Ljava/lang/String;Ljava/lang/String;)V
    .locals 1

    const/4 v0, 0x4

    .line 9458
    invoke-virtual {p0, p1, p2, v0}, Lcom/android/server/am/ActivityManagerService;->requestBugReportWithDescription(Ljava/lang/String;Ljava/lang/String;I)V

    return-void
.end method

.method public requestWifiBugReport(Ljava/lang/String;Ljava/lang/String;)V
    .locals 1

    const/4 v0, 0x5

    .line 9467
    invoke-virtual {p0, p1, p2, v0}, Lcom/android/server/am/ActivityManagerService;->requestBugReportWithDescription(Ljava/lang/String;Ljava/lang/String;I)V

    return-void
.end method

.method public requireAllowedAssociationsLocked(Ljava/lang/String;)V
    .locals 4

    .line 3019
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->ensureAllowedAssociations()V

    .line 3020
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAllowedAssociations:Landroid/util/ArrayMap;

    invoke-virtual {v0, p1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    if-nez v0, :cond_0

    .line 3021
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAllowedAssociations:Landroid/util/ArrayMap;

    new-instance v1, Lcom/android/server/am/ActivityManagerService$PackageAssociationInfo;

    new-instance v2, Landroid/util/ArraySet;

    invoke-direct {v2}, Landroid/util/ArraySet;-><init>()V

    const/4 v3, 0x0

    invoke-direct {v1, p0, p1, v2, v3}, Lcom/android/server/am/ActivityManagerService$PackageAssociationInfo;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/lang/String;Landroid/util/ArraySet;Z)V

    invoke-virtual {v0, p1, v1}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    :cond_0
    return-void
.end method

.method public resetAbnormalList()V
    .locals 1

    const-string v0, "android.permission.INTERACT_ACROSS_USERS_FULL"

    .line 24557
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_0

    .line 24559
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v0, "resetAbnormalList - permission is not granted. callingUid: "

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    const-string v0, "ActivityManager"

    invoke-static {v0, p0}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    return-void

    .line 24562
    :cond_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCpusetController:Lcom/android/server/am/ProcessCpusetController;

    if-eqz p0, :cond_1

    .line 24563
    invoke-virtual {p0}, Lcom/android/server/am/ProcessCpusetController;->resetAbnormalList()V

    :cond_1
    return-void
.end method

.method public resetAppErrors()V
    .locals 2

    const-string v0, "android.permission.RESET_APP_ERRORS"

    const-string/jumbo v1, "resetAppErrors"

    .line 23628
    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 23629
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mAppErrors:Lcom/android/server/am/AppErrors;

    invoke-virtual {p0}, Lcom/android/server/am/AppErrors;->resetState()V

    return-void
.end method

.method public resetDropboxRateLimiter()V
    .locals 0

    .line 22790
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mDropboxRateLimiter:Lcom/android/server/am/DropboxRateLimiter;

    invoke-virtual {p0}, Lcom/android/server/am/DropboxRateLimiter;->reset()V

    .line 22791
    invoke-static {}, Lcom/android/server/BootReceiver;->resetDropboxRateLimiter()V

    return-void
.end method

.method public resizeTask(ILandroid/graphics/Rect;I)V
    .locals 0

    .line 8090
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/wm/ActivityTaskManagerService;->resizeTask(ILandroid/graphics/Rect;I)V

    return-void
.end method

.method public restart()V
    .locals 4

    const-string v0, "android.permission.SET_ACTIVITY_WATCHER"

    .line 10366
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_0

    const-string v0, "ActivityManager"

    const-string v1, "Sending shutdown broadcast..."

    .line 10372
    invoke-static {v0, v1}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 10374
    new-instance v0, Lcom/android/server/am/ActivityManagerService$17;

    invoke-direct {v0, p0}, Lcom/android/server/am/ActivityManagerService$17;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    .line 10386
    new-instance v1, Landroid/content/Intent;

    const-string v2, "android.intent.action.ACTION_SHUTDOWN"

    invoke-direct {v1, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    const/high16 v2, 0x10000000

    .line 10387
    invoke-virtual {v1, v2}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    const-string v2, "android.intent.extra.SHUTDOWN_USERSPACE_ONLY"

    const/4 v3, 0x1

    .line 10388
    invoke-virtual {v1, v2, v3}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Z)Landroid/content/Intent;

    .line 10393
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0, p0, v1}, Landroid/content/BroadcastReceiver;->onReceive(Landroid/content/Context;Landroid/content/Intent;)V

    return-void

    .line 10368
    :cond_0
    new-instance p0, Ljava/lang/SecurityException;

    const-string v0, "Requires permission android.permission.SET_ACTIVITY_WATCHER"

    invoke-direct {p0, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p0
.end method

.method public restartUserInBackground(II)I
    .locals 0

    .line 22833
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/UserController;->restartUser(II)I

    move-result p0

    return p0
.end method

.method public restrict(IIZLjava/lang/String;I)Z
    .locals 6

    .line 24004
    invoke-static {}, Lcom/android/server/am/MARsPolicyManager;->getInstance()Lcom/android/server/am/MARsPolicyManager;

    move-result-object v0

    move v1, p1

    move v2, p2

    move v3, p3

    move-object v4, p4

    move v5, p5

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/MARsPolicyManager;->restrictBySEP(IIZLjava/lang/String;I)Z

    move-result p0

    return p0
.end method

.method public resumeAppSwitches()V
    .locals 0

    .line 9149
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {p0}, Lcom/android/server/wm/ActivityTaskManagerService;->resumeAppSwitches()V

    return-void
.end method

.method public final retrieveSettings()V
    .locals 6

    .line 10508
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v0

    .line 10509
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v1, v0}, Lcom/android/server/wm/ActivityTaskManagerService;->retrieveSettings(Landroid/content/ContentResolver;)V

    const-string v1, "debug_app"

    .line 10511
    invoke-static {v0, v1}, Landroid/provider/Settings$Global;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    const-string/jumbo v2, "wait_for_debugger"

    const/4 v3, 0x0

    .line 10512
    invoke-static {v0, v2, v3}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v2

    const/4 v4, 0x1

    if-eqz v2, :cond_0

    move v2, v4

    goto :goto_0

    :cond_0
    move v2, v3

    :goto_0
    const-string v5, "always_finish_activities"

    .line 10514
    invoke-static {v0, v5, v3}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v0

    if-eqz v0, :cond_1

    move v0, v4

    goto :goto_1

    :cond_1
    move v0, v3

    .line 10515
    :goto_1
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mHiddenApiBlacklist:Lcom/android/server/am/ActivityManagerService$HiddenApiSettings;

    invoke-virtual {v5}, Lcom/android/server/am/ActivityManagerService$HiddenApiSettings;->registerObserver()V

    .line 10516
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mPlatformCompat:Lcom/android/server/compat/PlatformCompat;

    invoke-virtual {v5}, Lcom/android/server/compat/PlatformCompat;->registerContentObserver()V

    .line 10518
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {v5}, Lcom/android/server/am/AppProfiler;->retrieveSettings()V

    .line 10521
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 10522
    :try_start_0
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    .line 10523
    iput-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z

    iput-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mWaitForDebugger:Z

    .line 10524
    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mAlwaysFinishActivities:Z

    .line 10526
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v0

    const v1, 0x1110110

    .line 10527
    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v1

    if-nez v1, :cond_2

    move v3, v4

    :cond_2
    const v1, 0x10e00d4

    .line 10529
    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getInteger(I)I

    move-result v1

    const v2, 0x11101bb

    .line 10531
    invoke-virtual {v0, v2}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v2

    .line 10533
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v4, v3, v1, v2}, Lcom/android/server/am/UserController;->setInitialConfig(ZIZ)V

    .line 10535
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 10536
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mAppErrors:Lcom/android/server/am/AppErrors;

    const v1, 0x10402cb

    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getString(I)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p0, v0}, Lcom/android/server/am/AppErrors;->loadAppsNotReportingCrashesFromConfig(Ljava/lang/String;)V

    return-void

    :catchall_0
    move-exception v0

    .line 10535
    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public revokeUriPermission(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/net/Uri;II)V
    .locals 3

    const-string/jumbo v0, "revokeUriPermission"

    .line 8019
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 8020
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 8021
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLOSP(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    if-eqz v0, :cond_3

    if-nez p3, :cond_0

    const-string p1, "ActivityManager"

    const-string/jumbo p2, "revokeUriPermission: null uri"

    .line 8028
    invoke-static {p1, p2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 8029
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 8032
    :cond_0
    :try_start_1
    invoke-static {p4}, Landroid/content/Intent;->isAccessUriMode(I)Z

    move-result p1

    if-nez p1, :cond_1

    .line 8033
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 8036
    :cond_1
    :try_start_2
    invoke-virtual {p3}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;

    move-result-object p1

    .line 8037
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    const/high16 v2, 0xc0000

    invoke-virtual {v1, p1, p5, v2}, Lcom/android/server/am/ContentProviderHelper;->getProviderInfoLocked(Ljava/lang/String;II)Landroid/content/pm/ProviderInfo;

    move-result-object p1

    if-nez p1, :cond_2

    const-string p1, "ActivityManager"

    .line 8040
    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string p4, "No content provider found for permission revoke: "

    invoke-virtual {p2, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 8041
    invoke-virtual {p3}, Landroid/net/Uri;->toSafeString()Ljava/lang/String;

    move-result-object p3

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    .line 8040
    invoke-static {p1, p2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 8042
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 8045
    :cond_2
    :try_start_3
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mUgmInternal:Lcom/android/server/uri/UriGrantsManagerInternal;

    iget v0, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    new-instance v1, Lcom/android/server/uri/GrantUri;

    invoke-direct {v1, p5, p3, p4}, Lcom/android/server/uri/GrantUri;-><init>(ILandroid/net/Uri;I)V

    invoke-interface {p1, p2, v0, v1, p4}, Lcom/android/server/uri/UriGrantsManagerInternal;->revokeUriPermission(Ljava/lang/String;ILcom/android/server/uri/GrantUri;I)V

    .line 8047
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 8023
    :cond_3
    :try_start_4
    new-instance p2, Ljava/lang/SecurityException;

    new-instance p4, Ljava/lang/StringBuilder;

    invoke-direct {p4}, Ljava/lang/StringBuilder;-><init>()V

    const-string p5, "Unable to find app for caller "

    invoke-virtual {p4, p5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string p1, " when revoking permission to uri "

    invoke-virtual {p4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p4, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p2, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p2

    :catchall_0
    move-exception p1

    .line 8047
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public final rotateBroadcastStatsIfNeededLocked()V
    .locals 7

    .line 18171
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v0

    .line 18172
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mCurBroadcastStats:Lcom/android/server/am/BroadcastStats;

    if-eqz v2, :cond_0

    iget-wide v3, v2, Lcom/android/server/am/BroadcastStats;->mStartRealtime:J

    const-wide/32 v5, 0x5265c00

    add-long/2addr v3, v5

    cmp-long v0, v3, v0

    if-gez v0, :cond_2

    .line 18174
    :cond_0
    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLastBroadcastStats:Lcom/android/server/am/BroadcastStats;

    if-eqz v2, :cond_1

    .line 18176
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v0

    iput-wide v0, v2, Lcom/android/server/am/BroadcastStats;->mEndRealtime:J

    .line 18177
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLastBroadcastStats:Lcom/android/server/am/BroadcastStats;

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v1

    iput-wide v1, v0, Lcom/android/server/am/BroadcastStats;->mEndUptime:J

    .line 18179
    :cond_1
    new-instance v0, Lcom/android/server/am/BroadcastStats;

    invoke-direct {v0}, Lcom/android/server/am/BroadcastStats;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurBroadcastStats:Lcom/android/server/am/BroadcastStats;

    :cond_2
    return-void
.end method

.method public final runInBackgroundDisabled(I)V
    .locals 1

    .line 19655
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 19656
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ProcessList;->getUidRecordLOSP(I)Lcom/android/server/am/UidRecord;

    move-result-object v0

    if-eqz v0, :cond_0

    .line 19659
    invoke-virtual {v0}, Lcom/android/server/am/UidRecord;->isIdle()Z

    move-result p1

    if-eqz p1, :cond_1

    .line 19660
    invoke-virtual {v0}, Lcom/android/server/am/UidRecord;->getUid()I

    move-result p1

    invoke-virtual {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->doStopUidLocked(ILcom/android/server/am/UidRecord;)V

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    .line 19664
    invoke-virtual {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->doStopUidLocked(ILcom/android/server/am/UidRecord;)V

    .line 19666
    :cond_1
    :goto_0
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public scheduleApplicationInfoChanged(Ljava/util/List;I)V
    .locals 2

    const-string v0, "android.permission.CHANGE_CONFIGURATION"

    const-string/jumbo v1, "scheduleApplicationInfoChanged()"

    .line 22838
    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    const-string v0, "framework-res"

    .line 22846
    invoke-interface {p1, v0}, Ljava/util/List;->contains(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_0

    .line 22847
    invoke-interface {p1, v0}, Ljava/util/List;->remove(Ljava/lang/Object;)Z

    const-string v0, "android"

    .line 22848
    invoke-interface {p1, v0}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    .line 22851
    :goto_0
    invoke-virtual {p0, p1, p2, v0}, Lcom/android/server/am/ActivityManagerService;->scheduleApplicationInfoChanged(Ljava/util/List;IZ)V

    return-void
.end method

.method public final scheduleApplicationInfoChanged(Ljava/util/List;IZ)V
    .locals 7

    .line 22856
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    :try_start_0
    const-string v2, "android"

    .line 22858
    invoke-interface {p1, v2}, Ljava/util/List;->contains(Ljava/lang/Object;)Z

    move-result v2

    .line 22859
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    .line 22860
    :try_start_1
    invoke-virtual {p0, p1, v2, p2, p3}, Lcom/android/server/am/ActivityManagerService;->updateApplicationInfoLOSP(Ljava/util/List;ZIZ)V

    .line 22862
    monitor-exit v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 22867
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    .line 22868
    :try_start_3
    invoke-interface {p1}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object p3

    :cond_0
    :goto_0
    invoke-interface {p3}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_1

    invoke-interface {p3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/lang/String;
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 22870
    :try_start_4
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v4

    const-wide/16 v5, 0x400

    .line 22871
    invoke-interface {v4, v3, v5, v6, p2}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;JI)Landroid/content/pm/ApplicationInfo;

    move-result-object v4

    if-eqz v4, :cond_0

    .line 22873
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v5, v4}, Lcom/android/server/am/ActiveServices;->updateServiceApplicationInfoLocked(Landroid/content/pm/ApplicationInfo;)V
    :try_end_4
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_0
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    goto :goto_0

    :catch_0
    :try_start_5
    const-string v4, "ActivityManager"

    const-string v5, "Failed to update %s ApplicationInfo"

    .line 22876
    filled-new-array {v3}, [Ljava/lang/Object;

    move-result-object v3

    invoke-static {v5, v3}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v3

    invoke-static {v4, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    .line 22879
    :cond_1
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    :try_start_6
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 22883
    const-class p0, Landroid/appwidget/AppWidgetManagerInternal;

    invoke-static {p0}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object p0

    check-cast p0, Landroid/appwidget/AppWidgetManagerInternal;

    if-eqz p0, :cond_2

    .line 22886
    new-instance p3, Ljava/util/HashSet;

    invoke-direct {p3, p1}, Ljava/util/HashSet;-><init>(Ljava/util/Collection;)V

    invoke-virtual {p0, p3, p2, v2}, Landroid/appwidget/AppWidgetManagerInternal;->applyResourceOverlaysToWidgets(Ljava/util/Set;IZ)V
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_2

    .line 22890
    :cond_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return-void

    :catchall_0
    move-exception p1

    .line 22879
    :try_start_7
    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    :try_start_8
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_2

    :catchall_1
    move-exception p0

    .line 22862
    :try_start_9
    monitor-exit v3
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_1

    :try_start_a
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p0
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_2

    :catchall_2
    move-exception p0

    .line 22890
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 22891
    throw p0
.end method

.method public scheduleBinderHeavyHitterAutoSampler()V
    .locals 2

    .line 22976
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v1, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda28;

    invoke-direct {v1, p0}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda28;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-virtual {v0, v1}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    return-void
.end method

.method public final scheduleCanceledResultTo(Lcom/android/server/am/ProcessRecord;Landroid/content/IIntentReceiver;Landroid/content/Intent;ILandroid/app/BroadcastOptions;ILjava/lang/String;)V
    .locals 16

    move-object/from16 v1, p1

    if-nez p2, :cond_0

    return-void

    :cond_0
    const/4 v0, 0x0

    if-eqz v1, :cond_1

    .line 18116
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ProcessRecord;->getOnewayThread()Landroid/app/IApplicationThread;

    move-result-object v2

    goto :goto_0

    :cond_1
    move-object v2, v0

    :goto_0
    if-eqz v2, :cond_5

    const/4 v15, 0x1

    if-eqz p5, :cond_2

    .line 18119
    :try_start_0
    invoke-virtual/range {p5 .. p5}, Landroid/app/BroadcastOptions;->isShareIdentityEnabled()Z

    move-result v3

    if-eqz v3, :cond_2

    move v3, v15

    goto :goto_1

    :catch_0
    move-exception v0

    goto :goto_4

    :cond_2
    const/4 v3, 0x0

    :goto_1
    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x1

    .line 18120
    iget-object v4, v1, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    .line 18122
    invoke-virtual {v4}, Lcom/android/server/am/ProcessStateRecord;->getReportedProcState()I

    move-result v12

    if-eqz v3, :cond_3

    move/from16 v13, p6

    goto :goto_2

    :cond_3
    const/4 v4, -0x1

    move v13, v4

    :goto_2
    if-eqz v3, :cond_4

    move-object/from16 v14, p7

    goto :goto_3

    :cond_4
    move-object v14, v0

    :goto_3
    move-object/from16 v3, p2

    move-object/from16 v4, p3

    move/from16 v11, p4

    .line 18120
    invoke-interface/range {v2 .. v14}, Landroid/app/IApplicationThread;->scheduleRegisteredReceiver(Landroid/content/IIntentReceiver;Landroid/content/Intent;ILjava/lang/String;Landroid/os/Bundle;ZZZIIILjava/lang/String;)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_5

    .line 18126
    :goto_4
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Failed to schedule result of "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-object/from16 v3, p3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v3, " via "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v3, ": "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const/16 v2, 0xd

    const/16 v3, 0x1a

    const-string v4, "Can\'t schedule resultTo"

    .line 18128
    invoke-virtual {v1, v4, v2, v3, v15}, Lcom/android/server/am/ProcessRecord;->killLocked(Ljava/lang/String;IIZ)V

    const-string v1, "ActivityManager"

    .line 18130
    invoke-static {v1, v0}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    :cond_5
    :goto_5
    return-void
.end method

.method public schedulePendingSystemServerWtfs(Ljava/util/LinkedList;)V
    .locals 2

    .line 11347
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v1, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda25;

    invoke-direct {v1, p0, p1}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda25;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/util/LinkedList;)V

    invoke-virtual {v0, v1}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    return-void
.end method

.method public scheduleUpdateBinderHeavyHitterWatcherConfig()V
    .locals 2

    .line 22938
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v1, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda27;

    invoke-direct {v1, p0}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda27;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-virtual {v0, v1}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    return-void
.end method

.method public sendIdleJobTrigger()V
    .locals 17

    const-string v0, "android.permission.SET_ACTIVITY_WATCHER"

    move-object/from16 v1, p0

    .line 10489
    invoke-virtual {v1, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_0

    .line 10495
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v15

    .line 10497
    :try_start_0
    new-instance v0, Landroid/content/Intent;

    const-string v2, "com.android.server.ACTION_TRIGGER_IDLE"

    invoke-direct {v0, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    const-string v2, "android"

    .line 10498
    invoke-virtual {v0, v2}, Landroid/content/Intent;->setPackage(Ljava/lang/String;)Landroid/content/Intent;

    move-result-object v0

    const/high16 v2, 0x40000000    # 2.0f

    .line 10499
    invoke-virtual {v0, v2}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    move-result-object v3

    const/4 v2, 0x0

    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, -0x1

    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v13, 0x0

    const/4 v14, -0x1

    move-object/from16 v1, p0

    .line 10500
    invoke-virtual/range {v1 .. v14}, Lcom/android/server/am/ActivityManagerService;->broadcastIntent(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZI)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 10503
    invoke-static/range {v15 .. v16}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return-void

    :catchall_0
    move-exception v0

    invoke-static/range {v15 .. v16}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 10504
    throw v0

    .line 10491
    :cond_0
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires permission android.permission.SET_ACTIVITY_WATCHER"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public sendIntentSender(Landroid/app/IApplicationThread;Landroid/content/IIntentSender;Landroid/os/IBinder;ILandroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;Ljava/lang/String;Landroid/os/Bundle;)I
    .locals 12

    const/4 v10, -0x1

    const/4 v11, -0x1

    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move-object v3, p3

    move/from16 v4, p4

    move-object/from16 v5, p5

    move-object/from16 v6, p6

    move-object/from16 v7, p7

    move-object/from16 v8, p8

    move-object/from16 v9, p9

    .line 6565
    invoke-virtual/range {v0 .. v11}, Lcom/android/server/am/ActivityManagerService;->sendIntentSender(Landroid/app/IApplicationThread;Landroid/content/IIntentSender;Landroid/os/IBinder;ILandroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;Ljava/lang/String;Landroid/os/Bundle;II)I

    move-result v0

    return v0
.end method

.method public sendIntentSender(Landroid/app/IApplicationThread;Landroid/content/IIntentSender;Landroid/os/IBinder;ILandroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;Ljava/lang/String;Landroid/os/Bundle;II)I
    .locals 31

    move-object/from16 v0, p2

    .line 6574
    instance-of v1, v0, Lcom/android/server/am/PendingIntentRecord;

    if-eqz v1, :cond_1

    .line 6575
    move-object v2, v0

    check-cast v2, Lcom/android/server/am/PendingIntentRecord;

    .line 6580
    iget-object v0, v2, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    .line 6581
    const-class v1, Lcom/android/server/pm/UserManagerInternal;

    .line 6582
    invoke-static {v1}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/pm/UserManagerInternal;

    .line 6583
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v14

    .line 6584
    invoke-static {}, Landroid/os/UserManager;->isVisibleBackgroundUsersEnabled()Z

    move-result v3

    if-eqz v3, :cond_0

    iget v3, v0, Lcom/android/server/am/PendingIntentRecord$Key;->userId:I

    const/4 v4, -0x2

    if-ne v3, v4, :cond_0

    if-eqz v14, :cond_0

    .line 6587
    invoke-virtual {v1, v14}, Lcom/android/server/pm/UserManagerInternal;->isUserVisible(I)Z

    move-result v1

    if-eqz v1, :cond_0

    .line 6588
    invoke-static {v14}, Lcom/android/server/am/EventLogTags;->writeAmIntentSenderRedirectUser(I)V

    .line 6589
    new-instance v1, Lcom/android/server/am/PendingIntentRecord$Key;

    iget v4, v0, Lcom/android/server/am/PendingIntentRecord$Key;->type:I

    iget-object v5, v0, Lcom/android/server/am/PendingIntentRecord$Key;->packageName:Ljava/lang/String;

    iget-object v6, v0, Lcom/android/server/am/PendingIntentRecord$Key;->featureId:Ljava/lang/String;

    iget-object v7, v0, Lcom/android/server/am/PendingIntentRecord$Key;->activity:Landroid/os/IBinder;

    iget-object v8, v0, Lcom/android/server/am/PendingIntentRecord$Key;->who:Ljava/lang/String;

    iget v9, v0, Lcom/android/server/am/PendingIntentRecord$Key;->requestCode:I

    iget-object v10, v0, Lcom/android/server/am/PendingIntentRecord$Key;->allIntents:[Landroid/content/Intent;

    iget-object v11, v0, Lcom/android/server/am/PendingIntentRecord$Key;->allResolvedTypes:[Ljava/lang/String;

    iget v12, v0, Lcom/android/server/am/PendingIntentRecord$Key;->flags:I

    iget-object v13, v0, Lcom/android/server/am/PendingIntentRecord$Key;->options:Lcom/android/server/wm/SafeActivityOptions;

    move-object v3, v1

    invoke-direct/range {v3 .. v14}, Lcom/android/server/am/PendingIntentRecord$Key;-><init>(ILjava/lang/String;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;I[Landroid/content/Intent;[Ljava/lang/String;ILcom/android/server/wm/SafeActivityOptions;I)V

    .line 6595
    new-instance v15, Lcom/android/server/am/PendingIntentRecord;

    iget-object v0, v2, Lcom/android/server/am/PendingIntentRecord;->controller:Lcom/android/server/am/PendingIntentController;

    iget v2, v2, Lcom/android/server/am/PendingIntentRecord;->uid:I

    invoke-direct {v15, v0, v1, v2}, Lcom/android/server/am/PendingIntentRecord;-><init>(Lcom/android/server/am/PendingIntentController;Lcom/android/server/am/PendingIntentRecord$Key;I)V

    const/16 v23, 0x0

    const/16 v24, 0x0

    const/16 v25, 0x0

    const/16 v26, 0x0

    const/16 v27, 0x0

    move-object/from16 v16, p1

    move/from16 v17, p4

    move-object/from16 v18, p5

    move-object/from16 v19, p6

    move-object/from16 v20, p3

    move-object/from16 v21, p7

    move-object/from16 v22, p8

    move-object/from16 v28, p9

    move/from16 v29, p10

    move/from16 v30, p11

    .line 6600
    invoke-virtual/range {v15 .. v30}, Lcom/android/server/am/PendingIntentRecord;->sendInner(Landroid/app/IApplicationThread;ILandroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Landroid/content/IIntentReceiver;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IIILandroid/os/Bundle;II)I

    move-result v0

    return v0

    :cond_0
    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v13, 0x0

    const/4 v14, 0x0

    move-object/from16 v3, p1

    move/from16 v4, p4

    move-object/from16 v5, p5

    move-object/from16 v6, p6

    move-object/from16 v7, p3

    move-object/from16 v8, p7

    move-object/from16 v9, p8

    move-object/from16 v15, p9

    move/from16 v16, p10

    move/from16 v17, p11

    .line 6612
    invoke-virtual/range {v2 .. v17}, Lcom/android/server/am/PendingIntentRecord;->sendInner(Landroid/app/IApplicationThread;ILandroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Landroid/content/IIntentReceiver;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IIILandroid/os/Bundle;II)I

    move-result v0

    return v0

    :cond_1
    const-string v1, "ActivityManager"

    if-nez p5, :cond_2

    const-string v2, "Can\'t use null intent with direct IIntentSender call"

    .line 6626
    invoke-static {v1, v2}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 6627
    new-instance v2, Landroid/content/Intent;

    const-string v3, "android.intent.action.MAIN"

    invoke-direct {v2, v3}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    move-object v9, v2

    goto :goto_0

    :cond_2
    move-object/from16 v9, p5

    :goto_0
    if-eqz p3, :cond_3

    .line 6631
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    .line 6633
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v3
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 6635
    :try_start_1
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v5

    invoke-interface {v5, v2}, Landroid/content/pm/IPackageManager;->getNameForUid(I)Ljava/lang/String;

    move-result-object v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 6637
    :try_start_2
    invoke-static {v3, v4}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6639
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Send a non-null allowlistToken to a non-PI target. Calling package: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "; intent: "

    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v2, "; options: "

    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-object/from16 v8, p9

    invoke-virtual {v3, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1

    :catchall_0
    move-exception v0

    .line 6637
    invoke-static {v3, v4}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6638
    throw v0

    :cond_3
    move-object/from16 v8, p9

    :goto_1
    const/4 v5, 0x0

    const/4 v6, 0x0

    move-object/from16 v1, p2

    move/from16 v2, p4

    move-object v3, v9

    move-object/from16 v4, p6

    move-object/from16 v7, p8

    move-object/from16 v8, p9

    .line 6643
    invoke-interface/range {v1 .. v8}, Landroid/content/IIntentSender;->send(ILandroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Landroid/content/IIntentReceiver;Ljava/lang/String;Landroid/os/Bundle;)V
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0

    :catch_0
    if-eqz p7, :cond_4

    const/4 v0, 0x0

    const/4 v1, 0x0

    const/4 v2, 0x0

    const/4 v3, 0x0

    const/4 v4, 0x0

    .line 6654
    :try_start_3
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v5

    move-object/from16 p0, p7

    move-object/from16 p1, v9

    move/from16 p2, v0

    move-object/from16 p3, v1

    move-object/from16 p4, v2

    move/from16 p5, v3

    move/from16 p6, v4

    move/from16 p7, v5

    .line 6653
    invoke-interface/range {p0 .. p7}, Landroid/content/IIntentReceiver;->performReceive(Landroid/content/Intent;ILjava/lang/String;Landroid/os/Bundle;ZZI)V
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_1

    :catch_1
    :cond_4
    const/4 v0, 0x0

    return v0
.end method

.method public final sendPackageBroadcastLocked(I[Ljava/lang/String;I)V
    .locals 0

    .line 16919
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/am/ProcessList;->sendPackageBroadcastLocked(I[Ljava/lang/String;I)V

    return-void
.end method

.method public serviceDoneExecuting(Landroid/os/IBinder;III)V
    .locals 7

    .line 16177
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 16178
    :try_start_0
    instance-of v0, p1, Lcom/android/server/am/ServiceRecord;

    if-eqz v0, :cond_0

    .line 16182
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    move-object v2, p1

    check-cast v2, Lcom/android/server/am/ServiceRecord;

    const/4 v6, 0x0

    move v3, p2

    move v4, p3

    move v5, p4

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActiveServices;->serviceDoneExecutingLocked(Lcom/android/server/am/ServiceRecord;IIIZ)V

    .line 16183
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :cond_0
    :try_start_1
    const-string p2, "ActivityManager"

    .line 16179
    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo p4, "serviceDoneExecuting: Invalid service token="

    invoke-virtual {p3, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p2, p1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 16180
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string p2, "Invalid service token"

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    :catchall_0
    move-exception p1

    .line 16183
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public setActivityController(Landroid/app/IActivityController;Z)V
    .locals 1

    if-eqz p1, :cond_0

    .line 9279
    invoke-interface {p1}, Landroid/app/IActivityController;->asBinder()Landroid/os/IBinder;

    move-result-object v0

    invoke-static {v0}, Landroid/os/Binder;->allowBlocking(Landroid/os/IBinder;)Landroid/os/IBinder;

    .line 9281
    :cond_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {p0, p1, p2}, Lcom/android/server/wm/ActivityTaskManagerService;->setActivityController(Landroid/app/IActivityController;Z)V

    return-void
.end method

.method public setActivityLocusContext(Landroid/content/ComponentName;Landroid/content/LocusId;Landroid/os/IBinder;)V
    .locals 6

    .line 23566
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 23567
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v1

    .line 23568
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal;

    move-result-object v2

    invoke-virtual {p1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v3

    const-wide/16 v4, 0x0

    invoke-virtual {v2, v3, v4, v5, v1}, Landroid/content/pm/PackageManagerInternal;->getPackageUid(Ljava/lang/String;JI)I

    move-result v2

    if-ne v2, v0, :cond_1

    .line 23573
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v0, p2, p3}, Lcom/android/server/wm/ActivityTaskManagerService;->setLocusId(Landroid/content/LocusId;Landroid/os/IBinder;)V

    .line 23574
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    if-eqz v0, :cond_0

    .line 23575
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    invoke-virtual {p0, p1, v1, p2, p3}, Landroid/app/usage/UsageStatsManagerInternal;->reportLocusUpdate(Landroid/content/ComponentName;ILandroid/content/LocusId;Landroid/os/IBinder;)V

    :cond_0
    return-void

    .line 23570
    :cond_1
    new-instance p0, Ljava/lang/SecurityException;

    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string p3, "Calling uid "

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p3, " cannot set locusIdfor package "

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 23571
    invoke-virtual {p1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object p1

    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p0, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p0
.end method

.method public setAgentApp(Ljava/lang/String;Ljava/lang/String;)V
    .locals 1

    const-string v0, "android.permission.SET_ACTIVITY_WATCHER"

    .line 9212
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_0

    .line 9218
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    iget-object v0, v0, Lcom/android/server/am/AppProfiler;->mProfilerLock:Ljava/lang/Object;

    monitor-enter v0

    .line 9219
    :try_start_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/AppProfiler;->setAgentAppLPf(Ljava/lang/String;Ljava/lang/String;)V

    .line 9220
    monitor-exit v0

    return-void

    :catchall_0
    move-exception p0

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw p0

    .line 9214
    :cond_0
    new-instance p0, Ljava/lang/SecurityException;

    const-string p1, "Requires permission android.permission.SET_ACTIVITY_WATCHER"

    invoke-direct {p0, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p0
.end method

.method public setAlwaysFinish(Z)V
    .locals 5

    const-string v0, "android.permission.SET_ALWAYS_FINISH"

    const-string/jumbo v1, "setAlwaysFinish()"

    .line 9259
    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 9262
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 9264
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    .line 9265
    invoke-virtual {v2}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v2

    const-string v3, "always_finish_activities"

    if-eqz p1, :cond_0

    const/4 v4, 0x1

    goto :goto_0

    :cond_0
    const/4 v4, 0x0

    .line 9264
    :goto_0
    invoke-static {v2, v3, v4}, Landroid/provider/Settings$Global;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z

    .line 9268
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 9269
    :try_start_1
    iput-boolean p1, p0, Lcom/android/server/am/ActivityManagerService;->mAlwaysFinishActivities:Z

    .line 9270
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 9272
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return-void

    :catchall_0
    move-exception p1

    .line 9270
    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    :catchall_1
    move-exception p0

    .line 9272
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9273
    throw p0
.end method

.method public final setAppIdTempAllowlistStateLSP(IZ)V
    .locals 0

    .line 19804
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/OomAdjuster;->setAppIdTempAllowlistStateLSP(IZ)V

    return-void
.end method

.method public final setAppLaunchFlag(Z)V
    .locals 0

    .line 1356
    iput-boolean p1, p0, Lcom/android/server/am/ActivityManagerService;->isNowAppLaunching:Z

    return-void
.end method

.method public setAppOpsPolicy(Landroid/app/AppOpsManagerInternal$CheckOpsDelegate;)V
    .locals 0

    .line 2428
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    invoke-virtual {p0, p1}, Lcom/android/server/appop/AppOpsService;->setAppOpsPolicy(Landroid/app/AppOpsManagerInternal$CheckOpsDelegate;)V

    return-void
.end method

.method public setApplicationStartInfoCompleteListener(Landroid/app/IApplicationStartInfoCompleteListener;I)V
    .locals 0

    .line 11807
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget-boolean p1, p1, Lcom/android/server/am/ActivityManagerConstants;->mFlagApplicationStartInfoEnabled:Z

    if-nez p1, :cond_0

    return-void

    :cond_0
    const-string/jumbo p1, "setApplicationStartInfoCompleteListener"

    .line 11810
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    return-void
.end method

.method public setBackgroundRestrictionLevel(Ljava/lang/String;IIIII)V
    .locals 15

    move-object v0, p0

    .line 22674
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    const/16 v2, 0x3e8

    if-eq v1, v2, :cond_1

    if-eqz v1, :cond_1

    const/16 v2, 0x7d0

    if-ne v1, v2, :cond_0

    goto :goto_0

    .line 22676
    :cond_0
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "No permission to change app restriction level"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 22679
    :cond_1
    :goto_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v1

    .line 22681
    :try_start_0
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    .line 22682
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v4

    move-object/from16 v7, p1

    move/from16 v6, p3

    .line 22681
    invoke-virtual {v3, v7, v6, v4, v5}, Landroid/app/usage/UsageStatsManagerInternal;->getAppStandbyBucket(Ljava/lang/String;IJ)I

    move-result v11

    .line 22683
    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mAppRestrictionController:Lcom/android/server/am/AppRestrictionController;

    const/4 v10, 0x0

    const/4 v12, 0x1

    move-object/from16 v7, p1

    move/from16 v8, p2

    move/from16 v9, p4

    move/from16 v13, p5

    move/from16 v14, p6

    invoke-virtual/range {v6 .. v14}, Lcom/android/server/am/AppRestrictionController;->applyRestrictionLevel(Ljava/lang/String;IILcom/android/server/am/AppRestrictionController$TrackerInfo;IZII)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 22687
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return-void

    :catchall_0
    move-exception v0

    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 22688
    throw v0
.end method

.method public setContentCaptureManager(Lcom/android/server/contentcapture/ContentCaptureManagerInternal;)V
    .locals 0

    .line 2414
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mContentCaptureService:Lcom/android/server/contentcapture/ContentCaptureManagerInternal;

    return-void
.end method

.method public setDebugApp(Ljava/lang/String;ZZ)V
    .locals 1

    const/4 v0, 0x0

    .line 9154
    invoke-virtual {p0, p1, p2, p3, v0}, Lcom/android/server/am/ActivityManagerService;->setDebugApp(Ljava/lang/String;ZZZ)V

    return-void
.end method

.method public final setDebugApp(Ljava/lang/String;ZZZ)V
    .locals 14

    move-object v11, p0

    move-object v0, p1

    move/from16 v1, p2

    const-string v2, "android.permission.SET_DEBUG_APP"

    const-string/jumbo v3, "setDebugApp()"

    .line 9159
    invoke-virtual {p0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 9162
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v12

    const/4 v2, 0x1

    const/4 v3, 0x0

    if-eqz p3, :cond_1

    .line 9168
    :try_start_0
    iget-object v4, v11, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v4}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v4

    const-string v5, "debug_app"

    .line 9169
    invoke-static {v4, v5, p1}, Landroid/provider/Settings$Global;->putString(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;)Z

    const-string/jumbo v5, "wait_for_debugger"

    if-eqz v1, :cond_0

    move v6, v2

    goto :goto_0

    :cond_0
    move v6, v3

    .line 9172
    :goto_0
    invoke-static {v4, v5, v6}, Landroid/provider/Settings$Global;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z

    .line 9177
    :cond_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    if-nez p3, :cond_2

    .line 9179
    :try_start_1
    iget-object v4, v11, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    iput-object v4, v11, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    .line 9180
    iget-boolean v4, v11, Lcom/android/server/am/ActivityManagerService;->mWaitForDebugger:Z

    iput-boolean v4, v11, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z

    .line 9182
    :cond_2
    iput-object v0, v11, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    .line 9183
    iput-boolean v1, v11, Lcom/android/server/am/ActivityManagerService;->mWaitForDebugger:Z

    move/from16 v1, p4

    .line 9184
    iput-boolean v1, v11, Lcom/android/server/am/ActivityManagerService;->mSuspendUponWait:Z

    if-nez p3, :cond_3

    goto :goto_1

    :cond_3
    move v2, v3

    .line 9185
    :goto_1
    iput-boolean v2, v11, Lcom/android/server/am/ActivityManagerService;->mDebugTransient:Z

    if-eqz v0, :cond_4

    const/4 v3, -0x1

    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x1

    const/4 v7, 0x1

    const/4 v8, 0x0

    const/4 v9, -0x1

    const-string/jumbo v10, "set debug app"

    move-object v1, p0

    move-object v2, p1

    .line 9187
    invoke-virtual/range {v1 .. v10}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z

    .line 9190
    :cond_4
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 9192
    invoke-static {v12, v13}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return-void

    :catchall_0
    move-exception v0

    .line 9190
    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    :catchall_1
    move-exception v0

    .line 9192
    invoke-static {v12, v13}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9193
    throw v0
.end method

.method public setDeterministicUidIdle(Z)V
    .locals 0

    .line 19644
    iput-boolean p1, p0, Lcom/android/server/am/ActivityManagerService;->mDeterministicUidIdle:Z

    return-void
.end method

.method public setDssForPackage(Ljava/lang/String;F)V
    .locals 0

    .line 0
    return-void
.end method

.method public setDumpHeapDebugLimit(Ljava/lang/String;IJLjava/lang/String;)V
    .locals 6

    if-eqz p1, :cond_0

    const-string v0, "android.permission.SET_DEBUG_APP"

    const-string/jumbo v1, "setDumpHeapDebugLimit()"

    .line 20079
    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    move-object v1, p1

    move v2, p2

    goto :goto_1

    .line 20082
    :cond_0
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter p1

    .line 20083
    :try_start_0
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    invoke-virtual {p2, v0}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object p2

    if-eqz p2, :cond_3

    .line 20088
    invoke-virtual {p0, p2}, Lcom/android/server/am/ActivityManagerService;->enforceDebuggable(Lcom/android/server/am/ProcessRecord;)V

    .line 20089
    iget-object v0, p2, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    .line 20090
    iget v1, p2, Lcom/android/server/am/ProcessRecord;->uid:I

    if-eqz p5, :cond_2

    .line 20091
    invoke-virtual {p2}, Lcom/android/server/am/ProcessRecord;->getPkgList()Lcom/android/server/am/PackageList;

    move-result-object v2

    invoke-virtual {v2, p5}, Lcom/android/server/am/PackageList;->containsKey(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_1

    goto :goto_0

    .line 20092
    :cond_1
    new-instance p0, Ljava/lang/SecurityException;

    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string p4, "Package "

    invoke-virtual {p3, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p4, " is not running in "

    invoke-virtual {p3, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-direct {p0, p2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 20095
    :cond_2
    :goto_0
    monitor-exit p1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move v2, v1

    move-object v1, v0

    .line 20097
    :goto_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    move-wide v3, p3

    move-object v5, p5

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/AppProfiler;->setDumpHeapDebugLimit(Ljava/lang/String;IJLjava/lang/String;)V

    return-void

    .line 20085
    :cond_3
    :try_start_1
    new-instance p0, Ljava/lang/SecurityException;

    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string p3, "No process found for calling pid "

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20086
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result p3

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-direct {p0, p2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p0

    :catchall_0
    move-exception p0

    .line 20095
    monitor-exit p1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw p0
.end method

.method public setFGSFilter(IZ)Z
    .locals 2

    const-string v0, "android.permission.INTERACT_ACROSS_USERS_FULL"

    .line 24543
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    const/4 v1, 0x0

    if-eqz v0, :cond_0

    .line 24545
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo p1, "setFGSFilter - permission is not granted. callingUid: "

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result p1

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    const-string p1, "ActivityManager"

    invoke-static {p1, p0}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    return v1

    .line 24548
    :cond_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCpusetController:Lcom/android/server/am/ProcessCpusetController;

    if-nez p0, :cond_1

    return v1

    .line 24551
    :cond_1
    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/ProcessCpusetController;->setFGSFilter(IZ)Z

    move-result p0

    return p0
.end method

.method public setFocusedRootTask(I)V
    .locals 0

    .line 3335
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {p0, p1}, Lcom/android/server/wm/ActivityTaskManagerService;->setFocusedRootTask(I)V

    return-void
.end method

.method public setForegroundServiceDelegate(Ljava/lang/String;IZILjava/lang/String;)V
    .locals 19

    move-object/from16 v1, p0

    move/from16 v0, p2

    .line 22716
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    const/16 v3, 0x3e8

    if-eq v2, v3, :cond_1

    if-eqz v2, :cond_1

    const/16 v3, 0x7d0

    if-ne v2, v3, :cond_0

    goto :goto_0

    .line 22718
    :cond_0
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "No permission to start/stop foreground service delegate"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 22721
    :cond_1
    :goto_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v11

    .line 22724
    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_5

    .line 22725
    :try_start_1
    new-instance v13, Ljava/util/ArrayList;

    invoke-direct {v13}, Ljava/util/ArrayList;-><init>()V

    .line 22726
    iget-object v14, v1, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v14
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_2

    const/4 v2, 0x0

    move v15, v2

    .line 22727
    :goto_1
    :try_start_2
    iget-object v3, v1, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v3}, Lcom/android/server/am/ActivityManagerService$PidMap;->size()I

    move-result v3

    const/16 v16, 0x1

    if-ge v15, v3, :cond_3

    .line 22728
    iget-object v3, v1, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v3, v15}, Lcom/android/server/am/ActivityManagerService$PidMap;->valueAt(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v3

    .line 22729
    invoke-virtual {v3}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v4

    .line 22730
    iget v3, v3, Lcom/android/server/am/ProcessRecord;->uid:I

    if-ne v3, v0, :cond_2

    if-eqz v4, :cond_2

    .line 22732
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v2, v15}, Lcom/android/server/am/ActivityManagerService$PidMap;->keyAt(I)I

    move-result v3

    .line 22733
    new-instance v10, Landroid/app/ForegroundServiceDelegationOptions;
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v9, 0x0

    move-object v2, v10

    move/from16 v4, p2

    move-object/from16 v5, p1

    move-object/from16 v8, p5

    move-wide/from16 v17, v11

    move-object v11, v10

    move/from16 v10, p4

    :try_start_3
    invoke-direct/range {v2 .. v10}, Landroid/app/ForegroundServiceDelegationOptions;-><init>(IILjava/lang/String;Landroid/app/IApplicationThread;ZLjava/lang/String;II)V

    .line 22739
    invoke-virtual {v13, v11}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    move/from16 v2, v16

    goto :goto_2

    :cond_2
    move-wide/from16 v17, v11

    :goto_2
    add-int/lit8 v15, v15, 0x1

    move-wide/from16 v11, v17

    goto :goto_1

    :cond_3
    move-wide/from16 v17, v11

    .line 22742
    monitor-exit v14
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 22743
    :try_start_4
    invoke-virtual {v13}, Ljava/util/ArrayList;->size()I

    move-result v3

    add-int/lit8 v3, v3, -0x1

    :goto_3
    if-ltz v3, :cond_5

    .line 22744
    invoke-virtual {v13, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/app/ForegroundServiceDelegationOptions;

    if-eqz p3, :cond_4

    .line 22746
    iget-object v5, v1, Lcom/android/server/am/ActivityManagerService;->mInternal:Landroid/app/ActivityManagerInternal;

    const/4 v6, 0x0

    invoke-virtual {v5, v4, v6}, Landroid/app/ActivityManagerInternal;->startForegroundServiceDelegate(Landroid/app/ForegroundServiceDelegationOptions;Landroid/content/ServiceConnection;)Z

    goto :goto_4

    .line 22749
    :cond_4
    iget-object v5, v1, Lcom/android/server/am/ActivityManagerService;->mInternal:Landroid/app/ActivityManagerInternal;

    invoke-virtual {v5, v4}, Landroid/app/ActivityManagerInternal;->stopForegroundServiceDelegate(Landroid/app/ForegroundServiceDelegationOptions;)V

    :goto_4
    add-int/lit8 v3, v3, -0x1

    goto :goto_3

    .line 22752
    :cond_5
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_4

    :try_start_5
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    if-nez v2, :cond_6

    const-string v1, "ActivityManager"

    .line 22754
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "setForegroundServiceDelegate can not find process for packageName:"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-object/from16 v3, p1

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, " uid:"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_3

    .line 22758
    :cond_6
    invoke-static/range {v17 .. v18}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return-void

    :catchall_0
    move-exception v0

    move-wide/from16 v17, v11

    .line 22742
    :goto_5
    :try_start_6
    monitor-exit v14
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    :try_start_7
    throw v0

    :catchall_1
    move-exception v0

    goto :goto_5

    :catchall_2
    move-exception v0

    move-wide/from16 v17, v11

    .line 22752
    :goto_6
    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_4

    :try_start_8
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_3

    :catchall_3
    move-exception v0

    goto :goto_7

    :catchall_4
    move-exception v0

    goto :goto_6

    :catchall_5
    move-exception v0

    move-wide/from16 v17, v11

    .line 22758
    :goto_7
    invoke-static/range {v17 .. v18}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 22759
    throw v0
.end method

.method public setHasTopUi(Z)V
    .locals 3

    const-string v0, "android.permission.INTERNAL_SYSTEM_WINDOW"

    .line 9916
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v1

    if-nez v1, :cond_0

    .line 9924
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    .line 9925
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v1

    .line 9929
    :try_start_0
    invoke-virtual {p0, v0, p1}, Lcom/android/server/am/ActivityManagerService;->setHasTopUiInternal(IZ)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 9955
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return-void

    :catchall_0
    move-exception p0

    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9956
    throw p0

    .line 9917
    :cond_0
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string p1, "Permission Denial: setHasTopUi() from pid="

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 9918
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result p1

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, ", uid="

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 9919
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result p1

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, " requires "

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    const-string p1, "ActivityManager"

    .line 9921
    invoke-static {p1, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 9922
    new-instance p1, Ljava/lang/SecurityException;

    invoke-direct {p1, p0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method public setHasTopUiInternal(IZ)V
    .locals 5

    .line 9961
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 9964
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 9965
    :try_start_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v1, p1}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v1

    if-nez v1, :cond_0

    const-string p2, "ActivityManager"

    .line 9967
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setHasTopUi called on unknown pid: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p2, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 9968
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 9970
    :cond_0
    :try_start_3
    iget v2, p0, Lcom/android/server/am/ActivityManagerService;->mTransitionPlayerPid:I

    const/4 v3, 0x1

    const/4 v4, 0x0

    if-ltz v2, :cond_1

    if-ne v2, p1, :cond_1

    .line 9971
    iget-object p1, v1, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {p1}, Lcom/android/server/am/ProcessStateRecord;->hasTopUi()Z

    move-result p1

    .line 9972
    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {v2, p2}, Lcom/android/server/am/ProcessStateRecord;->requestHasTopUi(Z)V

    .line 9973
    iget-object p2, v1, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {p2}, Lcom/android/server/am/ProcessStateRecord;->hasTopUi()Z

    move-result p2

    if-eq p1, p2, :cond_2

    goto :goto_0

    .line 9979
    :cond_1
    iget-object p1, v1, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {p1}, Lcom/android/server/am/ProcessStateRecord;->hasTopUi()Z

    move-result p1

    if-eq p1, p2, :cond_2

    .line 9983
    iget-object p1, v1, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {p1, p2}, Lcom/android/server/am/ProcessStateRecord;->setHasTopUi(Z)V

    goto :goto_0

    :cond_2
    move v3, v4

    .line 9986
    :goto_0
    monitor-exit v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    if-eqz v3, :cond_3

    const/16 p1, 0x9

    .line 9988
    :try_start_4
    invoke-virtual {p0, v1, p1}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;I)Z

    .line 9990
    :cond_3
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :catchall_0
    move-exception p1

    .line 9986
    :try_start_5
    monitor-exit v0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    :try_start_6
    throw p1

    :catchall_1
    move-exception p1

    .line 9990
    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public setIgnoreDeliveryGroupPolicy(Ljava/lang/String;)V
    .locals 2

    .line 22602
    invoke-static {p1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    const-string v0, "android.permission.DUMP"

    const-string/jumbo v1, "waitForBroadcastBarrier()"

    .line 22603
    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 22604
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDeliveryGroupPolicyIgnoredActions:Landroid/util/ArraySet;

    monitor-enter v0

    .line 22605
    :try_start_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mDeliveryGroupPolicyIgnoredActions:Landroid/util/ArraySet;

    invoke-virtual {p0, p1}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 22606
    monitor-exit v0

    return-void

    :catchall_0
    move-exception p0

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw p0
.end method

.method public setInstaller(Lcom/android/server/pm/Installer;)V
    .locals 0

    .line 2984
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mInstaller:Lcom/android/server/pm/Installer;

    return-void
.end method

.method public setLongLiveApp(Ljava/lang/String;)Z
    .locals 1

    const-string/jumbo v0, "setLongLiveApp"

    .line 24168
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkLongLivePermissions(Ljava/lang/String;)V

    .line 24169
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 24170
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mExt:Lcom/android/server/am/ActivityManagerServiceExt;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActivityManagerServiceExt;->setLongLivePackageLocked(Ljava/lang/String;)Z

    move-result p1

    const/4 v0, 0x0

    if-eqz p1, :cond_0

    .line 24171
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(I)V

    .line 24172
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    const/4 p0, 0x1

    return p0

    .line 24174
    :cond_0
    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v0

    :catchall_0
    move-exception p1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public setLongLiveTask(I)Z
    .locals 1

    .line 24253
    sget-boolean v0, Lcom/samsung/android/rune/CoreRune;->FW_DEDICATED_MEMORY:Z

    if-nez v0, :cond_0

    const/4 p0, 0x0

    return p0

    :cond_0
    const-string/jumbo v0, "setLongLiveTask"

    .line 24257
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkLongLivePermissions(Ljava/lang/String;)V

    .line 24258
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mExt:Lcom/android/server/am/ActivityManagerServiceExt;

    const/4 v0, 0x1

    invoke-virtual {p0, p1, v0}, Lcom/android/server/am/ActivityManagerServiceExt;->setLongLiveTask(IZ)V

    return v0
.end method

.method public setMemFactorOverride(I)V
    .locals 1

    .line 11935
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 11936
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {v0}, Lcom/android/server/am/AppProfiler;->getLastMemoryLevelLocked()I

    move-result v0

    if-ne p1, v0, :cond_0

    .line 11937
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 11940
    :cond_0
    :try_start_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {v0, p1}, Lcom/android/server/am/AppProfiler;->setMemFactorOverrideLocked(I)V

    const/16 p1, 0x10

    .line 11942
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(I)V

    .line 11943
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :catchall_0
    move-exception p1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public setNativeDebuggingAppLocked(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;)V
    .locals 0

    .line 9253
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->enforceDebuggable(Landroid/content/pm/ApplicationInfo;)V

    .line 9254
    iput-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mNativeDebuggingApp:Ljava/lang/String;

    return-void
.end method

.method public setOomAdjObserver(ILcom/android/server/am/ActivityManagerService$OomAdjObserver;)V
    .locals 1

    .line 3765
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjObserverLock:Ljava/lang/Object;

    monitor-enter v0

    .line 3766
    :try_start_0
    iput p1, p0, Lcom/android/server/am/ActivityManagerService;->mCurOomAdjUid:I

    .line 3767
    iput-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mCurOomAdjObserver:Lcom/android/server/am/ActivityManagerService$OomAdjObserver;

    .line 3768
    monitor-exit v0

    return-void

    :catchall_0
    move-exception p0

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw p0
.end method

.method public setPackageScreenCompatMode(Ljava/lang/String;I)V
    .locals 0

    .line 3661
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {p0, p1, p2}, Lcom/android/server/wm/ActivityTaskManagerService;->setPackageScreenCompatMode(Ljava/lang/String;I)V

    return-void
.end method

.method public setPersistentVrThread(I)V
    .locals 0

    .line 9793
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {p0, p1}, Lcom/android/server/wm/ActivityTaskManagerService;->setPersistentVrThread(I)V

    return-void
.end method

.method public setProcessImportant(Landroid/os/IBinder;IZLjava/lang/String;)V
    .locals 9

    const-string v0, "android.permission.SET_PROCESS_LIMIT"

    const-string/jumbo v1, "setProcessImportant()"

    .line 6991
    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 6994
    sget-boolean v0, Lcom/samsung/android/rune/CoreRune;->SAFE_DEBUG:Z

    if-eqz v0, :cond_0

    const-string v0, "ActivityManager"

    .line 6995
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setProcessImportant: token "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v2, " pid "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, " as "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    const-string v2, " from "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 6996
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    .line 6995
    invoke-static {v0, v1}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    :cond_0
    const-string/jumbo v0, "setProcessImportant()"

    .line 6998
    invoke-virtual {v0, p4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    const-string/jumbo v1, "toast"

    .line 7001
    invoke-virtual {v1, p4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    .line 7003
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 7007
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    .line 7008
    :try_start_1
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v3, p2}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v3

    if-nez v3, :cond_1

    if-eqz p3, :cond_1

    const-string p1, "ActivityManager"

    .line 7010
    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo p4, "setProcessForeground called on unknown pid: "

    invoke-virtual {p3, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-static {p1, p2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 7011
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 7013
    :cond_1
    :try_start_3
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mImportantProcesses:Landroid/util/SparseArray;

    invoke-virtual {v4, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ActivityManagerService$ImportanceToken;

    const/4 v5, 0x1

    const/4 v6, 0x0

    if-eqz v4, :cond_6

    const/4 v7, 0x0

    if-eqz v1, :cond_2

    .line 7018
    iget-object v8, v4, Lcom/android/server/am/ActivityManagerService$ImportanceToken;->toastToken:Landroid/os/IBinder;
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    if-eqz v8, :cond_3

    .line 7020
    :try_start_4
    invoke-interface {v8, v4, v6}, Landroid/os/IBinder;->unlinkToDeath(Landroid/os/IBinder$DeathRecipient;I)Z
    :try_end_4
    .catch Ljava/lang/Exception; {:try_start_4 .. :try_end_4} :catch_0
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 7023
    :catch_0
    :try_start_5
    iput-object v7, v4, Lcom/android/server/am/ActivityManagerService$ImportanceToken;->toastToken:Landroid/os/IBinder;

    goto :goto_0

    .line 7026
    :cond_2
    iget-object v8, v4, Lcom/android/server/am/ActivityManagerService$ImportanceToken;->token:Landroid/os/IBinder;
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    if-eqz v8, :cond_3

    .line 7028
    :try_start_6
    invoke-interface {v8, v4, v6}, Landroid/os/IBinder;->unlinkToDeath(Landroid/os/IBinder$DeathRecipient;I)Z
    :try_end_6
    .catch Ljava/lang/Exception; {:try_start_6 .. :try_end_6} :catch_1
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 7031
    :catch_1
    :try_start_7
    iput-object v7, v4, Lcom/android/server/am/ActivityManagerService$ImportanceToken;->token:Landroid/os/IBinder;

    .line 7034
    :cond_3
    :goto_0
    iget-object v8, v4, Lcom/android/server/am/ActivityManagerService$ImportanceToken;->token:Landroid/os/IBinder;

    if-nez v8, :cond_6

    iget-object v8, v4, Lcom/android/server/am/ActivityManagerService$ImportanceToken;->toastToken:Landroid/os/IBinder;

    if-nez v8, :cond_6

    if-eqz v0, :cond_4

    .line 7035
    iput-boolean v6, v3, Lcom/android/server/am/ProcessRecord;->mKeepSEMPrcp:Z

    .line 7036
    :cond_4
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mImportantProcesses:Landroid/util/SparseArray;

    invoke-virtual {v4, p2}, Landroid/util/SparseArray;->remove(I)V

    if-eqz v3, :cond_5

    .line 7038
    iget-object v4, v3, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {v4, v7}, Lcom/android/server/am/ProcessStateRecord;->setForcingToImportant(Ljava/lang/Object;)V

    :cond_5
    move-object v4, v7

    move v7, v5

    goto :goto_1

    :cond_6
    move v7, v6

    :goto_1
    if-eqz p3, :cond_b

    if-eqz p1, :cond_b

    if-nez v4, :cond_9

    .line 7061
    new-instance p3, Lcom/android/server/am/ActivityManagerService$14;

    invoke-direct {p3, p0, p2, p4}, Lcom/android/server/am/ActivityManagerService$14;-><init>(Lcom/android/server/am/ActivityManagerService;ILjava/lang/String;)V

    if-eqz v1, :cond_7

    .line 7068
    iput-object p1, p3, Lcom/android/server/am/ActivityManagerService$ImportanceToken;->toastToken:Landroid/os/IBinder;

    goto :goto_2

    .line 7070
    :cond_7
    iput-object p1, p3, Lcom/android/server/am/ActivityManagerService$ImportanceToken;->token:Landroid/os/IBinder;
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    .line 7073
    :goto_2
    :try_start_8
    invoke-interface {p1, p3, v6}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V
    :try_end_8
    .catch Landroid/os/RemoteException; {:try_start_8 .. :try_end_8} :catch_2
    .catchall {:try_start_8 .. :try_end_8} :catchall_1

    .line 7078
    :catch_2
    :try_start_9
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mImportantProcesses:Landroid/util/SparseArray;

    invoke-virtual {p1, p2, p3}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    if-eqz v0, :cond_8

    .line 7079
    iput-boolean v5, v3, Lcom/android/server/am/ProcessRecord;->mKeepSEMPrcp:Z

    .line 7080
    :cond_8
    iget-object p1, v3, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {p1, p3}, Lcom/android/server/am/ProcessStateRecord;->setForcingToImportant(Ljava/lang/Object;)V

    goto :goto_4

    :cond_9
    if-eqz v1, :cond_a

    .line 7084
    iput-object p1, v4, Lcom/android/server/am/ActivityManagerService$ImportanceToken;->toastToken:Landroid/os/IBinder;

    goto :goto_3

    .line 7086
    :cond_a
    iput-object p1, v4, Lcom/android/server/am/ActivityManagerService$ImportanceToken;->token:Landroid/os/IBinder;
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_1

    .line 7089
    :goto_3
    :try_start_a
    invoke-interface {p1, v4, v6}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V
    :try_end_a
    .catch Landroid/os/RemoteException; {:try_start_a .. :try_end_a} :catch_3
    .catchall {:try_start_a .. :try_end_a} :catchall_1

    :catch_3
    :cond_b
    move v5, v7

    .line 7117
    :goto_4
    :try_start_b
    monitor-exit v2
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_1

    if-eqz v5, :cond_c

    .line 7122
    :try_start_c
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide p1
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_2

    const/16 p3, 0x9

    .line 7124
    :try_start_d
    invoke-virtual {p0, v3, p3}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;I)Z
    :try_end_d
    .catchall {:try_start_d .. :try_end_d} :catchall_0

    .line 7126
    :try_start_e
    invoke-static {p1, p2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_5

    :catchall_0
    move-exception p3

    invoke-static {p1, p2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7127
    throw p3

    .line 7133
    :cond_c
    :goto_5
    monitor-exit p0
    :try_end_e
    .catchall {:try_start_e .. :try_end_e} :catchall_2

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :catchall_1
    move-exception p1

    .line 7117
    :try_start_f
    monitor-exit v2
    :try_end_f
    .catchall {:try_start_f .. :try_end_f} :catchall_1

    :try_start_10
    throw p1

    :catchall_2
    move-exception p1

    .line 7133
    monitor-exit p0
    :try_end_10
    .catchall {:try_start_10 .. :try_end_10} :catchall_2

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public setProcessLimit(I)V
    .locals 3

    const-string v0, "android.permission.SET_PROCESS_LIMIT"

    const-string/jumbo v1, "setProcessLimit()"

    .line 6936
    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    if-ltz p1, :cond_0

    .line 6940
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mRestrictionPolicy:Lcom/samsung/android/knox/restriction/RestrictionPolicy;

    if-eqz v0, :cond_0

    .line 6941
    invoke-virtual {v0}, Lcom/samsung/android/knox/restriction/RestrictionPolicy;->isBackgroundProcessLimitAllowed()Z

    move-result v0

    if-nez v0, :cond_0

    const-string p0, "ActivityManager"

    const-string/jumbo p1, "setProcessLimit: denied"

    .line 6942
    invoke-static {p0, p1}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    return-void

    :cond_0
    const-string v0, "ActivityManager"

    .line 6950
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setProcessLimit: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, " from uid "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, " pid "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 6951
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    .line 6950
    invoke-static {v0, v1}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 6955
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 6956
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActivityManagerConstants;->setOverrideMaxCachedProcesses(I)V

    const/4 p1, 0x1

    const/16 v0, 0xc

    .line 6957
    invoke-virtual {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->trimApplicationsLocked(ZI)V

    .line 6958
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public setProcessMemoryTrimLevel(Ljava/lang/String;II)Z
    .locals 4

    .line 3713
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->isCallerShell()Z

    move-result v0

    if-eqz v0, :cond_6

    .line 3716
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    :try_start_0
    const-string/jumbo v0, "setProcessMemoryTrimLevel"

    .line 3717
    invoke-virtual {p0, p1, p2, v0}, Lcom/android/server/am/ActivityManagerService;->findProcessLOSP(Ljava/lang/String;ILjava/lang/String;)Lcom/android/server/am/ProcessRecord;

    move-result-object p2

    if-eqz p2, :cond_5

    .line 3721
    invoke-virtual {p2}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object p1

    if-eqz p1, :cond_4

    .line 3725
    iget-object v0, p2, Lcom/android/server/am/ProcessRecord;->mProfile:Lcom/android/server/am/ProcessProfileRecord;

    invoke-virtual {v0}, Lcom/android/server/am/ProcessProfileRecord;->getTrimMemoryLevel()I

    move-result v0

    if-ge v0, p3, :cond_3

    const/16 v0, 0x14

    if-lt p3, v0, :cond_1

    .line 3729
    iget-object v0, p2, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    .line 3730
    invoke-virtual {v0}, Lcom/android/server/am/ProcessStateRecord;->getCurProcState()I

    move-result v0

    const/4 v1, 0x6

    if-le v0, v1, :cond_0

    goto :goto_0

    .line 3731
    :cond_0
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string p2, "Unable to set a background trim level on a foreground process"

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    :cond_1
    :goto_0
    const-string/jumbo v0, "onTrim"

    .line 3734
    invoke-static {v0}, Lcom/android/server/chimera/umr/UnifiedMemoryReclaimer;->getReclaimerMode(Ljava/lang/String;)I

    move-result v0

    const/4 v1, 0x0

    const/4 v2, 0x1

    if-ne v0, v2, :cond_2

    const-string/jumbo p1, "onTrim: skip scheduleTrimMemory in ams"

    .line 3735
    invoke-static {p1, v1}, Lcom/android/server/chimera/umr/KernelMemoryProxy$ReclaimerLog;->write(Ljava/lang/String;Z)V

    .line 3736
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v2

    .line 3740
    :cond_2
    :try_start_1
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "B|scheduleTrimMemory: Trimming memory of force "

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v3, p2, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, " to "

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v0, v1}, Lcom/android/server/chimera/umr/KernelMemoryProxy$ReclaimerLog;->write(Ljava/lang/String;Z)V

    .line 3742
    invoke-interface {p1, p3}, Landroid/app/IApplicationThread;->scheduleTrimMemory(I)V

    const-string p1, "E|scheduleTrimMemory"

    .line 3744
    invoke-static {p1, v1}, Lcom/android/server/chimera/umr/KernelMemoryProxy$ReclaimerLog;->write(Ljava/lang/String;Z)V

    .line 3746
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter p1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 3747
    :try_start_2
    iget-object p2, p2, Lcom/android/server/am/ProcessRecord;->mProfile:Lcom/android/server/am/ProcessProfileRecord;

    invoke-virtual {p2, p3}, Lcom/android/server/am/ProcessProfileRecord;->setTrimMemoryLevel(I)V

    .line 3748
    monitor-exit p1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 3749
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v2

    :catchall_0
    move-exception p2

    .line 3748
    :try_start_4
    monitor-exit p1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p2

    .line 3726
    :cond_3
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string p2, "Unable to set a higher trim level than current level"

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 3723
    :cond_4
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const-string p2, "Process has no app thread"

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 3719
    :cond_5
    new-instance p2, Ljava/lang/IllegalArgumentException;

    new-instance p3, Ljava/lang/StringBuilder;

    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "Unknown process: "

    invoke-virtual {p3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p2, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p2

    :catchall_1
    move-exception p1

    .line 3750
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1

    .line 3714
    :cond_6
    new-instance p0, Ljava/lang/SecurityException;

    const-string p1, "Only shell can call it"

    invoke-direct {p0, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p0
.end method

.method public setProcessSlowdown(IZ)Z
    .locals 2

    const-string v0, "android.permission.INTERACT_ACROSS_USERS_FULL"

    .line 24582
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    const/4 v1, 0x0

    if-eqz v0, :cond_0

    .line 24584
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo p1, "setProcessSlowdown - permission is not granted. callingUid: "

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result p1

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    const-string p1, "ActivityManager"

    invoke-static {p1, p0}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    return v1

    .line 24587
    :cond_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCpusetController:Lcom/android/server/am/ProcessCpusetController;

    if-nez p0, :cond_1

    return v1

    .line 24590
    :cond_1
    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/ProcessCpusetController;->setProcessSlowdown(IZ)Z

    move-result p0

    return p0
.end method

.method public setProcessStateSummary([B)V
    .locals 2

    if-eqz p1, :cond_1

    .line 11863
    array-length v0, p1

    const/16 v1, 0x80

    if-gt v0, v1, :cond_0

    goto :goto_0

    .line 11864
    :cond_0
    new-instance p0, Ljava/lang/IllegalArgumentException;

    const-string p1, "Data size is too large"

    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 11866
    :cond_1
    :goto_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object p0, p0, Lcom/android/server/am/ProcessList;->mAppExitInfoTracker:Lcom/android/server/am/AppExitInfoTracker;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 11867
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    .line 11866
    invoke-virtual {p0, v0, v1, p1}, Lcom/android/server/am/AppExitInfoTracker;->setProcessStateSummary(II[B)V

    return-void
.end method

.method public final setProcessTrackerStateLOSP(Lcom/android/server/am/ProcessRecord;I)V
    .locals 0

    .line 19408
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object p0

    if-eqz p0, :cond_0

    .line 19409
    iget-object p0, p1, Lcom/android/server/am/ProcessRecord;->mProfile:Lcom/android/server/am/ProcessProfileRecord;

    iget-object p1, p1, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    .line 19410
    invoke-virtual {p1}, Lcom/android/server/am/ProcessStateRecord;->getReportedProcState()I

    move-result p1

    .line 19409
    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/ProcessProfileRecord;->setProcessTrackerState(II)V

    :cond_0
    return-void
.end method

.method public setProfileApp(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;Landroid/app/ProfilerInfo;Landroid/content/pm/ApplicationInfo;)V
    .locals 6

    .line 9233
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    iget-object v0, v0, Lcom/android/server/am/AppProfiler;->mProfilerLock:Ljava/lang/Object;

    monitor-enter v0

    .line 9234
    :try_start_0
    sget-boolean v1, Landroid/os/Build;->IS_DEBUGGABLE:Z

    if-nez v1, :cond_4

    .line 9235
    iget v1, p1, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v1, v1, 0x2

    const/4 v2, 0x1

    const/4 v3, 0x0

    if-eqz v1, :cond_0

    move v1, v2

    goto :goto_0

    :cond_0
    move v1, v3

    .line 9236
    :goto_0
    invoke-virtual {p1}, Landroid/content/pm/ApplicationInfo;->isProfileableByShell()Z

    move-result v4

    if-eqz p4, :cond_2

    .line 9239
    iget v5, p4, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v5, v5, 0x2

    if-eqz v5, :cond_1

    goto :goto_1

    :cond_1
    move v2, v3

    :goto_1
    or-int/2addr v1, v2

    .line 9241
    invoke-virtual {p4}, Landroid/content/pm/ApplicationInfo;->isProfileableByShell()Z

    move-result p4

    or-int/2addr v4, p4

    :cond_2
    if-nez v1, :cond_4

    if-eqz v4, :cond_3

    goto :goto_2

    .line 9244
    :cond_3
    new-instance p0, Ljava/lang/SecurityException;

    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string p3, "Process not debuggable, and not profileable by shell: "

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object p1, p1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p0, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 9248
    :cond_4
    :goto_2
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {p0, p2, p3}, Lcom/android/server/am/AppProfiler;->setProfileAppLPf(Ljava/lang/String;Landroid/app/ProfilerInfo;)V

    .line 9249
    monitor-exit v0

    return-void

    :catchall_0
    move-exception p0

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw p0
.end method

.method public setRenderThread(I)V
    .locals 4

    .line 9846
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v0

    .line 9848
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    .line 9849
    invoke-static {}, Landroid/os/Process;->myPid()I

    move-result v2

    if-ne v1, v2, :cond_0

    .line 9850
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->demoteSystemServerRenderThread(I)V

    .line 9851
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return-void

    .line 9853
    :cond_0
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 9854
    :try_start_2
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v3, v1}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v3

    .line 9855
    monitor-exit v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    if-eqz v3, :cond_3

    .line 9856
    :try_start_3
    invoke-virtual {v3}, Lcom/android/server/am/ProcessRecord;->getRenderThreadTid()I

    move-result v2

    if-nez v2, :cond_3

    if-lez p1, :cond_3

    .line 9858
    invoke-static {v1, p1}, Landroid/os/Process;->isThreadInProcess(II)Z

    move-result v1

    if-eqz v1, :cond_2

    .line 9862
    invoke-virtual {v3, p1}, Lcom/android/server/am/ProcessRecord;->setRenderThreadTid(I)V

    .line 9867
    iget-object p1, v3, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    invoke-virtual {p1}, Lcom/android/server/am/ProcessStateRecord;->getCurrentSchedulingGroup()I

    move-result p1

    const/4 v1, 0x3

    if-ne p1, v1, :cond_3

    .line 9869
    iget-boolean p0, p0, Lcom/android/server/am/ActivityManagerService;->mUseFifoUiScheduling:Z

    if-eqz p0, :cond_1

    .line 9870
    invoke-virtual {v3}, Lcom/android/server/am/ProcessRecord;->getRenderThreadTid()I

    move-result p0

    const p1, 0x40000001    # 2.0000002f

    const/4 v1, 0x1

    invoke-static {p0, p1, v1}, Landroid/os/Process;->setThreadScheduler(III)V

    goto :goto_0

    .line 9873
    :cond_1
    invoke-virtual {v3}, Lcom/android/server/am/ProcessRecord;->getRenderThreadTid()I

    move-result p0

    const/16 p1, -0xa

    invoke-static {p0, p1}, Landroid/os/Process;->setThreadPriority(II)V

    goto :goto_0

    .line 9859
    :cond_2
    new-instance p0, Ljava/lang/IllegalArgumentException;

    const-string p1, "Render thread does not belong to process"

    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 9882
    :cond_3
    :goto_0
    monitor-exit v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return-void

    :catchall_0
    move-exception p0

    .line 9855
    :try_start_4
    monitor-exit v2
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    throw p0

    :catchall_1
    move-exception p0

    .line 9882
    monitor-exit v0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p0
.end method

.method public setRequestedOrientation(Landroid/os/IBinder;I)V
    .locals 0

    .line 3863
    invoke-static {}, Landroid/app/ActivityClient;->getInstance()Landroid/app/ActivityClient;

    move-result-object p0

    invoke-virtual {p0, p1, p2}, Landroid/app/ActivityClient;->setRequestedOrientation(Landroid/os/IBinder;I)V

    return-void
.end method

.method public setServiceForeground(Landroid/content/ComponentName;Landroid/os/IBinder;ILandroid/app/Notification;II)V
    .locals 7

    .line 15975
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 15976
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    move-object v1, p1

    move-object v2, p2

    move v3, p3

    move-object v4, p4

    move v5, p5

    move v6, p6

    invoke-virtual/range {v0 .. v6}, Lcom/android/server/am/ActiveServices;->setServiceForegroundLocked(Landroid/content/ComponentName;Landroid/os/IBinder;ILandroid/app/Notification;II)V

    .line 15978
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public setServiceRestartBackoffEnabled(Ljava/lang/String;ZLjava/lang/String;)V
    .locals 1

    .line 11951
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 11952
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/am/ActiveServices;->setServiceRestartBackoffEnabledLocked(Ljava/lang/String;ZLjava/lang/String;)V

    .line 11953
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public setStopUserOnSwitch(I)V
    .locals 0

    .line 20216
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {p0, p1}, Lcom/android/server/am/UserController;->setStopUserOnSwitch(I)V

    return-void
.end method

.method public setSystemProcess()V
    .locals 14

    :try_start_0
    const-string v0, "activity"

    const/16 v1, 0x15

    const/4 v2, 0x1

    .line 2329
    invoke-static {v0, p0, v2, v1}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;ZI)V

    const-string/jumbo v0, "procstats"

    .line 2331
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-static {v0, v1}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;)V

    const-string/jumbo v0, "meminfo"

    .line 2332
    new-instance v1, Lcom/android/server/am/ActivityManagerService$MemBinder;

    invoke-direct {v1, p0}, Lcom/android/server/am/ActivityManagerService$MemBinder;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    const/4 v3, 0x2

    const/4 v4, 0x0

    invoke-static {v0, v1, v4, v3}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;ZI)V

    const-string v0, "gfxinfo"

    .line 2334
    new-instance v1, Lcom/android/server/am/ActivityManagerService$GraphicsBinder;

    invoke-direct {v1, p0}, Lcom/android/server/am/ActivityManagerService$GraphicsBinder;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-static {v0, v1}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;)V

    const-string v0, "dbinfo"

    .line 2335
    new-instance v1, Lcom/android/server/am/ActivityManagerService$DbBinder;

    invoke-direct {v1, p0}, Lcom/android/server/am/ActivityManagerService$DbBinder;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-static {v0, v1}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;)V

    .line 2336
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {v0}, Lcom/android/server/am/AppProfiler;->setCpuInfoService()V

    const-string/jumbo v0, "permission"

    .line 2337
    new-instance v1, Lcom/android/server/am/ActivityManagerService$PermissionController;

    invoke-direct {v1, p0}, Lcom/android/server/am/ActivityManagerService$PermissionController;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-static {v0, v1}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;)V

    const-string/jumbo v0, "processinfo"

    .line 2338
    new-instance v1, Lcom/android/server/am/ActivityManagerService$ProcessInfoService;

    invoke-direct {v1, p0}, Lcom/android/server/am/ActivityManagerService$ProcessInfoService;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-static {v0, v1}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;)V

    const-string v0, "cacheinfo"

    .line 2339
    new-instance v1, Lcom/android/server/am/ActivityManagerService$CacheBinder;

    invoke-direct {v1, p0}, Lcom/android/server/am/ActivityManagerService$CacheBinder;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-static {v0, v1}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;)V

    .line 2341
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v0

    const-string v1, "android"

    const v3, 0x100400

    invoke-virtual {v0, v1, v3}, Landroid/content/pm/PackageManager;->getApplicationInfo(Ljava/lang/String;I)Landroid/content/pm/ApplicationInfo;

    move-result-object v6

    .line 2343
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mSystemThread:Landroid/app/ActivityThread;

    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/Class;->getClassLoader()Ljava/lang/ClassLoader;

    move-result-object v1

    invoke-virtual {v0, v6, v1}, Landroid/app/ActivityThread;->installSystemApplicationInfo(Landroid/content/pm/ApplicationInfo;Ljava/lang/ClassLoader;)V

    .line 2345
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0
    :try_end_0
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_0 .. :try_end_0} :catch_0

    .line 2346
    :try_start_1
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v7, v6, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, 0x0

    new-instance v13, Lcom/android/server/am/HostingRecord;

    const-string/jumbo v0, "system"

    invoke-direct {v13, v0}, Lcom/android/server/am/HostingRecord;-><init>(Ljava/lang/String;)V

    invoke-virtual/range {v5 .. v13}, Lcom/android/server/am/ProcessList;->newProcessRecordLocked(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;ZIZILjava/lang/String;Lcom/android/server/am/HostingRecord;)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    .line 2353
    invoke-virtual {v0, v2}, Lcom/android/server/am/ProcessRecord;->setPersistent(Z)V

    .line 2354
    sget v1, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    invoke-virtual {v0, v1}, Lcom/android/server/am/ProcessRecord;->setPid(I)V

    .line 2355
    iget-object v1, v0, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    const/16 v3, -0x384

    invoke-virtual {v1, v3}, Lcom/android/server/am/ProcessStateRecord;->setMaxAdj(I)V

    .line 2356
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mSystemThread:Landroid/app/ActivityThread;

    invoke-virtual {v1}, Landroid/app/ActivityThread;->getApplicationThread()Landroid/app/ActivityThread$ApplicationThread;

    move-result-object v1

    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {v0, v1, v3}, Lcom/android/server/am/ProcessRecord;->makeActive(Landroid/app/IApplicationThread;Lcom/android/server/am/ProcessStatsService;)V

    .line 2357
    iget-object v1, v0, Lcom/android/server/am/ProcessRecord;->mProfile:Lcom/android/server/am/ProcessProfileRecord;

    invoke-virtual {v1, v2}, Lcom/android/server/am/ProcessProfileRecord;->addHostingComponentType(I)V

    .line 2358
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->addPidLocked(Lcom/android/server/am/ProcessRecord;)V

    const/4 v1, 0x0

    .line 2359
    invoke-virtual {p0, v0, v4, v1}, Lcom/android/server/am/ActivityManagerService;->updateLruProcessLocked(Lcom/android/server/am/ProcessRecord;ZLcom/android/server/am/ProcessRecord;)V

    const/16 v0, 0xe

    .line 2360
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(I)V

    .line 2361
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_2
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_2 .. :try_end_2} :catch_0

    .line 2368
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    new-instance v2, Lcom/android/server/am/ActivityManagerService$4;

    invoke-direct {v2, p0}, Lcom/android/server/am/ActivityManagerService$4;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    const/16 v3, 0x3f

    invoke-virtual {v0, v3, v1, v2}, Lcom/android/server/appop/AppOpsService;->startWatchingMode(ILjava/lang/String;Lcom/android/internal/app/IAppOpsCallback;)V

    const/16 v0, 0x1a

    .line 2380
    filled-new-array {v0}, [I

    move-result-object v0

    .line 2381
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    new-instance v2, Lcom/android/server/am/ActivityManagerService$5;

    invoke-direct {v2, p0}, Lcom/android/server/am/ActivityManagerService$5;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-virtual {v1, v0, v2}, Lcom/android/server/appop/AppOpsService;->startWatchingActive([ILcom/android/internal/app/IAppOpsActiveCallback;)V

    return-void

    :catchall_0
    move-exception v0

    .line 2361
    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
    :try_end_4
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_4 .. :try_end_4} :catch_0

    :catch_0
    move-exception p0

    .line 2363
    new-instance v0, Ljava/lang/RuntimeException;

    const-string v1, "Unable to find android system package"

    invoke-direct {v0, v1, p0}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    throw v0
.end method

.method public setSystemServiceManager(Lcom/android/server/SystemServiceManager;)V
    .locals 0

    .line 2980
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mSystemServiceManager:Lcom/android/server/SystemServiceManager;

    return-void
.end method

.method public setTTSPkgInfo(I)V
    .locals 0

    .line 24479
    sget-boolean p0, Lcom/android/server/am/MARsPolicyManager;->MARs_ENABLE:Z

    if-eqz p0, :cond_0

    .line 24480
    invoke-static {}, Lcom/android/server/am/MARsPolicyManager;->getInstance()Lcom/android/server/am/MARsPolicyManager;

    move-result-object p0

    invoke-virtual {p0, p1}, Lcom/android/server/am/MARsPolicyManager;->setTTSPkgInfo(I)V

    :cond_0
    return-void
.end method

.method public setTaskResizeable(II)V
    .locals 0

    .line 8085
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {p0, p1, p2}, Lcom/android/server/wm/ActivityTaskManagerService;->setTaskResizeable(II)V

    return-void
.end method

.method public setTrackAllocationApp(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;)V
    .locals 0

    .line 9224
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->enforceDebuggable(Landroid/content/pm/ApplicationInfo;)V

    .line 9226
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter p1

    .line 9227
    :try_start_0
    iput-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mTrackAllocationApp:Ljava/lang/String;

    .line 9228
    monitor-exit p1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return-void

    :catchall_0
    move-exception p0

    :try_start_1
    monitor-exit p1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p0
.end method

.method public final setUidTempAllowlistStateLSP(IZ)V
    .locals 0

    .line 19809
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/OomAdjuster;->setUidTempAllowlistStateLSP(IZ)V

    return-void
.end method

.method public setUsageStatsManager(Landroid/app/usage/UsageStatsManagerInternal;)V
    .locals 0

    .line 2403
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    .line 2404
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {p0, p1}, Lcom/android/server/wm/ActivityTaskManagerService;->setUsageStatsManager(Landroid/app/usage/UsageStatsManagerInternal;)V

    return-void
.end method

.method public setUserIsMonkey(Z)V
    .locals 4

    .line 9286
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v0

    .line 9287
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 9288
    :try_start_1
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    .line 9289
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v3, v2}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v3

    if-eqz v3, :cond_1

    .line 9293
    invoke-virtual {v3}, Lcom/android/server/am/ProcessRecord;->getActiveInstrumentation()Lcom/android/server/am/ActiveInstrumentation;

    move-result-object v2

    if-eqz v2, :cond_0

    .line 9294
    invoke-virtual {v3}, Lcom/android/server/am/ProcessRecord;->getActiveInstrumentation()Lcom/android/server/am/ActiveInstrumentation;

    move-result-object v2

    iget-object v2, v2, Lcom/android/server/am/ActiveInstrumentation;->mUiAutomationConnection:Landroid/app/IUiAutomationConnection;

    if-eqz v2, :cond_0

    .line 9298
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 9299
    :try_start_2
    iput-boolean p1, p0, Lcom/android/server/am/ActivityManagerService;->mUserIsMonkey:Z

    .line 9300
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return-void

    .line 9295
    :cond_0
    :try_start_3
    new-instance p0, Ljava/lang/SecurityException;

    const-string p1, "Only an instrumentation process with a UiAutomation can call setUserIsMonkey"

    invoke-direct {p0, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 9291
    :cond_1
    new-instance p0, Ljava/lang/SecurityException;

    new-instance p1, Ljava/lang/StringBuilder;

    invoke-direct {p1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Unknown process: "

    invoke-virtual {p1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p0, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p0

    :catchall_0
    move-exception p0

    .line 9298
    monitor-exit v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    throw p0

    :catchall_1
    move-exception p0

    .line 9300
    monitor-exit v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p0
.end method

.method public final setVoiceInteractionManagerProvider(Landroid/app/ActivityManagerInternal$VoiceInteractionManagerProvider;)V
    .locals 0

    .line 2440
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mVoiceInteractionManagerProvider:Landroid/app/ActivityManagerInternal$VoiceInteractionManagerProvider;

    return-void
.end method

.method public setWindowManager(Lcom/android/server/wm/WindowManagerService;)V
    .locals 1

    .line 2392
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 2393
    :try_start_0
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    .line 2394
    const-class v0, Lcom/android/server/wm/WindowManagerInternal;

    invoke-static {v0}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/WindowManagerInternal;

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWmInternal:Lcom/android/server/wm/WindowManagerInternal;

    .line 2395
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/ActivityTaskManagerService;->setWindowManager(Lcom/android/server/wm/WindowManagerService;)V

    .line 2396
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public shouldIgnoreDeliveryGroupPolicy(Ljava/lang/String;)Z
    .locals 1

    if-nez p1, :cond_0

    const/4 p0, 0x0

    return p0

    .line 22621
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDeliveryGroupPolicyIgnoredActions:Landroid/util/ArraySet;

    monitor-enter v0

    .line 22622
    :try_start_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mDeliveryGroupPolicyIgnoredActions:Landroid/util/ArraySet;

    invoke-virtual {p0, p1}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    move-result p0

    monitor-exit v0

    return p0

    :catchall_0
    move-exception p0

    .line 22623
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw p0
.end method

.method public shouldServiceTimeOut(Landroid/content/ComponentName;Landroid/os/IBinder;)Z
    .locals 1

    .line 15990
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 15991
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/am/ActiveServices;->shouldServiceTimeOutLocked(Landroid/content/ComponentName;Landroid/os/IBinder;)Z

    move-result p1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return p1

    :catchall_0
    move-exception p1

    .line 15992
    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public showAllDSSInfo()V
    .locals 0

    .line 0
    return-void
.end method

.method public showBootMessage(Ljava/lang/CharSequence;Z)V
    .locals 2

    .line 5997
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    invoke-static {}, Landroid/os/Process;->myUid()I

    move-result v1

    if-ne v0, v1, :cond_0

    .line 6000
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {p0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->showBootMessage(Ljava/lang/CharSequence;Z)V

    return-void

    .line 5998
    :cond_0
    new-instance p0, Ljava/lang/SecurityException;

    invoke-direct {p0}, Ljava/lang/SecurityException;-><init>()V

    throw p0
.end method

.method public final showConsoleNotificationIfActive()V
    .locals 6

    const-string v0, "init.svc.console"

    .line 6314
    invoke-static {v0}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    const-string/jumbo v1, "running"

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_0

    return-void

    .line 6317
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const v1, 0x10403b6

    .line 6318
    invoke-virtual {v0, v1}, Landroid/content/Context;->getString(I)Ljava/lang/String;

    move-result-object v0

    .line 6319
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const v2, 0x10403b5

    .line 6320
    invoke-virtual {v1, v2}, Landroid/content/Context;->getString(I)Ljava/lang/String;

    move-result-object v1

    .line 6321
    new-instance v2, Landroid/app/Notification$Builder;

    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    sget-object v4, Lcom/android/internal/notification/SystemNotificationChannels;->DEVELOPER:Ljava/lang/String;

    invoke-direct {v2, v3, v4}, Landroid/app/Notification$Builder;-><init>(Landroid/content/Context;Ljava/lang/String;)V

    const v3, 0x1080a98

    .line 6323
    invoke-virtual {v2, v3}, Landroid/app/Notification$Builder;->setSmallIcon(I)Landroid/app/Notification$Builder;

    move-result-object v2

    const-wide/16 v3, 0x0

    .line 6324
    invoke-virtual {v2, v3, v4}, Landroid/app/Notification$Builder;->setWhen(J)Landroid/app/Notification$Builder;

    move-result-object v2

    const/4 v3, 0x1

    .line 6325
    invoke-virtual {v2, v3}, Landroid/app/Notification$Builder;->setOngoing(Z)Landroid/app/Notification$Builder;

    move-result-object v2

    .line 6326
    invoke-virtual {v2, v0}, Landroid/app/Notification$Builder;->setTicker(Ljava/lang/CharSequence;)Landroid/app/Notification$Builder;

    move-result-object v2

    const/4 v4, 0x0

    .line 6327
    invoke-virtual {v2, v4}, Landroid/app/Notification$Builder;->setDefaults(I)Landroid/app/Notification$Builder;

    move-result-object v2

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const v5, 0x106001c

    .line 6328
    invoke-virtual {v4, v5}, Landroid/content/Context;->getColor(I)I

    move-result v4

    invoke-virtual {v2, v4}, Landroid/app/Notification$Builder;->setColor(I)Landroid/app/Notification$Builder;

    move-result-object v2

    .line 6331
    invoke-virtual {v2, v0}, Landroid/app/Notification$Builder;->setContentTitle(Ljava/lang/CharSequence;)Landroid/app/Notification$Builder;

    move-result-object v0

    .line 6332
    invoke-virtual {v0, v1}, Landroid/app/Notification$Builder;->setContentText(Ljava/lang/CharSequence;)Landroid/app/Notification$Builder;

    move-result-object v0

    .line 6333
    invoke-virtual {v0, v3}, Landroid/app/Notification$Builder;->setVisibility(I)Landroid/app/Notification$Builder;

    move-result-object v0

    .line 6334
    invoke-virtual {v0}, Landroid/app/Notification$Builder;->build()Landroid/app/Notification;

    move-result-object v0

    .line 6336
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-class v1, Landroid/app/NotificationManager;

    .line 6337
    invoke-virtual {p0, v1}, Landroid/content/Context;->getSystemService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object p0

    check-cast p0, Landroid/app/NotificationManager;

    const/16 v1, 0x37

    .line 6338
    sget-object v2, Landroid/os/UserHandle;->ALL:Landroid/os/UserHandle;

    const/4 v3, 0x0

    invoke-virtual {p0, v3, v1, v0, v2}, Landroid/app/NotificationManager;->notifyAsUser(Ljava/lang/String;ILandroid/app/Notification;Landroid/os/UserHandle;)V

    return-void
.end method

.method public final showMteOverrideNotificationIfActive()V
    .locals 6

    const-string v0, "arm64.memtag.bootctl"

    .line 6344
    invoke-static {v0}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    const-string v1, ","

    .line 6350
    invoke-virtual {v0, v1}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;

    move-result-object v0

    const-string/jumbo v1, "memtag"

    invoke-interface {v0, v1}, Ljava/util/List;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_1

    const-string/jumbo v0, "ro.arm64.memtag.bootctl_supported"

    const/4 v1, 0x0

    .line 6351
    invoke-static {v0, v1}, Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 6352
    invoke-static {}, Lcom/android/internal/os/Zygote;->nativeSupportsMemoryTagging()Z

    move-result v0

    if-nez v0, :cond_0

    goto :goto_0

    .line 6355
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const v2, 0x1040820

    .line 6356
    invoke-virtual {v0, v2}, Landroid/content/Context;->getString(I)Ljava/lang/String;

    move-result-object v0

    .line 6357
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const v3, 0x104081f

    .line 6358
    invoke-virtual {v2, v3}, Landroid/content/Context;->getString(I)Ljava/lang/String;

    move-result-object v2

    .line 6359
    new-instance v3, Landroid/app/Notification$Builder;

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    sget-object v5, Lcom/android/internal/notification/SystemNotificationChannels;->DEVELOPER:Ljava/lang/String;

    invoke-direct {v3, v4, v5}, Landroid/app/Notification$Builder;-><init>(Landroid/content/Context;Ljava/lang/String;)V

    const v4, 0x1080a98

    .line 6361
    invoke-virtual {v3, v4}, Landroid/app/Notification$Builder;->setSmallIcon(I)Landroid/app/Notification$Builder;

    move-result-object v3

    const/4 v4, 0x1

    .line 6362
    invoke-virtual {v3, v4}, Landroid/app/Notification$Builder;->setOngoing(Z)Landroid/app/Notification$Builder;

    move-result-object v3

    .line 6363
    invoke-virtual {v3, v0}, Landroid/app/Notification$Builder;->setTicker(Ljava/lang/CharSequence;)Landroid/app/Notification$Builder;

    move-result-object v3

    .line 6364
    invoke-virtual {v3, v1}, Landroid/app/Notification$Builder;->setDefaults(I)Landroid/app/Notification$Builder;

    move-result-object v1

    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const v5, 0x106001c

    .line 6365
    invoke-virtual {v3, v5}, Landroid/content/Context;->getColor(I)I

    move-result v3

    invoke-virtual {v1, v3}, Landroid/app/Notification$Builder;->setColor(I)Landroid/app/Notification$Builder;

    move-result-object v1

    .line 6368
    invoke-virtual {v1, v0}, Landroid/app/Notification$Builder;->setContentTitle(Ljava/lang/CharSequence;)Landroid/app/Notification$Builder;

    move-result-object v0

    .line 6369
    invoke-virtual {v0, v2}, Landroid/app/Notification$Builder;->setContentText(Ljava/lang/CharSequence;)Landroid/app/Notification$Builder;

    move-result-object v0

    .line 6370
    invoke-virtual {v0, v4}, Landroid/app/Notification$Builder;->setVisibility(I)Landroid/app/Notification$Builder;

    move-result-object v0

    .line 6371
    invoke-virtual {v0}, Landroid/app/Notification$Builder;->build()Landroid/app/Notification;

    move-result-object v0

    .line 6373
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-class v1, Landroid/app/NotificationManager;

    .line 6374
    invoke-virtual {p0, v1}, Landroid/content/Context;->getSystemService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object p0

    check-cast p0, Landroid/app/NotificationManager;

    const/16 v1, 0x45

    .line 6375
    sget-object v2, Landroid/os/UserHandle;->ALL:Landroid/os/UserHandle;

    const/4 v3, 0x0

    invoke-virtual {p0, v3, v1, v0, v2}, Landroid/app/NotificationManager;->notifyAsUser(Ljava/lang/String;ILandroid/app/Notification;Landroid/os/UserHandle;)V

    :cond_1
    :goto_0
    return-void
.end method

.method public final showRescuePartyDialog()V
    .locals 2

    const-string/jumbo v0, "persist.sys.emergency_reset"

    const-string v1, ""

    .line 24514
    invoke-static {v0, v1}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    const-string v1, "emergency"

    .line 24513
    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 24515
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {p0}, Lcom/android/server/wm/ActivityTaskManagerInternal;->showRescuePartyDialog()V

    :cond_0
    return-void
.end method

.method public final showSafeModeOverlay()V
    .locals 3

    .line 10020
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-static {v0}, Landroid/view/LayoutInflater;->from(Landroid/content/Context;)Landroid/view/LayoutInflater;

    move-result-object v0

    const v1, 0x109011f

    const/4 v2, 0x0

    invoke-virtual {v0, v1, v2}, Landroid/view/LayoutInflater;->inflate(ILandroid/view/ViewGroup;)Landroid/view/View;

    move-result-object v0

    .line 10022
    new-instance v1, Landroid/view/WindowManager$LayoutParams;

    invoke-direct {v1}, Landroid/view/WindowManager$LayoutParams;-><init>()V

    const/16 v2, 0x7df

    .line 10023
    iput v2, v1, Landroid/view/WindowManager$LayoutParams;->type:I

    const/4 v2, -0x2

    .line 10024
    iput v2, v1, Landroid/view/WindowManager$LayoutParams;->width:I

    .line 10025
    iput v2, v1, Landroid/view/WindowManager$LayoutParams;->height:I

    const v2, 0x800053

    .line 10026
    iput v2, v1, Landroid/view/WindowManager$LayoutParams;->gravity:I

    .line 10027
    invoke-virtual {v0}, Landroid/view/View;->getBackground()Landroid/graphics/drawable/Drawable;

    move-result-object v2

    invoke-virtual {v2}, Landroid/graphics/drawable/Drawable;->getOpacity()I

    move-result v2

    iput v2, v1, Landroid/view/WindowManager$LayoutParams;->format:I

    const/16 v2, 0x18

    .line 10028
    iput v2, v1, Landroid/view/WindowManager$LayoutParams;->flags:I

    .line 10030
    iget v2, v1, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    or-int/lit8 v2, v2, 0x10

    iput v2, v1, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    .line 10031
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-string/jumbo v2, "window"

    invoke-virtual {p0, v2}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object p0

    check-cast p0, Landroid/view/WindowManager;

    .line 10032
    invoke-interface {p0, v0, v1}, Landroid/view/WindowManager;->addView(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V

    return-void
.end method

.method public showWaitingForDebugger(Landroid/app/IApplicationThread;Z)V
    .locals 3

    .line 8052
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v0

    if-eqz p1, :cond_0

    .line 8053
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLOSP(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object p1

    goto :goto_0

    :catchall_0
    move-exception p0

    goto :goto_2

    :cond_0
    const/4 p1, 0x0

    :goto_0
    if-nez p1, :cond_1

    .line 8054
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return-void

    .line 8056
    :cond_1
    :try_start_1
    invoke-static {}, Landroid/os/Message;->obtain()Landroid/os/Message;

    move-result-object v1

    const/4 v2, 0x6

    .line 8057
    iput v2, v1, Landroid/os/Message;->what:I

    .line 8058
    iput-object p1, v1, Landroid/os/Message;->obj:Ljava/lang/Object;

    if-eqz p2, :cond_2

    const/4 p1, 0x1

    goto :goto_1

    :cond_2
    const/4 p1, 0x0

    .line 8059
    :goto_1
    iput p1, v1, Landroid/os/Message;->arg1:I

    .line 8060
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Landroid/os/Handler;

    invoke-virtual {p0, v1}, Landroid/os/Handler;->sendMessage(Landroid/os/Message;)Z

    .line 8061
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return-void

    :goto_2
    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p0
.end method

.method public shutdown(I)Z
    .locals 2

    const-string v0, "android.permission.SHUTDOWN"

    .line 9069
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_2

    .line 9076
    sget-boolean v0, Lcom/samsung/android/rune/CoreRune;->MNO_TMO_DEVICE_REPORTING:Z

    if-eqz v0, :cond_0

    const-string v0, "ActivityManager"

    const-string v1, "TMO shutdown"

    .line 9077
    invoke-static {v0, v1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 9078
    invoke-static {}, Lcom/android/server/am/AppStateBroadcaster;->disableIntentBroadcast()V

    .line 9079
    invoke-static {}, Lcom/sec/tmodiagnostics/DeviceReportingSecurityChecker;->disable()V

    .line 9088
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    iget-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    invoke-virtual {v0, v1, p1}, Lcom/android/server/wm/ActivityTaskManagerInternal;->shuttingDown(ZI)Z

    move-result p1

    .line 9095
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    invoke-virtual {v0}, Lcom/android/server/appop/AppOpsService;->shutdown()V

    .line 9096
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    if-eqz v0, :cond_1

    .line 9102
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    invoke-virtual {v0}, Landroid/app/usage/UsageStatsManagerInternal;->prepareShutdown()V

    .line 9109
    :cond_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v0}, Lcom/android/server/am/BatteryStatsService;->shutdown()V

    .line 9115
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {v0}, Lcom/android/server/am/ProcessStatsService;->shutdown()V

    .line 9119
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getBinderStatsServiceInternal()Lcom/android/server/BinderCallsStatsService$Internal;

    move-result-object p0

    .line 9125
    invoke-virtual {p0}, Lcom/android/server/BinderCallsStatsService$Internal;->shutdown()V

    return p1

    .line 9071
    :cond_2
    new-instance p0, Ljava/lang/SecurityException;

    const-string p1, "Requires permission android.permission.SHUTDOWN"

    invoke-direct {p0, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p0
.end method

.method public signalPersistentProcesses(I)V
    .locals 2

    const/16 v0, 0xa

    if-ne p1, v0, :cond_1

    const-string v0, "android.permission.SIGNAL_PERSISTENT_PROCESSES"

    .line 19875
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_0

    .line 19881
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v0

    .line 19882
    :try_start_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    new-instance v1, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda2;

    invoke-direct {v1, p1}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda2;-><init>(I)V

    const/4 p1, 0x0

    invoke-virtual {p0, p1, v1}, Lcom/android/server/am/ProcessList;->forEachLruProcessesLOSP(ZLjava/util/function/Consumer;)V

    .line 19887
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return-void

    :catchall_0
    move-exception p0

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p0

    .line 19877
    :cond_0
    new-instance p0, Ljava/lang/SecurityException;

    const-string p1, "Requires permission android.permission.SIGNAL_PERSISTENT_PROCESSES"

    invoke-direct {p0, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 19872
    :cond_1
    new-instance p0, Ljava/lang/SecurityException;

    const-string p1, "Only SIGNAL_USR1 is allowed"

    invoke-direct {p0, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p0
.end method

.method public final start()V
    .locals 2

    .line 2988
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v0}, Lcom/android/server/am/BatteryStatsService;->publish()V

    .line 2989
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    invoke-virtual {v0}, Lcom/android/server/appop/AppOpsService;->publish()V

    .line 2990
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {v0}, Lcom/android/server/am/ProcessStatsService;->publish()V

    const-string v0, "AppOps"

    const-string v1, "AppOpsService published"

    .line 2991
    invoke-static {v0, v1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 2992
    const-class v0, Landroid/app/ActivityManagerInternal;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mInternal:Landroid/app/ActivityManagerInternal;

    invoke-static {v0, v1}, Lcom/android/server/LocalServices;->addService(Ljava/lang/Class;Ljava/lang/Object;)V

    .line 2993
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mInternal:Landroid/app/ActivityManagerInternal;

    check-cast v0, Lcom/android/server/am/ActivityManagerLocal;

    const-class v1, Lcom/android/server/am/ActivityManagerLocal;

    invoke-static {v1, v0}, Lcom/android/server/LocalManagerRegistry;->addManager(Ljava/lang/Class;Ljava/lang/Object;)V

    .line 2995
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v0}, Lcom/android/server/wm/ActivityTaskManagerService;->onActivityManagerInternalAdded()V

    .line 2996
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingIntentController:Lcom/android/server/am/PendingIntentController;

    invoke-virtual {v0}, Lcom/android/server/am/PendingIntentController;->onActivityManagerInternalAdded()V

    .line 2997
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {p0}, Lcom/android/server/am/AppProfiler;->onActivityManagerInternalAdded()V

    .line 2998
    invoke-static {}, Lcom/android/server/criticalevents/CriticalEventLog;->init()V

    return-void
.end method

.method public startActivity(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;)I
    .locals 12

    move-object v0, p0

    .line 3795
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    const/4 v3, 0x0

    move-object v1, p1

    move-object v2, p2

    move-object v4, p3

    move-object/from16 v5, p4

    move-object/from16 v6, p5

    move-object/from16 v7, p6

    move/from16 v8, p7

    move/from16 v9, p8

    move-object/from16 v10, p9

    move-object/from16 v11, p10

    invoke-virtual/range {v0 .. v11}, Lcom/android/server/wm/ActivityTaskManagerService;->startActivity(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;)I

    move-result v0

    return v0
.end method

.method public startActivityAndWait(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)Landroid/app/WaitResult;
    .locals 13

    move-object v0, p0

    .line 3834
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    move-object v1, p1

    move-object v2, p2

    move-object/from16 v3, p3

    move-object/from16 v4, p4

    move-object/from16 v5, p5

    move-object/from16 v6, p6

    move-object/from16 v7, p7

    move/from16 v8, p8

    move/from16 v9, p9

    move-object/from16 v10, p10

    move-object/from16 v11, p11

    move/from16 v12, p12

    invoke-virtual/range {v0 .. v12}, Lcom/android/server/wm/ActivityTaskManagerService;->startActivityAndWait(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)Landroid/app/WaitResult;

    move-result-object v0

    return-object v0
.end method

.method public final startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I
    .locals 13

    const/4 v3, 0x0

    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move-object/from16 v4, p3

    move-object/from16 v5, p4

    move-object/from16 v6, p5

    move-object/from16 v7, p6

    move/from16 v8, p7

    move/from16 v9, p8

    move-object/from16 v10, p9

    move-object/from16 v11, p10

    move/from16 v12, p11

    .line 3816
    invoke-virtual/range {v0 .. v12}, Lcom/android/server/am/ActivityManagerService;->startActivityAsUserWithFeature(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I

    move-result v0

    return v0
.end method

.method public final startActivityAsUserWithFeature(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I
    .locals 13

    move-object v0, p0

    .line 3825
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    move-object v1, p1

    move-object v2, p2

    move-object/from16 v3, p3

    move-object/from16 v4, p4

    move-object/from16 v5, p5

    move-object/from16 v6, p6

    move-object/from16 v7, p7

    move/from16 v8, p8

    move/from16 v9, p9

    move-object/from16 v10, p10

    move-object/from16 v11, p11

    move/from16 v12, p12

    invoke-virtual/range {v0 .. v12}, Lcom/android/server/wm/ActivityTaskManagerService;->startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I

    move-result v0

    return v0
.end method

.method public final startActivityFromRecents(ILandroid/os/Bundle;)I
    .locals 0

    .line 3841
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {p0, p1, p2}, Lcom/android/server/wm/ActivityTaskManagerService;->startActivityFromRecents(ILandroid/os/Bundle;)I

    move-result p0

    return p0
.end method

.method public startActivityWithFeature(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;)I
    .locals 12

    move-object v0, p0

    .line 3804
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    move-object v1, p1

    move-object v2, p2

    move-object v3, p3

    move-object/from16 v4, p4

    move-object/from16 v5, p5

    move-object/from16 v6, p6

    move-object/from16 v7, p7

    move/from16 v8, p8

    move/from16 v9, p9

    move-object/from16 v10, p10

    move-object/from16 v11, p11

    invoke-virtual/range {v0 .. v11}, Lcom/android/server/wm/ActivityTaskManagerService;->startActivity(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;)I

    move-result v0

    return v0
.end method

.method public startAssociationLocked(ILjava/lang/String;IIJLandroid/content/ComponentName;Ljava/lang/String;)Lcom/android/server/am/ActivityManagerService$Association;
    .locals 6

    .line 19099
    iget-boolean p5, p0, Lcom/android/server/am/ActivityManagerService;->mTrackingAssociations:Z

    if-nez p5, :cond_0

    const/4 p0, 0x0

    return-object p0

    .line 19102
    :cond_0
    iget-object p5, p0, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    .line 19103
    invoke-virtual {p5, p4}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object p5

    check-cast p5, Landroid/util/ArrayMap;

    if-nez p5, :cond_1

    .line 19105
    new-instance p5, Landroid/util/ArrayMap;

    invoke-direct {p5}, Landroid/util/ArrayMap;-><init>()V

    .line 19106
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    invoke-virtual {p0, p4, p5}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 19108
    :cond_1
    invoke-virtual {p5, p7}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p0

    check-cast p0, Landroid/util/SparseArray;

    if-nez p0, :cond_2

    .line 19110
    new-instance p0, Landroid/util/SparseArray;

    invoke-direct {p0}, Landroid/util/SparseArray;-><init>()V

    .line 19111
    invoke-virtual {p5, p7, p0}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 19113
    :cond_2
    invoke-virtual {p0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object p5

    check-cast p5, Landroid/util/ArrayMap;

    if-nez p5, :cond_3

    .line 19115
    new-instance p5, Landroid/util/ArrayMap;

    invoke-direct {p5}, Landroid/util/ArrayMap;-><init>()V

    .line 19116
    invoke-virtual {p0, p1, p5}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 19118
    :cond_3
    invoke-virtual {p5, p2}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p0

    check-cast p0, Lcom/android/server/am/ActivityManagerService$Association;

    if-nez p0, :cond_4

    .line 19120
    new-instance p0, Lcom/android/server/am/ActivityManagerService$Association;

    move-object v0, p0

    move v1, p1

    move-object v2, p2

    move v3, p4

    move-object v4, p7

    move-object v5, p8

    invoke-direct/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService$Association;-><init>(ILjava/lang/String;ILandroid/content/ComponentName;Ljava/lang/String;)V

    .line 19122
    invoke-virtual {p5, p2, p0}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 19124
    :cond_4
    iget p1, p0, Lcom/android/server/am/ActivityManagerService$Association;->mCount:I

    const/4 p2, 0x1

    add-int/2addr p1, p2

    iput p1, p0, Lcom/android/server/am/ActivityManagerService$Association;->mCount:I

    .line 19125
    iget p1, p0, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    add-int/2addr p1, p2

    iput p1, p0, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    if-ne p1, p2, :cond_5

    .line 19127
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide p1

    iput-wide p1, p0, Lcom/android/server/am/ActivityManagerService$Association;->mLastStateUptime:J

    iput-wide p1, p0, Lcom/android/server/am/ActivityManagerService$Association;->mStartTime:J

    .line 19128
    iput p3, p0, Lcom/android/server/am/ActivityManagerService$Association;->mLastState:I

    :cond_5
    return-object p0
.end method

.method public startBinderTracking()Z
    .locals 4

    const-string v0, "android.permission.SET_ACTIVITY_WATCHER"

    .line 20359
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_0

    .line 20365
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v0

    const/4 v1, 0x1

    .line 20366
    :try_start_0
    iput-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mBinderTransactionTrackingEnabled:Z

    .line 20367
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    new-instance v3, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda15;

    invoke-direct {v3, p0}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda15;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-virtual {v2, v1, v3}, Lcom/android/server/am/ProcessList;->forEachLruProcessesLOSP(ZLjava/util/function/Consumer;)V

    .line 20378
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return v1

    :catchall_0
    move-exception p0

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p0

    .line 20361
    :cond_0
    new-instance p0, Ljava/lang/SecurityException;

    const-string v0, "Requires permission android.permission.SET_ACTIVITY_WATCHER"

    invoke-direct {p0, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p0
.end method

.method public final startBroadcastObservers()V
    .locals 5

    .line 10910
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v1, v0

    const/4 v2, 0x0

    :goto_0
    if-ge v2, v1, :cond_0

    aget-object v3, v0, v2

    .line 10911
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v4}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v4

    invoke-virtual {v3, v4}, Lcom/android/server/am/BroadcastQueue;->start(Landroid/content/ContentResolver;)V

    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    :cond_0
    return-void
.end method

.method public startConfirmDeviceCredentialIntent(Landroid/content/Intent;Landroid/os/Bundle;)V
    .locals 0

    .line 9139
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {p0, p1, p2}, Lcom/android/server/wm/ActivityTaskManagerInternal;->startConfirmDeviceCredentialIntent(Landroid/content/Intent;Landroid/os/Bundle;)V

    return-void
.end method

.method public startDelegateShellPermissionIdentity(I[Ljava/lang/String;)V
    .locals 5

    .line 23257
    invoke-static {}, Landroid/os/UserHandle;->getCallingAppId()I

    move-result v0

    const/16 v1, 0x7d0

    if-eq v0, v1, :cond_1

    .line 23258
    invoke-static {}, Landroid/os/UserHandle;->getCallingAppId()I

    move-result v0

    if-nez v0, :cond_0

    goto :goto_0

    .line 23259
    :cond_0
    new-instance p0, Ljava/lang/SecurityException;

    const-string p1, "Only the shell can delegate its permissions"

    invoke-direct {p0, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 23263
    :cond_1
    :goto_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v0

    .line 23265
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    invoke-virtual {v1}, Lcom/android/server/appop/AppOpsService;->getAppOpsServiceDelegate()Landroid/app/AppOpsManagerInternal$CheckOpsDelegate;

    move-result-object v1

    if-eqz v1, :cond_4

    .line 23266
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    invoke-virtual {v1}, Lcom/android/server/appop/AppOpsService;->getAppOpsServiceDelegate()Landroid/app/AppOpsManagerInternal$CheckOpsDelegate;

    move-result-object v1

    instance-of v1, v1, Lcom/android/server/am/ActivityManagerService$ShellDelegate;

    if-eqz v1, :cond_3

    .line 23269
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    .line 23270
    invoke-virtual {v1}, Lcom/android/server/appop/AppOpsService;->getAppOpsServiceDelegate()Landroid/app/AppOpsManagerInternal$CheckOpsDelegate;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ActivityManagerService$ShellDelegate;

    .line 23271
    invoke-virtual {v1}, Lcom/android/server/am/ActivityManagerService$ShellDelegate;->getDelegateUid()I

    move-result v1

    if-ne v1, p1, :cond_2

    goto :goto_1

    .line 23272
    :cond_2
    new-instance p0, Ljava/lang/SecurityException;

    const-string p1, "Shell can delegate permissions only to one instrumentation at a time"

    invoke-direct {p0, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 23267
    :cond_3
    new-instance p0, Ljava/lang/IllegalStateException;

    const-string p1, "Bad shell delegate state"

    invoke-direct {p0, p1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 23277
    :cond_4
    :goto_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mActiveInstrumentation:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    const/4 v2, 0x0

    :goto_2
    if-ge v2, v1, :cond_8

    .line 23279
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mActiveInstrumentation:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ActiveInstrumentation;

    .line 23280
    iget-object v4, v3, Lcom/android/server/am/ActiveInstrumentation;->mTargetInfo:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    if-eq v4, p1, :cond_5

    add-int/lit8 v2, v2, 0x1

    goto :goto_2

    .line 23284
    :cond_5
    iget-object v1, v3, Lcom/android/server/am/ActiveInstrumentation;->mUiAutomationConnection:Landroid/app/IUiAutomationConnection;

    if-eqz v1, :cond_7

    .line 23290
    new-instance v1, Lcom/android/server/am/ActivityManagerService$ShellDelegate;

    invoke-direct {v1, p0, p1, p2}, Lcom/android/server/am/ActivityManagerService$ShellDelegate;-><init>(Lcom/android/server/am/ActivityManagerService;I[Ljava/lang/String;)V

    .line 23292
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    invoke-virtual {v2, v1}, Lcom/android/server/appop/AppOpsService;->setAppOpsServiceDelegate(Landroid/app/AppOpsManagerInternal$CheckOpsDelegate;)V

    .line 23293
    iget-object v1, v3, Lcom/android/server/am/ActiveInstrumentation;->mTargetInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v1, v1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    if-eqz p2, :cond_6

    .line 23295
    invoke-static {p2}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;

    move-result-object p2

    goto :goto_3

    :cond_6
    const/4 p2, 0x0

    .line 23296
    :goto_3
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getPermissionManagerInternal()Lcom/android/server/pm/permission/PermissionManagerServiceInternal;

    move-result-object p0

    invoke-interface {p0, p1, v1, p2}, Lcom/android/server/pm/permission/PermissionManagerServiceInternal;->startShellPermissionIdentityDelegation(ILjava/lang/String;Ljava/util/List;)V

    .line 23298
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return-void

    .line 23285
    :cond_7
    :try_start_1
    new-instance p0, Ljava/lang/SecurityException;

    const-string p1, "Shell can delegate its permissions only to an instrumentation started from the shell"

    invoke-direct {p0, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 23300
    :cond_8
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return-void

    :catchall_0
    move-exception p0

    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p0
.end method

.method public final startImsService(Ljava/lang/String;)V
    .locals 2

    .line 6799
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "[IMS-AM] startImsService() Start ["

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "] of active user ["

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 6800
    invoke-static {}, Landroid/app/ActivityManager;->getCurrentUser()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, "]"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "ActivityManager"

    .line 6799
    invoke-static {v1, v0}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 6801
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    new-instance v0, Landroid/content/Intent;

    const-string v1, "com.sec.sve.service.SecVideoEngineService"

    invoke-direct {v0, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 6803
    invoke-virtual {v0, p1}, Landroid/content/Intent;->setPackage(Ljava/lang/String;)Landroid/content/Intent;

    move-result-object p1

    sget-object v0, Landroid/os/UserHandle;->CURRENT:Landroid/os/UserHandle;

    .line 6801
    invoke-virtual {p0, p1, v0}, Landroid/content/Context;->startServiceAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)Landroid/content/ComponentName;

    return-void
.end method

.method public startInstrumentation(Landroid/content/ComponentName;Ljava/lang/String;ILandroid/os/Bundle;Landroid/app/IInstrumentationWatcher;Landroid/app/IUiAutomationConnection;ILjava/lang/String;)Z
    .locals 26

    move-object/from16 v14, p0

    move-object/from16 v0, p1

    move-object/from16 v4, p4

    move-object/from16 v5, p5

    const-string/jumbo v1, "startInstrumentation"

    .line 18423
    invoke-virtual {v14, v1}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 18424
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v15

    .line 18425
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    .line 18426
    iget-object v6, v14, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    const/4 v10, 0x0

    const/4 v11, 0x2

    const-string/jumbo v12, "startInstrumentation"

    const/4 v13, 0x0

    move v7, v1

    move v8, v15

    move/from16 v9, p7

    invoke-virtual/range {v6 .. v13}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result v11

    const/4 v2, 0x0

    const/4 v12, 0x0

    if-nez v1, :cond_0

    .line 18430
    invoke-static {}, Lcom/android/server/am/mars/database/MARsVersionManager;->getInstance()Lcom/android/server/am/mars/database/MARsVersionManager;

    move-result-object v3

    const/16 v6, 0xe

    .line 18431
    invoke-virtual/range {p1 .. p1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v7

    .line 18430
    invoke-virtual {v3, v6, v7, v2, v2}, Lcom/android/server/am/mars/database/MARsVersionManager;->isAdjustRestrictionMatch(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v3

    if-eqz v3, :cond_0

    return v12

    :cond_0
    if-eqz v4, :cond_2

    .line 18436
    invoke-virtual/range {p4 .. p4}, Landroid/os/Bundle;->hasFileDescriptors()Z

    move-result v3

    if-nez v3, :cond_1

    goto :goto_0

    .line 18437
    :cond_1
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "File descriptors passed in Bundle"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 18439
    :cond_2
    :goto_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v3

    .line 18441
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    and-int/lit8 v6, p3, 0x8

    const/4 v13, 0x1

    if-eqz v6, :cond_3

    move v10, v13

    goto :goto_1

    :cond_3
    move v10, v12

    :goto_1
    const/16 v6, 0x400

    .line 18448
    :try_start_0
    invoke-interface {v3, v0, v6, v11}, Landroid/content/pm/IPackageManager;->getInstrumentationInfoAsUser(Landroid/content/ComponentName;II)Landroid/content/pm/InstrumentationInfo;

    move-result-object v6
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_1
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-nez v6, :cond_4

    .line 18450
    :try_start_1
    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "Unable to find instrumentation info for: "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v14, v5, v0, v7}, Lcom/android/server/am/ActivityManagerService;->reportStartInstrumentationFailureLocked(Landroid/app/IInstrumentationWatcher;Landroid/content/ComponentName;Ljava/lang/String;)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 18452
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v12

    .line 18454
    :cond_4
    :try_start_3
    iget-object v7, v6, Landroid/content/pm/InstrumentationInfo;->targetPackage:Ljava/lang/String;

    const-wide/16 v8, 0x400

    invoke-interface {v3, v7, v8, v9, v11}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;JI)Landroid/content/pm/ApplicationInfo;

    move-result-object v2

    if-nez v2, :cond_5

    .line 18456
    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "Unable to find instrumentation target package: "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v8, v6, Landroid/content/pm/InstrumentationInfo;->targetPackage:Ljava/lang/String;

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v14, v5, v0, v7}, Lcom/android/server/am/ActivityManagerService;->reportStartInstrumentationFailureLocked(Landroid/app/IInstrumentationWatcher;Landroid/content/ComponentName;Ljava/lang/String;)V
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_0
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 18458
    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v12

    :cond_5
    move-object v8, v2

    move-object v9, v6

    goto :goto_3

    :catch_0
    move-object/from16 v25, v6

    move-object v6, v2

    move-object/from16 v2, v25

    goto :goto_2

    :catchall_0
    move-exception v0

    goto/16 :goto_12

    :catch_1
    move-object v6, v2

    :goto_2
    move-object v9, v2

    move-object v8, v6

    .line 18463
    :goto_3
    :try_start_5
    iget-object v2, v9, Landroid/content/pm/InstrumentationInfo;->targetPackage:Ljava/lang/String;

    const-string v6, "android"

    invoke-virtual {v2, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_6

    if-nez v10, :cond_7

    const-string v1, "Cannot instrument system server without \'no-restart\'"

    .line 18465
    invoke-virtual {v14, v5, v0, v1}, Lcom/android/server/am/ActivityManagerService;->reportStartInstrumentationFailureLocked(Landroid/app/IInstrumentationWatcher;Landroid/content/ComponentName;Ljava/lang/String;)V

    .line 18467
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v12

    .line 18469
    :cond_6
    :try_start_6
    invoke-virtual {v8}, Landroid/content/pm/ApplicationInfo;->hasCode()Z

    move-result v2

    if-nez v2, :cond_7

    .line 18470
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Instrumentation target has no code: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v9, Landroid/content/pm/InstrumentationInfo;->targetPackage:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v14, v5, v0, v1}, Lcom/android/server/am/ActivityManagerService;->reportStartInstrumentationFailureLocked(Landroid/app/IInstrumentationWatcher;Landroid/content/ComponentName;Ljava/lang/String;)V

    .line 18472
    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v12

    .line 18477
    :cond_7
    :try_start_7
    iget-object v2, v9, Landroid/content/pm/InstrumentationInfo;->targetPackage:Ljava/lang/String;

    iget-object v6, v9, Landroid/content/pm/InstrumentationInfo;->packageName:Ljava/lang/String;

    invoke-interface {v3, v2, v6, v11}, Landroid/content/pm/IPackageManager;->checkSignatures(Ljava/lang/String;Ljava/lang/String;I)I

    move-result v2
    :try_end_7
    .catch Landroid/os/RemoteException; {:try_start_7 .. :try_end_7} :catch_2
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    goto :goto_4

    :catch_2
    const/4 v2, -0x3

    :goto_4
    if-gez v2, :cond_9

    const/4 v3, -0x1

    if-eq v2, v3, :cond_9

    .line 18481
    :try_start_8
    sget-boolean v2, Landroid/os/Build;->IS_DEBUGGABLE:Z

    if-eqz v2, :cond_8

    if-nez v15, :cond_8

    and-int/lit8 v2, p3, 0x10

    if-nez v2, :cond_8

    const-string v2, "ActivityManager"

    .line 18483
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Instrumentation test "

    invoke-virtual {v3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v6, v9, Landroid/content/pm/InstrumentationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v6, " doesn\'t have a signature matching the target "

    invoke-virtual {v3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v6, v9, Landroid/content/pm/InstrumentationInfo;->targetPackage:Ljava/lang/String;

    invoke-virtual {v3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v6, ", which would not be allowed on the production Android builds"

    invoke-virtual {v3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_5

    .line 18487
    :cond_8
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Permission Denial: starting instrumentation "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v2, " from pid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 18489
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, ", uid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 18490
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, " not allowed because package "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v9, Landroid/content/pm/InstrumentationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, " does not have a signature matching the target "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v9, Landroid/content/pm/InstrumentationInfo;->targetPackage:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    .line 18494
    invoke-virtual {v14, v5, v0, v1}, Lcom/android/server/am/ActivityManagerService;->reportStartInstrumentationFailureLocked(Landroid/app/IInstrumentationWatcher;Landroid/content/ComponentName;Ljava/lang/String;)V

    .line 18495
    new-instance v0, Ljava/lang/SecurityException;

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 18499
    :cond_9
    :goto_5
    sget-boolean v2, Landroid/os/Build;->IS_DEBUGGABLE:Z

    if-nez v2, :cond_b

    if-eqz v15, :cond_b

    const/16 v2, 0x7d0

    if-eq v15, v2, :cond_b

    const/16 v2, 0x3e8

    if-eq v15, v2, :cond_b

    .line 18500
    invoke-virtual {v14, v1}, Lcom/android/server/am/ActivityManagerService;->hasActiveInstrumentationLocked(I)Z

    move-result v2

    if-eqz v2, :cond_a

    goto :goto_6

    .line 18502
    :cond_a
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Permission Denial: instrumentation test "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v3, " from pid="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ", uid="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v15}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ", pkgName="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v3, v14, Lcom/android/server/am/ActivityManagerService;->mInternal:Landroid/app/ActivityManagerInternal;

    .line 18504
    invoke-virtual {v3, v1}, Landroid/app/ActivityManagerInternal;->getPackageNameByPid(I)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, " not allowed because it\'s not started from SHELL"

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    const-string v2, "ActivityManager"

    .line 18506
    invoke-static {v2, v1}, Landroid/util/Slog;->wtfQuiet(Ljava/lang/String;Ljava/lang/String;)V

    .line 18507
    invoke-virtual {v14, v5, v0, v1}, Lcom/android/server/am/ActivityManagerService;->reportStartInstrumentationFailureLocked(Landroid/app/IInstrumentationWatcher;Landroid/content/ComponentName;Ljava/lang/String;)V

    .line 18508
    new-instance v0, Ljava/lang/SecurityException;

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 18511
    :cond_b
    :goto_6
    invoke-virtual {v8}, Landroid/content/pm/ApplicationInfo;->usesNonSdkApi()Z

    move-result v2

    if-nez v2, :cond_d

    and-int/lit8 v2, p3, 0x1

    if-eqz v2, :cond_c

    goto :goto_7

    :cond_c
    move/from16 v16, v12

    goto :goto_8

    :cond_d
    :goto_7
    move/from16 v16, v13

    :goto_8
    if-nez v16, :cond_f

    and-int/lit8 v2, p3, 0x4

    if-eqz v2, :cond_e

    goto :goto_9

    :cond_e
    move/from16 v17, v12

    goto :goto_a

    :cond_f
    :goto_9
    move/from16 v17, v13

    :goto_a
    if-nez v16, :cond_10

    if-eqz v17, :cond_11

    :cond_10
    const-string v2, "android.permission.DISABLE_HIDDEN_API_CHECKS"

    const-string v3, "disable hidden API checks"

    .line 18517
    invoke-virtual {v14, v2, v3}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    :cond_11
    and-int/lit8 v2, p3, 0x20

    if-eqz v2, :cond_12

    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object/from16 v4, p4

    move-object/from16 v5, p5

    move-object/from16 v6, p6

    move v7, v11

    move-object v0, v8

    move-object/from16 v8, p8

    move v11, v10

    move-object v10, v0

    move/from16 v12, v16

    move/from16 v13, v17

    .line 18522
    invoke-virtual/range {v1 .. v13}, Lcom/android/server/am/ActivityManagerService;->startInstrumentationOfSdkSandbox(Landroid/content/ComponentName;Ljava/lang/String;Landroid/os/Bundle;Landroid/app/IInstrumentationWatcher;Landroid/app/IUiAutomationConnection;ILjava/lang/String;Landroid/content/pm/InstrumentationInfo;Landroid/content/pm/ApplicationInfo;ZZZ)Z

    move-result v0

    monitor-exit p0
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v0

    .line 18537
    :cond_12
    :try_start_9
    new-instance v7, Lcom/android/server/am/ActiveInstrumentation;

    invoke-direct {v7, v14}, Lcom/android/server/am/ActiveInstrumentation;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    .line 18538
    iput-object v0, v7, Lcom/android/server/am/ActiveInstrumentation;->mClass:Landroid/content/ComponentName;

    .line 18539
    iget-object v2, v8, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    .line 18540
    iget-object v3, v9, Landroid/content/pm/InstrumentationInfo;->targetProcesses:Ljava/lang/String;

    if-nez v3, :cond_13

    new-array v3, v13, [Ljava/lang/String;

    aput-object v2, v3, v12

    .line 18541
    iput-object v3, v7, Lcom/android/server/am/ActiveInstrumentation;->mTargetProcesses:[Ljava/lang/String;

    goto :goto_b

    :cond_13
    const-string v6, "*"

    .line 18542
    invoke-virtual {v3, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_14

    new-array v3, v12, [Ljava/lang/String;

    .line 18543
    iput-object v3, v7, Lcom/android/server/am/ActiveInstrumentation;->mTargetProcesses:[Ljava/lang/String;

    :goto_b
    move-object/from16 v18, v2

    goto :goto_c

    .line 18545
    :cond_14
    iget-object v2, v9, Landroid/content/pm/InstrumentationInfo;->targetProcesses:Ljava/lang/String;

    const-string v3, ","

    invoke-virtual {v2, v3}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v2

    iput-object v2, v7, Lcom/android/server/am/ActiveInstrumentation;->mTargetProcesses:[Ljava/lang/String;

    .line 18546
    aget-object v2, v2, v12

    goto :goto_b

    .line 18548
    :goto_c
    iput-object v8, v7, Lcom/android/server/am/ActiveInstrumentation;->mTargetInfo:Landroid/content/pm/ApplicationInfo;

    move-object/from16 v2, p2

    .line 18549
    iput-object v2, v7, Lcom/android/server/am/ActiveInstrumentation;->mProfileFile:Ljava/lang/String;

    .line 18550
    iput-object v4, v7, Lcom/android/server/am/ActiveInstrumentation;->mArguments:Landroid/os/Bundle;

    .line 18551
    iput-object v5, v7, Lcom/android/server/am/ActiveInstrumentation;->mWatcher:Landroid/app/IInstrumentationWatcher;

    move-object/from16 v2, p6

    .line 18552
    iput-object v2, v7, Lcom/android/server/am/ActiveInstrumentation;->mUiAutomationConnection:Landroid/app/IUiAutomationConnection;

    .line 18553
    iput-object v0, v7, Lcom/android/server/am/ActiveInstrumentation;->mResultClass:Landroid/content/ComponentName;

    const-string v0, "android.permission.START_ACTIVITIES_FROM_BACKGROUND"

    .line 18554
    invoke-virtual {v14, v0, v1, v15}, Lcom/android/server/am/ActivityManagerService;->checkPermission(Ljava/lang/String;II)I

    move-result v0

    if-nez v0, :cond_15

    move v0, v13

    goto :goto_d

    :cond_15
    move v0, v12

    :goto_d
    iput-boolean v0, v7, Lcom/android/server/am/ActiveInstrumentation;->mHasBackgroundActivityStartsPermission:Z

    const-string v0, "android.permission.START_FOREGROUND_SERVICES_FROM_BACKGROUND"

    .line 18557
    invoke-virtual {v14, v0, v1, v15}, Lcom/android/server/am/ActivityManagerService;->checkPermission(Ljava/lang/String;II)I

    move-result v0

    if-nez v0, :cond_16

    move v0, v13

    goto :goto_e

    :cond_16
    move v0, v12

    :goto_e
    iput-boolean v0, v7, Lcom/android/server/am/ActiveInstrumentation;->mHasBackgroundForegroundServiceStartsPermission:Z

    .line 18560
    iput-boolean v10, v7, Lcom/android/server/am/ActiveInstrumentation;->mNoRestart:Z

    .line 18562
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v19

    .line 18565
    iget-object v6, v14, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v6
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_0

    if-eqz v10, :cond_17

    .line 18567
    :try_start_a
    iget-object v0, v8, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    iget v1, v8, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v14, v0, v1}, Lcom/android/server/am/ActivityManagerService;->getProcessRecordLocked(Ljava/lang/String;I)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    move-object v1, v0

    move-object/from16 v24, v6

    move-object v0, v7

    move-object/from16 p1, v8

    move-object v13, v9

    move/from16 v21, v10

    goto :goto_f

    .line 18570
    :cond_17
    iget-object v2, v9, Landroid/content/pm/InstrumentationInfo;->targetPackage:Ljava/lang/String;

    const/4 v3, -0x1

    const/4 v4, 0x1

    const/4 v5, 0x0

    const/4 v0, 0x1

    const/16 v21, 0x1

    const/16 v22, 0x0

    const-string/jumbo v23, "start instr"
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_1

    move-object/from16 v1, p0

    move-object/from16 v24, v6

    move v6, v0

    move-object v0, v7

    move/from16 v7, v21

    move-object/from16 p1, v8

    move/from16 v8, v22

    move-object v13, v9

    move v9, v11

    move/from16 v21, v10

    move-object/from16 v10, v23

    :try_start_b
    invoke-virtual/range {v1 .. v10}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z

    .line 18573
    iget-object v1, v14, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    if-eqz v1, :cond_18

    .line 18574
    iget-object v1, v14, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    iget-object v2, v13, Landroid/content/pm/InstrumentationInfo;->targetPackage:Ljava/lang/String;

    const/4 v3, 0x6

    invoke-virtual {v1, v2, v11, v3}, Landroid/app/usage/UsageStatsManagerInternal;->reportEvent(Ljava/lang/String;II)V

    :cond_18
    const/4 v4, 0x0

    const/4 v8, 0x0

    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move-object/from16 v3, v18

    move/from16 v5, v16

    move/from16 v6, v17

    move-object/from16 v7, p8

    .line 18577
    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->addAppLocked(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;ZZZLjava/lang/String;I)Lcom/android/server/am/ProcessRecord;

    move-result-object v1

    .line 18579
    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->mProfile:Lcom/android/server/am/ProcessProfileRecord;

    const/16 v3, 0x8

    invoke-virtual {v2, v3}, Lcom/android/server/am/ProcessProfileRecord;->addHostingComponentType(I)V

    .line 18582
    :goto_f
    invoke-virtual {v1, v0}, Lcom/android/server/am/ProcessRecord;->setActiveInstrumentation(Lcom/android/server/am/ActiveInstrumentation;)V

    .line 18583
    iput-boolean v12, v0, Lcom/android/server/am/ActiveInstrumentation;->mFinished:Z

    .line 18584
    iput v15, v0, Lcom/android/server/am/ActiveInstrumentation;->mSourceUid:I

    .line 18585
    iget-object v2, v0, Lcom/android/server/am/ActiveInstrumentation;->mRunningProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 18586
    iget-object v1, v14, Lcom/android/server/am/ActivityManagerService;->mActiveInstrumentation:Ljava/util/ArrayList;

    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_19

    .line 18587
    iget-object v1, v14, Lcom/android/server/am/ActivityManagerService;->mActiveInstrumentation:Ljava/util/ArrayList;

    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 18589
    :cond_19
    monitor-exit v24
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_2

    :try_start_c
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    and-int/lit8 v1, p3, 0x2

    if-eqz v1, :cond_1a

    .line 18594
    iget-object v1, v14, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    move-object/from16 v2, p1

    iget v3, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    iget-object v4, v13, Landroid/content/pm/InstrumentationInfo;->packageName:Ljava/lang/String;

    const/16 v5, 0x63

    invoke-virtual {v1, v5, v3, v4, v12}, Lcom/android/server/appop/AppOpsService;->setMode(IILjava/lang/String;I)V

    goto :goto_10

    :cond_1a
    move-object/from16 v2, p1

    .line 18597
    :goto_10
    invoke-static/range {v19 .. v20}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    if-eqz v21, :cond_1b

    .line 18600
    invoke-virtual {v14, v0, v2}, Lcom/android/server/am/ActivityManagerService;->instrumentWithoutRestart(Lcom/android/server/am/ActiveInstrumentation;Landroid/content/pm/ApplicationInfo;)V

    .line 18602
    :cond_1b
    monitor-exit p0
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    const/4 v0, 0x1

    return v0

    :catchall_1
    move-exception v0

    move-object/from16 v24, v6

    .line 18589
    :goto_11
    :try_start_d
    monitor-exit v24
    :try_end_d
    .catchall {:try_start_d .. :try_end_d} :catchall_2

    :try_start_e
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v0

    :catchall_2
    move-exception v0

    goto :goto_11

    .line 18602
    :goto_12
    monitor-exit p0
    :try_end_e
    .catchall {:try_start_e .. :try_end_e} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public final startInstrumentationOfSdkSandbox(Landroid/content/ComponentName;Ljava/lang/String;Landroid/os/Bundle;Landroid/app/IInstrumentationWatcher;Landroid/app/IUiAutomationConnection;ILjava/lang/String;Landroid/content/pm/InstrumentationInfo;Landroid/content/pm/ApplicationInfo;ZZZ)Z
    .locals 23

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-object/from16 v2, p4

    move-object/from16 v11, p9

    const/4 v12, 0x0

    if-eqz p10, :cond_0

    const-string v3, "Instrumenting sdk sandbox with --no-restart flag is not supported"

    .line 18634
    invoke-virtual {v0, v2, v1, v3}, Lcom/android/server/am/ActivityManagerService;->reportStartInstrumentationFailureLocked(Landroid/app/IInstrumentationWatcher;Landroid/content/ComponentName;Ljava/lang/String;)V

    return v12

    .line 18643
    :cond_0
    :try_start_0
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v3}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v3

    .line 18644
    invoke-virtual {v3}, Landroid/content/pm/PackageManager;->getSdkSandboxPackageName()Ljava/lang/String;

    move-result-object v4

    move/from16 v9, p6

    invoke-virtual {v3, v4, v12, v9}, Landroid/content/pm/PackageManager;->getApplicationInfoAsUser(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo;

    move-result-object v13
    :try_end_0
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_0 .. :try_end_0} :catch_0

    .line 18651
    const-class v3, Lcom/android/server/sdksandbox/SdkSandboxManagerLocal;

    .line 18652
    invoke-static {v3}, Lcom/android/server/LocalManagerRegistry;->getManager(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/sdksandbox/SdkSandboxManagerLocal;

    if-nez v3, :cond_1

    const-string v3, "Can\'t locate SdkSandboxManagerLocal"

    .line 18654
    invoke-virtual {v0, v2, v1, v3}, Lcom/android/server/am/ActivityManagerService;->reportStartInstrumentationFailureLocked(Landroid/app/IInstrumentationWatcher;Landroid/content/ComponentName;Ljava/lang/String;)V

    return v12

    .line 18659
    :cond_1
    invoke-interface {v3, v11}, Lcom/android/server/sdksandbox/SdkSandboxManagerLocal;->getSdkSandboxProcessNameForInstrumentation(Landroid/content/pm/ApplicationInfo;)Ljava/lang/String;

    move-result-object v14

    .line 18662
    new-instance v15, Lcom/android/server/am/ActiveInstrumentation;

    invoke-direct {v15, v0}, Lcom/android/server/am/ActiveInstrumentation;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    .line 18663
    iput-object v1, v15, Lcom/android/server/am/ActiveInstrumentation;->mClass:Landroid/content/ComponentName;

    .line 18664
    filled-new-array {v14}, [Ljava/lang/String;

    move-result-object v4

    iput-object v4, v15, Lcom/android/server/am/ActiveInstrumentation;->mTargetProcesses:[Ljava/lang/String;

    .line 18665
    iput-object v13, v15, Lcom/android/server/am/ActiveInstrumentation;->mTargetInfo:Landroid/content/pm/ApplicationInfo;

    move-object/from16 v4, p2

    .line 18666
    iput-object v4, v15, Lcom/android/server/am/ActiveInstrumentation;->mProfileFile:Ljava/lang/String;

    move-object/from16 v4, p3

    .line 18667
    iput-object v4, v15, Lcom/android/server/am/ActiveInstrumentation;->mArguments:Landroid/os/Bundle;

    .line 18668
    iput-object v2, v15, Lcom/android/server/am/ActiveInstrumentation;->mWatcher:Landroid/app/IInstrumentationWatcher;

    move-object/from16 v2, p5

    .line 18669
    iput-object v2, v15, Lcom/android/server/am/ActiveInstrumentation;->mUiAutomationConnection:Landroid/app/IUiAutomationConnection;

    .line 18670
    iput-object v1, v15, Lcom/android/server/am/ActiveInstrumentation;->mResultClass:Landroid/content/ComponentName;

    .line 18671
    iput-boolean v12, v15, Lcom/android/server/am/ActiveInstrumentation;->mHasBackgroundActivityStartsPermission:Z

    .line 18672
    iput-boolean v12, v15, Lcom/android/server/am/ActiveInstrumentation;->mHasBackgroundForegroundServiceStartsPermission:Z

    .line 18674
    iput-boolean v12, v15, Lcom/android/server/am/ActiveInstrumentation;->mNoRestart:Z

    .line 18676
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v10

    .line 18677
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v16

    .line 18679
    :try_start_1
    iget-object v1, v11, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget v2, v11, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-interface {v3, v1, v2}, Lcom/android/server/sdksandbox/SdkSandboxManagerLocal;->notifyInstrumentationStarted(Ljava/lang/String;I)V

    .line 18681
    iget-object v8, v0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v8
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_2

    .line 18682
    :try_start_2
    iget v1, v11, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {v1}, Landroid/os/Process;->toSdkSandboxUid(I)I

    move-result v18

    move-object/from16 v1, p8

    .line 18685
    iget-object v2, v1, Landroid/content/pm/InstrumentationInfo;->targetPackage:Ljava/lang/String;

    const/4 v3, -0x1

    const/4 v4, 0x1

    const/4 v5, 0x0

    const/4 v6, 0x1

    const/4 v7, 0x1

    const/16 v19, 0x0

    const-string/jumbo v20, "start instr"
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    move-object/from16 v1, p0

    move-object/from16 v21, v8

    move/from16 v8, v19

    move/from16 v9, p6

    move/from16 v22, v10

    move-object/from16 v10, v20

    :try_start_3
    invoke-virtual/range {v1 .. v10}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z

    const/4 v4, 0x0

    const/4 v5, 0x1

    .line 18696
    iget-object v7, v11, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    const/4 v11, 0x0

    move-object/from16 v1, p0

    move-object v2, v13

    move-object v3, v14

    move/from16 v6, v18

    move/from16 v8, p11

    move/from16 v9, p12

    move-object/from16 v10, p7

    invoke-virtual/range {v1 .. v11}, Lcom/android/server/am/ActivityManagerService;->addAppLocked(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;ZZILjava/lang/String;ZZLjava/lang/String;I)Lcom/android/server/am/ProcessRecord;

    move-result-object v1

    .line 18708
    invoke-virtual {v1, v15}, Lcom/android/server/am/ProcessRecord;->setActiveInstrumentation(Lcom/android/server/am/ActiveInstrumentation;)V

    .line 18709
    iput-boolean v12, v15, Lcom/android/server/am/ActiveInstrumentation;->mFinished:Z

    move/from16 v2, v22

    .line 18710
    iput v2, v15, Lcom/android/server/am/ActiveInstrumentation;->mSourceUid:I

    .line 18711
    iget-object v2, v15, Lcom/android/server/am/ActiveInstrumentation;->mRunningProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 18712
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mActiveInstrumentation:Ljava/util/ArrayList;

    invoke-virtual {v2, v15}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_2

    .line 18713
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mActiveInstrumentation:Ljava/util/ArrayList;

    invoke-virtual {v0, v15}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 18715
    :cond_2
    iget-object v0, v1, Lcom/android/server/am/ProcessRecord;->mProfile:Lcom/android/server/am/ProcessProfileRecord;

    const/16 v1, 0x8

    invoke-virtual {v0, v1}, Lcom/android/server/am/ProcessProfileRecord;->addHostingComponentType(I)V

    .line 18716
    monitor-exit v21
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    .line 18718
    invoke-static/range {v16 .. v17}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    const/4 v0, 0x1

    return v0

    :catchall_0
    move-exception v0

    move-object/from16 v21, v8

    .line 18716
    :goto_0
    :try_start_5
    monitor-exit v21
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    :try_start_6
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_2

    :catchall_1
    move-exception v0

    goto :goto_0

    :catchall_2
    move-exception v0

    .line 18718
    invoke-static/range {v16 .. v17}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 18719
    throw v0

    :catch_0
    const-string v3, "Can\'t find SdkSandbox package"

    .line 18646
    invoke-virtual {v0, v2, v1, v3}, Lcom/android/server/am/ActivityManagerService;->reportStartInstrumentationFailureLocked(Landroid/app/IInstrumentationWatcher;Landroid/content/ComponentName;Ljava/lang/String;)V

    return v12
.end method

.method public startIsolatedProcess(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Runnable;)Z
    .locals 19

    move-object/from16 v1, p0

    .line 3379
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 3380
    :try_start_0
    new-instance v4, Landroid/content/pm/ApplicationInfo;

    invoke-direct {v4}, Landroid/content/pm/ApplicationInfo;-><init>()V

    const/16 v0, 0x3e8

    .line 3389
    iput v0, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    move-object/from16 v0, p3

    .line 3390
    iput-object v0, v4, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    move-object/from16 v15, p1

    .line 3391
    iput-object v15, v4, Landroid/content/pm/ApplicationInfo;->className:Ljava/lang/String;

    const-string v2, "android"

    .line 3392
    iput-object v2, v4, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    const-string v2, ":complete"

    .line 3393
    iput-object v2, v4, Landroid/content/pm/ApplicationInfo;->seInfoUser:Ljava/lang/String;

    .line 3394
    sget v2, Landroid/os/Build$VERSION;->SDK_INT:I

    iput v2, v4, Landroid/content/pm/ApplicationInfo;->targetSdkVersion:I

    .line 3395
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/4 v5, 0x0

    const/4 v6, 0x0

    sget-object v7, Lcom/android/server/am/ActivityManagerService;->sNullHostingRecord:Lcom/android/server/am/HostingRecord;

    const/4 v8, 0x0

    const/4 v9, 0x1

    const/4 v10, 0x1

    const/4 v12, 0x0

    const/4 v13, 0x0

    const/4 v14, 0x0

    move-object/from16 v3, p3

    move/from16 v11, p5

    move-object/from16 v15, p4

    move-object/from16 v16, p1

    move-object/from16 v17, p2

    move-object/from16 v18, p6

    invoke-virtual/range {v2 .. v18}, Lcom/android/server/am/ProcessList;->startProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILcom/android/server/am/HostingRecord;IZZIZILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/Runnable;)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    if-eqz v0, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    .line 3402
    :goto_0
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return v0

    :catchall_0
    move-exception v0

    .line 3403
    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public startObservingNativeCrashes()V
    .locals 1

    .line 2418
    new-instance v0, Lcom/android/server/am/NativeCrashListener;

    invoke-direct {v0, p0}, Lcom/android/server/am/NativeCrashListener;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    .line 2419
    invoke-virtual {v0}, Ljava/lang/Thread;->start()V

    return-void
.end method

.method public startPersistentApps(I)V
    .locals 7

    .line 8646
    iget v0, p0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    const/4 v1, 0x1

    if-ne v0, v1, :cond_0

    return-void

    .line 8648
    :cond_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 8650
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    or-int/lit16 p1, p1, 0x400

    .line 8651
    invoke-interface {v0, p1}, Landroid/content/pm/IPackageManager;->getPersistentApplications(I)Landroid/content/pm/ParceledListSlice;

    move-result-object p1

    invoke-virtual {p1}, Landroid/content/pm/ParceledListSlice;->getList()Ljava/util/List;

    move-result-object p1

    .line 8652
    invoke-interface {p1}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object p1

    :cond_1
    :goto_0
    invoke-interface {p1}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_2

    invoke-interface {p1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    move-object v2, v0

    check-cast v2, Landroid/content/pm/ApplicationInfo;

    const-string v0, "android"

    .line 8653
    iget-object v1, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_1

    const/4 v3, 0x0

    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x2

    move-object v1, p0

    .line 8654
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->addAppLocked(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;ZLjava/lang/String;I)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    if-eqz v0, :cond_1

    .line 8658
    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->mProfile:Lcom/android/server/am/ProcessProfileRecord;

    const/4 v1, 0x2

    invoke-virtual {v0, v1}, Lcom/android/server/am/ProcessProfileRecord;->addHostingComponentType(I)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    goto :goto_0

    :catchall_0
    move-exception p1

    goto :goto_1

    .line 8665
    :catch_0
    :cond_2
    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :goto_1
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public final startProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILcom/android/server/am/HostingRecord;IZZ)Lcom/android/server/am/ProcessRecord;
    .locals 17

    move-object/from16 v0, p0

    move-object/from16 v2, p2

    if-eqz p5, :cond_0

    .line 3426
    invoke-virtual/range {p5 .. p5}, Lcom/android/server/am/HostingRecord;->getName()Ljava/lang/String;

    move-result-object v1

    if-eqz v1, :cond_0

    .line 3427
    invoke-virtual/range {p5 .. p5}, Lcom/android/server/am/HostingRecord;->getName()Ljava/lang/String;

    move-result-object v1

    iget v3, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {v3}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v3

    invoke-virtual {v0, v1, v3}, Lcom/android/server/am/ActivityManagerService;->needToBlockImsRequest(Ljava/lang/String;I)Z

    move-result v1

    if-eqz v1, :cond_0

    .line 3428
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "[IMS-AM] startProcessLocked(0) Block ["

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3429
    invoke-virtual/range {p5 .. p5}, Lcom/android/server/am/HostingRecord;->getName()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "] of non-active user ["

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v1, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, "]"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "ActivityManager"

    .line 3428
    invoke-static {v1, v0}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    const/4 v0, 0x0

    return-object v0

    .line 3435
    :cond_0
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v13, 0x0

    const/4 v14, 0x0

    const/4 v15, 0x0

    const/16 v16, 0x0

    move-object/from16 v1, p1

    move-object/from16 v2, p2

    move/from16 v3, p3

    move/from16 v4, p4

    move-object/from16 v5, p5

    move/from16 v6, p6

    move/from16 v7, p7

    move/from16 v8, p8

    invoke-virtual/range {v0 .. v16}, Lcom/android/server/am/ProcessList;->startProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILcom/android/server/am/HostingRecord;IZZIZILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/Runnable;)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    return-object v0
.end method

.method public final startProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILcom/android/server/am/HostingRecord;IZZZZI)Lcom/android/server/am/ProcessRecord;
    .locals 19

    move-object/from16 v1, p1

    move-object/from16 v2, p2

    move/from16 v3, p3

    move/from16 v4, p4

    move-object/from16 v5, p5

    move/from16 v6, p6

    move/from16 v7, p7

    move/from16 v8, p8

    move/from16 v17, p10

    move/from16 v18, p11

    move-object/from16 v0, p0

    .line 3449
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v13, 0x0

    const/4 v14, 0x0

    const/4 v15, 0x0

    const/16 v16, 0x0

    invoke-virtual/range {v0 .. v18}, Lcom/android/server/am/ProcessList;->startProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILcom/android/server/am/HostingRecord;IZZIZILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/Runnable;ZI)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    return-object v0
.end method

.method public startProfile(I)Z
    .locals 2

    .line 20250
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    const/4 v0, 0x0

    const/4 v1, 0x0

    invoke-virtual {p0, p1, v0, v1}, Lcom/android/server/am/UserController;->startProfile(IZLandroid/os/IProgressListener;)Z

    move-result p0

    return p0
.end method

.method public startProfileWithListener(ILandroid/os/IProgressListener;)Z
    .locals 1

    .line 20257
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    const/4 v0, 0x0

    invoke-virtual {p0, p1, v0, p2}, Lcom/android/server/am/UserController;->startProfile(IZLandroid/os/IProgressListener;)Z

    move-result p0

    return p0
.end method

.method public final startSdkSandboxProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILcom/android/server/am/HostingRecord;IILjava/lang/String;)Lcom/android/server/am/ProcessRecord;
    .locals 17

    move-object/from16 v1, p1

    move-object/from16 v2, p2

    move/from16 v3, p3

    move/from16 v4, p4

    move-object/from16 v5, p5

    move/from16 v6, p6

    move/from16 v11, p7

    move-object/from16 v12, p8

    move-object/from16 v0, p0

    .line 3411
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x1

    const/4 v13, 0x0

    const/4 v14, 0x0

    const/4 v15, 0x0

    const/16 v16, 0x0

    invoke-virtual/range {v0 .. v16}, Lcom/android/server/am/ProcessList;->startProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILcom/android/server/am/HostingRecord;IZZIZILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/Runnable;)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    return-object v0
.end method

.method public startService(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;ZLjava/lang/String;Ljava/lang/String;I)Landroid/content/ComponentName;
    .locals 12

    const/4 v8, 0x0

    const/4 v9, -0x1

    const/4 v10, 0x0

    const/4 v11, 0x0

    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move-object v3, p3

    move/from16 v4, p4

    move-object/from16 v5, p5

    move-object/from16 v6, p6

    move/from16 v7, p7

    .line 15847
    invoke-virtual/range {v0 .. v11}, Lcom/android/server/am/ActivityManagerService;->startService(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;ZLjava/lang/String;Ljava/lang/String;IZILjava/lang/String;Ljava/lang/String;)Landroid/content/ComponentName;

    move-result-object v0

    return-object v0
.end method

.method public final startService(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;ZLjava/lang/String;Ljava/lang/String;IZILjava/lang/String;Ljava/lang/String;)Landroid/content/ComponentName;
    .locals 20

    move-object/from16 v1, p0

    move-object/from16 v0, p2

    move-object/from16 v9, p5

    move-object/from16 v15, p11

    const-string/jumbo v2, "startService"

    .line 15856
    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 15857
    invoke-virtual {v1, v0}, Lcom/android/server/am/ActivityManagerService;->enforceAllowedToStartOrBindServiceIfSdkSandbox(Landroid/content/Intent;)V

    if-eqz v0, :cond_1

    .line 15859
    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v2

    const/4 v3, 0x1

    if-eq v2, v3, :cond_0

    goto :goto_0

    .line 15860
    :cond_0
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "File descriptors passed in Intent"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_1
    :goto_0
    if-eqz v9, :cond_5

    if-eqz p8, :cond_3

    if-eqz v15, :cond_2

    goto :goto_1

    .line 15868
    :cond_2
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "No instance name provided for SDK sandbox process"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 15870
    :cond_3
    :goto_1
    invoke-virtual {v1, v15}, Lcom/android/server/am/ActivityManagerService;->validateServiceInstanceName(Ljava/lang/String;)V

    .line 15874
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v6

    .line 15875
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v7

    .line 15876
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v16

    const-wide/16 v13, 0x40

    .line 15879
    :try_start_0
    invoke-static {v13, v14}, Landroid/os/Trace;->isTagEnabled(J)Z

    move-result v2

    if-eqz v2, :cond_4

    .line 15880
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "startService: intent="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v3, ", caller="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, ", fgRequired="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move/from16 v8, p4

    invoke-virtual {v2, v8}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v13, v14, v2}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    goto :goto_2

    :cond_4
    move/from16 v8, p4

    .line 15884
    :goto_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_3

    .line 15885
    :try_start_1
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    move-object/from16 v3, p1

    move-object/from16 v4, p2

    move-object/from16 v5, p3

    move/from16 v8, p4

    move-object/from16 v9, p5

    move-object/from16 v10, p6

    move/from16 v11, p7

    move/from16 v12, p8

    move-wide/from16 v18, v13

    move/from16 v13, p9

    move-object/from16 v14, p10

    move-object/from16 v15, p11

    :try_start_2
    invoke-virtual/range {v2 .. v15}, Lcom/android/server/am/ActiveServices;->startServiceLocked(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;IIZLjava/lang/String;Ljava/lang/String;IZILjava/lang/String;Ljava/lang/String;)Landroid/content/ComponentName;

    move-result-object v0

    .line 15890
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    .line 15892
    invoke-static/range {v18 .. v19}, Landroid/os/Trace;->traceEnd(J)V

    .line 15893
    invoke-static/range {v16 .. v17}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return-object v0

    :catchall_0
    move-exception v0

    goto :goto_3

    :catchall_1
    move-exception v0

    move-wide/from16 v18, v13

    .line 15890
    :goto_3
    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_2

    :catchall_2
    move-exception v0

    goto :goto_4

    :catchall_3
    move-exception v0

    move-wide/from16 v18, v13

    .line 15892
    :goto_4
    invoke-static/range {v18 .. v19}, Landroid/os/Trace;->traceEnd(J)V

    .line 15893
    invoke-static/range {v16 .. v17}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 15894
    throw v0

    .line 15864
    :cond_5
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "callingPackage cannot be null"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public startSystemLockTaskMode(I)V
    .locals 1

    .line 8173
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mRestrictionPolicy:Lcom/samsung/android/knox/restriction/RestrictionPolicy;

    if-eqz v0, :cond_0

    invoke-virtual {v0}, Lcom/samsung/android/knox/restriction/RestrictionPolicy;->isScreenPinningAllowed()Z

    move-result v0

    if-nez v0, :cond_0

    return-void

    .line 8178
    :cond_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {p0, p1}, Lcom/android/server/wm/ActivityTaskManagerService;->startSystemLockTaskMode(I)V

    return-void
.end method

.method public startUserInBackground(I)Z
    .locals 1

    const/4 v0, 0x0

    .line 20123
    invoke-virtual {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->startUserInBackgroundWithListener(ILandroid/os/IProgressListener;)Z

    move-result p0

    return p0
.end method

.method public startUserInBackgroundVisibleOnDisplay(IILandroid/os/IProgressListener;)Z
    .locals 4

    .line 20142
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getDisplayIdsForStartingVisibleBackgroundUsers()[I

    move-result-object v0

    const/4 v1, 0x0

    if-eqz v0, :cond_1

    move v2, v1

    .line 20145
    :goto_0
    array-length v3, v0

    if-ge v2, v3, :cond_1

    .line 20146
    aget v3, v0, v2

    if-ne p2, v3, :cond_0

    const/4 v1, 0x1

    goto :goto_1

    :cond_0
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    :cond_1
    :goto_1
    if-eqz v1, :cond_2

    .line 20162
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/am/ActivityManagerService$Injector;->startUserInBackgroundVisibleOnDisplay(IILandroid/os/IProgressListener;)Z

    move-result p0

    return p0

    .line 20153
    :cond_2
    new-instance p0, Ljava/lang/IllegalArgumentException;

    new-instance p1, Ljava/lang/StringBuilder;

    invoke-direct {p1}, Ljava/lang/StringBuilder;-><init>()V

    const-string p3, "Invalid display ("

    invoke-virtual {p1, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p2, ") to start user. Valid options are: "

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20154
    invoke-static {v0}, Ljava/util/Arrays;->toString([I)Ljava/lang/String;

    move-result-object p2

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p0
.end method

.method public startUserInBackgroundWithListener(ILandroid/os/IProgressListener;)Z
    .locals 1

    .line 20129
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    const/4 v0, 0x2

    invoke-virtual {p0, p1, v0, p2}, Lcom/android/server/am/UserController;->startUser(IILandroid/os/IProgressListener;)Z

    move-result p0

    return p0
.end method

.method public startUserInForegroundWithListener(ILandroid/os/IProgressListener;)Z
    .locals 1

    .line 20136
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    const/4 v0, 0x1

    invoke-virtual {p0, p1, v0, p2}, Lcom/android/server/am/UserController;->startUser(IILandroid/os/IProgressListener;)Z

    move-result p0

    return p0
.end method

.method public stopAppForUser(Ljava/lang/String;I)V
    .locals 10

    const-string v0, "android.permission.MANAGE_ACTIVITY_TASKS"

    .line 4522
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v1

    if-nez v1, :cond_0

    .line 4532
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    .line 4533
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v4

    const/4 v6, 0x1

    const/4 v7, 0x2

    const-string/jumbo v8, "stopAppForUser"

    const/4 v9, 0x0

    move v5, p2

    invoke-virtual/range {v2 .. v9}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p2

    .line 4535
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 4537
    :try_start_0
    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->stopAppForUserInternal(Ljava/lang/String;I)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 4539
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return-void

    :catchall_0
    move-exception p0

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4540
    throw p0

    .line 4524
    :cond_0
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string p1, "Permission Denial: stopAppForUser() from pid="

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 4525
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result p1

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, ", uid="

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 4526
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result p1

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, " requires "

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    const-string p1, "ActivityManager"

    .line 4528
    invoke-static {p1, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4529
    new-instance p1, Ljava/lang/SecurityException;

    invoke-direct {p1, p0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method public stopAppForUserInternal(Ljava/lang/String;I)V
    .locals 19

    move-object/from16 v1, p0

    move-object/from16 v0, p1

    move/from16 v15, p2

    .line 5106
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal;

    move-result-object v2

    const-wide/32 v3, 0x10400000

    invoke-virtual {v2, v0, v3, v4, v15}, Landroid/content/pm/PackageManagerInternal;->getPackageUid(Ljava/lang/String;JI)I

    move-result v10

    if-gez v10, :cond_0

    const-string v1, "ActivityManager"

    .line 5109
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Asked to stop "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "/u"

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v15}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v0, " but does not exist in that user"

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    return-void

    .line 5115
    :cond_0
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal;

    move-result-object v2

    invoke-virtual {v2, v0, v15}, Landroid/content/pm/PackageManagerInternal;->isPackageStateProtected(Ljava/lang/String;I)Z

    move-result v2

    if-eqz v2, :cond_1

    const-string v1, "ActivityManager"

    .line 5116
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Asked to stop "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "/u"

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v15}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v0, " but it is protected"

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    return-void

    .line 5121
    :cond_1
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x1

    move-object/from16 v3, p1

    move/from16 v4, p2

    invoke-virtual/range {v2 .. v9}, Lcom/android/server/wm/ActivityTaskManagerService;->isForceStopDisabled(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)Z

    move-result v2

    if-eqz v2, :cond_2

    const-string v1, "ActivityManager"

    .line 5122
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Asked to stop "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, "/u"

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v15}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v0, " but it is protected by knox policy"

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    return-void

    :cond_2
    const-string v2, "ActivityManager"

    .line 5127
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Stopping app for user: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v4, "/"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v15}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 5132
    invoke-static {v10}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v4

    .line 5133
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 5134
    :try_start_0
    iget-object v14, v1, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v14
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    .line 5135
    :try_start_1
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    const/4 v3, 0x0

    const/4 v13, 0x1

    invoke-virtual {v2, v0, v13, v3, v15}, Lcom/android/server/wm/ActivityTaskManagerInternal;->onForceStopPackage(Ljava/lang/String;ZZI)Z

    .line 5137
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/16 v6, -0x2710

    const/4 v7, 0x1

    const/4 v8, 0x0

    const/4 v9, 0x1

    const/4 v10, 0x0

    const/4 v11, 0x1

    const/4 v12, 0x0

    const/16 v16, 0xa

    const/16 v17, 0x17

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "fully stop "

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v5, "/"

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v15}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v5, " by user request"

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v18
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-object/from16 v3, p1

    move/from16 v5, p2

    move/from16 v13, v16

    move-object/from16 v16, v14

    move/from16 v14, v17

    move-object/from16 v15, v18

    :try_start_2
    invoke-virtual/range {v2 .. v15}, Lcom/android/server/am/ProcessList;->killPackageProcessesLSP(Ljava/lang/String;IIIZZZZZZIILjava/lang/String;)Z

    .line 5143
    monitor-exit v16
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 5145
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    const/4 v4, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x1

    const/4 v8, 0x1

    move-object/from16 v3, p1

    move/from16 v5, p2

    invoke-virtual/range {v2 .. v8}, Lcom/android/server/am/ActiveServices;->bringDownDisabledPackageServicesLocked(Ljava/lang/String;Ljava/util/Set;IZZZ)Z

    .line 5148
    iget-boolean v0, v1, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    if-eqz v0, :cond_3

    .line 5149
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    const/4 v2, 0x1

    invoke-virtual {v0, v2}, Lcom/android/server/wm/ActivityTaskManagerInternal;->resumeTopActivities(Z)V

    .line 5151
    :cond_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :catchall_0
    move-exception v0

    move-object/from16 v16, v14

    .line 5143
    :goto_0
    :try_start_4
    monitor-exit v16
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    :try_start_5
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v0

    :catchall_1
    move-exception v0

    goto :goto_0

    :catchall_2
    move-exception v0

    .line 5151
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_2

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public stopAppSwitches()V
    .locals 0

    .line 9144
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {p0}, Lcom/android/server/wm/ActivityTaskManagerService;->stopAppSwitches()V

    return-void
.end method

.method public stopAssociationLocked(ILjava/lang/String;IJLandroid/content/ComponentName;Ljava/lang/String;)V
    .locals 2

    .line 19135
    iget-boolean p4, p0, Lcom/android/server/am/ActivityManagerService;->mTrackingAssociations:Z

    if-nez p4, :cond_0

    return-void

    .line 19138
    :cond_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    .line 19139
    invoke-virtual {p0, p3}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object p0

    check-cast p0, Landroid/util/ArrayMap;

    if-nez p0, :cond_1

    return-void

    .line 19143
    :cond_1
    invoke-virtual {p0, p6}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p0

    check-cast p0, Landroid/util/SparseArray;

    if-nez p0, :cond_2

    return-void

    .line 19147
    :cond_2
    invoke-virtual {p0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object p0

    check-cast p0, Landroid/util/ArrayMap;

    if-nez p0, :cond_3

    return-void

    .line 19151
    :cond_3
    invoke-virtual {p0, p2}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p0

    check-cast p0, Lcom/android/server/am/ActivityManagerService$Association;

    if-eqz p0, :cond_5

    .line 19152
    iget p1, p0, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    if-gtz p1, :cond_4

    goto :goto_0

    :cond_4
    add-int/lit8 p1, p1, -0x1

    .line 19155
    iput p1, p0, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    if-nez p1, :cond_5

    .line 19157
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide p1

    .line 19158
    iget-wide p3, p0, Lcom/android/server/am/ActivityManagerService$Association;->mTime:J

    iget-wide p5, p0, Lcom/android/server/am/ActivityManagerService$Association;->mStartTime:J

    sub-long p5, p1, p5

    add-long/2addr p3, p5

    iput-wide p3, p0, Lcom/android/server/am/ActivityManagerService$Association;->mTime:J

    .line 19159
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService$Association;->mStateTimes:[J

    iget p4, p0, Lcom/android/server/am/ActivityManagerService$Association;->mLastState:I

    add-int/lit8 p4, p4, 0x0

    aget-wide p5, p3, p4

    iget-wide v0, p0, Lcom/android/server/am/ActivityManagerService$Association;->mLastStateUptime:J

    sub-long/2addr p1, v0

    add-long/2addr p5, p1

    aput-wide p5, p3, p4

    const/16 p1, 0x16

    .line 19161
    iput p1, p0, Lcom/android/server/am/ActivityManagerService$Association;->mLastState:I

    :cond_5
    :goto_0
    return-void
.end method

.method public stopBinderTrackingAndDump(Landroid/os/ParcelFileDescriptor;)Z
    .locals 6

    const-string v0, "android.permission.SET_ACTIVITY_WATCHER"

    .line 20386
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-nez v0, :cond_3

    const/4 v0, 0x1

    .line 20394
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    if-eqz p1, :cond_1

    const/4 v2, 0x0

    .line 20398
    :try_start_1
    iput-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mBinderTransactionTrackingEnabled:Z

    .line 20400
    new-instance v3, Lcom/android/internal/util/FastPrintWriter;

    new-instance v4, Ljava/io/FileOutputStream;

    invoke-virtual {p1}, Landroid/os/ParcelFileDescriptor;->getFileDescriptor()Ljava/io/FileDescriptor;

    move-result-object v5

    invoke-direct {v4, v5}, Ljava/io/FileOutputStream;-><init>(Ljava/io/FileDescriptor;)V

    invoke-direct {v3, v4}, Lcom/android/internal/util/FastPrintWriter;-><init>(Ljava/io/OutputStream;)V

    const-string v4, "Binder transaction traces for all processes.\n"

    .line 20401
    invoke-virtual {v3, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20405
    invoke-static {}, Lcom/android/server/am/FreecessController;->getInstance()Lcom/android/server/am/FreecessController;

    move-result-object v4

    invoke-virtual {v4}, Lcom/android/server/am/FreecessController;->getFreecessEnabled()Z

    move-result v4

    if-eqz v4, :cond_0

    const-string v4, "ActivityManager"

    const-string v5, "!@ unFreezeAllPackages for BinderTracker"

    .line 20406
    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 20407
    invoke-static {}, Lcom/android/server/am/FreecessHandler;->getInstance()Lcom/android/server/am/FreecessHandler;

    move-result-object v4

    const-string v5, "BinderTracker"

    invoke-virtual {v4, v5}, Lcom/android/server/am/FreecessHandler;->sendResetAllStateMsg(Ljava/lang/String;)V

    .line 20410
    :cond_0
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    new-instance v5, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda9;

    invoke-direct {v5, p0, v3, p1}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda9;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/io/PrintWriter;Landroid/os/ParcelFileDescriptor;)V

    invoke-virtual {v4, v0, v5}, Lcom/android/server/am/ProcessList;->forEachLruProcessesLOSP(ZLjava/util/function/Consumer;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 20450
    :try_start_2
    monitor-exit v1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 20453
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return v0

    :catchall_0
    move-exception p0

    move v0, v2

    goto :goto_0

    :catchall_1
    move-exception p0

    goto :goto_0

    .line 20396
    :cond_1
    :try_start_3
    new-instance p0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v2, "null fd"

    invoke-direct {p0, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 20451
    :goto_0
    monitor-exit v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    :catchall_2
    move-exception p0

    if-eqz p1, :cond_2

    if-eqz v0, :cond_2

    .line 20455
    :try_start_5
    invoke-virtual {p1}, Landroid/os/ParcelFileDescriptor;->close()V
    :try_end_5
    .catch Ljava/io/IOException; {:try_start_5 .. :try_end_5} :catch_0

    .line 20459
    :catch_0
    :cond_2
    throw p0

    .line 20388
    :cond_3
    new-instance p0, Ljava/lang/SecurityException;

    const-string p1, "Requires permission android.permission.SET_ACTIVITY_WATCHER"

    invoke-direct {p0, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p0
.end method

.method public stopDelegateShellPermissionIdentity()V
    .locals 3

    .line 23305
    invoke-static {}, Landroid/os/UserHandle;->getCallingAppId()I

    move-result v0

    const/16 v1, 0x7d0

    if-eq v0, v1, :cond_1

    .line 23306
    invoke-static {}, Landroid/os/UserHandle;->getCallingAppId()I

    move-result v0

    if-nez v0, :cond_0

    goto :goto_0

    .line 23307
    :cond_0
    new-instance p0, Ljava/lang/SecurityException;

    const-string v0, "Only the shell can delegate its permissions"

    invoke-direct {p0, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 23309
    :cond_1
    :goto_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v0

    .line 23310
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    const/4 v2, 0x0

    invoke-virtual {v1, v2}, Lcom/android/server/appop/AppOpsService;->setAppOpsServiceDelegate(Landroid/app/AppOpsManagerInternal$CheckOpsDelegate;)V

    .line 23311
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getPermissionManagerInternal()Lcom/android/server/pm/permission/PermissionManagerServiceInternal;

    move-result-object p0

    invoke-interface {p0}, Lcom/android/server/pm/permission/PermissionManagerServiceInternal;->stopShellPermissionIdentityDelegation()V

    .line 23312
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return-void

    :catchall_0
    move-exception p0

    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p0
.end method

.method public stopProfile(I)Z
    .locals 0

    .line 20262
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {p0, p1}, Lcom/android/server/am/UserController;->stopProfile(I)Z

    move-result p0

    return p0
.end method

.method public stopService(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;I)I
    .locals 9

    const/4 v5, 0x0

    const/4 v6, -0x1

    const/4 v7, 0x0

    const/4 v8, 0x0

    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move-object v3, p3

    move v4, p4

    .line 15911
    invoke-virtual/range {v0 .. v8}, Lcom/android/server/am/ActivityManagerService;->stopService(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;IZILjava/lang/String;Ljava/lang/String;)I

    move-result p0

    return p0
.end method

.method public final stopService(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;IZILjava/lang/String;Ljava/lang/String;)I
    .locals 13

    move-object v1, p0

    move-object v0, p2

    const-string/jumbo v2, "stopService"

    .line 15918
    invoke-virtual {p0, v2}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    if-eqz v0, :cond_1

    .line 15920
    invoke-virtual {p2}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v2

    const/4 v3, 0x1

    if-eq v2, v3, :cond_0

    goto :goto_0

    .line 15921
    :cond_0
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "File descriptors passed in Intent"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_1
    :goto_0
    const-wide/16 v11, 0x40

    .line 15925
    :try_start_0
    invoke-static {v11, v12}, Landroid/os/Trace;->isTagEnabled(J)Z

    move-result v2

    if-eqz v2, :cond_2

    .line 15926
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "stopService: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v11, v12, v2}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 15928
    :cond_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 15929
    :try_start_1
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    move-object v3, p1

    move-object v4, p2

    move-object/from16 v5, p3

    move/from16 v6, p4

    move/from16 v7, p5

    move/from16 v8, p6

    move-object/from16 v9, p7

    move-object/from16 v10, p8

    invoke-virtual/range {v2 .. v10}, Lcom/android/server/am/ActiveServices;->stopServiceLocked(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;IZILjava/lang/String;Ljava/lang/String;)I

    move-result v0

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 15934
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v11, v12}, Landroid/os/Trace;->traceEnd(J)V

    return v0

    :catchall_0
    move-exception v0

    .line 15932
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    :catchall_1
    move-exception v0

    .line 15934
    invoke-static {v11, v12}, Landroid/os/Trace;->traceEnd(J)V

    .line 15935
    throw v0
.end method

.method public stopServiceToken(Landroid/content/ComponentName;Landroid/os/IBinder;I)Z
    .locals 5

    const-wide/16 v0, 0x40

    .line 15959
    :try_start_0
    invoke-static {v0, v1}, Landroid/os/Trace;->isTagEnabled(J)Z

    move-result v2

    if-eqz v2, :cond_1

    .line 15960
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "stopServiceToken: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    if-eqz p1, :cond_0

    .line 15961
    invoke-virtual {p1}, Landroid/content/ComponentName;->toShortString()Ljava/lang/String;

    move-result-object v3

    goto :goto_0

    .line 15962
    :cond_0
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "from "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    :goto_0
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    .line 15960
    invoke-static {v0, v1, v2}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 15964
    :cond_1
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 15965
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v2, p1, p2, p3}, Lcom/android/server/am/ActiveServices;->stopServiceTokenLocked(Landroid/content/ComponentName;Landroid/os/IBinder;I)Z

    move-result p1

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 15968
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Trace;->traceEnd(J)V

    return p1

    :catchall_0
    move-exception p1

    .line 15966
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    :catchall_1
    move-exception p0

    .line 15968
    invoke-static {v0, v1}, Landroid/os/Trace;->traceEnd(J)V

    .line 15969
    throw p0
.end method

.method public stopUser(IZLandroid/app/IStopUserCallback;)I
    .locals 6

    .line 20221
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    const/4 v3, 0x0

    const/4 v5, 0x0

    move v1, p1

    move v2, p2

    move-object v4, p3

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/UserController;->stopUser(IZZLandroid/app/IStopUserCallback;Lcom/android/server/am/UserState$KeyEvictedCallback;)I

    move-result p0

    return p0
.end method

.method public stopUserWithDelayedLocking(IZLandroid/app/IStopUserCallback;)I
    .locals 6

    .line 20244
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    const/4 v3, 0x1

    const/4 v5, 0x0

    move v1, p1

    move v2, p2

    move-object v4, p3

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/UserController;->stopUser(IZZLandroid/app/IStopUserCallback;Lcom/android/server/am/UserState$KeyEvictedCallback;)I

    move-result p0

    return p0
.end method

.method public suppressResizeConfigChanges(Z)V
    .locals 0

    .line 18903
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {p0, p1}, Lcom/android/server/wm/ActivityTaskManagerService;->suppressResizeConfigChanges(Z)V

    return-void
.end method

.method public switchUser(I)Z
    .locals 2

    .line 20194
    invoke-static {}, Landroid/os/UserManager;->getMaxSupportedUsers()I

    move-result v0

    const/4 v1, 0x1

    if-le v0, v1, :cond_0

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    .line 20195
    invoke-static {v0}, Lcom/samsung/android/knox/multiuser/MultiUserManager;->getInstance(Landroid/content/Context;)Lcom/samsung/android/knox/multiuser/MultiUserManager;

    move-result-object v0

    invoke-virtual {v0, v1}, Lcom/samsung/android/knox/multiuser/MultiUserManager;->multipleUsersAllowed(Z)Z

    move-result v0

    if-nez v0, :cond_0

    const-string p0, "ActivityManager"

    const-string p1, "MDM blocks multiuser mode"

    .line 20196
    invoke-static {p0, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    const/4 p0, 0x0

    return p0

    .line 20201
    :cond_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {p0, p1}, Lcom/android/server/am/UserController;->switchUser(I)Z

    move-result p0

    return p0
.end method

.method public systemReady(Ljava/lang/Runnable;Lcom/android/server/utils/TimingsTraceAndSlog;)V
    .locals 20

    move-object/from16 v7, p0

    move-object/from16 v8, p2

    const-string v0, "PhaseActivityManagerReady"

    .line 10544
    invoke-virtual {v8, v0}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceBegin(Ljava/lang/String;)V

    const-string/jumbo v0, "systemReady"

    const-string v1, "NULL"

    const/4 v9, 0x0

    const/4 v10, -0x1

    .line 10547
    invoke-static {v9, v10, v9, v0, v1}, Lcom/android/server/am/EventLogTags;->writeBootProgressAmsState(IIILjava/lang/String;Ljava/lang/String;)V

    .line 10550
    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mSystemServiceManager:Lcom/android/server/SystemServiceManager;

    invoke-virtual {v0}, Lcom/android/server/SystemServiceManager;->preSystemReady()V

    .line 10551
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 10552
    :try_start_0
    iget-boolean v0, v7, Lcom/android/server/am/ActivityManagerService;->mSystemReady:Z

    const/4 v11, 0x2

    if-eqz v0, :cond_1

    if-eqz p1, :cond_0

    .line 10556
    invoke-interface/range {p1 .. p1}, Ljava/lang/Runnable;->run()V

    :cond_0
    const-string/jumbo v0, "systemReady"

    const-string v1, "finish goingCallback"

    .line 10560
    invoke-static {v9, v10, v11, v0, v1}, Lcom/android/server/am/EventLogTags;->writeBootProgressAmsState(IIILjava/lang/String;Ljava/lang/String;)V

    .line 10563
    invoke-virtual/range {p2 .. p2}, Landroid/util/TimingsTraceLog;->traceEnd()V

    .line 10564
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_6

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :cond_1
    :try_start_1
    const-string v0, "controllersReady"

    .line 10567
    invoke-virtual {v8, v0}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceBegin(Ljava/lang/String;)V

    .line 10568
    const-class v0, Lcom/android/server/DeviceIdleInternal;

    .line 10569
    invoke-static {v0}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/DeviceIdleInternal;

    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mLocalDeviceIdleController:Lcom/android/server/DeviceIdleInternal;

    .line 10570
    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v0}, Lcom/android/server/wm/ActivityTaskManagerService;->onSystemReady()V

    .line 10572
    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v0}, Lcom/android/server/am/UserController;->onSystemReady()V

    .line 10573
    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    invoke-virtual {v0}, Lcom/android/server/appop/AppOpsService;->systemReady()V

    .line 10574
    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v0}, Lcom/android/server/am/ProcessList;->onSystemReady()V

    .line 10575
    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mAppRestrictionController:Lcom/android/server/am/AppRestrictionController;

    invoke-virtual {v0}, Lcom/android/server/am/AppRestrictionController;->onSystemReady()V

    .line 10577
    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {v0}, Lcom/android/server/am/AppProfiler;->onSystemReady()V

    const/4 v12, 0x1

    .line 10579
    iput-boolean v12, v7, Lcom/android/server/am/ActivityManagerService;->mSystemReady:Z

    .line 10580
    invoke-virtual/range {p2 .. p2}, Landroid/util/TimingsTraceLog;->traceEnd()V

    .line 10581
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_6

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    :try_start_2
    const-string v0, "device_identifiers"

    .line 10585
    invoke-static {v0}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v0

    .line 10584
    invoke-static {v0}, Landroid/os/IDeviceIdentifiersPolicyService$Stub;->asInterface(Landroid/os/IBinder;)Landroid/os/IDeviceIdentifiersPolicyService;

    move-result-object v0

    .line 10586
    invoke-interface {v0}, Landroid/os/IDeviceIdentifiersPolicyService;->getSerial()Ljava/lang/String;

    move-result-object v0

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->sTheRealBuildSerial:Ljava/lang/String;
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0

    :catch_0
    const-string/jumbo v0, "killProcesses"

    .line 10589
    invoke-virtual {v8, v0}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceBegin(Ljava/lang/String;)V

    .line 10591
    iget-object v1, v7, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v1

    .line 10592
    :try_start_3
    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v0}, Lcom/android/server/am/ActivityManagerService$PidMap;->size()I

    move-result v0

    sub-int/2addr v0, v12

    const/4 v2, 0x0

    :goto_0
    if-ltz v0, :cond_4

    .line 10593
    iget-object v3, v7, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v3, v0}, Lcom/android/server/am/ActivityManagerService$PidMap;->valueAt(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v3

    .line 10594
    iget-object v4, v3, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    invoke-virtual {v7, v4}, Lcom/android/server/am/ActivityManagerService;->isAllowedWhileBooting(Landroid/content/pm/ApplicationInfo;)Z

    move-result v4

    if-nez v4, :cond_3

    if-nez v2, :cond_2

    .line 10596
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    .line 10598
    :cond_2
    invoke-virtual {v2, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    :cond_3
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    .line 10601
    :cond_4
    monitor-exit v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_5

    .line 10603
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    if-eqz v2, :cond_5

    .line 10605
    :try_start_4
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v0

    sub-int/2addr v0, v12

    :goto_1
    if-ltz v0, :cond_5

    .line 10606
    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    move-object v14, v1

    check-cast v14, Lcom/android/server/am/ProcessRecord;

    const-string v1, "ActivityManager"

    .line 10607
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Removing system update proc: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v1, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 10608
    iget-object v13, v7, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/4 v15, 0x1

    const/16 v16, 0x0

    const/16 v17, 0xd

    const/16 v18, 0x8

    const-string/jumbo v19, "system update done"

    invoke-virtual/range {v13 .. v19}, Lcom/android/server/am/ProcessList;->removeProcessLocked(Lcom/android/server/am/ProcessRecord;ZZIILjava/lang/String;)Z

    add-int/lit8 v0, v0, -0x1

    goto :goto_1

    .line 10618
    :cond_5
    iput-boolean v12, v7, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    .line 10619
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_4

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 10620
    invoke-virtual/range {p2 .. p2}, Landroid/util/TimingsTraceLog;->traceEnd()V

    const-string v0, "ActivityManager"

    const-string v1, "System now ready"

    .line 10622
    invoke-static {v0, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    const-string v0, "ActivityManager"

    const-string v1, "!@Boot_EBS_F: boot_progress_ams_ready"

    .line 10624
    invoke-static {v0, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 10625
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v0

    invoke-static {v0, v1}, Lcom/android/server/am/EventLogTags;->writeBootProgressAmsReady(J)V

    .line 10627
    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    .line 10628
    invoke-static {v0}, Lcom/samsung/android/knox/EnterpriseDeviceManager;->getInstance(Landroid/content/Context;)Lcom/samsung/android/knox/EnterpriseDeviceManager;

    move-result-object v0

    if-eqz v0, :cond_6

    .line 10630
    invoke-virtual {v0}, Lcom/samsung/android/knox/EnterpriseDeviceManager;->getRestrictionPolicy()Lcom/samsung/android/knox/restriction/RestrictionPolicy;

    move-result-object v0

    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mRestrictionPolicy:Lcom/samsung/android/knox/restriction/RestrictionPolicy;

    :cond_6
    const-string/jumbo v0, "updateTopComponentForFactoryTest"

    .line 10634
    invoke-virtual {v8, v0}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceBegin(Ljava/lang/String;)V

    .line 10635
    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {v0}, Lcom/android/server/wm/ActivityTaskManagerInternal;->updateTopComponentForFactoryTest()V

    .line 10636
    invoke-virtual/range {p2 .. p2}, Landroid/util/TimingsTraceLog;->traceEnd()V

    const-string/jumbo v0, "registerActivityLaunchObserver"

    .line 10638
    invoke-virtual {v8, v0}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceBegin(Ljava/lang/String;)V

    .line 10639
    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {v0}, Lcom/android/server/wm/ActivityTaskManagerInternal;->getLaunchObserverRegistry()Lcom/android/server/wm/ActivityMetricsLaunchObserverRegistry;

    move-result-object v0

    iget-object v1, v7, Lcom/android/server/am/ActivityManagerService;->mActivityLaunchObserver:Lcom/android/server/wm/ActivityMetricsLaunchObserver;

    invoke-interface {v0, v1}, Lcom/android/server/wm/ActivityMetricsLaunchObserverRegistry;->registerLaunchObserver(Lcom/android/server/wm/ActivityMetricsLaunchObserver;)V

    .line 10640
    invoke-virtual/range {p2 .. p2}, Landroid/util/TimingsTraceLog;->traceEnd()V

    const-string/jumbo v0, "watchDeviceProvisioning"

    .line 10642
    invoke-virtual {v8, v0}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceBegin(Ljava/lang/String;)V

    .line 10643
    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v7, v0}, Lcom/android/server/am/ActivityManagerService;->watchDeviceProvisioning(Landroid/content/Context;)V

    .line 10644
    invoke-virtual/range {p2 .. p2}, Landroid/util/TimingsTraceLog;->traceEnd()V

    const-string/jumbo v0, "retrieveSettings"

    .line 10646
    invoke-virtual {v8, v0}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceBegin(Ljava/lang/String;)V

    .line 10647
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->retrieveSettings()V

    .line 10648
    invoke-virtual/range {p2 .. p2}, Landroid/util/TimingsTraceLog;->traceEnd()V

    const-string v0, "Ugm.onSystemReady"

    .line 10650
    invoke-virtual {v8, v0}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceBegin(Ljava/lang/String;)V

    .line 10651
    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mUgmInternal:Lcom/android/server/uri/UriGrantsManagerInternal;

    invoke-interface {v0}, Lcom/android/server/uri/UriGrantsManagerInternal;->onSystemReady()V

    .line 10652
    invoke-virtual/range {p2 .. p2}, Landroid/util/TimingsTraceLog;->traceEnd()V

    const-string/jumbo v0, "updateForceBackgroundCheck"

    .line 10654
    invoke-virtual {v8, v0}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceBegin(Ljava/lang/String;)V

    .line 10655
    const-class v0, Landroid/os/PowerManagerInternal;

    invoke-static {v0}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/os/PowerManagerInternal;

    if-eqz v0, :cond_7

    .line 10657
    new-instance v1, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda20;

    invoke-direct {v1, v7}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda20;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    const/16 v2, 0xc

    invoke-virtual {v0, v2, v1}, Landroid/os/PowerManagerInternal;->registerLowPowerModeObserver(ILjava/util/function/Consumer;)V

    .line 10660
    invoke-virtual {v0, v2}, Landroid/os/PowerManagerInternal;->getLowPowerState(I)Landroid/os/PowerSaveState;

    move-result-object v0

    iget-boolean v0, v0, Landroid/os/PowerSaveState;->batterySaverEnabled:Z

    .line 10659
    invoke-virtual {v7, v0}, Lcom/android/server/am/ActivityManagerService;->updateForceBackgroundCheck(Z)V

    goto :goto_2

    :cond_7
    const-string v0, "ActivityManager"

    const-string v1, "PowerManagerInternal not found."

    .line 10662
    invoke-static {v0, v1}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 10664
    :goto_2
    invoke-virtual/range {p2 .. p2}, Landroid/util/TimingsTraceLog;->traceEnd()V

    const-string v0, "earlyPhoneStart"

    .line 10667
    invoke-virtual {v8, v0}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceBegin(Ljava/lang/String;)V

    :try_start_5
    const-string/jumbo v0, "sys.config.phone_start_early"

    const-string/jumbo v1, "true"

    .line 10670
    invoke-static {v0, v1}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    const-string/jumbo v1, "true"

    .line 10672
    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_9

    .line 10673
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    invoke-interface {v0}, Landroid/content/pm/IPackageManager;->isFirstBoot()Z

    move-result v0

    if-nez v0, :cond_9

    .line 10674
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    invoke-interface {v0}, Landroid/content/pm/IPackageManager;->isDeviceUpgrading()Z

    move-result v0

    if-nez v0, :cond_9

    const-string v0, "ActivityManager"

    const-string v1, "Phone app starts early due to booting performance"

    .line 10676
    invoke-static {v0, v1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 10677
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0
    :try_end_5
    .catch Landroid/os/RemoteException; {:try_start_5 .. :try_end_5} :catch_1

    .line 10678
    :try_start_6
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    const-string v1, "com.android.phone"

    .line 10679
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v2

    const-wide/16 v3, 0x400

    .line 10678
    invoke-interface {v0, v1, v3, v4, v2}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;JI)Landroid/content/pm/ApplicationInfo;

    move-result-object v2

    if-eqz v2, :cond_8

    const-string v0, "ActivityManager"

    const-string v1, "!@Boot_EBS_N: addAppLocked com.android.phone"

    .line 10681
    invoke-static {v0, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    const/4 v3, 0x0

    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x2

    move-object/from16 v1, p0

    .line 10682
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->addAppLocked(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;ZLjava/lang/String;I)Lcom/android/server/am/ProcessRecord;

    .line 10684
    :cond_8
    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    :try_start_7
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_7
    .catch Landroid/os/RemoteException; {:try_start_7 .. :try_end_7} :catch_1

    goto :goto_3

    :catchall_0
    move-exception v0

    :try_start_8
    monitor-exit p0
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_0

    :try_start_9
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
    :try_end_9
    .catch Landroid/os/RemoteException; {:try_start_9 .. :try_end_9} :catch_1

    :catch_1
    const-string v0, "ActivityManager"

    const-string v1, "Failed to get metadata of Phone app"

    .line 10687
    invoke-static {v0, v1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 10690
    :cond_9
    :goto_3
    invoke-virtual/range {p2 .. p2}, Landroid/util/TimingsTraceLog;->traceEnd()V

    if-eqz p1, :cond_a

    .line 10693
    invoke-interface/range {p1 .. p1}, Ljava/lang/Runnable;->run()V

    :cond_a
    const-string v0, "getCurrentUser"

    .line 10695
    invoke-virtual {v8, v0}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceBegin(Ljava/lang/String;)V

    .line 10698
    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v0}, Lcom/android/server/am/UserController;->getCurrentUserId()I

    move-result v1

    const-string v0, "ActivityManager"

    .line 10699
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Current user:"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v0, v2}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    if-eqz v1, :cond_c

    .line 10700
    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v0}, Lcom/android/server/am/UserController;->isSystemUserStarted()Z

    move-result v0

    if-eqz v0, :cond_b

    goto :goto_4

    .line 10703
    :cond_b
    new-instance v0, Ljava/lang/RuntimeException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "System user not started while current user is:"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 10706
    :cond_c
    :goto_4
    invoke-virtual/range {p2 .. p2}, Landroid/util/TimingsTraceLog;->traceEnd()V

    const-string v0, "ActivityManagerStartApps"

    .line 10708
    invoke-virtual {v8, v0}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceBegin(Ljava/lang/String;)V

    .line 10709
    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v0}, Lcom/android/server/am/BatteryStatsService;->onSystemReady()V

    .line 10710
    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    const v2, 0x8007

    .line 10711
    invoke-static {v1}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    move-result-object v3

    .line 10710
    invoke-virtual {v0, v2, v3, v1}, Lcom/android/server/am/BatteryStatsService;->noteEvent(ILjava/lang/String;I)V

    .line 10712
    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    const v2, 0x8008

    .line 10713
    invoke-static {v1}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    move-result-object v3

    .line 10712
    invoke-virtual {v0, v2, v3, v1}, Lcom/android/server/am/BatteryStatsService;->noteEvent(ILjava/lang/String;I)V

    .line 10720
    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v0}, Lcom/android/server/am/UserController;->onSystemUserStarting()V

    .line 10722
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    :try_start_a
    const-string/jumbo v0, "startPersistentApps"

    .line 10725
    invoke-virtual {v8, v0}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceBegin(Ljava/lang/String;)V

    const/high16 v0, 0x80000

    .line 10726
    invoke-virtual {v7, v0}, Lcom/android/server/am/ActivityManagerService;->startPersistentApps(I)V

    .line 10727
    invoke-virtual/range {p2 .. p2}, Landroid/util/TimingsTraceLog;->traceEnd()V

    const-string/jumbo v0, "systemReady"

    const-string/jumbo v2, "startPersistentApps MATCH_DIRECT_BOOT_AWARE"

    .line 10731
    invoke-static {v1, v10, v12, v0, v2}, Lcom/android/server/am/EventLogTags;->writeBootProgressAmsState(IIILjava/lang/String;Ljava/lang/String;)V

    .line 10736
    iput-boolean v12, v7, Lcom/android/server/am/ActivityManagerService;->mBooting:Z

    const-string/jumbo v0, "ro.system_user_home_needed"

    .line 10740
    invoke-static {v0, v9}, Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z

    move-result v0

    if-eqz v0, :cond_d

    const-string v0, "enableHomeActivity"

    .line 10741
    invoke-virtual {v8, v0}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceBegin(Ljava/lang/String;)V

    .line 10742
    new-instance v14, Landroid/content/ComponentName;

    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-class v2, Lcom/android/internal/app/SystemUserHomeActivity;

    invoke-direct {v14, v0, v2}, Landroid/content/ComponentName;-><init>(Landroid/content/Context;Ljava/lang/Class;)V
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_3

    .line 10744
    :try_start_b
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v13

    const/4 v15, 0x1

    const/16 v16, 0x0

    const/16 v17, 0x0

    const-string v18, "am"

    invoke-interface/range {v13 .. v18}, Landroid/content/pm/IPackageManager;->setComponentEnabledSetting(Landroid/content/ComponentName;IIILjava/lang/String;)V
    :try_end_b
    .catch Landroid/os/RemoteException; {:try_start_b .. :try_end_b} :catch_2
    .catchall {:try_start_b .. :try_end_b} :catchall_3

    .line 10750
    :try_start_c
    invoke-virtual/range {p2 .. p2}, Landroid/util/TimingsTraceLog;->traceEnd()V

    goto :goto_5

    :catch_2
    move-exception v0

    .line 10748
    invoke-virtual {v0}, Landroid/os/RemoteException;->rethrowAsRuntimeException()Ljava/lang/RuntimeException;

    move-result-object v0

    throw v0

    :cond_d
    :goto_5
    if-nez v1, :cond_e

    move v2, v12

    goto :goto_6

    :cond_e
    move v2, v9

    :goto_6
    if-eqz v2, :cond_f

    .line 10759
    invoke-static {}, Landroid/os/UserManager;->isHeadlessSystemUserMode()Z

    move-result v0

    if-nez v0, :cond_f

    const-string/jumbo v0, "startHomeOnAllDisplays"

    .line 10760
    invoke-virtual {v8, v0}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceBegin(Ljava/lang/String;)V

    .line 10761
    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    const-string/jumbo v3, "systemReady"

    invoke-virtual {v0, v1, v3}, Lcom/android/server/wm/ActivityTaskManagerInternal;->startHomeOnAllDisplays(ILjava/lang/String;)Z

    .line 10762
    invoke-virtual/range {p2 .. p2}, Landroid/util/TimingsTraceLog;->traceEnd()V

    :cond_f
    const-string/jumbo v0, "showSystemReadyErrorDialogs"

    .line 10765
    invoke-virtual {v8, v0}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceBegin(Ljava/lang/String;)V

    .line 10766
    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {v0}, Lcom/android/server/wm/ActivityTaskManagerInternal;->showSystemReadyErrorDialogsIfNeeded()V

    .line 10767
    invoke-virtual/range {p2 .. p2}, Landroid/util/TimingsTraceLog;->traceEnd()V

    if-eqz v2, :cond_10

    const-string/jumbo v0, "sendUserStartBroadcast"

    .line 10775
    invoke-virtual {v8, v0}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceBegin(Ljava/lang/String;)V

    .line 10776
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 10777
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    .line 10778
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v4
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_3

    .line 10780
    :try_start_d
    iget-object v6, v7, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v6, v1, v0, v3}, Lcom/android/server/am/UserController;->sendUserStartedBroadcast(III)V

    const-string/jumbo v6, "systemReady"

    const-string/jumbo v13, "send USER STARTED"

    .line 10784
    invoke-static {v1, v10, v12, v6, v13}, Lcom/android/server/am/EventLogTags;->writeBootProgressAmsState(IIILjava/lang/String;Ljava/lang/String;)V

    .line 10787
    iget-object v6, v7, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v6, v1, v0, v3}, Lcom/android/server/am/UserController;->sendUserStartingBroadcast(III)V

    const-string/jumbo v0, "systemReady"

    const-string/jumbo v3, "send USER STARTING"

    .line 10791
    invoke-static {v1, v10, v12, v0, v3}, Lcom/android/server/am/EventLogTags;->writeBootProgressAmsState(IIILjava/lang/String;Ljava/lang/String;)V
    :try_end_d
    .catchall {:try_start_d .. :try_end_d} :catchall_1

    .line 10797
    :goto_7
    :try_start_e
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_e
    .catchall {:try_start_e .. :try_end_e} :catchall_3

    goto :goto_8

    :catchall_1
    move-exception v0

    :try_start_f
    const-string v3, "ActivityManager"

    const-string v6, "Failed sending first user broadcasts"

    .line 10795
    invoke-static {v3, v6, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_f
    .catchall {:try_start_f .. :try_end_f} :catchall_2

    goto :goto_7

    .line 10799
    :goto_8
    :try_start_10
    invoke-virtual/range {p2 .. p2}, Landroid/util/TimingsTraceLog;->traceEnd()V

    goto :goto_9

    :catchall_2
    move-exception v0

    .line 10797
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 10798
    throw v0

    :cond_10
    const-string v0, "ActivityManager"

    .line 10801
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Not sending multi-user broadcasts for non-system user "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v0, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    :goto_9
    const-string/jumbo v0, "resumeTopActivities"

    .line 10805
    invoke-virtual {v8, v0}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceBegin(Ljava/lang/String;)V

    .line 10806
    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    invoke-virtual {v0, v9}, Lcom/android/server/wm/ActivityTaskManagerInternal;->resumeTopActivities(Z)V

    .line 10807
    invoke-virtual/range {p2 .. p2}, Landroid/util/TimingsTraceLog;->traceEnd()V

    if-eqz v2, :cond_11

    const-string/jumbo v0, "sendUserSwitchBroadcasts"

    .line 10810
    invoke-virtual {v8, v0}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceBegin(Ljava/lang/String;)V

    .line 10811
    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v0, v10, v1}, Lcom/android/server/am/UserController;->sendUserSwitchBroadcasts(II)V

    .line 10812
    invoke-virtual/range {p2 .. p2}, Landroid/util/TimingsTraceLog;->traceEnd()V

    :cond_11
    const-string/jumbo v0, "setBinderProxies"

    .line 10815
    invoke-virtual {v8, v0}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceBegin(Ljava/lang/String;)V

    const/16 v0, 0x1770

    const/16 v1, 0x157c

    .line 10816
    invoke-static {v0, v1}, Lcom/android/internal/os/BinderInternal;->nSetBinderProxyCountWatermarks(II)V

    .line 10818
    invoke-static {v12}, Lcom/android/internal/os/BinderInternal;->nSetBinderProxyCountEnabled(Z)V

    .line 10819
    new-instance v0, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda21;

    invoke-direct {v0, v7}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda21;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iget-object v1, v7, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-static {v0, v1}, Lcom/android/internal/os/BinderInternal;->setBinderProxyCountCallback(Lcom/android/internal/os/BinderInternal$BinderProxyLimitListener;Landroid/os/Handler;)V

    .line 10842
    invoke-virtual/range {p2 .. p2}, Landroid/util/TimingsTraceLog;->traceEnd()V

    .line 10844
    invoke-virtual/range {p2 .. p2}, Landroid/util/TimingsTraceLog;->traceEnd()V

    const-string v0, "componentAlias"

    .line 10847
    invoke-virtual {v8, v0}, Lcom/android/server/utils/TimingsTraceAndSlog;->traceBegin(Ljava/lang/String;)V

    .line 10848
    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mComponentAliasResolver:Lcom/android/server/am/ComponentAliasResolver;

    iget-object v1, v7, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget-boolean v1, v1, Lcom/android/server/am/ActivityManagerConstants;->mEnableComponentAlias:Z

    iget-object v2, v7, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget-object v2, v2, Lcom/android/server/am/ActivityManagerConstants;->mComponentAliasOverrides:Ljava/lang/String;

    invoke-virtual {v0, v1, v2}, Lcom/android/server/am/ComponentAliasResolver;->onSystemReady(ZLjava/lang/String;)V

    .line 10850
    invoke-virtual/range {p2 .. p2}, Landroid/util/TimingsTraceLog;->traceEnd()V

    .line 10854
    invoke-static {}, Lcom/android/internal/os/BackgroundThread;->getHandler()Landroid/os/Handler;

    move-result-object v0

    new-instance v1, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda22;

    invoke-direct {v1, v7}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda22;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-virtual {v0, v1}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 10861
    invoke-static {}, Lcom/android/internal/os/BackgroundThread;->getHandler()Landroid/os/Handler;

    move-result-object v0

    new-instance v1, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda23;

    invoke-direct {v1, v7}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda23;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-virtual {v0, v1}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    const-string/jumbo v0, "systemReady"

    const-string v1, "NULL"

    .line 10868
    invoke-static {v9, v10, v11, v0, v1}, Lcom/android/server/am/EventLogTags;->writeBootProgressAmsState(IIILjava/lang/String;Ljava/lang/String;)V

    .line 10872
    invoke-virtual/range {p2 .. p2}, Landroid/util/TimingsTraceLog;->traceEnd()V

    .line 10873
    monitor-exit p0
    :try_end_10
    .catchall {:try_start_10 .. :try_end_10} :catchall_3

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 10877
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateExtraFreeKbytes()V

    .line 10878
    new-instance v0, Lcom/android/server/am/ActivityManagerService$ScreenChangeObserver;

    invoke-direct {v0, v7}, Lcom/android/server/am/ActivityManagerService$ScreenChangeObserver;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mScreenChangeObserver:Lcom/android/server/am/ActivityManagerService$ScreenChangeObserver;

    return-void

    :catchall_3
    move-exception v0

    .line 10873
    :try_start_11
    monitor-exit p0
    :try_end_11
    .catchall {:try_start_11 .. :try_end_11} :catchall_3

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :catchall_4
    move-exception v0

    .line 10619
    :try_start_12
    monitor-exit p0
    :try_end_12
    .catchall {:try_start_12 .. :try_end_12} :catchall_4

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0

    :catchall_5
    move-exception v0

    .line 10601
    :try_start_13
    monitor-exit v1
    :try_end_13
    .catchall {:try_start_13 .. :try_end_13} :catchall_5

    throw v0

    :catchall_6
    move-exception v0

    .line 10581
    :try_start_14
    monitor-exit p0
    :try_end_14
    .catchall {:try_start_14 .. :try_end_14} :catchall_6

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public tempAllowlistForPendingIntentLocked(IIIJIILjava/lang/String;)V
    .locals 9

    move-object v0, p0

    move v1, p1

    move v8, p2

    .line 19707
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v2

    .line 19708
    :try_start_0
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v3, p1}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v3

    if-nez v3, :cond_0

    const-string v0, "ActivityManager"

    .line 19710
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "tempAllowlistForPendingIntentLocked() no ProcessRecord for pid "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 19712
    monitor-exit v2

    return-void

    .line 19714
    :cond_0
    iget-object v3, v3, Lcom/android/server/am/ProcessRecord;->mServices:Lcom/android/server/am/ProcessServiceRecord;

    iget-boolean v3, v3, Lcom/android/server/am/ProcessServiceRecord;->mAllowlistManager:Z

    if-nez v3, :cond_1

    const-string v3, "android.permission.CHANGE_DEVICE_IDLE_TEMP_WHITELIST"

    .line 19715
    invoke-virtual {p0, v3, p1, p2}, Lcom/android/server/am/ActivityManagerService;->checkPermission(Ljava/lang/String;II)I

    move-result v3

    if-eqz v3, :cond_1

    const-string v3, "android.permission.START_ACTIVITIES_FROM_BACKGROUND"

    .line 19717
    invoke-virtual {p0, v3, p1, p2}, Lcom/android/server/am/ActivityManagerService;->checkPermission(Ljava/lang/String;II)I

    move-result v3

    if-eqz v3, :cond_1

    const-string v3, "android.permission.START_FOREGROUND_SERVICES_FROM_BACKGROUND"

    .line 19719
    invoke-virtual {p0, v3, p1, p2}, Lcom/android/server/am/ActivityManagerService;->checkPermission(Ljava/lang/String;II)I

    move-result v1

    if-eqz v1, :cond_1

    .line 19725
    monitor-exit v2

    return-void

    .line 19728
    :cond_1
    monitor-exit v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-object v1, p0

    move v2, p3

    move-wide v3, p4

    move/from16 v5, p7

    move-object/from16 v6, p8

    move v7, p6

    move v8, p2

    .line 19730
    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->tempAllowlistUidLocked(IJILjava/lang/String;II)V

    return-void

    :catchall_0
    move-exception v0

    .line 19728
    :try_start_1
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v0
.end method

.method public tempAllowlistUidLocked(IJILjava/lang/String;II)V
    .locals 15

    move-object v0, p0

    move/from16 v9, p1

    .line 19739
    iget-object v10, v0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v10

    .line 19741
    :try_start_0
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mLocalDeviceIdleController:Lcom/android/server/DeviceIdleInternal;

    move/from16 v11, p4

    move/from16 v2, p6

    if-eqz v1, :cond_0

    .line 19742
    invoke-interface {v1, v11, v2}, Lcom/android/server/DeviceIdleInternal;->getTempAllowListType(II)I

    move-result v1

    move v12, v1

    goto :goto_0

    :cond_0
    move v12, v2

    :goto_0
    const/4 v1, -0x1

    if-ne v12, v1, :cond_1

    .line 19745
    monitor-exit v10
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return-void

    .line 19747
    :cond_1
    :try_start_1
    iget-object v13, v0, Lcom/android/server/am/ActivityManagerService;->mPendingTempAllowlist:Lcom/android/server/am/PendingTempAllowlists;

    new-instance v14, Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;

    move-object v1, v14

    move/from16 v2, p1

    move-wide/from16 v3, p2

    move/from16 v5, p4

    move-object/from16 v6, p5

    move v7, v12

    move/from16 v8, p7

    invoke-direct/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;-><init>(IJILjava/lang/String;II)V

    invoke-virtual {v13, v9, v14}, Lcom/android/server/am/PendingTempAllowlists;->put(ILcom/android/server/am/ActivityManagerService$PendingTempAllowlist;)V

    const/4 v1, 0x1

    .line 19750
    invoke-virtual {p0, v9, v1}, Lcom/android/server/am/ActivityManagerService;->setUidTempAllowlistStateLSP(IZ)V

    .line 19751
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Landroid/os/Handler;

    const/16 v2, 0x44

    invoke-virtual {v1, v2}, Landroid/os/Handler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v1

    invoke-virtual {v1}, Landroid/os/Message;->sendToTarget()V

    if-nez v12, :cond_2

    .line 19754
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mFgsStartTempAllowList:Lcom/android/server/am/FgsTempAllowList;

    new-instance v1, Lcom/android/server/am/ActivityManagerService$FgsTempAllowListItem;

    move-object v2, v1

    move-wide/from16 v3, p2

    move/from16 v5, p4

    move-object/from16 v6, p5

    move/from16 v7, p7

    invoke-direct/range {v2 .. v7}, Lcom/android/server/am/ActivityManagerService$FgsTempAllowListItem;-><init>(JILjava/lang/String;I)V

    move-wide/from16 v2, p2

    invoke-virtual {v0, v9, v2, v3, v1}, Lcom/android/server/am/FgsTempAllowList;->add(IJLjava/lang/Object;)V

    .line 19757
    :cond_2
    monitor-exit v10
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return-void

    :catchall_0
    move-exception v0

    :try_start_2
    monitor-exit v10
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v0
.end method

.method public final trimApplications(ZI)V
    .locals 0

    .line 19813
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 19814
    :try_start_0
    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->trimApplicationsLocked(ZI)V

    .line 19815
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public final trimApplicationsLocked(ZI)V
    .locals 13

    .line 19823
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v0, v0, Lcom/android/server/am/ProcessList;->mRemovedProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    const/4 v1, 0x1

    sub-int/2addr v0, v1

    const/4 v2, 0x0

    move v3, v2

    :goto_0
    if-ltz v0, :cond_5

    .line 19824
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v4, v4, Lcom/android/server/am/ProcessList;->mRemovedProcesses:Ljava/util/ArrayList;

    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ProcessRecord;

    .line 19825
    invoke-virtual {v4}, Lcom/android/server/am/ProcessRecord;->hasActivitiesOrRecentTasks()Z

    move-result v5

    if-nez v5, :cond_4

    iget-object v5, v4, Lcom/android/server/am/ProcessRecord;->mReceivers:Lcom/android/server/am/ProcessReceiverRecord;

    .line 19826
    invoke-virtual {v5}, Lcom/android/server/am/ProcessReceiverRecord;->numberOfCurReceivers()I

    move-result v5

    if-nez v5, :cond_4

    iget-object v5, v4, Lcom/android/server/am/ProcessRecord;->mServices:Lcom/android/server/am/ProcessServiceRecord;

    .line 19827
    invoke-virtual {v5}, Lcom/android/server/am/ProcessServiceRecord;->numberOfRunningServices()I

    move-result v5

    if-nez v5, :cond_4

    .line 19828
    invoke-virtual {v4}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v3

    .line 19829
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Exiting empty application process "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 19830
    invoke-virtual {v4}, Lcom/android/server/am/ProcessRecord;->toShortString()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v6, " ("

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    if-eqz v3, :cond_0

    .line 19831
    invoke-interface {v3}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v6

    goto :goto_1

    :cond_0
    const/4 v6, 0x0

    :goto_1
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v6, ")\n"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    const-string v6, "ActivityManager"

    .line 19829
    invoke-static {v6, v5}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 19833
    invoke-virtual {v4}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v7

    if-lez v7, :cond_1

    .line 19834
    sget v5, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-eq v7, v5, :cond_1

    const/16 v3, 0xd

    const/4 v5, 0x4

    const-string v6, "empty"

    .line 19835
    invoke-virtual {v4, v6, v3, v5, v2}, Lcom/android/server/am/ProcessRecord;->killLocked(Ljava/lang/String;IIZ)V

    goto :goto_2

    :cond_1
    if-eqz v3, :cond_2

    .line 19841
    :try_start_0
    invoke-interface {v3}, Landroid/app/IApplicationThread;->scheduleExit()V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    :catch_0
    :cond_2
    :goto_2
    const/4 v8, 0x0

    const/4 v9, 0x1

    const/4 v10, -0x1

    const/4 v11, 0x0

    const/4 v12, 0x0

    move-object v5, p0

    move-object v6, v4

    .line 19847
    invoke-virtual/range {v5 .. v12}, Lcom/android/server/am/ActivityManagerService;->cleanUpApplicationRecordLocked(Lcom/android/server/am/ProcessRecord;IZZIZZ)Z

    .line 19849
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v3, v3, Lcom/android/server/am/ProcessList;->mRemovedProcesses:Ljava/util/ArrayList;

    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 19851
    invoke-virtual {v4}, Lcom/android/server/am/ProcessRecord;->isPersistent()Z

    move-result v3

    if-eqz v3, :cond_3

    .line 19852
    iget-object v6, v4, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x2

    move-object v5, p0

    invoke-virtual/range {v5 .. v10}, Lcom/android/server/am/ActivityManagerService;->addAppLocked(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;ZLjava/lang/String;I)Lcom/android/server/am/ProcessRecord;

    .line 19854
    iget-object v3, v4, Lcom/android/server/am/ProcessRecord;->mProfile:Lcom/android/server/am/ProcessProfileRecord;

    const/4 v4, 0x2

    invoke-virtual {v3, v4}, Lcom/android/server/am/ProcessProfileRecord;->addHostingComponentType(I)V

    :cond_3
    move v3, v1

    :cond_4
    add-int/lit8 v0, v0, -0x1

    goto/16 :goto_0

    :cond_5
    if-nez v3, :cond_7

    if-eqz p1, :cond_6

    goto :goto_3

    .line 19865
    :cond_6
    invoke-virtual {p0, p2}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjPendingTargetsLocked(I)V

    goto :goto_4

    .line 19862
    :cond_7
    :goto_3
    invoke-virtual {p0, p2}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(I)V

    :goto_4
    return-void
.end method

.method public final uidOnBackgroundAllowlistLOSP(I)Z
    .locals 4

    .line 8807
    invoke-static {p1}, Landroid/os/UserHandle;->getAppId(I)I

    move-result p1

    .line 8808
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mBackgroundAppIdAllowlist:[I

    .line 8809
    array-length v0, p0

    const/4 v1, 0x0

    move v2, v1

    :goto_0
    if-ge v2, v0, :cond_1

    .line 8810
    aget v3, p0, v2

    if-ne p1, v3, :cond_0

    const/4 p0, 0x1

    return p0

    :cond_0
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    :cond_1
    return v1
.end method

.method public unbindBackupAgent(Landroid/content/pm/ApplicationInfo;)V
    .locals 5

    const-string v0, "android.permission.CONFIRM_FULL_BACKUP"

    const-string/jumbo v1, "unbindBackupAgent"

    .line 16399
    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    if-nez p1, :cond_0

    const-string p0, "ActivityManager"

    const-string/jumbo p1, "unbind backup agent for null app"

    .line 16401
    invoke-static {p0, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    return-void

    .line 16407
    :cond_0
    iget v0, p1, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {v0}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v0

    .line 16408
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 16409
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTargets:Landroid/util/SparseArray;

    invoke-virtual {v1, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/BackupRecord;

    if-nez v1, :cond_1

    const/4 v2, 0x0

    goto :goto_0

    .line 16410
    :cond_1
    iget-object v2, v1, Lcom/android/server/am/BackupRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :goto_0
    if-nez v2, :cond_2

    :try_start_1
    const-string p1, "ActivityManager"

    const-string v1, "Unbinding backup agent with no active backup"

    .line 16413
    invoke-static {p1, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 16441
    :try_start_2
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTargets:Landroid/util/SparseArray;

    invoke-virtual {p1, v0}, Landroid/util/SparseArray;->delete(I)V

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 16414
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 16417
    :cond_2
    :try_start_3
    iget-object v3, p1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_3

    const-string v1, "ActivityManager"

    .line 16418
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Unbind of "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string p1, " but is not the current backup target"

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {v1, p1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 16441
    :try_start_4
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTargets:Landroid/util/SparseArray;

    invoke-virtual {p1, v0}, Landroid/util/SparseArray;->delete(I)V

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 16419
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 16423
    :cond_3
    :try_start_5
    iget-object v2, v1, Lcom/android/server/am/BackupRecord;->app:Lcom/android/server/am/ProcessRecord;

    const/16 v3, 0xf

    .line 16424
    invoke-virtual {p0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;I)Z

    const/4 v3, 0x0

    .line 16425
    invoke-virtual {v2, v3}, Lcom/android/server/am/ProcessRecord;->setInFullBackup(Z)V

    .line 16426
    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->mProfile:Lcom/android/server/am/ProcessProfileRecord;

    const/4 v4, 0x4

    invoke-virtual {v3, v4}, Lcom/android/server/am/ProcessProfileRecord;->clearHostingComponentType(I)V

    .line 16428
    iget-object v1, v1, Lcom/android/server/am/BackupRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget v1, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 16431
    invoke-virtual {v2}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v2
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    if-eqz v2, :cond_4

    .line 16434
    :try_start_6
    invoke-interface {v2, p1, v0}, Landroid/app/IApplicationThread;->scheduleDestroyBackupAgent(Landroid/content/pm/ApplicationInfo;I)V
    :try_end_6
    .catch Ljava/lang/Exception; {:try_start_6 .. :try_end_6} :catch_0
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    goto :goto_1

    :catch_0
    move-exception p1

    :try_start_7
    const-string v2, "ActivityManager"

    const-string v3, "Exception when unbinding backup agent:"

    .line 16436
    invoke-static {v2, v3}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 16437
    invoke-virtual {p1}, Ljava/lang/Exception;->printStackTrace()V
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    .line 16441
    :cond_4
    :goto_1
    :try_start_8
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTargets:Landroid/util/SparseArray;

    invoke-virtual {p1, v0}, Landroid/util/SparseArray;->delete(I)V

    .line 16443
    monitor-exit p0
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    const/4 p0, -0x1

    if-eq v1, p0, :cond_5

    .line 16446
    const-class p0, Lcom/android/server/job/JobSchedulerInternal;

    invoke-static {p0}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object p0

    check-cast p0, Lcom/android/server/job/JobSchedulerInternal;

    .line 16447
    invoke-interface {p0, v1}, Lcom/android/server/job/JobSchedulerInternal;->removeBackingUpUid(I)V

    :cond_5
    return-void

    :catchall_0
    move-exception p1

    .line 16441
    :try_start_9
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTargets:Landroid/util/SparseArray;

    invoke-virtual {v1, v0}, Landroid/util/SparseArray;->delete(I)V

    .line 16442
    throw p1

    :catchall_1
    move-exception p1

    .line 16443
    monitor-exit p0
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public unbindFinished(Landroid/os/IBinder;Landroid/content/Intent;Z)V
    .locals 2

    if-eqz p2, :cond_1

    .line 16167
    invoke-virtual {p2}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v0

    const/4 v1, 0x1

    if-eq v0, v1, :cond_0

    goto :goto_0

    .line 16168
    :cond_0
    new-instance p0, Ljava/lang/IllegalArgumentException;

    const-string p1, "File descriptors passed in Intent"

    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 16171
    :cond_1
    :goto_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 16172
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    check-cast p1, Lcom/android/server/am/ServiceRecord;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/am/ActiveServices;->unbindFinishedLocked(Lcom/android/server/am/ServiceRecord;Landroid/content/Intent;Z)V

    .line 16173
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public unbindService(Landroid/app/IServiceConnection;)Z
    .locals 3

    const-wide/16 v0, 0x40

    .line 16140
    :try_start_0
    invoke-static {v0, v1}, Landroid/os/Trace;->isTagEnabled(J)Z

    move-result v2

    if-eqz v2, :cond_0

    const-string/jumbo v2, "unbindService"

    .line 16141
    invoke-static {v0, v1, v2}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 16143
    :cond_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 16144
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v2, p1}, Lcom/android/server/am/ActiveServices;->unbindServiceLocked(Landroid/app/IServiceConnection;)Z

    move-result p1

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 16147
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Trace;->traceEnd(J)V

    return p1

    :catchall_0
    move-exception p1

    .line 16145
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    :catchall_1
    move-exception p0

    .line 16147
    invoke-static {v0, v1}, Landroid/os/Trace;->traceEnd(J)V

    .line 16148
    throw p0
.end method

.method public final unbroadcastIntent(Landroid/app/IApplicationThread;Landroid/content/Intent;I)V
    .locals 8

    if-eqz p2, :cond_1

    .line 18339
    invoke-virtual {p2}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result p1

    const/4 v0, 0x1

    if-eq p1, v0, :cond_0

    goto :goto_0

    .line 18340
    :cond_0
    new-instance p0, Ljava/lang/IllegalArgumentException;

    const-string p1, "File descriptors passed in Intent"

    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 18343
    :cond_1
    :goto_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    const/4 v4, 0x1

    const/4 v5, 0x0

    const-string/jumbo v6, "removeStickyBroadcast"

    const/4 v7, 0x0

    move v3, p3

    invoke-virtual/range {v0 .. v7}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p1

    .line 18346
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    :try_start_0
    const-string p3, "android.permission.BROADCAST_STICKY"

    .line 18347
    invoke-virtual {p0, p3}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result p3

    if-nez p3, :cond_6

    .line 18356
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    invoke-virtual {p3, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object p3

    check-cast p3, Landroid/util/ArrayMap;

    if-eqz p3, :cond_5

    .line 18358
    invoke-virtual {p2}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p3, v0}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/util/ArrayList;

    if-eqz v0, :cond_4

    .line 18360
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v1

    const/4 v2, 0x0

    :goto_1
    if-ge v2, v1, :cond_3

    .line 18363
    invoke-virtual {v0, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ActivityManagerService$StickyBroadcast;

    iget-object v3, v3, Lcom/android/server/am/ActivityManagerService$StickyBroadcast;->intent:Landroid/content/Intent;

    invoke-virtual {p2, v3}, Landroid/content/Intent;->filterEquals(Landroid/content/Intent;)Z

    move-result v3

    if-eqz v3, :cond_2

    .line 18364
    invoke-virtual {v0, v2}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    goto :goto_2

    :cond_2
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    .line 18368
    :cond_3
    :goto_2
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-gtz v0, :cond_4

    .line 18369
    invoke-virtual {p2}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object p2

    invoke-virtual {p3, p2}, Landroid/util/ArrayMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 18372
    :cond_4
    invoke-virtual {p3}, Landroid/util/ArrayMap;->size()I

    move-result p2

    if-gtz p2, :cond_5

    .line 18373
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    invoke-virtual {p2, p1}, Landroid/util/SparseArray;->remove(I)V

    .line 18376
    :cond_5
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    .line 18349
    :cond_6
    :try_start_1
    new-instance p1, Ljava/lang/StringBuilder;

    invoke-direct {p1}, Ljava/lang/StringBuilder;-><init>()V

    const-string p2, "Permission Denial: unbroadcastIntent() from pid="

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 18350
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result p2

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p2, ", uid="

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 18351
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result p2

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p2, " requires "

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p2, "android.permission.BROADCAST_STICKY"

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    const-string p2, "ActivityManager"

    .line 18353
    invoke-static {p2, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 18354
    new-instance p2, Ljava/lang/SecurityException;

    invoke-direct {p2, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw p2

    :catchall_0
    move-exception p1

    .line 18376
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public unhandledBack()V
    .locals 0

    .line 8960
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {p0}, Lcom/android/server/wm/ActivityTaskManagerService;->unhandledBack()V

    return-void
.end method

.method public unlockUser(I[B[BLandroid/os/IProgressListener;)Z
    .locals 0

    .line 20177
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {p0, p1, p4}, Lcom/android/server/am/UserController;->unlockUser(ILandroid/os/IProgressListener;)Z

    move-result p0

    return p0
.end method

.method public unlockUser2(ILandroid/os/IProgressListener;)Z
    .locals 4

    const-string v0, "AMS.unlockUser2"

    const-string v1, "NULL"

    const/4 v2, -0x1

    const/4 v3, 0x0

    .line 20184
    invoke-static {p1, v2, v3, v0, v1}, Lcom/android/server/am/EventLogTags;->writeBootProgressAmsState(IIILjava/lang/String;Ljava/lang/String;)V

    .line 20187
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/UserController;->unlockUser(ILandroid/os/IProgressListener;)Z

    move-result p0

    return p0
.end method

.method public final unpendingScheduleServiceRestart(IZ)V
    .locals 6

    const-string v0, "ActivityManager"

    .line 3926
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "unpendingScheduleServiceRestart: u="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, ", drop="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 3927
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 3928
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingSches:Ljava/util/Map;

    monitor-enter v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 3929
    :try_start_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPendingSches:Ljava/util/Map;

    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    invoke-interface {v1, v2}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/util/List;

    if-eqz v1, :cond_2

    if-eqz p2, :cond_0

    .line 3932
    invoke-interface {v1}, Ljava/util/List;->clear()V

    goto :goto_2

    .line 3934
    :cond_0
    invoke-interface {v1}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object p2

    .line 3935
    :goto_0
    invoke-interface {p2}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_1

    .line 3936
    invoke-interface {p2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ServiceRecord;

    const-string v3, "ActivityManager"

    .line 3937
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "up tryScheduleServiceRestartLocked("

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v5, "): sr="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3938
    invoke-virtual {v2}, Lcom/android/server/am/ServiceRecord;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    .line 3937
    invoke-static {v3, v4}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 3940
    :try_start_2
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v3, v2}, Lcom/android/server/am/ActiveServices;->tryScheduleServiceRestartLocked(Lcom/android/server/am/ServiceRecord;)V
    :try_end_2
    .catch Ljava/lang/IllegalStateException; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    goto :goto_1

    :catch_0
    :try_start_3
    const-string v3, "ActivityManager"

    .line 3942
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "ISE while USR of "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Lcom/android/server/am/ServiceRecord;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v3, v2}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 3944
    :goto_1
    invoke-interface {p2}, Ljava/util/Iterator;->remove()V

    goto :goto_0

    .line 3947
    :cond_1
    :goto_2
    invoke-interface {v1}, Ljava/util/List;->isEmpty()Z

    move-result p2

    if-eqz p2, :cond_2

    .line 3948
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mPendingSches:Ljava/util/Map;

    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object p1

    invoke-interface {p2, p1}, Ljava/util/Map;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 3951
    :cond_2
    monitor-exit v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 3952
    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :catchall_0
    move-exception p1

    .line 3951
    :try_start_5
    monitor-exit v0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    :try_start_6
    throw p1

    :catchall_1
    move-exception p1

    .line 3952
    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public unregisterIntentSenderCancelListener(Landroid/content/IIntentSender;Lcom/android/internal/os/IResultReceiver;)V
    .locals 0

    .line 6676
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingIntentController:Lcom/android/server/am/PendingIntentController;

    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/PendingIntentController;->unregisterIntentSenderCancelListener(Landroid/content/IIntentSender;Lcom/android/internal/os/IResultReceiver;)V

    return-void
.end method

.method public unregisterProcessObserver(Landroid/app/IProcessObserver;)V
    .locals 0

    .line 9554
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {p0, p1}, Lcom/android/server/am/ProcessList;->unregisterProcessObserver(Landroid/app/IProcessObserver;)V

    return-void
.end method

.method public unregisterReceiver(Landroid/content/IIntentReceiver;)V
    .locals 11

    .line 16873
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 16876
    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 16877
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    invoke-interface {p1}, Landroid/content/IIntentReceiver;->asBinder()Landroid/os/IBinder;

    move-result-object p1

    invoke-virtual {v2, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/android/server/am/ReceiverList;

    const/4 v2, 0x0

    if-eqz p1, :cond_2

    .line 16879
    iget-object v3, p1, Lcom/android/server/am/ReceiverList;->curBroadcast:Lcom/android/server/am/BroadcastRecord;

    if-eqz v3, :cond_0

    .line 16881
    iget-object v4, v3, Lcom/android/server/am/BroadcastRecord;->queue:Lcom/android/server/am/BroadcastQueue;

    iget-object v5, p1, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;

    iget v6, v3, Lcom/android/server/am/BroadcastRecord;->resultCode:I

    iget-object v7, v3, Lcom/android/server/am/BroadcastRecord;->resultData:Ljava/lang/String;

    iget-object v8, v3, Lcom/android/server/am/BroadcastRecord;->resultExtras:Landroid/os/Bundle;

    iget-boolean v9, v3, Lcom/android/server/am/BroadcastRecord;->resultAbort:Z

    const/4 v10, 0x0

    invoke-virtual/range {v4 .. v10}, Lcom/android/server/am/BroadcastQueue;->finishReceiverLocked(Lcom/android/server/am/ProcessRecord;ILjava/lang/String;Landroid/os/Bundle;ZZ)Z

    move-result v3

    if-eqz v3, :cond_0

    const/4 v3, 0x1

    goto :goto_0

    :cond_0
    move v3, v2

    .line 16888
    :goto_0
    iget-object v4, p1, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v4, :cond_1

    .line 16889
    iget-object v4, v4, Lcom/android/server/am/ProcessRecord;->mReceivers:Lcom/android/server/am/ProcessReceiverRecord;

    invoke-virtual {v4, p1}, Lcom/android/server/am/ProcessReceiverRecord;->removeReceiver(Lcom/android/server/am/ReceiverList;)V

    .line 16891
    :cond_1
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->removeReceiverLocked(Lcom/android/server/am/ReceiverList;)V

    .line 16892
    iget-boolean v4, p1, Lcom/android/server/am/ReceiverList;->linkedToDeath:Z

    if-eqz v4, :cond_3

    .line 16893
    iput-boolean v2, p1, Lcom/android/server/am/ReceiverList;->linkedToDeath:Z

    .line 16894
    iget-object v4, p1, Lcom/android/server/am/ReceiverList;->receiver:Landroid/content/IIntentReceiver;

    invoke-interface {v4}, Landroid/content/IIntentReceiver;->asBinder()Landroid/os/IBinder;

    move-result-object v4

    invoke-interface {v4, p1, v2}, Landroid/os/IBinder;->unlinkToDeath(Landroid/os/IBinder$DeathRecipient;I)Z

    goto :goto_1

    :cond_2
    move v3, v2

    :cond_3
    :goto_1
    if-eqz v3, :cond_4

    const/4 p1, 0x2

    .line 16901
    invoke-virtual {p0, v2, p1}, Lcom/android/server/am/ActivityManagerService;->trimApplicationsLocked(ZI)V

    .line 16902
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 16907
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return-void

    .line 16904
    :cond_4
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 16907
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return-void

    :catchall_0
    move-exception p1

    .line 16904
    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    :catchall_1
    move-exception p0

    .line 16907
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 16908
    throw p0
.end method

.method public unregisterTaskStackListener(Landroid/app/ITaskStackListener;)V
    .locals 0

    .line 3349
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {p0, p1}, Lcom/android/server/wm/ActivityTaskManagerService;->unregisterTaskStackListener(Landroid/app/ITaskStackListener;)V

    return-void
.end method

.method public unregisterUidFrozenStateChangedCallback(Landroid/app/IUidFrozenStateChangedCallback;)V
    .locals 2

    const-string v0, "callback cannot be null"

    .line 9721
    invoke-static {p1, v0}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    const-string v0, "android.permission.PACKAGE_USAGE_STATS"

    const-string/jumbo v1, "unregisterUidFrozenStateChangedCallback()"

    .line 9722
    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 9724
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUidFrozenStateChangedCallbackList:Landroid/os/RemoteCallbackList;

    monitor-enter v0

    .line 9725
    :try_start_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mUidFrozenStateChangedCallbackList:Landroid/os/RemoteCallbackList;

    invoke-virtual {p0, p1}, Landroid/os/RemoteCallbackList;->unregister(Landroid/os/IInterface;)Z

    .line 9726
    monitor-exit v0

    return-void

    :catchall_0
    move-exception p0

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw p0
.end method

.method public unregisterUidObserver(Landroid/app/IUidObserver;)V
    .locals 0

    .line 9631
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mUidObserverController:Lcom/android/server/am/UidObserverController;

    invoke-virtual {p0, p1}, Lcom/android/server/am/UidObserverController;->unregister(Landroid/app/IUidObserver;)V

    return-void
.end method

.method public unregisterUserSwitchObserver(Landroid/app/IUserSwitchObserver;)V
    .locals 0

    .line 20316
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {p0, p1}, Lcom/android/server/am/UserController;->unregisterUserSwitchObserver(Landroid/app/IUserSwitchObserver;)V

    return-void
.end method

.method public unstableProviderDied(Landroid/os/IBinder;)V
    .locals 0

    .line 8782
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mCpHelper:Lcom/android/server/am/ContentProviderHelper;

    invoke-virtual {p0, p1}, Lcom/android/server/am/ContentProviderHelper;->unstableProviderDied(Landroid/os/IBinder;)V

    return-void
.end method

.method public updateActivityUsageStats(Landroid/content/ComponentName;IILandroid/os/IBinder;Landroid/content/ComponentName;Landroid/app/assist/ActivityId;)V
    .locals 8

    const/4 v7, 0x0

    move-object v0, p0

    move-object v1, p1

    move v2, p2

    move v3, p3

    move-object v4, p4

    move-object v5, p5

    move-object v6, p6

    .line 3488
    invoke-virtual/range {v0 .. v7}, Lcom/android/server/am/ActivityManagerService;->updateActivityUsageStats(Landroid/content/ComponentName;IILandroid/os/IBinder;Landroid/content/ComponentName;Landroid/app/assist/ActivityId;Landroid/content/Intent;)V

    return-void
.end method

.method public updateActivityUsageStats(Landroid/content/ComponentName;IILandroid/os/IBinder;Landroid/content/ComponentName;Landroid/app/assist/ActivityId;Landroid/content/Intent;)V
    .locals 12

    move-object v0, p0

    move v8, p2

    move v9, p3

    const/4 v10, 0x2

    const/4 v11, 0x1

    if-ne v9, v11, :cond_1

    .line 3502
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-static {v1}, Lcom/samsung/android/knox/EnterpriseDeviceManager;->getInstance(Landroid/content/Context;)Lcom/samsung/android/knox/EnterpriseDeviceManager;

    move-result-object v1

    if-eqz v1, :cond_2

    .line 3503
    invoke-virtual {v1}, Lcom/samsung/android/knox/EnterpriseDeviceManager;->isMdmAdminPresent()Z

    move-result v1

    if-eqz v1, :cond_2

    .line 3505
    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getApplicationPolicy()Lcom/samsung/android/knox/application/IApplicationPolicy;

    move-result-object v1

    iput-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mApplicationPolicy:Lcom/samsung/android/knox/application/IApplicationPolicy;

    if-eqz v1, :cond_2

    .line 3507
    invoke-virtual {p1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v1

    iput-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentPackage:Ljava/lang/String;

    .line 3508
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mPreviousPackage:Ljava/lang/String;

    if-eqz v1, :cond_0

    invoke-virtual {v1}, Ljava/lang/String;->length()I

    move-result v1

    if-nez v1, :cond_0

    .line 3509
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mApplicationPolicy:Lcom/samsung/android/knox/application/IApplicationPolicy;

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentPackage:Ljava/lang/String;

    invoke-interface {v1, v2, p2}, Lcom/samsung/android/knox/application/IApplicationPolicy;->applicationUsageAppLaunchCount(Ljava/lang/String;I)V

    goto :goto_0

    .line 3510
    :cond_0
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentPackage:Ljava/lang/String;

    invoke-static {v1}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v1

    if-nez v1, :cond_2

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentPackage:Ljava/lang/String;

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mPreviousPackage:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_2

    .line 3511
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mApplicationPolicy:Lcom/samsung/android/knox/application/IApplicationPolicy;

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mPreviousPackage:Ljava/lang/String;

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mPreviousUserId:I

    invoke-interface {v1, v2, v3}, Lcom/samsung/android/knox/application/IApplicationPolicy;->applicationUsageAppPauseTime(Ljava/lang/String;I)V

    .line 3512
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mApplicationPolicy:Lcom/samsung/android/knox/application/IApplicationPolicy;

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentPackage:Ljava/lang/String;

    invoke-interface {v1, v2, p2}, Lcom/samsung/android/knox/application/IApplicationPolicy;->applicationUsageAppLaunchCount(Ljava/lang/String;I)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    :cond_1
    if-ne v9, v10, :cond_2

    .line 3519
    invoke-virtual {p1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v1

    iput-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mPreviousPackage:Ljava/lang/String;

    .line 3520
    iput v8, v0, Lcom/android/server/am/ActivityManagerService;->mPreviousUserId:I

    .line 3525
    :catch_0
    :cond_2
    :goto_0
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    if-eqz v1, :cond_3

    .line 3528
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    invoke-virtual/range {p4 .. p4}, Ljava/lang/Object;->hashCode()I

    move-result v5

    move-object v2, p1

    move v3, p2

    move v4, p3

    move-object/from16 v6, p5

    move-object/from16 v7, p7

    invoke-virtual/range {v1 .. v7}, Landroid/app/usage/UsageStatsManagerInternal;->reportEvent(Landroid/content/ComponentName;IIILandroid/content/ComponentName;Landroid/content/Intent;)V

    if-ne v9, v11, :cond_3

    .line 3535
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    .line 3536
    invoke-virtual {p1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v2

    const/16 v3, 0x1f

    .line 3535
    invoke-virtual {v1, v2, p2, v3}, Landroid/app/usage/UsageStatsManagerInternal;->reportEvent(Ljava/lang/String;II)V

    .line 3539
    :cond_3
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mContentCaptureService:Lcom/android/server/contentcapture/ContentCaptureManagerInternal;

    const/16 v2, 0x18

    if-eqz v1, :cond_5

    if-eq v9, v10, :cond_4

    if-eq v9, v11, :cond_4

    const/16 v3, 0x17

    if-eq v9, v3, :cond_4

    if-ne v9, v2, :cond_5

    :cond_4
    move-object v3, p1

    move-object/from16 v4, p6

    .line 3543
    invoke-virtual {v1, p2, p1, p3, v4}, Lcom/android/server/contentcapture/ContentCaptureManagerInternal;->notifyActivityEvent(ILandroid/content/ComponentName;ILandroid/app/assist/ActivityId;)V

    .line 3550
    :cond_5
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mVoiceInteractionManagerProvider:Landroid/app/ActivityManagerInternal$VoiceInteractionManagerProvider;

    if-eqz v1, :cond_6

    if-ne v9, v2, :cond_6

    .line 3551
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mVoiceInteractionManagerProvider:Landroid/app/ActivityManagerInternal$VoiceInteractionManagerProvider;

    move-object/from16 v1, p4

    invoke-interface {v0, v1}, Landroid/app/ActivityManagerInternal$VoiceInteractionManagerProvider;->notifyActivityDestroyed(Landroid/os/IBinder;)V

    :cond_6
    return-void
.end method

.method public final updateAppProcessCpuTimeLPr(JZJILcom/android/server/am/ProcessRecord;)V
    .locals 18

    move-object/from16 v0, p0

    move-object/from16 v11, p7

    .line 19251
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    iget-object v12, v1, Lcom/android/server/am/AppProfiler;->mProfilerLock:Ljava/lang/Object;

    monitor-enter v12

    .line 19252
    :try_start_0
    iget-object v13, v11, Lcom/android/server/am/ProcessRecord;->mProfile:Lcom/android/server/am/ProcessProfileRecord;

    .line 19253
    iget-object v1, v13, Lcom/android/server/am/ProcessProfileRecord;->mCurCpuTime:Ljava/util/concurrent/atomic/AtomicLong;

    invoke-virtual {v1}, Ljava/util/concurrent/atomic/AtomicLong;->get()J

    move-result-wide v14

    .line 19254
    iget-object v1, v13, Lcom/android/server/am/ProcessProfileRecord;->mLastCpuTime:Ljava/util/concurrent/atomic/AtomicLong;

    invoke-virtual {v1}, Ljava/util/concurrent/atomic/AtomicLong;->get()J

    move-result-wide v1

    const-wide/16 v3, 0x0

    cmp-long v3, v1, v3

    if-lez v3, :cond_0

    sub-long v16, v14, v1

    .line 19257
    iget-object v7, v11, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    .line 19258
    invoke-virtual/range {p7 .. p7}, Lcom/android/server/am/ProcessRecord;->toShortString()Ljava/lang/String;

    move-result-object v8

    move-object/from16 v1, p0

    move-wide/from16 v2, p1

    move/from16 v4, p3

    move-wide/from16 v5, v16

    move/from16 v9, p6

    move-object/from16 v10, p7

    .line 19257
    invoke-virtual/range {v1 .. v10}, Lcom/android/server/am/ActivityManagerService;->checkExcessivePowerUsageLPr(JZJLjava/lang/String;Ljava/lang/String;ILcom/android/server/am/ProcessRecord;)Z

    move-result v1

    if-eqz v1, :cond_0

    .line 19259
    iget-object v10, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v8, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda32;

    move-object v1, v8

    move-object/from16 v2, p0

    move-object/from16 v3, p7

    move-wide/from16 v4, v16

    move-wide/from16 v6, p1

    move-object v0, v8

    move-wide/from16 v8, p4

    move-object v11, v10

    move/from16 v10, p6

    invoke-direct/range {v1 .. v10}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda32;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;JJJI)V

    invoke-virtual {v11, v0}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 19272
    invoke-virtual {v13}, Lcom/android/server/am/ProcessProfileRecord;->reportExcessiveCpu()V

    .line 19276
    :cond_0
    iget-object v0, v13, Lcom/android/server/am/ProcessProfileRecord;->mLastCpuTime:Ljava/util/concurrent/atomic/AtomicLong;

    invoke-virtual {v0, v14, v15}, Ljava/util/concurrent/atomic/AtomicLong;->set(J)V

    .line 19277
    monitor-exit v12

    return-void

    :catchall_0
    move-exception v0

    monitor-exit v12
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public final updateApplicationInfoLOSP(Ljava/util/List;ZIZ)V
    .locals 1

    if-eqz p2, :cond_0

    const/4 v0, 0x0

    .line 22910
    invoke-static {v0}, Lcom/android/server/pm/pkg/parsing/ParsingPackageUtils;->readConfigUseRoundIcon(Landroid/content/res/Resources;)V

    .line 22913
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v0, p1, p3, p2, p4}, Lcom/android/server/am/ProcessList;->updateApplicationInfoLOSP(Ljava/util/List;IZZ)V

    if-eqz p2, :cond_2

    .line 22919
    invoke-static {}, Landroid/app/ActivityThread;->currentActivityThread()Landroid/app/ActivityThread;

    move-result-object p1

    invoke-virtual {p1}, Landroid/app/ActivityThread;->getExecutor()Ljava/util/concurrent/Executor;

    move-result-object p1

    .line 22920
    const-class p2, Landroid/hardware/display/DisplayManagerInternal;

    .line 22921
    invoke-static {p2}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object p2

    check-cast p2, Landroid/hardware/display/DisplayManagerInternal;

    if-eqz p2, :cond_1

    .line 22923
    new-instance p3, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda5;

    invoke-direct {p3, p2}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda5;-><init>(Landroid/hardware/display/DisplayManagerInternal;)V

    invoke-interface {p1, p3}, Ljava/util/concurrent/Executor;->execute(Ljava/lang/Runnable;)V

    .line 22925
    :cond_1
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    if-eqz p0, :cond_2

    .line 22926
    invoke-static {p0}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    new-instance p2, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda6;

    invoke-direct {p2, p0}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda6;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    invoke-interface {p1, p2}, Ljava/util/concurrent/Executor;->execute(Ljava/lang/Runnable;)V

    :cond_2
    return-void
.end method

.method public final updateAssociationForApp(Landroid/content/pm/ApplicationInfo;)V
    .locals 1

    .line 3085
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->ensureAllowedAssociations()V

    .line 3086
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mAllowedAssociations:Landroid/util/ArrayMap;

    iget-object v0, p1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {p0, v0}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p0

    check-cast p0, Lcom/android/server/am/ActivityManagerService$PackageAssociationInfo;

    if-eqz p0, :cond_1

    .line 3088
    iget p1, p1, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 p1, p1, 0x2

    if-eqz p1, :cond_0

    const/4 p1, 0x1

    goto :goto_0

    :cond_0
    const/4 p1, 0x0

    :goto_0
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService$PackageAssociationInfo;->setDebuggable(Z)V

    :cond_1
    return-void
.end method

.method public updateBatteryStats(Landroid/content/ComponentName;IIZ)V
    .locals 6

    .line 3473
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {p1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v1

    .line 3474
    invoke-virtual {p1}, Landroid/content/ComponentName;->getShortClassName()Ljava/lang/String;

    move-result-object v2

    move v3, p2

    move v4, p3

    move v5, p4

    .line 3473
    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/BatteryStatsService;->updateBatteryStatsOnActivityUsage(Ljava/lang/String;Ljava/lang/String;IIZ)V

    return-void
.end method

.method public updateConfiguration(Landroid/content/res/Configuration;)Z
    .locals 0

    .line 19055
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {p0, p1}, Lcom/android/server/wm/ActivityTaskManagerService;->updateConfiguration(Landroid/content/res/Configuration;)Z

    move-result p0

    return p0
.end method

.method public updateCpuStats()V
    .locals 0

    .line 3223
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {p0}, Lcom/android/server/am/AppProfiler;->updateCpuStats()V

    return-void
.end method

.method public updateCpuStatsNow()V
    .locals 0

    .line 3227
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {p0}, Lcom/android/server/am/AppProfiler;->updateCpuStatsNow()V

    return-void
.end method

.method public updateDelayServiceEnable(Z)V
    .locals 0

    .line 24640
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    iput-boolean p1, p0, Lcom/android/server/am/ActiveServices;->delayServiceEnable:Z

    return-void
.end method

.method public final updateExtraFreeKbytes()V
    .locals 3

    .line 19005
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v1, "updateExtraFreeKbytes before : "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v1}, Lcom/android/server/am/ProcessList;->getmIsDisplayChanged()Z

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 19006
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    if-eqz v0, :cond_0

    .line 19007
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/4 v2, 0x1

    invoke-virtual {v0, v2}, Lcom/android/server/am/ProcessList;->setmIsDisplayChanged(Z)V

    .line 19008
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "updateExtraFreeKbytes after : "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v2}, Lcom/android/server/am/ProcessList;->getmIsDisplayChanged()Z

    move-result v2

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v0}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 19009
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {v0, p0}, Lcom/android/server/am/ProcessList;->applyDisplaySize(Lcom/android/server/wm/WindowManagerService;)V

    :cond_0
    return-void
.end method

.method public updateFlingerFlag(ILjava/lang/String;)V
    .locals 2

    .line 23969
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v0

    .line 23976
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 23977
    :try_start_1
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object p0

    if-eqz p0, :cond_0

    .line 23978
    invoke-virtual {p0}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object p1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    if-eqz p1, :cond_0

    .line 23980
    :try_start_2
    invoke-virtual {p0}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object p0

    invoke-interface {p0, p2}, Landroid/app/IApplicationThread;->setFlingerFlag(Ljava/lang/String;)V
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    goto :goto_0

    :catch_0
    move-exception p0

    :try_start_3
    const-string p1, "ActivityManager"

    const-string/jumbo p2, "updateFlingerFlag exception"

    .line 23982
    invoke-static {p1, p2, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 23985
    :cond_0
    :goto_0
    monitor-exit v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 23986
    :try_start_4
    monitor-exit v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return-void

    :catchall_0
    move-exception p0

    .line 23985
    :try_start_5
    monitor-exit v1
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    :try_start_6
    throw p0

    :catchall_1
    move-exception p0

    .line 23986
    monitor-exit v0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p0
.end method

.method public final updateForceBackgroundCheck(Z)V
    .locals 2

    .line 10916
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 10917
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 10918
    :try_start_1
    iget-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mForceBackgroundCheck:Z

    if-eq v1, p1, :cond_0

    .line 10919
    iput-boolean p1, p0, Lcom/android/server/am/ActivityManagerService;->mForceBackgroundCheck:Z

    if-eqz p1, :cond_0

    .line 10927
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {p1}, Lcom/android/server/am/ProcessList;->doStopUidForIdleUidsLocked()V

    .line 10930
    :cond_0
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 10931
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :catchall_0
    move-exception p1

    .line 10930
    :try_start_3
    monitor-exit v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p1

    :catchall_1
    move-exception p1

    .line 10931
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public updateForegroundServiceUsageStats(Landroid/content/ComponentName;IZ)V
    .locals 7

    .line 3582
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    if-eqz v0, :cond_1

    .line 3583
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    if-eqz p3, :cond_0

    const/16 p0, 0x13

    goto :goto_0

    :cond_0
    const/16 p0, 0x14

    :goto_0
    move v4, p0

    const/4 v5, 0x0

    const/4 v6, 0x0

    move-object v2, p1

    move v3, p2

    invoke-virtual/range {v1 .. v6}, Landroid/app/usage/UsageStatsManagerInternal;->reportEvent(Landroid/content/ComponentName;IIILandroid/content/ComponentName;)V

    :cond_1
    return-void
.end method

.method public final updateLocaleOverlays(Landroid/content/res/Configuration;Ljava/lang/String;Ljava/lang/String;ILandroid/os/LocaleList;)V
    .locals 10

    .line 18965
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "LocaleChange Start: Locale List = "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v1, ", Time = "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v1

    invoke-virtual {v0, v1, v2}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 18966
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v0

    if-eqz p5, :cond_1

    .line 18967
    invoke-virtual {p5}, Landroid/os/LocaleList;->isEmpty()Z

    move-result v2

    if-eqz v2, :cond_0

    goto :goto_1

    .line 18972
    :cond_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-static {v1}, Lcom/samsung/android/localeoverlaymanager/LocaleOverlayManagerWrapper;->getInstance(Landroid/content/Context;)Lcom/samsung/android/localeoverlaymanager/LocaleOverlayManagerWrapper;

    move-result-object v1

    .line 18975
    :try_start_0
    new-instance v9, Lcom/android/server/am/OverlayChangeObserverImpl;

    move-object v2, v9

    move-object v3, p1

    move-object v4, p2

    move-object v5, p3

    move v6, v0

    move v7, p4

    move-object v8, p0

    invoke-direct/range {v2 .. v8}, Lcom/android/server/am/OverlayChangeObserverImpl;-><init>(Landroid/content/res/Configuration;Ljava/lang/String;Ljava/lang/String;IILcom/android/server/am/ActivityManagerService;)V

    .line 18976
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v3, v9, Lcom/samsung/android/localeoverlaymanager/OverlayChangeObserver;->mTimeoutRunnable:Ljava/lang/Runnable;

    const-wide/16 v4, 0x7530

    invoke-virtual {v2, v3, v4, v5}, Landroid/os/Handler;->postDelayed(Ljava/lang/Runnable;J)Z

    .line 18977
    invoke-interface {v1, p5, v0, v9}, Lcom/samsung/android/localeoverlaymanager/ILocaleOverlayManager;->applyLocales(Landroid/os/LocaleList;ILcom/samsung/android/localeoverlaymanager/OverlayChangeObserver;)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    :catch_0
    move-exception p5

    move-object v2, p0

    move-object v3, p1

    move-object v4, p2

    move-object v5, p3

    move v6, v0

    move v7, p4

    .line 18979
    invoke-virtual/range {v2 .. v7}, Lcom/android/server/am/ActivityManagerService;->overlaysInstallComplete(Landroid/content/res/Configuration;Ljava/lang/String;Ljava/lang/String;II)V

    .line 18980
    invoke-virtual {p5}, Ljava/lang/Exception;->printStackTrace()V

    :goto_0
    return-void

    :cond_1
    :goto_1
    const-string/jumbo p5, "updateLocaleOverlays() called with null localelist"

    .line 18968
    invoke-static {v1, p5}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    move-object v2, p0

    move-object v3, p1

    move-object v4, p2

    move-object v5, p3

    move v6, v0

    move v7, p4

    .line 18969
    invoke-virtual/range {v2 .. v7}, Lcom/android/server/am/ActivityManagerService;->overlaysInstallComplete(Landroid/content/res/Configuration;Ljava/lang/String;Ljava/lang/String;II)V

    return-void
.end method

.method public updateLockTaskPackages(I[Ljava/lang/String;)V
    .locals 0

    .line 8156
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {p0, p1, p2}, Lcom/android/server/wm/ActivityTaskManagerService;->updateLockTaskPackages(I[Ljava/lang/String;)V

    return-void
.end method

.method public final updateLruProcessLocked(Lcom/android/server/am/ProcessRecord;ZLcom/android/server/am/ProcessRecord;)V
    .locals 0

    .line 3355
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/am/ProcessList;->updateLruProcessLocked(Lcom/android/server/am/ProcessRecord;ZLcom/android/server/am/ProcessRecord;)V

    return-void
.end method

.method public updateMccMncConfiguration(Ljava/lang/String;Ljava/lang/String;)Z
    .locals 2

    .line 19062
    :try_start_0
    invoke-static {p1}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v0

    .line 19063
    invoke-static {p2}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result p1
    :try_end_0
    .catch Ljava/lang/NumberFormatException; {:try_start_0 .. :try_end_0} :catch_0
    .catch Ljava/lang/StringIndexOutOfBoundsException; {:try_start_0 .. :try_end_0} :catch_0

    .line 19068
    new-instance p2, Landroid/content/res/Configuration;

    invoke-direct {p2}, Landroid/content/res/Configuration;-><init>()V

    .line 19069
    iput v0, p2, Landroid/content/res/Configuration;->mcc:I

    if-nez p1, :cond_0

    const p1, 0xffff

    .line 19070
    :cond_0
    iput p1, p2, Landroid/content/res/Configuration;->mnc:I

    .line 19071
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {p0, p2}, Lcom/android/server/wm/ActivityTaskManagerService;->updateConfiguration(Landroid/content/res/Configuration;)Z

    move-result p0

    return p0

    :catch_0
    move-exception p0

    .line 19065
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Error parsing mcc: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, " mnc: "

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string p1, ". ex="

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    const-string p1, "ActivityManager"

    invoke-static {p1, p0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    const/4 p0, 0x0

    return p0
.end method

.method public final updateOomAdjLocked(I)V
    .locals 0

    .line 19563
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    invoke-virtual {p0, p1}, Lcom/android/server/am/OomAdjuster;->updateOomAdjLocked(I)V

    return-void
.end method

.method public final updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;I)Z
    .locals 0

    .line 19575
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/OomAdjuster;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;I)Z

    move-result p0

    return p0
.end method

.method public updateOomAdjPendingTargetsLocked(I)V
    .locals 0

    .line 19544
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    invoke-virtual {p0, p1}, Lcom/android/server/am/OomAdjuster;->updateOomAdjPendingTargetsLocked(I)V

    return-void
.end method

.method public updatePersistentConfiguration(Landroid/content/res/Configuration;)V
    .locals 2

    .line 18908
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    .line 18909
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-static {v0, v1}, Landroid/provider/Settings;->getPackageNameForUid(Landroid/content/Context;I)Ljava/lang/String;

    move-result-object v0

    const/4 v1, 0x0

    .line 18908
    invoke-virtual {p0, p1, v0, v1}, Lcom/android/server/am/ActivityManagerService;->updatePersistentConfigurationWithAttribution(Landroid/content/res/Configuration;Ljava/lang/String;Ljava/lang/String;)V

    return-void
.end method

.method public updatePersistentConfigurationAndLocaleOverlays(Landroid/content/res/Configuration;Ljava/lang/String;Ljava/lang/String;Landroid/os/LocaleList;)V
    .locals 7

    const-string v0, "android.permission.CHANGE_CONFIGURATION"

    const-string/jumbo v1, "updatePersistentConfiguration()"

    .line 18917
    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 18918
    invoke-virtual {p0, v1, p2, p3}, Lcom/android/server/am/ActivityManagerService;->enforceWriteSettingsPermission(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    if-eqz p1, :cond_1

    .line 18923
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->isDeviceProvisioned(Landroid/content/Context;)Z

    move-result v0

    if-nez v0, :cond_0

    .line 18924
    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/am/ActivityManagerService;->updatePersistentConfigurationWithAttribution(Landroid/content/res/Configuration;Ljava/lang/String;Ljava/lang/String;)V

    .line 18926
    :cond_0
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v5

    move-object v1, p0

    move-object v2, p1

    move-object v3, p2

    move-object v4, p3

    move-object v6, p4

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->updateLocaleOverlays(Landroid/content/res/Configuration;Ljava/lang/String;Ljava/lang/String;ILandroid/os/LocaleList;)V

    return-void

    .line 18921
    :cond_1
    new-instance p0, Ljava/lang/NullPointerException;

    const-string p1, "Configuration must not be null"

    invoke-direct {p0, p1}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw p0
.end method

.method public updatePersistentConfigurationWithAttribution(Landroid/content/res/Configuration;Ljava/lang/String;Ljava/lang/String;)V
    .locals 6

    .line 18987
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v4

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v5

    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move-object v3, p3

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->updatePersistentConfigurationWithAttribution(Landroid/content/res/Configuration;Ljava/lang/String;Ljava/lang/String;II)V

    return-void
.end method

.method public final updatePersistentConfigurationWithAttribution(Landroid/content/res/Configuration;Ljava/lang/String;Ljava/lang/String;II)V
    .locals 2

    const-string v0, "android.permission.CHANGE_CONFIGURATION"

    const-string/jumbo v1, "updatePersistentConfiguration()"

    .line 18993
    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 18994
    invoke-virtual {p0, v1, p2, p3}, Lcom/android/server/am/ActivityManagerService;->enforceWriteSettingsPermission(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    if-eqz p1, :cond_0

    .line 19000
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mActivityTaskManager:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {p0, p1, p4, p5}, Lcom/android/server/wm/ActivityTaskManagerService;->updatePersistentConfiguration(Landroid/content/res/Configuration;II)V

    return-void

    .line 18997
    :cond_0
    new-instance p0, Ljava/lang/NullPointerException;

    const-string p1, "Configuration must not be null"

    invoke-direct {p0, p1}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw p0
.end method

.method public final updatePhantomProcessCpuTimeLPr(JZJILcom/android/server/am/ProcessRecord;)V
    .locals 11

    move-object v1, p0

    .line 19283
    iget-object v9, v1, Lcom/android/server/am/ActivityManagerService;->mPhantomProcessList:Lcom/android/server/am/PhantomProcessList;

    new-instance v10, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda40;

    move-object v0, v10

    move-wide v2, p1

    move v4, p3

    move-object/from16 v5, p7

    move/from16 v6, p6

    move-wide v7, p4

    invoke-direct/range {v0 .. v8}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda40;-><init>(Lcom/android/server/am/ActivityManagerService;JZLcom/android/server/am/ProcessRecord;IJ)V

    move-object/from16 v0, p7

    invoke-virtual {v9, v0, v10}, Lcom/android/server/am/PhantomProcessList;->forEachPhantomProcessOfApp(Lcom/android/server/am/ProcessRecord;Ljava/util/function/Function;)V

    return-void
.end method

.method public final updateProcessForegroundLocked(Lcom/android/server/am/ProcessRecord;ZIZZ)V
    .locals 6

    .line 19423
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->mServices:Lcom/android/server/am/ProcessServiceRecord;

    .line 19424
    invoke-virtual {v0}, Lcom/android/server/am/ProcessServiceRecord;->hasForegroundServices()Z

    move-result v1

    const/4 v2, 0x1

    if-eq p2, v1, :cond_0

    move v1, v2

    goto :goto_0

    :cond_0
    const/4 v1, 0x0

    :goto_0
    if-nez v1, :cond_1

    .line 19426
    invoke-virtual {v0, p3, p4}, Lcom/android/server/am/ProcessServiceRecord;->areForegroundServiceTypesSame(IZ)Z

    move-result v3

    if-nez v3, :cond_6

    :cond_1
    if-eqz v1, :cond_2

    .line 19429
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundServiceStateListeners:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    sub-int/2addr v1, v2

    :goto_1
    if-ltz v1, :cond_2

    .line 19430
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundServiceStateListeners:Ljava/util/ArrayList;

    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/app/ActivityManagerInternal$ForegroundServiceStateListener;

    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v3, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v4, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 19431
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result v5

    .line 19430
    invoke-interface {v2, v3, v4, v5, p2}, Landroid/app/ActivityManagerInternal$ForegroundServiceStateListener;->onForegroundServiceStateChanged(Ljava/lang/String;IIZ)V

    add-int/lit8 v1, v1, -0x1

    goto :goto_1

    .line 19434
    :cond_2
    invoke-virtual {v0, p2, p3, p4}, Lcom/android/server/am/ProcessServiceRecord;->setHasForegroundServices(ZIZ)V

    .line 19435
    iget-object p4, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundPackages:Lcom/android/internal/app/ProcessMap;

    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v1, v1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {p4, v1, v2}, Lcom/android/internal/app/ProcessMap;->get(Ljava/lang/String;I)Ljava/lang/Object;

    move-result-object p4

    check-cast p4, Ljava/util/ArrayList;

    if-eqz p2, :cond_4

    if-nez p4, :cond_3

    .line 19439
    new-instance p4, Ljava/util/ArrayList;

    invoke-direct {p4}, Ljava/util/ArrayList;-><init>()V

    .line 19440
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundPackages:Lcom/android/internal/app/ProcessMap;

    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v3, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v1, v2, v3, p4}, Lcom/android/internal/app/ProcessMap;->put(Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/Object;

    .line 19443
    invoke-static {}, Lcom/android/server/am/MARsPolicyManager;->getInstance()Lcom/android/server/am/MARsPolicyManager;

    move-result-object v1

    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget v3, p1, Lcom/android/server/am/ProcessRecord;->userId:I

    iget-object v4, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v1, v2, v3, v4, p2}, Lcom/android/server/am/MARsPolicyManager;->updateForegroundPackageToPkgStatus(Ljava/lang/String;IIZ)V

    .line 19447
    :cond_3
    invoke-virtual {p4, p1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result p2

    if-nez p2, :cond_5

    .line 19448
    invoke-virtual {p4, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 19449
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    iget-object p4, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object p4, p4, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v1, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    const v2, 0x8002

    invoke-virtual {p2, v2, p4, v1}, Lcom/android/server/am/BatteryStatsService;->noteEvent(ILjava/lang/String;I)V

    goto :goto_2

    :cond_4
    if-eqz p4, :cond_5

    .line 19454
    invoke-virtual {p4, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_5

    .line 19455
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v3, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    const/16 v4, 0x4002

    invoke-virtual {v1, v4, v2, v3}, Lcom/android/server/am/BatteryStatsService;->noteEvent(ILjava/lang/String;I)V

    .line 19458
    invoke-virtual {p4}, Ljava/util/ArrayList;->size()I

    move-result p4

    if-gtz p4, :cond_5

    .line 19459
    iget-object p4, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundPackages:Lcom/android/internal/app/ProcessMap;

    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v1, v1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {p4, v1, v2}, Lcom/android/internal/app/ProcessMap;->remove(Ljava/lang/String;I)Ljava/lang/Object;

    .line 19462
    invoke-static {}, Lcom/android/server/am/MARsPolicyManager;->getInstance()Lcom/android/server/am/MARsPolicyManager;

    move-result-object p4

    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v1, v1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget v2, p1, Lcom/android/server/am/ProcessRecord;->userId:I

    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v3, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {p4, v1, v2, v3, p2}, Lcom/android/server/am/MARsPolicyManager;->updateForegroundPackageToPkgStatus(Ljava/lang/String;IIZ)V

    .line 19470
    :cond_5
    :goto_2
    invoke-virtual {v0, p3}, Lcom/android/server/am/ProcessServiceRecord;->setReportedForegroundServiceTypes(I)V

    .line 19471
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 19472
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getPid()I

    move-result p4

    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v0, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 19471
    invoke-virtual {p2, p4, v0}, Lcom/android/server/am/ProcessList;->enqueueProcessChangeItemLocked(II)Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    move-result-object p2

    .line 19473
    iget p4, p2, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->changes:I

    or-int/lit8 p4, p4, 0x2

    iput p4, p2, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->changes:I

    .line 19474
    iput p3, p2, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->foregroundServiceTypes:I

    :cond_6
    if-eqz p5, :cond_7

    const/16 p2, 0x9

    .line 19477
    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;I)Z

    :cond_7
    return-void
.end method

.method public updateProxyPacConfigurationForKnoxVpn(Ljava/util/HashMap;ILandroid/net/ProxyInfo;Ljava/util/HashSet;)V
    .locals 7

    .line 6725
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v0

    .line 6727
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v1}, Lcom/android/server/am/ProcessList;->getLruSizeLOSP()I

    move-result v1

    const/4 v2, 0x1

    sub-int/2addr v1, v2

    :goto_0
    if-ltz v1, :cond_6

    .line 6728
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v3}, Lcom/android/server/am/ProcessList;->getLruProcessesLOSP()Ljava/util/ArrayList;

    move-result-object v3

    invoke-virtual {v3, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ProcessRecord;

    .line 6729
    iget v4, v3, Lcom/android/server/am/ProcessRecord;->uid:I

    if-ne v4, p2, :cond_0

    invoke-virtual {v3}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v4

    if-eqz v4, :cond_0

    const-string v4, "ActivityManager"

    .line 6730
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "knox vpn pac proxy setting is not going to be set for the uid in AMS"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v3, v3, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v5, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v4, v3}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_2

    .line 6735
    :cond_0
    invoke-virtual {p4}, Ljava/util/HashSet;->iterator()Ljava/util/Iterator;

    move-result-object v4

    :cond_1
    invoke-interface {v4}, Ljava/util/Iterator;->hasNext()Z

    move-result v5

    if-eqz v5, :cond_2

    invoke-interface {v4}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Ljava/lang/Integer;

    invoke-virtual {v5}, Ljava/lang/Integer;->intValue()I

    move-result v5

    .line 6736
    iget v6, v3, Lcom/android/server/am/ProcessRecord;->uid:I

    if-ne v6, v5, :cond_1

    const-string v4, "ActivityManager"

    .line 6737
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "knox vpn pac proxy setting is not going to be set for the exempted uid in AMS"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v6, v3, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    move v4, v2

    goto :goto_1

    :cond_2
    const/4 v4, 0x0

    :goto_1
    if-eqz v4, :cond_3

    goto/16 :goto_2

    .line 6746
    :cond_3
    invoke-virtual {v3}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v4

    if-eqz v4, :cond_4

    iget v4, v3, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    invoke-virtual {p1, v4}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_4

    const-string v4, "ActivityManager"

    .line 6747
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "knox vpn pac proxy setting has been set for the uid of the knox vpn application in AMS "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v6, v3, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 6749
    invoke-virtual {v3}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v3

    new-instance v4, Landroid/net/ProxyInfoWrapper;

    invoke-direct {v4, p3}, Landroid/net/ProxyInfoWrapper;-><init>(Landroid/net/ProxyInfo;)V

    invoke-interface {v3, v4}, Landroid/app/IApplicationThread;->setHttpProxyInfo(Landroid/net/ProxyInfoWrapper;)V

    goto :goto_2

    .line 6750
    :cond_4
    invoke-virtual {v3}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v4

    if-eqz v4, :cond_5

    iget v4, v3, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    invoke-virtual {p1, v4}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_5

    const-string v4, "ActivityManager"

    .line 6751
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "knox vpn pac proxy setting has been set for the user in AMS "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v6, v3, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v6, " and the uid is "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v6, v3, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 6753
    invoke-virtual {v3}, Lcom/android/server/am/ProcessRecord;->getThread()Landroid/app/IApplicationThread;

    move-result-object v3

    new-instance v4, Landroid/net/ProxyInfoWrapper;

    invoke-direct {v4, p3}, Landroid/net/ProxyInfoWrapper;-><init>(Landroid/net/ProxyInfo;)V

    invoke-interface {v3, v4}, Landroid/app/IApplicationThread;->setHttpProxyInfo(Landroid/net/ProxyInfoWrapper;)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :cond_5
    :goto_2
    add-int/lit8 v1, v1, -0x1

    goto/16 :goto_0

    :catchall_0
    move-exception p0

    goto :goto_3

    :catch_0
    move-exception p0

    :try_start_1
    const-string p1, "ActivityManager"

    .line 6757
    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    const-string p3, "Exception occurred while updating the proxy configuration for knox vpn profile "

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 6758
    invoke-static {p0}, Landroid/util/Log;->getStackTraceString(Ljava/lang/Throwable;)Ljava/lang/String;

    move-result-object p0

    invoke-virtual {p2, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    .line 6757
    invoke-static {p1, p0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 6760
    :cond_6
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return-void

    :goto_3
    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p0
.end method

.method public updateRestrictionInfo(Lcom/samsung/android/sdhms/SemAppRestrictionManager$RestrictionInfo;Ljava/util/List;)Z
    .locals 0

    .line 24024
    invoke-static {}, Lcom/android/server/am/MARsPolicyManager;->getInstance()Lcom/android/server/am/MARsPolicyManager;

    move-result-object p0

    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/MARsPolicyManager;->updateRestrictionInfo(Lcom/samsung/android/sdhms/SemAppRestrictionManager$RestrictionInfo;Ljava/util/List;)Z

    move-result p0

    return p0
.end method

.method public updateServiceGroup(Landroid/app/IServiceConnection;II)V
    .locals 1

    .line 16133
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 16134
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/am/ActiveServices;->updateServiceGroupLocked(Landroid/app/IServiceConnection;II)V

    .line 16135
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    return-void

    :catchall_0
    move-exception p1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public updateSystemUiContext()V
    .locals 6

    .line 22899
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal;

    move-result-object v0

    const-string v1, "android"

    const-wide/16 v2, 0x400

    .line 22902
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v4

    const/4 v5, 0x0

    .line 22901
    invoke-virtual/range {v0 .. v5}, Landroid/content/pm/PackageManagerInternal;->getApplicationInfo(Ljava/lang/String;JII)Landroid/content/pm/ApplicationInfo;

    move-result-object p0

    .line 22903
    invoke-static {}, Landroid/app/ActivityThread;->currentActivityThread()Landroid/app/ActivityThread;

    move-result-object v0

    invoke-virtual {v0, p0}, Landroid/app/ActivityThread;->handleSystemApplicationInfoChanged(Landroid/content/pm/ApplicationInfo;)V

    return-void
.end method

.method public updateTransitionPlayerPid(I)V
    .locals 2

    if-ltz p1, :cond_0

    .line 9996
    iget v0, p0, Lcom/android/server/am/ActivityManagerService;->mTransitionPlayerPid:I

    if-ltz v0, :cond_0

    .line 9997
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Transition player is changed without death receipt. cur="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mTransitionPlayerPid:I

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " new="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 10000
    :cond_0
    iput p1, p0, Lcom/android/server/am/ActivityManagerService;->mTransitionPlayerPid:I

    return-void
.end method

.method public useCompaction()Z
    .locals 0

    .line 8428
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    iget-object p0, p0, Lcom/android/server/am/OomAdjuster;->mCachedAppOptimizer:Lcom/android/server/am/CachedAppOptimizer;

    invoke-virtual {p0}, Lcom/android/server/am/CachedAppOptimizer;->useCompaction()Z

    move-result p0

    return p0
.end method

.method public validateAssociationAllowedLocked(Ljava/lang/String;ILjava/lang/String;I)Z
    .locals 2

    .line 3033
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->ensureAllowedAssociations()V

    const/4 v0, 0x1

    if-eq p2, p4, :cond_2

    .line 3037
    invoke-static {p2}, Landroid/os/UserHandle;->getAppId(I)I

    move-result p2

    const/16 v1, 0x3e8

    if-eq p2, v1, :cond_2

    .line 3038
    invoke-static {p4}, Landroid/os/UserHandle;->getAppId(I)I

    move-result p2

    if-ne p2, v1, :cond_0

    goto :goto_0

    .line 3043
    :cond_0
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mAllowedAssociations:Landroid/util/ArrayMap;

    invoke-virtual {p2, p1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p2

    check-cast p2, Lcom/android/server/am/ActivityManagerService$PackageAssociationInfo;

    const/4 p4, 0x0

    if-eqz p2, :cond_1

    .line 3044
    invoke-virtual {p2, p3}, Lcom/android/server/am/ActivityManagerService$PackageAssociationInfo;->isPackageAssociationAllowed(Ljava/lang/String;)Z

    move-result p2

    if-nez p2, :cond_1

    return p4

    .line 3047
    :cond_1
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mAllowedAssociations:Landroid/util/ArrayMap;

    invoke-virtual {p0, p3}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p0

    check-cast p0, Lcom/android/server/am/ActivityManagerService$PackageAssociationInfo;

    if-eqz p0, :cond_2

    .line 3048
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService$PackageAssociationInfo;->isPackageAssociationAllowed(Ljava/lang/String;)Z

    move-result p0

    if-nez p0, :cond_2

    return p4

    :cond_2
    :goto_0
    return v0
.end method

.method public final validateServiceInstanceName(Ljava/lang/String;)V
    .locals 0

    if-eqz p1, :cond_1

    const-string p0, "[a-zA-Z0-9_.]+"

    .line 15902
    invoke-virtual {p1, p0}, Ljava/lang/String;->matches(Ljava/lang/String;)Z

    move-result p0

    if-eqz p0, :cond_0

    goto :goto_0

    .line 15903
    :cond_0
    new-instance p0, Ljava/lang/IllegalArgumentException;

    const-string p1, "Illegal instanceName"

    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p0

    :cond_1
    :goto_0
    return-void
.end method

.method public final verifyBroadcastLocked(Landroid/content/Intent;)Landroid/content/Intent;
    .locals 3

    if-eqz p1, :cond_1

    .line 18205
    invoke-virtual {p1}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v0

    const/4 v1, 0x1

    if-eq v0, v1, :cond_0

    goto :goto_0

    .line 18206
    :cond_0
    new-instance p0, Ljava/lang/IllegalArgumentException;

    const-string p1, "File descriptors passed in Intent"

    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 18209
    :cond_1
    :goto_0
    invoke-virtual {p1}, Landroid/content/Intent;->getFlags()I

    move-result v0

    .line 18211
    iget-boolean p0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    const-string v1, "ActivityManager"

    if-nez p0, :cond_4

    const/high16 p0, 0x4000000

    and-int/2addr p0, v0

    if-eqz p0, :cond_2

    goto :goto_1

    :cond_2
    const/high16 p0, 0x40000000    # 2.0f

    and-int/2addr p0, v0

    if-eqz p0, :cond_3

    goto :goto_1

    .line 18217
    :cond_3
    new-instance p0, Ljava/lang/StringBuilder;

    invoke-direct {p0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v0, "Attempt to launch receivers of broadcast intent "

    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string p1, " before boot completion"

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-static {v1, p0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 18219
    new-instance p0, Ljava/lang/IllegalStateException;

    const-string p1, "Cannot broadcast before boot completed"

    invoke-direct {p0, p1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw p0

    :cond_4
    :goto_1
    const/high16 p0, 0x2000000

    and-int/2addr p0, v0

    if-nez p0, :cond_6

    const/high16 p0, 0x400000

    and-int/2addr v0, p0

    if-eqz v0, :cond_5

    .line 18229
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    if-eqz v0, :cond_5

    const/16 v2, 0x7d0

    if-eq v0, v2, :cond_5

    .line 18234
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Removing FLAG_RECEIVER_FROM_SHELL because caller is UID "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 18235
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 18234
    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 18236
    invoke-virtual {p1, p0}, Landroid/content/Intent;->removeFlags(I)V

    :cond_5
    return-object p1

    .line 18224
    :cond_6
    new-instance p0, Ljava/lang/IllegalArgumentException;

    const-string p1, "Can\'t use FLAG_RECEIVER_BOOT_UPGRADE here"

    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p0
.end method

.method public waitForApplicationBarrier(Ljava/io/PrintWriter;)V
    .locals 17

    move-object/from16 v1, p0

    move-object/from16 v0, p1

    .line 22531
    new-instance v2, Ljava/util/concurrent/CountDownLatch;

    const/4 v3, 0x1

    invoke-direct {v2, v3}, Ljava/util/concurrent/CountDownLatch;-><init>(I)V

    .line 22532
    new-instance v3, Ljava/util/concurrent/atomic/AtomicInteger;

    const/4 v4, 0x0

    invoke-direct {v3, v4}, Ljava/util/concurrent/atomic/AtomicInteger;-><init>(I)V

    .line 22533
    new-instance v5, Ljava/util/concurrent/atomic/AtomicInteger;

    invoke-direct {v5, v4}, Ljava/util/concurrent/atomic/AtomicInteger;-><init>(I)V

    .line 22534
    new-instance v6, Landroid/os/RemoteCallback;

    new-instance v7, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda1;

    invoke-direct {v7, v5, v3, v2}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticLambda1;-><init>(Ljava/util/concurrent/atomic/AtomicInteger;Ljava/util/concurrent/atomic/AtomicInteger;Ljava/util/concurrent/CountDownLatch;)V

    invoke-direct {v6, v7}, Landroid/os/RemoteCallback;-><init>(Landroid/os/RemoteCallback$OnResultListener;)V

    .line 22542
    invoke-virtual {v3}, Ljava/util/concurrent/atomic/AtomicInteger;->incrementAndGet()I

    .line 22544
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 22545
    :try_start_0
    iget-object v7, v1, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v7
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 22546
    :try_start_1
    iget-object v8, v1, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 22547
    invoke-virtual {v8}, Lcom/android/server/am/ProcessList;->getProcessNamesLOSP()Lcom/android/server/am/ProcessList$MyProcessMap;

    move-result-object v8

    invoke-virtual {v8}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v8

    .line 22548
    invoke-virtual {v8}, Landroid/util/ArrayMap;->size()I

    move-result v9

    move v10, v4

    :goto_0
    if-ge v10, v9, :cond_2

    .line 22550
    invoke-virtual {v8, v10}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Landroid/util/SparseArray;

    .line 22551
    invoke-virtual {v12}, Landroid/util/SparseArray;->size()I

    move-result v13

    move v14, v4

    :goto_1
    if-ge v14, v13, :cond_1

    .line 22552
    invoke-virtual {v12, v14}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Lcom/android/server/am/ProcessRecord;

    .line 22553
    invoke-virtual {v15}, Lcom/android/server/am/ProcessRecord;->getOnewayThread()Landroid/app/IApplicationThread;

    move-result-object v4

    if-eqz v4, :cond_0

    .line 22555
    iget-object v11, v1, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    iget-object v11, v11, Lcom/android/server/am/OomAdjuster;->mCachedAppOptimizer:Lcom/android/server/am/CachedAppOptimizer;

    move-object/from16 v16, v8

    const/16 v8, 0xf

    invoke-virtual {v11, v15, v8}, Lcom/android/server/am/CachedAppOptimizer;->unfreezeTemporarily(Lcom/android/server/am/ProcessRecord;I)V

    .line 22557
    invoke-virtual {v3}, Ljava/util/concurrent/atomic/AtomicInteger;->incrementAndGet()I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 22559
    :try_start_2
    invoke-interface {v4, v6}, Landroid/app/IApplicationThread;->schedulePing(Landroid/os/RemoteCallback;)V
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    goto :goto_2

    :catch_0
    const/4 v4, 0x0

    .line 22563
    :try_start_3
    invoke-virtual {v6, v4}, Landroid/os/RemoteCallback;->sendResult(Landroid/os/Bundle;)V

    goto :goto_2

    :cond_0
    move-object/from16 v16, v8

    :goto_2
    add-int/lit8 v14, v14, 0x1

    move-object/from16 v8, v16

    const/4 v4, 0x0

    goto :goto_1

    :cond_1
    move-object/from16 v16, v8

    add-int/lit8 v10, v10, 0x1

    const/4 v4, 0x0

    goto :goto_0

    .line 22568
    :cond_2
    monitor-exit v7
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 22569
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    const/4 v1, 0x0

    .line 22573
    invoke-virtual {v6, v1}, Landroid/os/RemoteCallback;->sendResult(Landroid/os/Bundle;)V

    const/4 v4, 0x0

    :goto_3
    const/16 v1, 0x1e

    if-ge v4, v1, :cond_4

    .line 22578
    :try_start_5
    sget-object v1, Ljava/util/concurrent/TimeUnit;->SECONDS:Ljava/util/concurrent/TimeUnit;

    const-wide/16 v6, 0x1

    invoke-virtual {v2, v6, v7, v1}, Ljava/util/concurrent/CountDownLatch;->await(JLjava/util/concurrent/TimeUnit;)Z

    move-result v1

    if-eqz v1, :cond_3

    const-string v1, "Finished application barriers!"

    .line 22579
    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 22580
    invoke-virtual/range {p1 .. p1}, Ljava/io/PrintWriter;->flush()V

    return-void

    .line 22583
    :cond_3
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Waiting for application barriers, at "

    invoke-virtual {v1, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    move-result v6

    invoke-virtual {v1, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v6, " of "

    invoke-virtual {v1, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 22584
    invoke-virtual {v3}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    move-result v6

    invoke-virtual {v1, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v6, "..."

    invoke-virtual {v1, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    .line 22583
    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 22585
    invoke-virtual/range {p1 .. p1}, Ljava/io/PrintWriter;->flush()V
    :try_end_5
    .catch Ljava/lang/InterruptedException; {:try_start_5 .. :try_end_5} :catch_1

    :catch_1
    add-int/lit8 v4, v4, 0x1

    goto :goto_3

    :cond_4
    const-string v1, "Gave up waiting for application barriers!"

    .line 22590
    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 22591
    invoke-virtual/range {p1 .. p1}, Ljava/io/PrintWriter;->flush()V

    return-void

    :catchall_0
    move-exception v0

    .line 22568
    :try_start_6
    monitor-exit v7
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    :try_start_7
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw v0

    :catchall_1
    move-exception v0

    .line 22569
    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
.end method

.method public waitForBroadcastBarrier()V
    .locals 2

    .line 22509
    sget-object v0, Lcom/android/server/am/ActivityManagerDebugConfig;->LOG_WRITER_INFO:Ljava/io/PrintWriter;

    const/4 v1, 0x0

    invoke-virtual {p0, v0, v1, v1}, Lcom/android/server/am/ActivityManagerService;->waitForBroadcastBarrier(Ljava/io/PrintWriter;ZZ)V

    return-void
.end method

.method public waitForBroadcastBarrier(Ljava/io/PrintWriter;ZZ)V
    .locals 3

    const-string v0, "android.permission.DUMP"

    const-string/jumbo v1, "waitForBroadcastBarrier()"

    .line 22514
    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    if-eqz p2, :cond_0

    .line 22516
    invoke-static {p1}, Lcom/android/server/am/BroadcastLoopers;->waitForBarrier(Ljava/io/PrintWriter;)V

    .line 22518
    :cond_0
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v0, p2

    const/4 v1, 0x0

    :goto_0
    if-ge v1, v0, :cond_1

    aget-object v2, p2, v1

    .line 22519
    invoke-virtual {v2, p1}, Lcom/android/server/am/BroadcastQueue;->waitForBarrier(Ljava/io/PrintWriter;)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    :cond_1
    if-eqz p3, :cond_2

    .line 22522
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->waitForApplicationBarrier(Ljava/io/PrintWriter;)V

    :cond_2
    return-void
.end method

.method public waitForBroadcastDispatch(Ljava/io/PrintWriter;Landroid/content/Intent;)V
    .locals 3

    const-string v0, "android.permission.DUMP"

    const-string/jumbo v1, "waitForBroadcastDispatch"

    .line 22595
    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 22596
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v0, p0

    const/4 v1, 0x0

    :goto_0
    if-ge v1, v0, :cond_0

    aget-object v2, p0, v1

    .line 22597
    invoke-virtual {v2, p2, p1}, Lcom/android/server/am/BroadcastQueue;->waitForDispatched(Landroid/content/Intent;Ljava/io/PrintWriter;)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    :cond_0
    return-void
.end method

.method public waitForBroadcastIdle()V
    .locals 2

    .line 22492
    sget-object v0, Lcom/android/server/am/ActivityManagerDebugConfig;->LOG_WRITER_INFO:Ljava/io/PrintWriter;

    const/4 v1, 0x0

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->waitForBroadcastIdle(Ljava/io/PrintWriter;Z)V

    return-void
.end method

.method public waitForBroadcastIdle(Ljava/io/PrintWriter;Z)V
    .locals 2

    const-string v0, "android.permission.DUMP"

    const-string/jumbo v1, "waitForBroadcastIdle()"

    .line 22496
    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    if-eqz p2, :cond_0

    .line 22498
    invoke-static {p1}, Lcom/android/server/am/BroadcastLoopers;->waitForIdle(Ljava/io/PrintWriter;)V

    .line 22500
    :cond_0
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length p2, p0

    const/4 v0, 0x0

    :goto_0
    if-ge v0, p2, :cond_1

    aget-object v1, p0, v0

    .line 22501
    invoke-virtual {v1, p1}, Lcom/android/server/am/BroadcastQueue;->waitForIdle(Ljava/io/PrintWriter;)V

    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    :cond_1
    const-string p0, "All broadcast queues are idle!"

    .line 22503
    invoke-virtual {p1, p0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 22504
    invoke-virtual {p1}, Ljava/io/PrintWriter;->flush()V

    return-void
.end method

.method public waitForNetworkStateUpdate(J)V
    .locals 8

    .line 22446
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 22451
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcLock:Lcom/android/server/am/ActivityManagerGlobalLock;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForProcLockedSection()V

    monitor-enter v1

    .line 22452
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v2, v0}, Lcom/android/server/am/ProcessList;->getUidRecordLOSP(I)Lcom/android/server/am/UidRecord;

    move-result-object v2

    if-nez v2, :cond_0

    .line 22454
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    return-void

    .line 22456
    :cond_0
    :try_start_1
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    .line 22457
    iget-object v3, v2, Lcom/android/server/am/UidRecord;->networkStateLock:Ljava/lang/Object;

    monitor-enter v3

    .line 22458
    :try_start_2
    iget-wide v4, v2, Lcom/android/server/am/UidRecord;->lastNetworkUpdatedProcStateSeq:J

    cmp-long v1, v4, p1

    if-ltz v1, :cond_1

    .line 22465
    monitor-exit v3
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    return-void

    .line 22472
    :cond_1
    :try_start_3
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v4

    .line 22473
    iput-wide p1, v2, Lcom/android/server/am/UidRecord;->procStateSeqWaitingForNetwork:J

    .line 22474
    iget-object v1, v2, Lcom/android/server/am/UidRecord;->networkStateLock:Ljava/lang/Object;

    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget-wide v6, v6, Lcom/android/server/am/ActivityManagerConstants;->mNetworkAccessTimeoutMs:J

    invoke-virtual {v1, v6, v7}, Ljava/lang/Object;->wait(J)V

    const-wide/16 v6, 0x0

    .line 22475
    iput-wide v6, v2, Lcom/android/server/am/UidRecord;->procStateSeqWaitingForNetwork:J

    .line 22476
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v6

    sub-long/2addr v6, v4

    .line 22477
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget-wide v4, v1, Lcom/android/server/am/ActivityManagerConstants;->mNetworkAccessTimeoutMs:J

    cmp-long v1, v6, v4

    if-gez v1, :cond_2

    goto :goto_0

    :cond_2
    const-string v1, "ActivityManager_Network"

    .line 22478
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Total time waited for network rules to get updated: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v6, v7}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v5, ". Uid: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v5, " procStateSeq: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, p1, p2}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string p1, " UidRec: "

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string p1, " validateUidRec: "

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mUidObserverController:Lcom/android/server/am/UidObserverController;

    .line 22482
    invoke-virtual {p0, v0}, Lcom/android/server/am/UidObserverController;->getValidateUidRecord(I)Lcom/android/server/am/UidRecord;

    move-result-object p0

    invoke-virtual {v4, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    .line 22478
    invoke-static {v1, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_3
    .catch Ljava/lang/InterruptedException; {:try_start_3 .. :try_end_3} :catch_0
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    goto :goto_0

    .line 22485
    :catch_0
    :try_start_4
    invoke-static {}, Ljava/lang/Thread;->currentThread()Ljava/lang/Thread;

    move-result-object p0

    invoke-virtual {p0}, Ljava/lang/Thread;->interrupt()V

    .line 22487
    :goto_0
    monitor-exit v3

    return-void

    :catchall_0
    move-exception p0

    monitor-exit v3
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    throw p0

    :catchall_1
    move-exception p0

    .line 22456
    :try_start_5
    monitor-exit v1
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterProcLockedSection()V

    throw p0
.end method

.method public final watchDeviceProvisioning(Landroid/content/Context;)V
    .locals 5

    .line 10886
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->isDeviceProvisioned(Landroid/content/Context;)Z

    move-result v0

    if-eqz v0, :cond_0

    const-string/jumbo p0, "persist.sys.device_provisioned"

    const-string p1, "1"

    .line 10887
    invoke-static {p0, p1}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    goto :goto_0

    .line 10890
    :cond_0
    invoke-virtual {p1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v0

    const-string v1, "device_provisioned"

    .line 10891
    invoke-static {v1}, Landroid/provider/Settings$Global;->getUriFor(Ljava/lang/String;)Landroid/net/Uri;

    move-result-object v1

    new-instance v2, Lcom/android/server/am/ActivityManagerService$18;

    new-instance v3, Landroid/os/Handler;

    .line 10892
    invoke-static {}, Landroid/os/Looper;->getMainLooper()Landroid/os/Looper;

    move-result-object v4

    invoke-direct {v3, v4}, Landroid/os/Handler;-><init>(Landroid/os/Looper;)V

    invoke-direct {v2, p0, v3, p1}, Lcom/android/server/am/ActivityManagerService$18;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/os/Handler;Landroid/content/Context;)V

    const/4 p0, 0x0

    .line 10890
    invoke-virtual {v0, v1, p0, v2}, Landroid/content/ContentResolver;->registerContentObserver(Landroid/net/Uri;ZLandroid/database/ContentObserver;)V

    :goto_0
    return-void
.end method

.method public writeBroadcastsToProtoLocked(Landroid/util/proto/ProtoOutputStream;)V
    .locals 21

    move-object/from16 v0, p0

    move-object/from16 v9, p1

    .line 13455
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->size()I

    move-result v1

    if-lez v1, :cond_0

    .line 13456
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v1

    .line 13457
    :goto_0
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_0

    .line 13458
    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ReceiverList;

    const-wide v3, 0x20b00000001L

    .line 13459
    invoke-virtual {v2, v9, v3, v4}, Lcom/android/server/am/ReceiverList;->dumpDebug(Landroid/util/proto/ProtoOutputStream;J)V

    goto :goto_0

    .line 13462
    :cond_0
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mReceiverResolver:Lcom/android/server/IntentResolver;

    const-wide v10, 0x10b00000002L

    invoke-virtual {v1, v9, v10, v11}, Lcom/android/server/IntentResolver;->dumpDebug(Landroid/util/proto/ProtoOutputStream;J)V

    .line 13463
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v2, v1

    const/4 v3, 0x0

    move v4, v3

    :goto_1
    if-ge v4, v2, :cond_1

    aget-object v5, v1, v4

    const-wide v6, 0x20b00000003L

    .line 13464
    invoke-virtual {v5, v9, v6, v7}, Lcom/android/server/am/BroadcastQueue;->dumpDebug(Landroid/util/proto/ProtoOutputStream;J)V

    add-int/lit8 v4, v4, 0x1

    goto :goto_1

    :cond_1
    move v12, v3

    .line 13466
    :goto_2
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    const-wide v13, 0x10900000001L

    if-ge v12, v1, :cond_4

    const-wide v1, 0x20b00000004L

    .line 13467
    invoke-virtual {v9, v1, v2}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    move-result-wide v7

    .line 13468
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    invoke-virtual {v1, v12}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v1

    const-wide v2, 0x10500000001L

    invoke-virtual {v9, v2, v3, v1}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 13470
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    invoke-virtual {v1, v12}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/util/ArrayMap;

    invoke-virtual {v1}, Landroid/util/ArrayMap;->entrySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v15

    :goto_3
    invoke-interface {v15}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_3

    invoke-interface {v15}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/util/Map$Entry;

    const-wide v2, 0x20b00000002L

    .line 13471
    invoke-virtual {v9, v2, v3}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    move-result-wide v5

    .line 13472
    invoke-interface {v1}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/String;

    invoke-virtual {v9, v13, v14, v2}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    .line 13473
    invoke-interface {v1}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v16

    :goto_4
    invoke-interface/range {v16 .. v16}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_2

    invoke-interface/range {v16 .. v16}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ActivityManagerService$StickyBroadcast;

    .line 13474
    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService$StickyBroadcast;->intent:Landroid/content/Intent;

    const-wide v3, 0x20b00000002L

    const/16 v17, 0x0

    const/16 v18, 0x1

    const/16 v19, 0x1

    const/16 v20, 0x0

    move-object/from16 v2, p1

    move-wide v10, v5

    move/from16 v5, v17

    move/from16 v6, v18

    move-wide v13, v7

    move/from16 v7, v19

    move/from16 v8, v20

    invoke-virtual/range {v1 .. v8}, Landroid/content/Intent;->dumpDebug(Landroid/util/proto/ProtoOutputStream;JZZZZ)V

    move-wide v5, v10

    move-wide v7, v13

    const-wide v10, 0x10b00000002L

    const-wide v13, 0x10900000001L

    goto :goto_4

    :cond_2
    move-wide v10, v5

    move-wide v13, v7

    .line 13477
    invoke-virtual {v9, v10, v11}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    const-wide v10, 0x10b00000002L

    const-wide v13, 0x10900000001L

    goto :goto_3

    :cond_3
    move-wide v13, v7

    .line 13479
    invoke-virtual {v9, v13, v14}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    add-int/lit8 v12, v12, 0x1

    const-wide v10, 0x10b00000002L

    goto/16 :goto_2

    :cond_4
    const-wide v1, 0x10b00000005L

    .line 13482
    invoke-virtual {v9, v1, v2}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    move-result-wide v1

    .line 13483
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v3}, Landroid/os/Handler;->toString()Ljava/lang/String;

    move-result-object v3

    const-wide v4, 0x10900000001L

    invoke-virtual {v9, v4, v5, v3}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    .line 13484
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v0}, Landroid/os/Handler;->getLooper()Landroid/os/Looper;

    move-result-object v0

    const-wide v3, 0x10b00000002L

    invoke-virtual {v0, v9, v3, v4}, Landroid/os/Looper;->dumpDebug(Landroid/util/proto/ProtoOutputStream;J)V

    .line 13486
    invoke-virtual {v9, v1, v2}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    return-void
.end method

.method public writeOtherProcessesInfoToProtoLSP(Landroid/util/proto/ProtoOutputStream;Ljava/lang/String;II)V
    .locals 9

    .line 13189
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActiveInstrumentation:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    const/4 v1, 0x0

    move v2, v1

    :goto_0
    if-ge v2, v0, :cond_1

    .line 13190
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mActiveInstrumentation:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ActiveInstrumentation;

    if-eqz p2, :cond_0

    .line 13191
    iget-object v4, v3, Lcom/android/server/am/ActiveInstrumentation;->mClass:Landroid/content/ComponentName;

    invoke-virtual {v4}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v4, p2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_0

    iget-object v4, v3, Lcom/android/server/am/ActiveInstrumentation;->mTargetInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v4, v4, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 13192
    invoke-virtual {v4, p2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_0

    goto :goto_1

    :cond_0
    const-wide v4, 0x20b00000003L

    .line 13195
    invoke-virtual {v3, p1, v4, v5}, Lcom/android/server/am/ActiveInstrumentation;->dumpDebug(Landroid/util/proto/ProtoOutputStream;J)V

    :goto_1
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 13199
    :cond_1
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mUidObserverController:Lcom/android/server/am/UidObserverController;

    const-wide v7, 0x20b00000005L

    move-object v4, p1

    move-object v5, p2

    move v6, p3

    invoke-virtual/range {v3 .. v8}, Lcom/android/server/am/UidObserverController;->dumpValidateUidsProto(Landroid/util/proto/ProtoOutputStream;Ljava/lang/String;IJ)V

    if-eqz p2, :cond_4

    .line 13203
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter p3

    .line 13204
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v0}, Lcom/android/server/am/ActivityManagerService$PidMap;->size()I

    move-result v0

    move v2, v1

    :goto_2
    if-ge v2, v0, :cond_3

    .line 13205
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    invoke-virtual {v3, v2}, Lcom/android/server/am/ActivityManagerService$PidMap;->valueAt(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v3

    .line 13206
    invoke-virtual {v3}, Lcom/android/server/am/ProcessRecord;->getPkgList()Lcom/android/server/am/PackageList;

    move-result-object v4

    invoke-virtual {v4, p2}, Lcom/android/server/am/PackageList;->containsKey(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_2

    goto :goto_3

    :cond_2
    const-wide v4, 0x20b00000007L

    .line 13209
    invoke-virtual {v3, p1, v4, v5}, Lcom/android/server/am/ProcessRecord;->dumpDebug(Landroid/util/proto/ProtoOutputStream;J)V

    :goto_3
    add-int/lit8 v2, v2, 0x1

    goto :goto_2

    .line 13212
    :cond_3
    monitor-exit p3

    goto :goto_4

    :catchall_0
    move-exception p0

    monitor-exit p3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw p0

    .line 13215
    :cond_4
    :goto_4
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mImportantProcesses:Landroid/util/SparseArray;

    invoke-virtual {p3}, Landroid/util/SparseArray;->size()I

    move-result p3

    if-lez p3, :cond_8

    .line 13216
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter p3

    .line 13217
    :try_start_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mImportantProcesses:Landroid/util/SparseArray;

    invoke-virtual {v0}, Landroid/util/SparseArray;->size()I

    move-result v0

    move v2, v1

    :goto_5
    if-ge v2, v0, :cond_7

    .line 13218
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mImportantProcesses:Landroid/util/SparseArray;

    invoke-virtual {v3, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ActivityManagerService$ImportanceToken;

    .line 13219
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    iget v5, v3, Lcom/android/server/am/ActivityManagerService$ImportanceToken;->pid:I

    invoke-virtual {v4, v5}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v4

    if-eqz p2, :cond_5

    if-eqz v4, :cond_6

    .line 13221
    invoke-virtual {v4}, Lcom/android/server/am/ProcessRecord;->getPkgList()Lcom/android/server/am/PackageList;

    move-result-object v4

    invoke-virtual {v4, p2}, Lcom/android/server/am/PackageList;->containsKey(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_5

    goto :goto_6

    :cond_5
    const-wide v4, 0x20b00000008L

    .line 13224
    invoke-virtual {v3, p1, v4, v5}, Lcom/android/server/am/ActivityManagerService$ImportanceToken;->dumpDebug(Landroid/util/proto/ProtoOutputStream;J)V

    :cond_6
    :goto_6
    add-int/lit8 v2, v2, 0x1

    goto :goto_5

    .line 13227
    :cond_7
    monitor-exit p3

    goto :goto_7

    :catchall_1
    move-exception p0

    monitor-exit p3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    throw p0

    .line 13230
    :cond_8
    :goto_7
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    invoke-virtual {p3}, Ljava/util/ArrayList;->size()I

    move-result p3

    move v0, v1

    :goto_8
    if-ge v0, p3, :cond_a

    .line 13231
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    if-eqz p2, :cond_9

    .line 13232
    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v3, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {p2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_9

    goto :goto_9

    :cond_9
    const-wide v3, 0x20b00000009L

    .line 13235
    invoke-virtual {v2, p1, v3, v4}, Lcom/android/server/am/ProcessRecord;->dumpDebug(Landroid/util/proto/ProtoOutputStream;J)V

    :goto_9
    add-int/lit8 v0, v0, 0x1

    goto :goto_8

    .line 13239
    :cond_a
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object p3, p3, Lcom/android/server/am/ProcessList;->mRemovedProcesses:Ljava/util/ArrayList;

    invoke-virtual {p3}, Ljava/util/ArrayList;->size()I

    move-result p3

    move v0, v1

    :goto_a
    if-ge v0, p3, :cond_c

    .line 13240
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v2, v2, Lcom/android/server/am/ProcessList;->mRemovedProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    if-eqz p2, :cond_b

    .line 13241
    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v3, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {p2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_b

    goto :goto_b

    :cond_b
    const-wide v3, 0x20b0000000aL

    .line 13244
    invoke-virtual {v2, p1, v3, v4}, Lcom/android/server/am/ProcessRecord;->dumpDebug(Landroid/util/proto/ProtoOutputStream;J)V

    :goto_b
    add-int/lit8 v0, v0, 0x1

    goto :goto_a

    .line 13247
    :cond_c
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    invoke-virtual {p3}, Ljava/util/ArrayList;->size()I

    move-result p3

    move v0, v1

    :goto_c
    if-ge v0, p3, :cond_e

    .line 13248
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    if-eqz p2, :cond_d

    .line 13249
    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v3, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {p2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_d

    goto :goto_d

    :cond_d
    const-wide v3, 0x20b0000000bL

    .line 13252
    invoke-virtual {v2, p1, v3, v4}, Lcom/android/server/am/ProcessRecord;->dumpDebug(Landroid/util/proto/ProtoOutputStream;J)V

    :goto_d
    add-int/lit8 v0, v0, 0x1

    goto :goto_c

    .line 13255
    :cond_e
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    iget-object p3, p3, Lcom/android/server/am/AppProfiler;->mProfilerLock:Ljava/lang/Object;

    monitor-enter p3

    .line 13256
    :try_start_2
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    const-wide v2, 0x20b0000000cL

    invoke-virtual {v0, p1, v2, v3, p2}, Lcom/android/server/am/AppProfiler;->writeProcessesToGcToProto(Landroid/util/proto/ProtoOutputStream;JLjava/lang/String;)V

    .line 13259
    monitor-exit p3
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_3

    .line 13260
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mAppErrors:Lcom/android/server/am/AppErrors;

    const-wide v2, 0x10b0000000dL

    invoke-virtual {p3, p1, v2, v3, p2}, Lcom/android/server/am/AppErrors;->dumpDebugLPr(Landroid/util/proto/ProtoOutputStream;JLjava/lang/String;)V

    .line 13262
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWakefulness:Ljava/util/concurrent/atomic/AtomicInteger;

    invoke-virtual {v0}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    move-result v0

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    .line 13263
    invoke-virtual {v2}, Lcom/android/server/am/AppProfiler;->getTestPssMode()Z

    move-result v2

    .line 13262
    invoke-virtual {p3, p1, p2, v0, v2}, Lcom/android/server/wm/ActivityTaskManagerInternal;->writeProcessesToProto(Landroid/util/proto/ProtoOutputStream;Ljava/lang/String;IZ)V

    if-nez p2, :cond_f

    .line 13266
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    const-wide v2, 0x10b0000000eL

    invoke-virtual {p3, p1, v2, v3}, Lcom/android/server/am/UserController;->dumpDebug(Landroid/util/proto/ProtoOutputStream;J)V

    .line 13270
    :cond_f
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mUidObserverController:Lcom/android/server/am/UidObserverController;

    invoke-virtual {p3, p1, p2}, Lcom/android/server/am/UidObserverController;->dumpDebug(Landroid/util/proto/ProtoOutputStream;Ljava/lang/String;)V

    .line 13272
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mDeviceIdleAllowlist:[I

    array-length v0, p3

    move v2, v1

    :goto_e
    if-ge v2, v0, :cond_10

    aget v3, p3, v2

    const-wide v4, 0x20500000018L

    .line 13273
    invoke-virtual {p1, v4, v5, v3}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    add-int/lit8 v2, v2, 0x1

    goto :goto_e

    .line 13276
    :cond_10
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mDeviceIdleTempAllowlist:[I

    array-length v0, p3

    move v2, v1

    :goto_f
    if-ge v2, v0, :cond_11

    aget v3, p3, v2

    const-wide v4, 0x20500000019L

    .line 13277
    invoke-virtual {p1, v4, v5, v3}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    add-int/lit8 v2, v2, 0x1

    goto :goto_f

    .line 13280
    :cond_11
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mPendingTempAllowlist:Lcom/android/server/am/PendingTempAllowlists;

    invoke-virtual {p3}, Lcom/android/server/am/PendingTempAllowlists;->size()I

    move-result p3

    if-lez p3, :cond_12

    .line 13281
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mPendingTempAllowlist:Lcom/android/server/am/PendingTempAllowlists;

    invoke-virtual {p3}, Lcom/android/server/am/PendingTempAllowlists;->size()I

    move-result p3

    :goto_10
    if-ge v1, p3, :cond_12

    .line 13282
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingTempAllowlist:Lcom/android/server/am/PendingTempAllowlists;

    invoke-virtual {v0, v1}, Lcom/android/server/am/PendingTempAllowlists;->valueAt(I)Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;

    move-result-object v0

    const-wide v2, 0x20b0000001aL

    invoke-virtual {v0, p1, v2, v3}, Lcom/android/server/am/ActivityManagerService$PendingTempAllowlist;->dumpDebug(Landroid/util/proto/ProtoOutputStream;J)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_10

    .line 13287
    :cond_12
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    if-nez p3, :cond_13

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    if-nez v0, :cond_13

    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mDebugTransient:Z

    if-nez v0, :cond_13

    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z

    if-eqz v0, :cond_15

    :cond_13
    if-eqz p2, :cond_14

    .line 13289
    invoke-virtual {p2, p3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p3

    if-nez p3, :cond_14

    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    .line 13290
    invoke-virtual {p2, p3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p3

    if-eqz p3, :cond_15

    :cond_14
    const-wide v0, 0x10b0000001eL

    .line 13291
    invoke-virtual {p1, v0, v1}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    move-result-wide v0

    const-wide v2, 0x10900000001L

    .line 13292
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    invoke-virtual {p1, v2, v3, p3}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    const-wide v2, 0x10900000002L

    .line 13293
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    invoke-virtual {p1, v2, v3, p3}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    const-wide v2, 0x10800000003L

    .line 13294
    iget-boolean p3, p0, Lcom/android/server/am/ActivityManagerService;->mDebugTransient:Z

    invoke-virtual {p1, v2, v3, p3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    const-wide v2, 0x10800000004L

    .line 13295
    iget-boolean p3, p0, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z

    invoke-virtual {p1, v2, v3, p3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 13296
    invoke-virtual {p1, v0, v1}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 13300
    :cond_15
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    iget-object v0, p3, Lcom/android/server/am/AppProfiler;->mProfilerLock:Ljava/lang/Object;

    monitor-enter v0

    .line 13301
    :try_start_3
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {p3, p1}, Lcom/android/server/am/AppProfiler;->writeMemWatchProcessToProtoLPf(Landroid/util/proto/ProtoOutputStream;)V

    .line 13302
    monitor-exit v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    .line 13304
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mTrackAllocationApp:Ljava/lang/String;

    if-eqz p3, :cond_17

    if-eqz p2, :cond_16

    .line 13305
    invoke-virtual {p2, p3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p3

    if-eqz p3, :cond_17

    :cond_16
    const-wide v0, 0x10900000021L

    .line 13306
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mTrackAllocationApp:Ljava/lang/String;

    invoke-virtual {p1, v0, v1, p3}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    .line 13311
    :cond_17
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {p3, p1, p2}, Lcom/android/server/am/AppProfiler;->writeProfileDataToProtoLocked(Landroid/util/proto/ProtoOutputStream;Ljava/lang/String;)V

    if-eqz p2, :cond_18

    .line 13313
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mNativeDebuggingApp:Ljava/lang/String;

    invoke-virtual {p2, p3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p3

    if-eqz p3, :cond_19

    :cond_18
    const-wide v0, 0x10900000023L

    .line 13314
    iget-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mNativeDebuggingApp:Ljava/lang/String;

    invoke-virtual {p1, v0, v1, p3}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    :cond_19
    if-nez p2, :cond_1a

    const-wide p2, 0x10800000024L

    .line 13318
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mAlwaysFinishActivities:Z

    invoke-virtual {p1, p2, p3, v0}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    const-wide p2, 0x10500000026L

    .line 13319
    invoke-virtual {p1, p2, p3, p4}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    const-wide p2, 0x10800000027L

    .line 13320
    iget-boolean p4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    invoke-virtual {p1, p2, p3, p4}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    const-wide p2, 0x10800000028L

    .line 13321
    iget-boolean p4, p0, Lcom/android/server/am/ActivityManagerService;->mSystemReady:Z

    invoke-virtual {p1, p2, p3, p4}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    const-wide p2, 0x10800000029L

    .line 13322
    iget-boolean p4, p0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    invoke-virtual {p1, p2, p3, p4}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    const-wide p2, 0x1050000002aL

    .line 13323
    iget p4, p0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    invoke-virtual {p1, p2, p3, p4}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    const-wide p2, 0x1080000002bL

    .line 13324
    iget-boolean p4, p0, Lcom/android/server/am/ActivityManagerService;->mBooting:Z

    invoke-virtual {p1, p2, p3, p4}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    const-wide p2, 0x1080000002cL

    .line 13325
    iget-boolean p4, p0, Lcom/android/server/am/ActivityManagerService;->mCallFinishBooting:Z

    invoke-virtual {p1, p2, p3, p4}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    const-wide p2, 0x1080000002dL

    .line 13326
    iget-boolean p4, p0, Lcom/android/server/am/ActivityManagerService;->mBootAnimationComplete:Z

    invoke-virtual {p1, p2, p3, p4}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    const-wide p2, 0x1030000002eL

    .line 13327
    iget-wide v0, p0, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckUptime:J

    invoke-virtual {p1, p2, p3, v0, v1}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 13328
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    invoke-virtual {p2, p1}, Lcom/android/server/am/OomAdjuster;->dumpProcessListVariablesLocked(Landroid/util/proto/ProtoOutputStream;)V

    .line 13329
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    invoke-virtual {p2, p1}, Lcom/android/server/am/AppProfiler;->writeMemoryLevelsToProtoLocked(Landroid/util/proto/ProtoOutputStream;)V

    .line 13330
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide p2

    const-wide v1, 0x10b0000003aL

    .line 13331
    iget-wide v3, p0, Lcom/android/server/am/ActivityManagerService;->mLastIdleTime:J

    move-object v0, p1

    move-wide v5, p2

    invoke-static/range {v0 .. v6}, Landroid/util/proto/ProtoUtils;->toDuration(Landroid/util/proto/ProtoOutputStream;JJJ)V

    .line 13332
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    .line 13333
    invoke-virtual {p0, p2, p3}, Lcom/android/server/am/AppProfiler;->getLowRamTimeSinceIdleLPr(J)J

    move-result-wide p2

    const-wide v0, 0x1030000003bL

    .line 13332
    invoke-virtual {p1, v0, v1, p2, p3}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    :cond_1a
    return-void

    :catchall_2
    move-exception p0

    .line 13302
    :try_start_4
    monitor-exit v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    throw p0

    :catchall_3
    move-exception p0

    .line 13259
    :try_start_5
    monitor-exit p3
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_3

    throw p0
.end method
